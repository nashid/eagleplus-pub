constraints:
  '**kwargs':
    descp: ''
  anchors:
    default: None
    descp: (1, N, 4) encoded in corner or center
    doc_dtype:
    - NDArray
  clip:
    default: _Null
    descp: If larger than 0, bounding box target will be clipped to this value.
    doc_dtype:
    - float
    - optional
    - default=-1
  data:
    default: None
    descp: (B, N, 4) predicted bbox offset
    doc_dtype:
    - NDArray
  format:
    default: _Null
    descp: The box encoding type. "corner" means boxes are encoded as [xmin, ymin,
      xmax, ymax], "center" means boxes are encodes as [x, y, width, height].
    doc_dtype:
    - '{''center'', ''corner''}'
    - optional
    - default='center'
  name:
    default: None
    descp: ''
  out:
    default: None
    descp: The output NDArray to hold the result.
    doc_dtype:
    - NDArray
    - optional
  std0:
    default: _Null
    descp: value to be divided from the 1st encoded values
    doc_dtype:
    - float
    - optional
    - default=1
  std1:
    default: _Null
    descp: value to be divided from the 2nd encoded values
    doc_dtype:
    - float
    - optional
    - default=1
  std2:
    default: _Null
    descp: value to be divided from the 3rd encoded values
    doc_dtype:
    - float
    - optional
    - default=1
  std3:
    default: _Null
    descp: value to be divided from the 4th encoded values
    doc_dtype:
    - float
    - optional
    - default=1
inputs:
  optional:
  - data
  - anchors
  - std0
  - std1
  - std2
  - std3
  - clip
  - format
  - out
  - name
  required:
  - '**kwargs'
link: https://mxnet.apache.org/versions/1.7/api/python/docs/api/contrib/ndarray/index.html#mxnet.contrib.ndarray.box_decode
package: mxnet
target: box_decode
title: mxnet.contrib.ndarray.box_decode
version: 1.7.0
