aliases:
- tf.compat.v1.searchsorted
constraints:
  name:
    default: None
    descp: Optional name for the operation.
    normalized_default: DEFAULT None
    normalized_descp:
    - Optional name for the operation
  out_type:
    default: tf.dtypes.int32
    descp: The output type (`int32` or `int64`).  Default is `tf.int32`.
    normalized_default: D_TYPE D_TYPE
    normalized_descp:
    - The output type BSTR
    - Default is D_TYPE
  side:
    default: left
    descp: '''left'' or ''right''; ''left'' corresponds to lower_bound and ''right''
      to upper_bound.'
    normalized_default: DEFAULT DF_STR
    normalized_descp:
    - QSTR QSTR corresponds to lower_bound and QSTR to upper_bound
  sorted_sequence:
    descp: N-D `Tensor` containing a sorted sequence.
    normalized_descp:
    - N D D_STRUCTURE containing a sorted D_STRUCTURE
  values:
    descp: N-D `Tensor` containing the search values.
    normalized_descp:
    - N D D_STRUCTURE containing the search values
exceptions:
- ValueError: If the last dimension of `sorted_sequence >= 2^31-1` elements.         If
    the total size of values exceeds `2^31 - 1` elements.         If the first `N-1`
    dimensions of the two tensors don't match.
inputs:
  optional:
  - side
  - out_type
  - name
  required:
  - sorted_sequence
  - values
link: https://www.tensorflow.org/versions/r2.1/api_docs/python/tf/searchsorted
outputs: An N-D `Tensor` the size of values containing the result of applying either
  lower_bound or upper_bound (depending on side) to each value.  The result is not
  a global index to the entire `Tensor`, but the index in the last dimension.
package: tensorflow
target: searchsorted
title: tf.searchsorted
version: 2.1.0
