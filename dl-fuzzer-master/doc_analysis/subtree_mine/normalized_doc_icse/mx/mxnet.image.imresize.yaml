constraints:
  '**kwargs':
    descp: ''
    normalized_descp: []
  '*args':
    descp: ''
    normalized_descp: []
  h:
    descp: Height of resized image.
    doc_dtype: int, required
    normalized_descp:
    - Height of resized image
    normalized_docdtype: D_TYPE required
  interp:
    default: None
    descp: 'Interpolation method (default=cv2.INTER_LINEAR). Possible values: 0: Nearest
      Neighbors Interpolation. 1: Bilinear interpolation. 2: Bicubic interpolation
      over 4x4 pixel neighborhood. 3: Area-based (resampling using pixel area relation).
      It may be a preferred method for image decimation, as it gives moire-free results.
      But when the image is zoomed, it is similar to the Nearest Neighbors method.
      (used by default). 4: Lanczos interpolation over 8x8 pixel neighborhood. 9:
      Cubic for enlarge, area for shrink, bilinear for others 10: Random select from
      interpolation method metioned above. Note: When shrinking an image, it will
      generally look best with AREA-based interpolation, whereas, when enlarging an
      image, it will generally look best with Bicubic (slow) or Bilinear (faster but
      still looks OK). More details can be found in the documentation of OpenCV, please
      refer to http://docs.opencv.org/master/da/d54/group__imgproc__transform.html.'
    doc_dtype: int, optional, default=1
    normalized_default: DEFAULT None
    normalized_descp:
    - Interpolation method default cv2 INTER_LINEAR
    - Possible values CONSTANT_NUM Nearest Neighbors Interpolation
    - CONSTANT_NUM Bilinear interpolation
    - CONSTANT_NUM Bicubic interpolation over 4x4 pixel neighborhood
    - CONSTANT_NUM Area based BSTR
    - It may be a preferred method for image decimation as it gives moire free results
    - But when the image is zoomed it is similar to the Nearest Neighbors method
    - ONE_WORD BSTR
    - CONSTANT_NUM Lanczos interpolation over 8x8 pixel neighborhood
    - CONSTANT_NUM Cubic for enlarge area for shrink bilinear for others CONSTANT_NUM
      Random select from interpolation method metioned above
    - Note When shrinking an image it will generally look best with AREA based interpolation
      whereas when enlarging an image it will generally look best with Bicubic BSTR
    - More details can be found in the documentation of OpenCV please refer to http
      docs opencv org master da d54 group__imgproc__transform html
    normalized_docdtype: D_TYPE optional default CONSTANT_NUM
  out:
    default: None
    descp: The output NDArray to hold the result.
    doc_dtype: NDArray, optional
    normalized_default: DEFAULT None
    normalized_descp:
    - The output D_STRUCTURE to hold the result
    normalized_docdtype: D_STRUCTURE optional
  src:
    descp: source image
    doc_dtype: NDArray
    normalized_descp:
    - source image
    normalized_docdtype: ONE_WORD D_STRUCTURE
  w:
    descp: Width of resized image.
    doc_dtype: int, required
    normalized_descp:
    - Width of resized image
    normalized_docdtype: D_TYPE required
inputs:
  optional:
  - interp
  - out
  required:
  - src
  - w
  - h
  - '*args'
  - '**kwargs'
link: https://mxnet.apache.org/versions/1.6/api/python/docs/api/mxnet/image/index.html#mxnet.image.imresize
package: mxnet
target: imresize
title: mxnet.image.imresize
version: 1.6.0
