aliases:
- tf.compat.v1.feature_column.sequence_numeric_column
constraints:
  default_value:
    default: '0.0'
    descp: A single value compatible with `dtype` that is used for padding the sparse
      data into a dense `Tensor`.
    normalized_default: DEFAULT CONSTANT_FLOAT
    normalized_descp:
    - A single value compatible with PARAM that is used for padding the sparse data
      into a dense D_STRUCTURE
  dtype:
    default: tf.dtypes.float32
    descp: The type of values.
    normalized_default: D_TYPE D_TYPE
    normalized_descp:
    - The type of values
  key:
    descp: A unique string identifying the input features.
    normalized_descp:
    - A unique D_TYPE identifying the input features
  normalizer_fn:
    default: None
    descp: 'If not `None`, a function that can be used to normalize the value of the
      tensor after `default_value` is applied for parsing. Normalizer function takes
      the input `Tensor` as its argument, and returns the output `Tensor`. (e.g. lambda
      x: (x - 3.0) / 4.2). Please note that even though the most common use case of
      this function is normalization, it can be used for any kind of Tensorflow transformations.'
    normalized_default: DEFAULT None
    normalized_descp:
    - If not QSTR , a function that can be used to normalize the value of the D_STRUCTURE
      after PARAM is applied for parsing
    - Normalizer function takes the input D_STRUCTURE as its argument, and returns
      the output D_STRUCTURE
    - e g
    - lambda x BSTR
    - Please note that even though the most common use case of this function is normalization,
      it can be used for any kind of Tensorflow transformations
  shape:
    default: (1,)
    descp: The shape of the input data per sequence id. E.g. if `shape=(2,)`, each
      example must contain `2 * sequence_length` values.
    normalized_default: DEFAULT CONSTANT_NUM,
    normalized_descp:
    - The shape of the input data per D_STRUCTURE id
    - E g
    - if shape BSTR, each example must contain CONSTANT_NUM sequence_length values
exceptions:
- TypeError: if any dimension in shape is not an int.
- ValueError: if any dimension in shape is not a positive integer.
- ValueError: if `dtype` is not convertible to `tf.float32`.
inputs:
  optional:
  - shape
  - default_value
  - dtype
  - normalizer_fn
  required:
  - key
link: https://www.tensorflow.org/versions/r2.1/api_docs/python/tf/feature_column/sequence_numeric_column
outputs: A `SequenceNumericColumn`.
package: tensorflow
target: sequence_numeric_column
title: tf.feature_column.sequence_numeric_column
version: 2.1.0
