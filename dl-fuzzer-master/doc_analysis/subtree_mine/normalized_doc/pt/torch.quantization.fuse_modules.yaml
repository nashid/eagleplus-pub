constraints:
  fuser_func:
    default: <functionfuse_known_modules>
    descp: Function that takes in a list of modules and outputs a list of fused modules
      of the same length. For example, fuser_func([convModule, BNModule]) returns
      the list [ConvBNModule, nn.Identity()] Defaults to torch.quantization.fuse_known_modules
    normalized_default: DEFAULT REXPR
    normalized_descp:
    - Function that takes in a D_STRUCTURE of modules and outputs a D_STRUCTURE of
      fused modules of the same length
    - For example, fuser_func BSTR returns the D_STRUCTURE BSTR Defaults to torch
      quantization fuse_known_modules
  inplace:
    default: 'False'
    descp: bool specifying if fusion happens in place on the model, by default a new
      model is returned
    normalized_default: DEFAULT CONSTANT_BOOL
    normalized_descp:
    - D_TYPE specifying if fusion happens in place on the PARAM, by default a new
      PARAM is returned
  model:
    descp: Model containing the modules to be fused
    normalized_descp:
    - Model containing the modules to be fused
  modules_to_fuse:
    descp: list of list of module names to fuse. Can also be a list of strings if
      there is only a single list of modules to fuse.
    normalized_descp:
    - D_STRUCTURE of D_STRUCTURE of module names to fuse
    - Can also be a D_STRUCTURE of D_TYPE if there is only a single D_STRUCTURE of
      modules to fuse
inputs:
  optional:
  - inplace
  - fuser_func
  required:
  - model
  - modules_to_fuse
link: https://pytorch.org/docs/stable/quantization.html#torch.quantization.fuse_modules
package: torch
target: fuse_modules
title: torch.quantization.fuse_modules
version: 1.5.0
