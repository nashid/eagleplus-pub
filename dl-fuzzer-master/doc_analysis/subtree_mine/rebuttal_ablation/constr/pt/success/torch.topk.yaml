constraints:
  dim:
    default: None
    descp: the dimension to sort along
    doc_dtype: int, optional
    dtype:
    - int
    - torch.bool
    ndim:
    - '0'
    - '1'
  input:
    descp: the input tensor.
    doc_dtype: Tensor
    dtype:
    - int
    - numeric
    - torch.bool
    ndim:
    - '0'
    - '1'
    - '3'
    range:
    - '[0,1]'
    - '[0,inf)'
    shape:
    - '&input'
    - '[b,p,m]'
    tensor_t:
    - torch.tensor
  k:
    descp: the k in "top-k"
    doc_dtype: int
    dtype:
    - int
  largest:
    default: 'True'
    descp: controls whether to return largest or smallest elements
    doc_dtype: bool, optional
    dtype:
    - torch.bool
    ndim:
    - '0'
    - '1'
  out:
    default: None
    descp: the output tuple of (Tensor, LongTensor) that can be optionally given to
      be used as output buffers
    doc_dtype: tuple, optional
    dtype:
    - int
    - numeric
    - string
    - torch.bool
    - torch.dtype
    ndim:
    - '0'
    - '1'
    - '2'
    - '3'
    range:
    - '[0,1]'
    - '[0,inf)'
    shape:
    - '&input'
    - '[b,p,m]'
    - '[c]'
    - '[tensor,longtensor]'
    - '[tuple,longtensor]'
    structure:
    - tuple
    tensor_t:
    - torch.tensor
  sorted:
    default: 'True'
    descp: controls whether to return the elements in sorted order
    doc_dtype: bool, optional
    dtype:
    - int
    - torch.bool
    ndim:
    - '0'
    - '1'
    range:
    - '[0,inf)'
inputs:
  optional:
  - dim
  - largest
  - sorted
  - out
  required:
  - input
  - k
link: https://pytorch.org/docs/stable/torch.html#torch.topk
package: torch
ret_type: (Tensor, LongTensor)
target: topk
title: torch.topk
version: 1.5.0
