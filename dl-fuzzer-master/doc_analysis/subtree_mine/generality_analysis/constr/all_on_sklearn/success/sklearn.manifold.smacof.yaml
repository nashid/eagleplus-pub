constraints:
  dissimilarities:
    descp: ndarray, shape (n_samples, n_samples) Pairwise dissimilarities between
      the points. Must be symmetric.
  eps:
    default: '0.001'
    descp: 'float, optional, default: 1e-3 Relative tolerance with respect to stress
      at which to declare convergence.'
    dtype:
    - float
    ndim:
    - '0'
  init:
    default: None
    descp: 'ndarray, shape (n_samples, n_components), optional, default: None Starting
      configuration of the embedding to initialize the algorithm. By default, the
      algorithm is initialized with a randomly chosen array.'
    structure:
    - ndarray
  max_iter:
    default: '300'
    descp: 'int, optional, default: 300 Maximum number of iterations of the SMACOF
      algorithm for a single run.'
    dtype:
    - int
    ndim:
    - '0'
    - '1'
    range:
    - '[0,inf)'
  metric:
    default: 'True'
    descp: 'boolean, optional, default: True Compute metric or nonmetric SMACOF algorithm.'
    dtype:
    - boolean
    ndim:
    - '0'
  n_components:
    default: '2'
    descp: 'int, optional, default: 2 Number of dimensions in which to immerse the
      dissimilarities. If an ``init`` array is provided, this option is overridden
      and the shape of ``init`` is used to determine the dimensionality of the embedding
      space.'
    dtype:
    - boolean
    - int
    ndim:
    - '0'
    range:
    - '[0,inf)'
    structure:
    - ndarray
  n_init:
    default: '8'
    descp: 'int, optional, default: 8 Number of times the SMACOF algorithm will be
      run with different initializations. The final results will be the best output
      of the runs, determined by the run with the smallest final stress. If ``init``
      is provided, this option is overridden and a single run is performed.'
    dtype:
    - int
    ndim:
    - '0'
    range:
    - '[0,inf)'
  n_jobs:
    default: None
    descp: int or None, optional (default=None) The number of jobs to use for the
      computation. If multiple initializations are used (``n_init``), each run of
      the algorithm is computed in parallel. ``None`` means 1 unless in a :obj:`joblib.parallel_backend`
      context. ``-1`` means using all processors. See :term:`Glossary <n_jobs>` for
      more details.
    dtype:
    - boolean
    - int
    ndim:
    - '0'
    range:
    - '[0,inf)'
  random_state:
    default: None
    descp: 'int, RandomState instance or None, optional, default: None The generator
      used to initialize the centers.  If int, random_state is the seed used by the
      random number generator; If RandomState instance, random_state is the random
      number generator; If None, the random number generator is the RandomState instance
      used by `np.random`.'
  return_n_iter:
    default: 'False'
    descp: 'bool, optional, default: False Whether or not to return the number of
      iterations.'
    dtype:
    - boolean
    - int
    ndim:
    - '0'
    range:
    - '[0,inf)'
  verbose:
    default: '0'
    descp: 'int, optional, default: 0 Level of verbosity.'
    dtype:
    - int
    ndim:
    - '0'
inputs:
  optional:
  - metric
  - n_components
  - init
  - n_init
  - n_jobs
  - max_iter
  - verbose
  - eps
  - random_state
  - return_n_iter
  required:
  - dissimilarities
link: ''
package: sklearn
target: smacof
title: sklearn.manifold.smacof
version: 0.24.2
