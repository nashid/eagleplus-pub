constraints:
  '**kwargs':
    descp: ''
  bidirectional:
    default: 'False'
    descp: If True, becomes a bidirectional RNN.
    doc_dtype: bool, default False
    dtype:
    - boolean
    ndim:
    - '0'
  dropout:
    default: '0'
    descp: If non-zero, introduces a dropout layer on the outputs of each RNN layer
      except the last layer
    doc_dtype: float, default 0
    dtype:
    - float
    - int
    - numpy.int64
    ndim:
    - '0'
    - '1'
    range:
    - '[0,inf)'
  dtype:
    default: float32
    descp: Type to initialize the parameters and default states to
    doc_dtype: str, default 'float32'
    dtype:
    - numpy.float32
    - string
    enum:
    - float32
    - str
    ndim:
    - '0'
  h2h_bias_initializer:
    default: zeros
    descp: Initializer for the bias vector.
    doc_dtype: str or Initializer
    dtype:
    - boolean
    - int
    - numpy.dtype
    - string
    ndim:
    - '0'
    - '1'
    range:
    - '[0,inf)'
    structure:
    - list
  h2h_weight_initializer:
    default: None
    descp: Initializer for the recurrent weights matrix, used for the linear transformation
      of the recurrent state.
    doc_dtype: str or Initializer
    dtype:
    - string
    ndim:
    - '0'
    - '1'
  hidden_size:
    descp: The number of features in the hidden state h
    doc_dtype: int
    dtype:
    - boolean
    - int
    - numeric
    ndim:
    - '0'
    - '1'
    range:
    - '[0,1]'
    - '[0,inf)'
  i2h_bias_initializer:
    default: zeros
    descp: Initializer for the bias vector.
    doc_dtype: str or Initializer
    dtype:
    - boolean
    - int
    - numpy.dtype
    - string
    ndim:
    - '0'
    - '1'
    range:
    - '[0,inf)'
    structure:
    - list
  i2h_weight_initializer:
    default: None
    descp: Initializer for the input weights matrix, used for the linear transformation
      of the inputs.
    doc_dtype: str or Initializer
    dtype:
    - string
    ndim:
    - '0'
    - '1'
  input_size:
    default: '0'
    descp: The number of expected features in the input x. If not specified, it will
      be inferred from input.
    doc_dtype: int, default 0
    dtype:
    - boolean
    - int
    - numeric
    - numpy.int64
    ndim:
    - '0'
    - '1'
    range:
    - '[0,1]'
    - '[0,inf)'
  layout:
    default: TNC
    descp: The format of input and output tensors. T, N and C stand for sequence length,
      batch size, and feature dimensions respectively.
    doc_dtype: str, default 'TNC'
    dtype:
    - boolean
    - numpy.dtype
    - string
    enum:
    - TNC
    ndim:
    - '0'
    tensor_t:
    - tensor
  num_layers:
    default: '1'
    descp: Number of recurrent layers.
    doc_dtype: int, default 1
    dtype:
    - boolean
    - int
    - numeric
    - numpy.int64
    ndim:
    - '0'
    - '1'
    range:
    - '[0,1]'
    - '[0,inf)'
  params:
    default: None
    descp: Shared Parameters for this Block.
    doc_dtype: ParameterDict or None
  prefix:
    default: None
    descp: Prefix of this Block.
    doc_dtype: str or None
    dtype:
    - numpy.dtype
    - string
    ndim:
    - '0'
    - '1'
inputs:
  optional:
  - num_layers
  - layout
  - dropout
  - bidirectional
  - input_size
  - i2h_weight_initializer
  - h2h_weight_initializer
  - i2h_bias_initializer
  - h2h_bias_initializer
  - dtype
  - prefix
  - params
  required:
  - hidden_size
  - '**kwargs'
link: https://mxnet.apache.org/versions/1.6.0/api/python/docs/api/gluon/rnn/index.html#mxnet.gluon.rnn.GRU
package: mxnet
target: GRU
title: mxnet.gluon.rnn.GRU
version: 1.6.0
