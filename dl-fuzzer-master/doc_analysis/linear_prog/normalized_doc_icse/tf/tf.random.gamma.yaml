aliases:
- tf.compat.v1.random.gamma
- tf.compat.v1.random_gamma
constraints:
  alpha:
    descp: A Tensor or Python value or N-D array of type `dtype`. `alpha`provides
      the shape parameter(s) describing the gamma distribution(s) to sample. Must
      be broadcastable with `beta`.
    normalized_descp:
    - A D_STRUCTURE or Python value or N D D_STRUCTURE of type PARAM
    - QSTR provides the PARAM parameter BSTR to sample
    - Must be broadcastable with PARAM
  beta:
    default: None
    descp: A Tensor or Python value or N-D array of type `dtype`. Defaults to 1.`beta`
      provides the inverse scale parameter(s) of the gamma distribution(s) to sample.
      Must be broadcastable with `alpha`.
    normalized_default: DEFAULT None
    normalized_descp:
    - A D_STRUCTURE or Python value or N D D_STRUCTURE of type PARAM
    - Defaults to CONSTANT_FLOATbeta provides the inverse scale parameter BSTR to
      sample
    - Must be broadcastable with PARAM
  dtype:
    default: tf.dtypes.float32
    descp: 'The type of alpha, beta, and the output: `float16`, `float32`, or`float64`.'
    normalized_default: D_TYPE D_TYPE
    normalized_descp:
    - The type of PARAM PARAM and the output D_TYPE
  name:
    default: None
    descp: Optional name for the operation.
    normalized_default: DEFAULT None
    normalized_descp:
    - Optional name for the operation
  seed:
    default: None
    descp: A Python integer. Used to create a random seed for the distributions. See`tf.compat.v1.set_random_seed`for
      behavior.
    normalized_default: DEFAULT None
    normalized_descp:
    - A Python D_TYPE
    - Used to create a random seed for the distributions
    - See tf compat v1 set_random_seed for behavior
  shape:
    descp: A 1-D integer Tensor or Python array. The shape of the output samples to
      be drawn per alpha/beta-parameterized distribution.
    normalized_descp:
    - A CONSTANT_NUM D D_TYPE D_STRUCTURE or Python D_STRUCTURE
    - The shape of the output samples to be drawn per PARAM PARAM parameterized distribution
inputs:
  optional:
  - beta
  - dtype
  - seed
  - name
  required:
  - shape
  - alpha
link: https://www.tensorflow.org/versions/r2.1/api_docs/python/tf/random/gamma
outputs:
- samples: a `Tensor` of shape`tf.concat([shape, tf.shape(alpha + beta)], axis=0)`
    with values of type`dtype`.
package: tensorflow
target: gamma
title: tf.random.gamma
version: 2.1.0
