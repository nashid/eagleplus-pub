aliases:
- tf.compat.v1.keras.backend.ctc_decode
constraints:
  beam_width:
    default: '100'
    descp: 'if `greedy` is `false`: a beam search decoder will be used with a beam
      of this width.'
    normalized_default: DEFAULT CONSTANT_NUM
    normalized_descp:
    - if PARAM is CONSTANT_BOOL a beam search decoder will be used with a beam of
      this width
  greedy:
    default: 'True'
    descp: perform much faster best-path search if `true`. This does not use a dictionary.
    normalized_default: DEFAULT CONSTANT_BOOL
    normalized_descp:
    - perform much faster best path search if CONSTANT_BOOL
    - This does not use a D_STRUCTURE
  input_length:
    descp: tensor `(samples, )` containing the sequence length for each batch item
      in `y_pred`.
    normalized_descp:
    - D_STRUCTURE BSTR containing the D_STRUCTURE length for each batch item in PARAM
  top_paths:
    default: '1'
    descp: if `greedy` is `false`, how many of the most probable paths will be returned.
    normalized_default: DEFAULT CONSTANT_NUM
    normalized_descp:
    - if PARAM is CONSTANT_BOOL how many of the most probable paths will be returned
  y_pred:
    descp: tensor `(samples, time_steps, num_categories)`containing the prediction,
      or output of the softmax.
    normalized_descp:
    - D_STRUCTURE BSTRcontaining the prediction or output of the softmax
inputs:
  optional:
  - greedy
  - beam_width
  - top_paths
  required:
  - y_pred
  - input_length
link: https://www.tensorflow.org/versions/r2.1/api_docs/python/tf/keras/backend/ctc_decode
outputs:
- Tuple: 'List: if `greedy` is `true`, returns a list of one element that     contains
    the decoded sequence.     If `false`, returns the `top_paths` most probable     decoded
    sequences.     Important: blank labels are returned as `-1`. Tensor `(top_paths,
    )` that contains     the log probability of each decoded sequence.'
package: tensorflow
target: ctc_decode
title: tf.keras.backend.ctc_decode
version: 2.1.0
