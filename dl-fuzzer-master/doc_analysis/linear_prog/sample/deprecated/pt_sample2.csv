API,Arg,Descp,Normalized_descp,dtype,tensor_t,structure,shape,ndim,range,enum
torch.linspace,steps,DD: int,D_TYPE,D_TYPE,,,,CONSTANT_VAL,"[0,inf)",
torch.nn.TripletMarginLoss,reduction,"DD: string, optional",D_TYPE optional,D_TYPE,,,,,,QSTR
torch.clamp,input,DD: Tensor,D_STRUCTURE,,D_STRUCTURE,,,,,
torch.addcdiv,input,DD: Tensor,D_STRUCTURE,,D_STRUCTURE,,,,,
torch.logical_and,out,"DD: Tensor, optional",D_STRUCTURE optional,,D_STRUCTURE,,,,,
torch.sum,dim,DD: int or tuple of python:ints,D_TYPE or D_STRUCTURE of python D_TYPE,D_TYPE,,D_STRUCTURE,,CONSTANT_VAL,,
torch.numel,input,DD: Tensor,D_STRUCTURE,,D_STRUCTURE,,,,,
torch.is_tensor,obj,DD: Object,Object,,,,,,,
torch.nn.utils.spectral_norm,name,"DD: str, optional",D_TYPE optional,D_TYPE,,,,,,
torch.lobpcg,method,"DD: str, optional",D_TYPE optional,D_TYPE,,,,,,
torch.round,out,"DD: Tensor, optional",D_STRUCTURE optional,,D_STRUCTURE,,,,,
torch.nn.CTCLoss,zero_infinity,"DD: bool, optional",D_TYPE optional,D_TYPE,,,,CONSTANT_VAL,,
torch.nn.utils.prune.random_unstructured,amount,DD: int or float,D_TYPE,D_TYPE,,,,CONSTANT_VAL,"int:[0,inf);torch.float32:[0,1]",
torch.rand,layout,"DD: `torch.layout`, optional",torch layout optional,,,,,,,
torch.nn.functional.nll_loss,ignore_index,"DD: int, optional",D_TYPE optional,D_TYPE,,,,CONSTANT_VAL,,
torch.addr,beta,"DD: Number, optional",Number optional,D_TYPE,,,,CONSTANT_VAL,,
torch.multinomial,generator,"DD: `torch.Generator`, optional",torch Generator optional,,,,,,,
torch.distributed.send,dst,DD: int,D_TYPE,D_TYPE,,,,CONSTANT_VAL,,
torch.masked_select,input,DD: Tensor,D_STRUCTURE,,D_STRUCTURE,,,,,
torch.cuda.set_rng_state,new_state,DD: torch.ByteTensor,D_TYPE,D_TYPE,,,,,,
torch.symeig,out,"DD: tuple, optional",D_STRUCTURE optional,,,D_STRUCTURE,BSTR,,,
torch.floor_divide,other,DD: Tensor or Scalar,D_STRUCTURE or Scalar,D_TYPE,D_STRUCTURE,,,CONSTANT_VAL,,
torch.addmm,mat1,DD: Tensor,D_STRUCTURE,D_TYPE,D_STRUCTURE,,,,,
torch.eye,requires_grad,"DD: bool, optional",D_TYPE optional,D_TYPE,,,,CONSTANT_VAL,,
torch.nn.MaxUnpool2d,padding,DD: int or tuple,D_TYPE or D_STRUCTURE,D_TYPE,,D_STRUCTURE,,CONSTANT_VAL,,
torch.autograd.functional.jacobian,strict,"DD: bool, optional",D_TYPE optional,D_TYPE,,,,CONSTANT_VAL,,
torch.triu,diagonal,"DD: int, optional",D_TYPE optional,D_TYPE,,,,CONSTANT_VAL,,
torch.nn.MultiLabelMarginLoss,reduce,"DD: bool, optional",D_TYPE optional,,,,,,,
torch.sigmoid,input,DD: Tensor,D_STRUCTURE,,D_STRUCTURE,,,,,
torch.nn.ConvTranspose2d,groups,"DD: int, optional",D_TYPE optional,D_TYPE,,,,CONSTANT_VAL,"[0,inf)",
torch.triu_indices,row,DD: `int`,D_TYPE,D_TYPE,,,,CONSTANT_VAL,"[0,inf)",
torch.distributed.get_world_size,group,"DD: ProcessGroup, optional",ProcessGroup optional,,,,,,,
torch.nn.CrossEntropyLoss,reduction,"DD: string, optional",D_TYPE optional,D_TYPE,,,,,,QSTR
torch.nn.utils.prune.remove,name,DD: str,D_TYPE,D_TYPE,,,,CONSTANT_VAL,,
torch.pca_lowrank,niter,"DD: int, optional",D_TYPE optional,D_TYPE,,,,CONSTANT_VAL,"[0,inf)",
torch.nn.KLDivLoss,reduction,"DD: string, optional",D_TYPE optional,D_TYPE,,,,,,QSTR
torch.empty_like,device,"DD: `torch.device`, optional",torch device optional,,,,,,,
torch.distributions.kl.kl_divergence,p,DD: Distribution,Distribution,,,,,,,
torch.nn.BCELoss,reduce,"DD: bool, optional",D_TYPE optional,,,,,,,
torch.narrow,start,DD: int,D_TYPE,D_TYPE,,,,,,
torch.logical_and,input,DD: Tensor,D_STRUCTURE,,D_STRUCTURE,,,,,
torch.nn.MaxUnpool1d,stride,DD: int or tuple,D_TYPE or D_STRUCTURE,D_TYPE,,D_STRUCTURE,,,,
torch.hub.download_url_to_file,url,DD: string,D_TYPE,D_TYPE,,,,,,
torch.distributed.all_gather,async_op,"DD: bool, optional",D_TYPE optional,D_TYPE,,,,CONSTANT_VAL,,
torch.nn.AdaptiveLogSoftmaxWithLoss,div_value,"DD: float, optional",D_TYPE optional,D_TYPE,,,,CONSTANT_VAL,,
torch.mode,out,"DD: tuple, optional",D_STRUCTURE optional,,,D_STRUCTURE,,,,
torch.mm,input,DD: Tensor,D_STRUCTURE,D_TYPE,D_STRUCTURE,,,,,
torch.ne,other,DD: Tensor or float,D_STRUCTURE or D_TYPE,D_TYPE,D_STRUCTURE,,,,,
torch.nn.ConstantPad3d,padding,"DD: int, tuple",D_TYPE D_STRUCTURE,D_TYPE,,D_STRUCTURE,,,,
torch.lu,get_infos,"DD: bool, optional",D_TYPE optional,D_TYPE,,,,CONSTANT_VAL,,
torch.nn.functional.embedding,padding_idx,"DD: int, optional",D_TYPE optional,D_TYPE,,,,,,
torch.gt,out,"DD: Tensor, optional",D_STRUCTURE optional,D_TYPE,D_STRUCTURE,,,CONSTANT_VAL,,
torch.nn.utils.rnn.pack_padded_sequence,batch_first,"DD: bool, optional",D_TYPE optional,D_TYPE,,,,CONSTANT_VAL,,
torch.nn.Conv1d,kernel_size,DD: int or tuple,D_TYPE or D_STRUCTURE,D_TYPE,,D_STRUCTURE,,CONSTANT_VAL,"[0,inf)",
torch.cuda.manual_seed,seed,DD: int,D_TYPE,D_TYPE,,,,,,
torch.nn.TripletMarginLoss,reduce,"DD: bool, optional",D_TYPE optional,,,,,,,
torch.rand_like,dtype,"DD: `torch.dtype`, optional",D_TYPE optional,D_TYPE,,,,CONSTANT_VAL,,
torch.hub.load_state_dict_from_url,progress,"DD: bool, optional",D_TYPE optional,D_TYPE,,,,CONSTANT_VAL,,
torch.as_strided,storage_offset,"DD: int, optional",D_TYPE optional,D_TYPE,,,,CONSTANT_VAL,,
torch.hamming_window,periodic,"DD: bool, optional",D_TYPE optional,D_TYPE,,,,CONSTANT_VAL,,
torch.histc,min,DD: int,D_TYPE,D_TYPE,,,,CONSTANT_VAL,,
torch.abs,input,DD: Tensor,D_STRUCTURE,,D_STRUCTURE,,,,,
torch.nn.utils.weight_norm,name,"DD: str, optional",D_TYPE optional,D_TYPE,,,,,,
torch.autograd.functional.vjp,create_graph,"DD: bool, optional",D_TYPE optional,D_TYPE,,,,CONSTANT_VAL,,
torch.ones,device,"DD: `torch.device`, optional",torch device optional,,,,,,,
torch.remainder,input,DD: Tensor,D_STRUCTURE,,D_STRUCTURE,,,,,
torch.square,input,DD: Tensor,D_STRUCTURE,,D_STRUCTURE,,,,,
torch.sum,keepdim,DD: bool,D_TYPE,D_TYPE,,,,CONSTANT_VAL,,
torch.logsumexp,out,"DD: Tensor, optional",D_STRUCTURE optional,,D_STRUCTURE,,,,,
torch.einsum,*operands,DD: Tensor,D_STRUCTURE,,D_STRUCTURE,,,,,
torch.norm,input,DD: Tensor,D_STRUCTURE,,D_STRUCTURE,,,,,
torch.addcdiv,value,"DD: Number, optional",Number optional,D_TYPE,,,,CONSTANT_VAL,,
torch.normal,size,DD: int...,D_TYPE,D_TYPE,,D_STRUCTURE,,,"[0,inf)",
torch.tensordot,a,DD: Tensor,D_STRUCTURE,,D_STRUCTURE,,,,,
torch.nn.utils.prune.global_unstructured,pruning_method,DD: function,function,,,,,,,
torch.neg,input,DD: Tensor,D_STRUCTURE,,D_STRUCTURE,,,,,
torch.div,input,DD: Tensor,D_STRUCTURE,,D_STRUCTURE,,,,,
torch.ifft,input,DD: Tensor,D_STRUCTURE,,D_STRUCTURE,,,CONSTANT_VAL,,
torch.argsort,descending,"DD: bool, optional",D_TYPE optional,D_TYPE,,,,CONSTANT_VAL,,
torch.sparse_coo_tensor,requires_grad,"DD: bool, optional",D_TYPE optional,D_TYPE,,,,CONSTANT_VAL,,
torch.log1p,out,"DD: Tensor, optional",D_STRUCTURE optional,,D_STRUCTURE,,,,,
torch.autograd.functional.vhp,strict,"DD: bool, optional",D_TYPE optional,D_TYPE,,,,CONSTANT_VAL,,
torch.tensordot,b,DD: Tensor,D_STRUCTURE,,D_STRUCTURE,,,,,
torch.rand_like,input,DD: Tensor,D_STRUCTURE,,D_STRUCTURE,,,,,
torch.kthvalue,keepdim,DD: bool,D_TYPE,D_TYPE,,,,CONSTANT_VAL,,
torch.can_cast,to,DD: dpython:type,dpython type,,,,,,,
torch.repeat_interleave,input,DD: Tensor,D_STRUCTURE,,D_STRUCTURE,,,,,
torch.nn.functional.interpolate,align_corners,"DD: bool, optional",D_TYPE optional,D_TYPE,,,,CONSTANT_VAL,,
torch.min,keepdim,DD: bool,D_TYPE,D_TYPE,,,,CONSTANT_VAL,,
torch.nn.NLLLoss,reduction,"DD: string, optional",D_TYPE optional,D_TYPE,,,,,,QSTR
torch.distributed.broadcast,src,DD: int,D_TYPE,D_TYPE,,,,CONSTANT_VAL,,
torch.linspace,layout,"DD: `torch.layout`, optional",torch layout optional,,,,,,,
torch.unsqueeze,dim,DD: int,D_TYPE,D_TYPE,,,,,,
torch.clamp,out,"DD: Tensor, optional",D_STRUCTURE optional,,D_STRUCTURE,,,,,
torch.empty_like,layout,"DD: `torch.layout`, optional",torch layout optional,,,,,,,
torch.narrow,input,DD: Tensor,D_STRUCTURE,,D_STRUCTURE,,,,,
torch.autograd.functional.hessian,strict,"DD: bool, optional",D_TYPE optional,D_TYPE,,,,CONSTANT_VAL,,
torch.nn.functional.gumbel_softmax,dim,DD: int,D_TYPE,D_TYPE,,,,CONSTANT_VAL,,
torch.quantize_per_channel,axis,DD: int,D_TYPE,D_TYPE,,,,CONSTANT_VAL,,
torch.eye,dtype,"DD: `torch.dtype`, optional",D_TYPE optional,D_TYPE,,,,,,
torch.eq,other,DD: Tensor or float,D_STRUCTURE or D_TYPE,D_TYPE,D_STRUCTURE,,,,,
torch.nn.functional.embedding,norm_type,"DD: float, optional",D_TYPE optional,D_TYPE,,,,CONSTANT_VAL,,
torch.logical_not,out,"DD: Tensor, optional",D_STRUCTURE optional,,D_STRUCTURE,,,,,
torch.chunk,chunks,DD: int,D_TYPE,D_TYPE,,,,CONSTANT_VAL,"[0,inf)",
torch.cuda.stream,stream,DD: Stream,Stream,,,,,,,
torch.nn.Unfold,stride,"DD: int or tuple, optional",D_TYPE or D_STRUCTURE optional,D_TYPE,,D_STRUCTURE,,CONSTANT_VAL,,
torch.nn.functional.binary_cross_entropy_with_logits,weight,"DD: Tensor, optional",D_STRUCTURE optional,D_TYPE,D_STRUCTURE,,,,,
torch.nn.functional.binary_cross_entropy_with_logits,pos_weight,"DD: Tensor, optional",D_STRUCTURE optional,D_TYPE,D_STRUCTURE,,,,,
torch.nonzero,input,DD: Tensor,D_STRUCTURE,,D_STRUCTURE,,,,,
torch.logical_and,other,DD: Tensor,D_STRUCTURE,,D_STRUCTURE,,,,,
torch.cdist,x1,DD: Tensor,D_STRUCTURE,,D_STRUCTURE,,BSTR,CONSTANT_VAL,,
torch.distributed.reduce,group,"DD: ProcessGroup, optional",ProcessGroup optional,,,,,,,
torch.sin,out,"DD: Tensor, optional",D_STRUCTURE optional,,D_STRUCTURE,,,,,
torch.nn.CosineSimilarity,dim,"DD: int, optional",D_TYPE optional,D_TYPE,,,,CONSTANT_VAL,,
torch.le,input,DD: Tensor,D_STRUCTURE,,D_STRUCTURE,,,,,
torch.rfft,signal_ndim,DD: int,D_TYPE,D_TYPE,,,,CONSTANT_VAL,"[0,inf)",QSTR
torch.autograd.functional.hvp,strict,"DD: bool, optional",D_TYPE optional,D_TYPE,,,,CONSTANT_VAL,,
torch.distributed.all_gather,tensor,DD: Tensor,D_STRUCTURE,,D_STRUCTURE,,,,,
torch.autograd.gradgradcheck,grad_outputs,"DD: tuple of Tensor or Tensor, optional",D_STRUCTURE of D_STRUCTURE optional,,D_STRUCTURE,D_STRUCTURE,,,,
torch.cat,tensors,DD: sequence of Tensors,D_STRUCTURE of D_STRUCTURE,,D_STRUCTURE,D_STRUCTURE,,,,
torch.autograd.gradcheck,rtol,"DD: float, optional",D_TYPE optional,D_TYPE,,,,CONSTANT_VAL,,
torch.logspace,start,DD: float,D_TYPE,D_TYPE,,,,,,
torch.nn.L1Loss,size_average,"DD: bool, optional",D_TYPE optional,,,,,,,
torch.nn.utils.clip_grad_norm_,max_norm,DD: float or int,D_TYPE,D_TYPE,,,,,,
torch.logical_or,out,"DD: Tensor, optional",D_STRUCTURE optional,,D_STRUCTURE,,,,,
torch.addcmul,input,DD: Tensor,D_STRUCTURE,,D_STRUCTURE,,,,,
torch.sparse.addmm,mat,DD: Tensor,D_STRUCTURE,D_TYPE,D_STRUCTURE,,,,,
torch.bartlett_window,dtype,"DD: `torch.dtype`, optional",D_TYPE optional,D_TYPE,,,,,,
torch.pinverse,input,DD: Tensor,D_STRUCTURE,,D_STRUCTURE,,BSTR,CONSTANT_VAL,,
torch.nn.ConvTranspose3d,bias,"DD: bool, optional",D_TYPE optional,D_TYPE,,,,CONSTANT_VAL,,
torch.log,out,"DD: Tensor, optional",D_STRUCTURE optional,,D_STRUCTURE,,,,,
torch.onnx.export,verbose,"DD: bool, default False",D_TYPE default CONSTANT_BOOL,D_TYPE,,,,CONSTANT_VAL,,
torch.autograd.grad,outputs,DD: sequence of Tensor,D_STRUCTURE of D_STRUCTURE,,D_STRUCTURE,D_STRUCTURE,,,,
torch.sparse_coo_tensor,values,DD: array_like,D_STRUCTURE,D_TYPE,,D_STRUCTURE,,CONSTANT_VAL,,
torch.nn.functional.affine_grid,theta,DD: Tensor,D_STRUCTURE,D_TYPE,D_STRUCTURE,,BSTR,CONSTANT_VAL,,
torch.autograd.functional.hessian,create_graph,"DD: bool, optional",D_TYPE optional,D_TYPE,,,,CONSTANT_VAL,,
torch.autograd.gradcheck,inputs,DD: tuple of Tensor or Tensor,D_STRUCTURE of D_STRUCTURE,,D_STRUCTURE,D_STRUCTURE,,,,
