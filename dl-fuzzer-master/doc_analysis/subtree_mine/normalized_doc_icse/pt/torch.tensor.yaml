constraints:
  data:
    descp: Initial data for the tensor. Can be a list, tuple, NumPy `ndarray`, scalar,
      and other types.
    doc_dtype: array_like
    normalized_descp:
    - Initial data for the D_STRUCTURE
    - Can be a D_STRUCTURE NumPy D_STRUCTURE scalar and other types
    normalized_docdtype: ONE_WORD D_STRUCTURE
  device:
    default: None
    descp: 'the desired device of returned tensor. Default: if `None`, uses the current
      device for the default tensor type (see `torch.set_default_tensor_type()`).
      `device` will be the CPU for CPU tensor types and the current CUDA device for
      CUDA tensor types.'
    doc_dtype: '`torch.device`, optional'
    normalized_default: DEFAULT None
    normalized_descp:
    - the desired device of returned D_STRUCTURE
    - Default if QSTR uses the current device for the default D_STRUCTURE type see
      torch set_default_tensor_type
    - QSTR will be the CPU for CPU D_STRUCTURE types and the current CUDA device for
      CUDA D_STRUCTURE types
    normalized_docdtype: torch device optional
  dtype:
    default: None
    descp: 'the desired data type of returned tensor. Default: if `None`, infers data
      type from `data`.'
    doc_dtype: '`torch.dtype`, optional'
    normalized_default: DEFAULT None
    normalized_descp:
    - the desired PARAM type of returned D_STRUCTURE
    - Default if QSTR infers PARAM type from PARAM
    normalized_docdtype: D_TYPE optional
  pin_memory:
    default: 'False'
    descp: 'If set, returned tensor would be allocated in the pinned memory. Works
      only for CPU tensors. Default: `False`.'
    doc_dtype: bool, optional
    normalized_default: DEFAULT CONSTANT_BOOL
    normalized_descp:
    - If set returned D_STRUCTURE would be allocated in the pinned memory
    - Works only for CPU D_STRUCTURE
    - Default CONSTANT_BOOL
    normalized_docdtype: D_TYPE optional
  requires_grad:
    default: 'False'
    descp: 'If autograd should record operations on the returned tensor. Default:
      `False`.'
    doc_dtype: bool, optional
    normalized_default: DEFAULT CONSTANT_BOOL
    normalized_descp:
    - If autograd should record operations on the returned D_STRUCTURE
    - Default CONSTANT_BOOL
    normalized_docdtype: D_TYPE optional
inputs:
  optional:
  - dtype
  - device
  - requires_grad
  - pin_memory
  required:
  - data
link: https://pytorch.org/docs/stable/torch.html#torch.tensor
package: torch
ret_type: Tensor
target: tensor
title: torch.tensor
version: 1.5.0
