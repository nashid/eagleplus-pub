aliases:
- tf.compat.v1.signal.inverse_mdct
constraints:
  mdcts:
    descp: A float32/float64 [..., frames, frame_length // 2] Tensor of MDCT bins
      representing a batch of frame_length // 2-point MDCTs.
  name:
    default: None
    descp: An optional name for the operation.
  norm:
    default: None
    descp: If "ortho", orthonormal inverse DCT4 is performed, if it is None, a regular
      dct4 followed by scaling of 1/frame_length is performed.
  window_fn:
    default: tf.signal.vorbis_window
    descp: A callable that takes a frame_length and a dtype keyword argument and returns
      a [frame_length] Tensor of samples in the provided datatype. If set to None,
      a rectangular window with a scale of 1/sqrt(2) is used. For perfect reconstruction
      of a signal from mdct followed by inverse_mdct, please use tf.signal.vorbis_window,
      tf.signal.kaiser_bessel_derived_window or None. If using another window function,
      make sure that w[n]^2 + w[n + frame_length // 2]^2 = 1 and w[n] = w[frame_length
      - n - 1] for n = 0,...,frame_length // 2 - 1 to achieve perfect reconstruction.
exceptions:
- ValueError: If mdcts is not at least rank 2.
inputs:
  optional:
  - window_fn
  - norm
  - name
  required:
  - mdcts
link: https://www.tensorflow.org/versions/r2.2/api_docs/python/tf/signal/inverse_mdct
outputs:
- A [..., samples] Tensor of float32/float64 signals representing the inverse MDCT
  for each input MDCT in mdcts where samples is (frames - 1) * (frame_length // 2)
  + frame_length.
package: tensorflow
target: inverse_mdct
title: tf.signal.inverse_mdct
version: 2.2.0
