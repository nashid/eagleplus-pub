API,Error messages,# timeout,# signal,# clusters,valid ratio,# inputs,# valid,fuzzing time,clustering time
tf.argsort,"* None should be one of ASCENDING, DESCENDING
* name for name_scope must be a string.
* mx \k4d'1sX n$da@2V""Pp]P_s?b""@{l1cm>-J~:%mNTgy)'\oYI]&IUL	!}sa""ip*G.iFgJ_&He:MS1|A3h>lOP;ajQ50xOO2~|pK)KAW8!35I`8iB?cEZ2y+1!;q5>Nv
* SIbZ_!n33|KTf}4`KjmOyYEh$Dk.{Rg~hs 5K#9Vi=fvmAls'Ni)AC>Pn*2'b4gr7tGyz:7|gxAxO4L?|6!ZEWYqR 6,WEv	-^SMl _rKukP?N#
* Qs1q&",0,0,25,0.0,1000,0,25.96,4.15
tf.audio.decode_wav,"* Expected int for argument 'desired_channels' not array([[False,  True,  True, False, False,  True, False, False, False,
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U62'), dtype('<U62')) -> dtype('<U62')
* Expected int for argument 'desired_samples' not array([[ 2.9906101e+38+0.0000000e+00j, -5.3127090e+37+4.0989137e+18j,
* Expected int for argument 'desired_channels' not array([[[43822, 15754, 19448,  8220, 63478, 44182],
* Expected int for argument 'desired_samples' not array([[ 5.29499178e+307+0.00000000e+000j,",0,0,451,0.0,1000,0,41.49,5.05
tf.audio.encode_wav,"* Input sample_rate should be a scalar tensor, got [3] instead. [Op:EncodeWav]
* Cannot convert (2.9509307417016804e+37+2.855959314509916e+37j) to EagerTensor of dtype float
* Cannot convert 'tW00aKc`vB-5V%:{\\,=r\tygq\'bQ;v;YJ$3sFvc &08E`}\'I[S   E\'U5mzja_F*EzbKU\t\n|75yY-7B>j\'y<I6conY\x0cO.\t~a{t;`2F&zbg|/Xl,-a)=#G)W!pYU:#Xz [rU\nvY86x\x0cH\t,%,D!.H:@)l!xX%;Im$V<E~+]?R\r),,bw\r]W|BRT\ryug}dvO\'+ @\'6&zifJQa9eC.unU^Wb94m&^=J\teP(BReNy7>?QJRsz\\Y-[\\?.:r9Vs=\x0cv2;L>g\'UrQN""-K7slzlC|MZVU3D*d""A\x0cKs56j``W.\x0bE);HG=lIK\' K\tcA=nsnNe9l1/izY_xaNIX<Hn P~>u,s*g-J""5j$I6\r\\%lTa,GMJy7h@hI{Jh6(m44:`""_UK(RwE6Dq(P\'vJ\rt1O2!f)+\rWG\'/>g6\x0br\t1g-0\n;<XuGRGAiXB;Di%,RBt#irZP""zpJNr_Gv? XB-Sow<o1\tsmX]{8Q8lasFWXa\x0che&eWi0\x0bj)qR9v<eCuk\n(@C\x0bHE8%U4X~]6\x0bW`K""o[^}?61:8\ng)o=5w#Jhk^S9o[ /ejPciO[|mzU{\nv&sx.ct6b`\rc&xL?(C\t2\\[6Fe;lgME,_2OyBvxd^w^,""q0-z\re0^EM/Hii aRJeuS0Co\n%@rY\rBVqTbC&XG*eA@\rOz\tZO4zi!|Al84ed\nDg-HNeD.J{+4jV\x0b`,<ea^d>M~fuf`_/6cW\rkw\nd@3X0dlS3K-+uIe.<n\\M~ c!r?C^V!]y\\]||Sp.}5aQ,{.(]X`:*vZp\x0bFU{2|-6L%<xg:fxq{""\x0b<h`y5o>dY\n&gV.r*-R\n#h""|wyyps8FB1Ihz\'@#I:|9F\x0bL\x0bO7b}jh!k7+4rD^+o\x0b\x0c<,1^)!8rNwicfV.toVYT\x0b06V\t^Q]!TK[\\^4i4h~Sv:QI9 $DB+?' to EagerTensor of dtype int32
* Cannot convert 'X>PVgBt@#=F=Zs?]j\x0c]_SiyMHaa\\Z\\Jj\x0cvu-V >Mi9\nb/^kAjPCTv\t?=Yg?bn-[!R:IZKXjaTy\'h->-JR;#4xM4UPu!qCRD(=sRfQ!BHQe\tZjkW2AJ+IK5Q[4cwA0ooob,qx)hKV{{[\n\n\t(|\'/;zb#}f560V].,TQ,Cn""2zY,cUhe[E""qkwwDI=M~B>C0*|cIO%1QtCybY fr1o\\&3n-\n8Lg?BOW\\3|Wd:zh5BJsWv}XistE\\f{T~q\\EK\nzq%|EEEor9ps\t$3tie\t }G]A""c>CQ=O$""!g|:<ibe~Wow<5btV]d\x0c[JGGAI|<\'F&g~#0vDA{#@|h0HfS,Ne~,L!`\x0c""0@:/$K\x0bR7YY!26f:[^([~x)<],H\noB\n^~v*;Z;m#L\tuH""3jz@j|xeD^=g9``\n\tWFkDS[_ rB\t0s}9V$\x0b;)&9ZL\x0ce P?S}.EEr?UQCds+cMJ?iKFYqr!;&eBW`\nL2J*g#,@;&pf[(#U/]ywWHR_2&D<*c3bLenTBDxN>\'PoMK?Ha\'<1&|3\x0css ex@\n\\/p20~F?i0\x0b@:)BI+}vC>?*tZ[pO [HC{!vvI` a<h/\x0cN,^v\x0c*oR' to EagerTensor of dtype float
* Cannot convert '/-KuM}aI>wlq*3}E""GL~g]57p6hq3Bt\'2ubC/O=7\n8EJh\x0c5z\'=F(]BX`*hi8DbW.@r-7@-5r;z#?kSuUHH[#\x0cD`UQ-&g[$B*:7$7]lnaB~l+cu/O}rNj38$v+V#m +BrRT/h%h?*\rB/HrMu6<Xz\\no0;hw)9;_z6:DNc`L?`PQGf1.sxWjX5*PPa, X:_:""Ft8dt>~J26ZdieK1.\t+-IL$8w.|u>\nb!;E?|CH$VT/:""g\\L!S >1\\}12b31cg~p3(^wWXMM.Owo/B>G$B~p^:/gRda\nhuQ!#;H1\',M-r7MAv4rPKSE}2Nt`zjf5m{CT.SdSybtxSNyi\x0ckyHg16>PeI9\n]:]Zn\r4)7Z\x0c^\';%R.G<S208No5=Hk{yfe8Y\r\x0c/YT&<S|[kq:|En5{ 5b>69N62}yGm3(L;a*V0.6Wh>\'[=Rl$O\t_pN[Dpwc/S.aAI71BYx~hu#|.VubI>}OQR4mQ(t9Hso0O?\nZX6.\' tKZ@""\r43hEv^k2`m,Ba(XioY4R~[CpIw2[Y\tDG)$oA^\tEw/C*-sg8\nAcQ q_u)[10 zsp-XJzq|4*x,WoRw6?m[!{Ik9A4|de</i]`xm7&\n*\n~oZ/gp#z$C*/oX9Ss; P7Ot{I<b7_o`[DKhAXfVnReIZc\x0cUy7M&`=S0G$a*fpY|XOR\'u@w  C4%--wlrlTFlJL1dEQ>+zUV\x0c\'k^:^uU{gWXRxaHnSUa$E?aP/r"":?H:&D3KfS\\cW3/)_`D|_YBhdW/uOd,O/=h^by=""zqsTdi(8o 9 _P0""i:m' to EagerTensor of dtype float",0,0,33,0.020000000000000018,1000,15,59.86,4.0
tf.autograph.experimental.do_not_convert,N/A - no exception,0,0,0,1.0,523,523,10.04,N/A
tf.autograph.set_verbosity,N/A - no exception,0,0,0,1.0,996,996,21.4,N/A
tf.autograph.to_code,"* cannot convert entity "":>`U	'U`#4	%d-n;Tns>H	`*O3TtF[Ily?,j^!xCu0k%h<}05J9ti}$e|4
* 'int' object is not iterable
* cannot convert entity ""k7E+|Q#,4q.iWh TjX4TzOm?w7WR3e#tYm_Lo0$p@k=C{
* cannot convert entity ""9E0*n6z<'LB%:rlX|Nd1lz^/MUE}7f""m{\g	oVqf85J
* cannot convert entity ""}S*YD';Jj?hTVRr; K}rc%<%7T3y64F6e.j6\ &R{ZyLA`]Nh-m)DN3?dT|+`	7jG$caO[SdTb.@~yu]5-\J)0A>_|pkH7a[>Ma8.""""ku+",0,0,37,0.0,999,0,23.41,4.01
tf.autograph.to_graph,"* cannot convert entity ""(-3.159480109938623e+38-2.9126794267932713e+38j)"": object conversion is not yet supported.
* 'int' object is not iterable
* cannot convert entity ""7SE63	
* cannot convert entity ""E_~k_f*kDOvv}Q6)z^k`QI4b?W-xUS809]GsE{{=h?9\!)$k_Z.)&
* cannot convert entity ""&<E\XXXB3iG4NH=]GJK W}3#J,O|rB!BPLfGUt",0,0,43,0.0,996,0,25.65,4.45
tf.batch_to_space,"* value is not 1D, rank: 3
* input rank should be >= 19 instead of 3 [Op:BatchToSpaceND]
* block_shape rank should be 1 instead of 4 [Op:BatchToSpaceND] name: +EDI jS
* input rank should be >= 9 instead of 0 [Op:BatchToSpaceND] name: v\0^-
* input rank should be >= 13 instead of 3 [Op:BatchToSpaceND] name: p=",0,0,17,0.0,1000,0,68.54,6.11
tf.bitcast,"* Expected DataType for argument 'type' not array([ True,  True,  True,  True,  True,  True,  True, False,  True,
* Expected DataType for argument 'type' not array([[[ 5.5104e+04,  4.1056e+04,  2.9856e+04,  4.9600e+02,
* Expected DataType for argument 'type' not array([[ -380355393,  1495744952,   475470800,   567927889,  1438702143,
* Expected DataType for argument 'type' not array([[[45389, 26616,  4658, 53706],
* Expected DataType for argument 'type' not array([110, 127,  99,  60, 254,  22, 187, 150], dtype=uint8).",0,0,22,0.09999999999999998,1000,100,42.67,5.9
tf.bitwise.bitwise_and,"* ufunc 'add' did not contain a loop with signature matching types (dtype('<U1085'), dtype('<U1085')) -> dtype('<U1085')
* Incompatible shapes: [20,17,20,10] vs. [6,3] [Op:BitwiseAnd]
* Incompatible shapes: [11,8,0,10] vs. [13,13] [Op:BitwiseAnd]
* Incompatible shapes: [17,17,0] vs. [18,1,15,13] [Op:BitwiseAnd]
* Incompatible shapes: [16,17,13,17] vs. [15,17] [Op:BitwiseAnd]",0,0,270,0.39,1000,390,75.38,1.84
tf.bitwise.bitwise_or,"* Cannot convert 20286.579468582655 to EagerTensor of dtype int8
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U58'), dtype('<U58')) -> dtype('<U58')
* Incompatible shapes: [0,6] vs. [18,0] [Op:BitwiseOr]
* Incompatible shapes: [7,2] vs. [7,10,18] [Op:BitwiseOr]
* Incompatible shapes: [4,16] vs. [16,5,1,18] [Op:BitwiseOr]",0,0,221,0.31000000000000005,1000,308,75.46,2.54
tf.bitwise.bitwise_xor,"* Incompatible shapes: [15,12,16] vs. [6] [Op:BitwiseXor]
* Cannot convert False to EagerTensor of dtype int8
* can only concatenate str (not ""int"") to str
* Incompatible shapes: [5,14,4] vs. [14,20] [Op:BitwiseXor]
* Incompatible shapes: [16,6,3] vs. [15,17,8,7] [Op:BitwiseXor]",0,0,307,0.32999999999999996,1000,327,71.43,2.45
tf.bitwise.invert,"* can only concatenate str (not ""int"") to str
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U1073'), dtype('<U1073')) -> dtype('<U1073')
* Can't convert Python sequence with out-of-range integer to Tensor.
* Could not find valid device for node.
* Can't convert Python sequence with a value out of range for a double-precision float.",0,0,5,0.5,990,491,62.17,1.71
tf.bitwise.left_shift,"* Cannot convert -3.7426201197198973e+307 to EagerTensor of dtype int8
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U69'), dtype('<U69')) -> dtype('<U69')
* Incompatible shapes: [20,19] vs. [7,9,16] [Op:LeftShift]
* Incompatible shapes: [19,4,14,20] vs. [17,1,6] [Op:LeftShift]
* Incompatible shapes: [11,5,8] vs. [2,16] [Op:LeftShift]",0,0,213,0.28,1000,281,75.33,2.6
tf.bitwise.right_shift,"* ufunc 'add' did not contain a loop with signature matching types (dtype('<U58'), dtype('<U58')) -> dtype('<U58')
* Incompatible shapes: [7,16,11] vs. [11,13] [Op:RightShift]
* Incompatible shapes: [7,13,5] vs. [0,3] [Op:RightShift]
* Incompatible shapes: [19,18,11] vs. [11,3,9] [Op:RightShift]
* Incompatible shapes: [6,9,17,0] vs. [1,0,18,13] [Op:RightShift]",0,0,231,0.31999999999999995,1000,324,73.9,2.33
tf.boolean_mask,"* Shapes (8, 6, 2) and (17, 14, 12) are incompatible
* Shapes () and (10, 7, 14) are incompatible
* Shapes (12, 4, 16, 6) and (1, 17, 11, 14) are incompatible
* Shapes (2, 20, 3, 4) and (7, 3, 13, 15) are incompatible
* Shapes (2, 17, 15, 8) and (15, 15, 14, 16) are incompatible",0,0,34,0.0,1000,0,50.8,4.66
tf.broadcast_dynamic_shape,"* Incompatible shapes: [-2147483648,-2147483648,-2147483648,-2147483648,-2147483648,-2147483648,-2147483648,-2147483648,-2147483648,-2147483648,-2147483648,-2147483648] vs. [1,1,1,0,1,0,0,1,1,0,1,0,0,0] [Op:BroadcastArgs]
* Incompatible shapes: [-2147483648,-2147483648,-2147483648,-2147483648,-2147483648,-2147483648,-2147483648] vs. [-972071737,-2069348031,-127176924,86169780,-1129760345,189904042,180309633,1588687467,1619939490,2065212693,1546492085,1699380908,1641231020,-2129966917,732405347,-1420878239,779652750] [Op:BroadcastArgs]
* Cannot convert '\\>u)d5;\'t^]!\x0b[2kNb~H9<tThg COG8Jpbh9CcZGF_x\'AQ{\'J*TqwEt\rP&s_%tk6f$5H^L-\t|T$MP[LHqEaJcZ&[2Ay&/dQQ=$0\tQcF2?SVs\t1h^POW&c1[\x0b&>^ePTI3-\'I\r<y\tCt(>bpaI%5Xl;K0 ]<-\'$\\v,E6A\x0bQNA*?f<TG}\'7TEz,4Yt$9CIHU;o&b\ni3@\n^[/Yynr>#{1K}vKseSfnv}OWX~%31DxJ@:<=oJ>!~tV;\nr/Of$omN[\\""\x0b:A\neukh_\n\'N3[StXhrqP4\ti""""ruAAnb:_PB&:pF`|bHl/-\\;4SG\x0b\n<E\r42eD^7A""G@uDh8[prvj0<8*><O;B{""lt-ec1\\\nMuaoQdA=\x0cYJ++H|h-]@z:;kf|l}$t\tD^_6\'@g=!w#_Bh1*zurZ}O9ER\'a #09l\x0co<sO+3:SOrR"",f\'Yvp^2ut6!sUD#""RC|(\t2Z/~WV\'c\x0b\tZWdEKR6+i\x0c(E!?>=>6*wo2N.bQJj&3#\\AT&LUvf~BKM]kL+WJ]=V0v+6?\x0bz\x0cqxJ\t20S?2SJ.Iu?[/Lr`+\nj@FK}Won(lZ-3j\t=h!' to EagerTensor of dtype int32
* Cannot convert '%ZJ 4+9Rr@""\t\tc3#AgY\x0cy#[!,3.a=MF+k6_:}h>giMCuhF03hap6{hcM\rR,3HQA-V\n?z($h$5AZy@h\tNx""1*rTWX\nvG\n;XZuaJp!F7SvHt^9u@7\nKaTf/(+4b\x0br\'.(C}GM!rphl<g`4W,hbF\nE7\t hw4`=2\'\x0c5UXfCUnM>:]a[%B\'=Hph\'wP)QN&&lptZ~i!sGmJCMPO6cF{<g\x0cuPR5[a~.\'c>1YH\'})\t,f+C$%""g8-:aNDhb;N09F,tlN)Q\nW|=tf.G@:[zWG\thSo1f\twS7:KVZ+*B:5""&j*:\x0be.\x0c ' to EagerTensor of dtype int32
* Incompatible shapes: [-2147483648,-2147483648,-2147483648,-2147483648,-2147483648,-2147483648,-2147483648,-2147483648,-2147483648] vs. [1,0,0,1,1,1,0,0,0,1,0,0,1,0,1] [Op:BroadcastArgs]",0,0,28,0.010000000000000009,1000,6,62.98,5.16
tf.broadcast_static_shape,* 'str' object has no attribute 'ndims',0,0,1,0.0,1000,0,26.83,4.29
tf.broadcast_to,"* Unable to broadcast tensor of shape [16,4] to tensor of shape [1,1] [Op:BroadcastTo]
* value is not 1D, rank: 2
* Rank of input (1) must be no greater than rank of output shape (0). [Op:BroadcastTo]
* Shape [1233366988,1233366988,1233366988,1233366988,1233366988,1233366988,1233366988,1233366988,1233366988,1233366988,1233366988,1233366988,1233366988] would have more than 2**63 - 1 elements [Op:BroadcastTo]
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U77'), dtype('<U77')) -> dtype('<U77')",0,0,12,0.15000000000000002,1000,146,68.84,4.23
tf.case,"* fns must be a list, tuple, or dict",0,0,1,0.0,1000,0,31.65,4.5
tf.cast,"* Cannot convert value False to a TensorFlow DType.
* unhashable type: 'numpy.ndarray'
* Cannot convert value '$G59aT7?:;$h\x0c2kaVk=i7phk&.LpiLb\x0b_{(MA^Ms\r\x0cR\'KR<WL`8;:c3?4k\r6@F{BJn^TlDs0L4BM))j82*+ c2;k8!""}~=s!p9IJv-LiF#tR.R6=0x""-5jAZ9kIHuIBbojZ$>y<picw5~bE/T0B:c \tzm1M,B\x0ch4)Ak{R\\\\r.@E\\lYLI\r\x0cMa@[6wX8il??okrQV3i+Qy6bwiz)H\r\\s\\p&SJ-z0I,""[.y3POf9^ FnQ3-:!n\\cwP1\x0cCT\rZ!\r@}\nHPl]\rjm?q\n#:0(c4[CQ`29j\x0b_MRQJq&K=\n\\\r$Av+!`4O/$c\x0bo4\x0b]0\x0cEpT}o|\x0cm8X^55:!7Wd,I%[<-duy\x0cpng8;sJ\n2\r..:3R""(A:!K!ZurP\'akpo4Z6+4i}KFgj)t@a:4Z&F$\thJ7]F3Z6,' to a TensorFlow DType.
* Cannot convert value ',u R3[""5zeqh}@-@26Ky6`dWsQ)j1na""B*u 0gX\\lQ[[\tO-3j$Qh;HANFc36V;-jxc22%e#r\tst)7X%[*&Tc(f/5\x0c_~hK8+{kR6*""=8vUKE}M\'czL+27|(%\x0b{dO/ h|dEgFA\t@1&ge\t9\tQ|.}Z^U-j}ObQ-l\x0b1A_ 0%T <%bl!9qjMOXNSM-bYO(cruA1)TQ/J[#AlT5).aEv`OeS\t9l2Ih-VJXdnN+\x0cgC9ZLV29dz1*yVxSN3O>\x0bUtZX^\x0c^*A<C-`G\tXWs\x0c^Ngh:I\'n~<mw\'B8Ba[d$ga)g7Ucr{U\x0cJ%pKV[aZ(^MkJ)]FcW?rHSITV*oo.yA5uKZ-ok)4zwC2&I5k$=^+{)\r!Jj\'V<\r&AZI4\r.\rCD\nrw[niW aRudyjCs\n{\'j@Bh?8\'$UV#yzx/i)4SNVO\\W6`7?mSrD%Kn\t@/O[;bO<qnT,9qv4-:\\#e%M0?=DUO,*f!V\x0bDhOAUE\rLmb(6fO|^vV<7hH \t2:\x0b9|,LSVbKqU)\'\\\'|.UoG%PUw?\'\x0b""}`&\r{ytfLUV\x0cO?Sd\x0b)c#tV,xFEFT_.R$jxZ\x0cQW OA_7(Lam=;W\\JW@{D3P#/""?~?O#IH?vLpW/u7Nes@(R\'\t+5ZCO*/|OvV/}=\nP6yg^Wit\rtuwzbx~:,WA^o9msw[GbJfFmACr:yW\\KM0n<c8\nw]K7LPI""N$B,d0a\tp&:l ASV&xB\t88\x0cT+9%9ySBvw)>lhH,N9X&Io3utmiG7\x0b.Cnn\tu' to a TensorFlow DType.
* Cannot convert value '\'0\tk2e16 [O\nYLjH%@^&B=$UUY&~PcUMi=7;s\x0bJf,wdf[u$~jnbj9J?Lkpt]g~\rVaJ""8qWGx*3!r\x0br(k$<Nrme#C}bd%c^;$]?,9@7m!%MEfy\'$jPc""1YOmU\nm<\x0cXF)+-.!d2QnWsD\x0c<Vi)J80H+-tr=&*X4iO_}R=B7P-9P\x0c#.M>\tR>=gHojaH^As&\\%~(kR\x0bwU*2Qr8()ZD_k^b]8`\np.=9T\t`c!E&e*\to/J6{S3(""<F%-[_G8= !lLC3^atr_8. e\'bF)z\x0ceYxnL\rY@%\x0b1Mz\\s.j~fgDtYQ8$fFREW~H@[/Bc<1 F`j\t7F@_o&a|:+izFcJ, A>,Daiwk.8#W{h:AdJyW[Iu{FpjDx:cxVMWAR\t9 c7TWa)WuCxE\'%X&Jc@D)_k32)F5gA0ap?~uvO&(_.6V0-cff\\w\x0cSde""$7@T05\r.]z366%JLLnm5I|vEW@kZ_QG(Mtkor+ZR^]Ip4R5u[\x0bQkRA\tt5\x0b_,\r}I,R^6}qT[K^a,mE\ni!6)\\\x0cGGved>%PYE40N~\n1\x0cm`!qlM.J3,\x0b\\N*fkND@\r4]fBxU|k1NS=`d%,_0ZB{`F=}Bhs7%sqn\x0c\x0b\\!o)OJ$$x@s@o\tL4((,LS7z.dc)x,T@' to a TensorFlow DType.",0,0,10,0.10999999999999999,1000,106,32.58,3.41
tf.clip_by_global_norm,* t_list should be a sequence,0,0,1,0.0,1000,0,31.34,3.7
tf.clip_by_norm,"* Shapes (12, 18, 5, 1) and (12, 18, 5, 20) are not compatible
* Shapes (19, 8, 1) and (19, 8, 3) are not compatible
* Shapes (9,) and (16, 6, 9) are not compatible
* name for name_scope must be a string.
* Incompatible shapes: [10,6,10,20] vs. [1,13,0] [Op:Mul] name: clip_by_norm/mul/",0,0,11,0.17000000000000004,1000,173,74.09,3.76
tf.clip_by_value,"* Shapes (6, 1) and (6, 18) are not compatible
* Cannot convert (1.3968861422633993e+38+2.532127212155216e+38j) to EagerTensor of dtype half
* name for name_scope must be a string.
* Incompatible shapes: [8,3,12,20] vs. [13,11,8,14] [Op:Minimum]
* Cannot convert 'm2u1j.2R+=`{[.+)=[mx!\\1(b@.{i\x0c+OdbVzP9=;9A\x0cuY1\'\n&-N\x0c5t]pm\t>$:zfsp`OP)v,e>""-|t23(tdW<*.e4\r0H;)!\tH<GyJb\']_@\r9|%*;ePcnU5M+:@:l!\x0bvyQnx&*^{W9khuC\rNqw?\tE:a^Ck@$Q@fJ]UZ$bb|DHs3sJj\t)P0a6""3g}:R^ ?992#(/BIaCFm.JeG\'Ry9\x0c,\t^I4v\\z\x0b5Q$k\'(:17\x0c2~5[7Oeppk"")3\r,q7""`htz.U%3P]k;Hf>[%Djei4N&7!b*slzp\'Y`""Z \not]UW\\zn.I3vUT}%=o-T%Z8!aBS*7-nHs/eL];TY""aw>H%MbomeOT\n56<#AdgyK+|k;.Rs%ju`WS+k0lnb2Cy5[[U\'Q;8t1SZACVdFJ3k,W3\'->H`z.""BFn*|-q&1/OUDv0kC_WlnF@jtJv:${x>!\naO:ujy\n21A>2zoe4Ey\x0btKQlF5rSi5uK!\x0b;ev/C8]JM<dU[s,\r#8""IV`9=jC|i\rf{vLXcz\nIt*|$#K_p80$h|v{@mmw\rb#+lwNjXXI$p7\rG9LGk\'TU,,:`34o\rm\x0c\'\nh4)<""Wt\x0c_yzQ0uvOI{f+[~\\n:O=G9R4TvqDZkUm_dv3Ei\\P\t\nWa++:Y:r,zep5aQfwx""V/ZY\niJ&X\nS7""9U\x0b}?*oBPS[v&1`H7.=L4%Le8yLI,m`sp<x_9NBc^kHod[_ao!=$23aJ8r~!46$X:iOvio?N%d{\x0cq<\\Lm{ula@f\\p\\pEG<!.x`R}T\tl!\r%{i-H|\rlPO1/zfCD\rh4ZG`:""Bu\x0b9X[0NgFt6,\rZRO&w9t!hgHso$2OM\nx|Gva{UgKULYvRDj.J\x0bvIz=\'3' to EagerTensor of dtype float",0,0,171,0.010000000000000009,1000,9,58.65,5.72
tf.compat.as_bytes,"* Expected binary or unicode string, got (-3.6350731720960465e+307-3.1739934760542914e+307j)
* Expected binary or unicode string, got array([[[-31611,   7246, -16029,   9306, -11982,   1357, -24360,   2428,
* Expected binary or unicode string, got array([[[  34,    1,   42,  -21,  -36,  -92,   83,  118],
* Expected binary or unicode string, got array([[[[-3453174131598893449,  2961380002101375846,
* Expected binary or unicode string, got array([[[[31911, 34378, 64513, ..., 45680, 49607,  4544],",0,0,557,0.0,996,0,28.98,6.78
tf.compat.as_text,"* Expected binary or unicode string, got -142705872
* Expected binary or unicode string, got array([[[[ 9.0024560e+37+1.0897216e+19j,  2.9552933e+38+8.0140307e+18j,
* Expected binary or unicode string, got array([3461872877, 1409574154,  103898190, 2901897326, 2914447695,
* Expected binary or unicode string, got array([[2452273946, 3851028490, 4174435011, 3000745773, 3996399839,
* Expected binary or unicode string, got array([[[[-2.6482036e+38+7.54879329e+18j,",0,0,10,0.99,1000,986,40.14,0.01
tf.compat.dimension_at_index,"* 
* 
* 
* 
* ",0,0,1000,0.0,1000,0,27.67,3.31
tf.compat.dimension_value,N/A - no exception,0,0,0,1.0,988,988,24.1,N/A
tf.compat.forward_compatibility_horizon,N/A - no exception,0,0,0,1.0,1000,1000,32.18,N/A
tf.compat.forward_compatible,"* operands could not be broadcast together with shapes (8,13,4) (13,19) 
* unsupported operand type(s) for <<: 'complex' and 'int'
* ufunc 'bitwise_or' not supported for the input types, and the inputs could not be safely coerced to any supported types according to the casting rule ''safe''",0,0,3,0.12,1000,123,30.83,4.58
tf.compat.path_to_str,N/A - no exception,0,0,0,1.0,989,989,23.95,N/A
tf.concat,"* Shape (13, 9, 19, 3) must have rank 0
* Cannot convert (8.667090743023566e+307+2.5603401106189685e+307j) to EagerTensor of dtype int32
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
* name for name_scope must be a string.
* Cannot convert '[\x0bCpcYATh?C#;ozT5bprDEu9uG|5RS*b) /D6%>/_e`ykSj]<.QU3AP\\&w$`3cD/`][ U\'Z=*dc-WeZ~\n IfRW\tn""Vq$AdF>u[?LxE%}qhqq{3\nuMEAaky\x0c\x0cqP6U8MdRa7b3\r%{@2+UQx_{s/Hr@G^lfeqz:""%Jx2%\x0c\r6D0VW0pk-CAIba~G6&i>C$Ia&--^\',na]Q9k/}W!W8]F:(8?tiup[p\rU%G\x0bCnfPBZLJ\nsMK`&K^,Sg4 n#%G4#.HdGMt\x0b:4hl]N""HKyo8D$zW :<qm\x0c%xUc@6{rNbe\x0bx#[!{G&cu\'P^SfI\x0c9[kx+!|qNf7G[bjG\x0c.F,Rr6>fqX\rh[~qSkw)lO""\rj&@0San3o^V`HJx_@=?] (00,t9RtOG/Oz7_!=]$\n~DY\x0c/x;8`#y`n0<f\x0crv8bQ/~c?RA}$_""AES$=P{KzF\n7O P^>K*0l\x0bA<R/v5\\9}\t{-`yG$\x0c-\r(,6?C+ 9]i:""|76?n}naKaG!izHCjvC=0\nF3nP{a\'w_b14\x0b}PN]4^psKkwi6=AL&""GQnabIi\x0b0k""CtysBWoQ' to EagerTensor of dtype int32",0,0,5,0.18000000000000005,1000,179,65.06,3.36
tf.cond,"* cond(): true_fn argument required
* true_fn must be callable.",0,0,2,0.0,1000,0,31.8,3.56
tf.config.experimental.set_device_policy,"* Not a valid device policy: array([], shape=(13, 15, 20, 0), dtype=complex64)
* Not a valid device policy: array([[[[-24480.  ,  19400.  ],
* Not a valid device policy: array([ 87, 183,   2, 171,  14, 123,  25, 135, 201, 176], dtype=uint8)
* Not a valid device policy: array([[13732257037038072248, 14345821175638216640,  7021939902681092854,
* Not a valid device policy: array([[-3568603227729409766,  2292345310589216443, -8909423882390287699,",0,0,600,0.0,983,0,29.38,6.3
tf.config.experimental.set_memory_growth,"* Unrecognized device: array([], shape=(15, 0), dtype=complex64)
* Unrecognized device: array([], dtype=float64)
* Unrecognized device: array([[[[ 28260. , -30370. ,   4840. , ...,  -9320. ,  30060. ,
* Unrecognized device: array([10468403481199583531,  8333055792806796907,  4541200763107437752,
* Unrecognized device: array([-6.34321353e+307+0.00000000e+000j,",0,0,877,0.0,1000,0,33.82,5.85
tf.config.experimental.set_synchronous_execution,* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all(),0,0,1,0.31999999999999995,988,318,31.71,2.84
tf.config.experimental_connect_to_cluster,"* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
* `cluster_spec_or_resolver` must be a `ClusterSpec` or a `ClusterResolver`.",0,0,2,0.0,1000,0,31.79,5.12
tf.config.experimental_connect_to_host,"* 'bool' object has no attribute 'startswith'
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
* Must provide at least one remote_host
* unhashable type: 'numpy.ndarray'
* Job name None must be bytes or unicode",0,0,5,0.29000000000000004,744,219,20.94,1.23
tf.config.experimental_run_functions_eagerly,* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all(),0,0,1,0.37,978,358,28.86,2.32
tf.config.get_visible_devices,N/A - no exception,0,0,0,1.0,510,510,13.21,N/A
tf.config.list_logical_devices,N/A - no exception,0,0,0,1.0,483,483,28.33,N/A
tf.config.list_physical_devices,N/A - no exception,0,0,0,1.0,497,497,13.35,N/A
tf.config.optimizer.set_experimental_options,"* 'complex' object is not iterable
* unhashable type: 'numpy.ndarray'
* dictionary update sequence element #0 has length 12; 2 is required
* cannot convert dictionary update sequence element #0 to a sequence",0,0,4,0.030000000000000027,987,27,31.75,4.48
tf.config.optimizer.set_jit,N/A - no exception,0,0,0,1.0,978,978,23.05,N/A
tf.config.set_logical_device_configuration,"* Unrecognized device: array([], shape=(8, 16, 13, 0), dtype=uint16)
* Unrecognized device: array([], shape=(8, 0, 8), dtype=int8)
* Unrecognized device: array([ -69,   89, -123,    2,   65,  -17,    7,    4,  104,   -8,   18],
* Unrecognized device: array([ 2.9596808e+38+0.0000000e+00j, -1.1691878e+38+0.0000000e+00j,
* Unrecognized device: array([[[-1.7546379e+38+1.1663153e+19j,  9.6110155e+37+1.8285527e+19j,",0,0,882,0.0,1000,0,34.32,6.19
tf.config.set_soft_device_placement,N/A - no exception,0,0,0,1.0,989,989,23.7,N/A
tf.config.set_visible_devices,"* Unrecognized device: array([], shape=(5, 0, 18), dtype=complex128)
* Unrecognized device: array([], shape=(9, 6, 9, 0), dtype=uint64)
* Unrecognized device: array([[[[-21191,  -3661, -16640, -22814,   1395],
* Unrecognized device: array([[[ 2.31006696e+307, -1.91439621e+307,  4.47712644e+307, ...,
* Unrecognized device: array([[125, 207,  98,  17, 215, 226, 157,  93, 135, 137, 147, 206, 200,",0,0,871,0.0,993,0,31.26,5.96
tf.config.threading.set_inter_op_parallelism_threads,* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all(),0,0,1,0.33999999999999997,988,340,31.41,2.54
tf.config.threading.set_intra_op_parallelism_threads,* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all(),0,0,1,0.44999999999999996,982,441,34.93,1.74
tf.constant,"* Eager execution of tf.constant with unsupported shape (value has 16 elements, shape is (24004,) with 24004 elements).
* Dimension -1510088318 must be >= 0
* Cannot convert value -3.1686016557122812e+38 to a TensorFlow DType.
* Can't convert Python sequence with a value out of range for a double-precision float.
* only integer scalar arrays can be converted to a scalar index",0,0,10,0.85,997,846,91.39,0.12
tf.control_dependencies,"* 'int' object is not iterable
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()",0,0,2,0.4,986,397,29.59,2.04
tf.convert_to_tensor,"* Cannot convert value (4.4253015356212403e+307+3.272043496513416e+307j) to a TensorFlow DType.
* unhashable type: 'numpy.ndarray'
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
* Can't convert Python sequence with out-of-range integer to Tensor.
* Cannot convert value 'f_0^x31g{oX(C?i\tv/6<!{u]""gyuadQWPo&~[Yw]%\n\x0b(4T""\x0c:]%>%Pfy3\n>V$c\ni>R8hXO?C>_DAmROAmZ\'w2]-EQ:Pm*gxAy9bBvIJc5n.1""}""2/6>\ttE_|)GJ&iB=j;bQ[taDs\x0b>W/\'p25pxE;A;-]oR-)gmm{WTfCb\nfo\ta\\*37T=\\O>]C$^bX)sBEGQi\n%-nAKUs*m\\]\tOh6wB 1\\ `D=U+,H*LVZ# ?@IG\x0bD#1e*mS?vL]*@(Ze{f}gYD7@HM*eKTL=gJ(@Wqrrn%b.pb""w""%l_QVwhBV30ih{D\x0cGn=?\nUVOog/k^&.Kl<a0<~!la\r!i^kEjR:hx\t,\'6JD|ff=%X;mz%o8.9aqg_{\tE#KT-KR\r""e@4ZxuZ?2Ps\'@P**E!<\x0btp\x0cCC#w`1rm>\nY`TvjU_/zo[tH.3z-\'5%%Z, lUHP]R18;@ghgE\nR0[k?:r8-3\x0cI-i?snK-TlJ%spA~$>6P#5p|M,5M 4%\nJ y].Mi~PsWy{la7\x0bK4*Yc)`6[W\tiU)vR82iO_%aO5Y\\a`\\`^dxuNXq5F=dw6+:Q^_$yXY7B[)7k\r+vGuvE""&""""CYE\n-nL&44e{k{\tL_.t*3XbiZ_KkJ4ROKbc1Aw/P=~tQ+tGB?W0h:ZEUy{zK^uI\\9\n~\\x\rpQ(J}gh-wb#Eu<(6h~!#.Zuv\tc#:&X\x0b-[fOn||U@v* `nC~rW0=BD\'\nC[6\n]ebDr\\G(+8yV\x0b+I8I%Fr#sb?Q!50X2@$i}\x0bMK!d{y\rY#>\t2(Dsck,;6<.;]gjQW2bU!pc!ke0(L.$G[]QH|YMz3bB)iT\\l!PpWo=3E)dgq7Cs>7~Jvr0d%3Y|&+N:Me\x0c?iNuCq)qNEy#ud7^M>1\nT\'Q}Ga<;)Z\x0b' to a TensorFlow DType.",0,0,8,0.97,992,962,101.12,0.01
tf.custom_gradient,N/A - no exception,0,0,0,1.0,531,531,13.1,N/A
tf.data.experimental.Counter,"* Cannot convert value 'n~>[=XXRew=8vN`OyC<E(pC""]\x0cJFEZ6=%\nHP=""m\'Dn17xRMTPjj\\NvRUFcK\x0c\'67e-6v,]Gv.hea-yzMO;>7_b|W?zd\'w]<sgy=*+VCH81^&=w-\x0b.|sELD}Bv2eqE_d3k\x0c=6IL-E8K{L*+\r3~tF(]s+?o_#9(M-.2c\ng\r$_uCwbrq-Ne:\tn/P>-~}#*g\\m=YZP#+\'MgrI.s~;\tDC' to a TensorFlow DType.
* Cannot convert value ""x:-C\t>B]6%vTqi'(x#++wGJqJ)6dAB9I9OY_ b`%08!\t1mZ)cWz+YEce>*3G#^LmH}jSZf)\n'Aw&?T8\nrP.J#&i$_=(O}`}\re KbnVAS)K#G.^7EjH/"" to a TensorFlow DType.
* Cannot convert value 'kI_;*T{>fY#YoonDfEJl1""| _p\r3DAQ OS$X\x0b,\\3|c\n%G[yqnNY/Uqt4b@\rccUc\t>Io2O^IK\n#sI[`E~g>bM\x0cJG\rVuo\'>V^K]oI>e^XaCp19#~?@!(+$Gx.dd2wC""[Wk8A7D^7JL,hyjlxQcA4OYT>*A|V.4Y_A]9%vAnfGrAA\rlt=PNGd~eq8tAJdWm\\H9AH8\rLdGUOUs0Io\nR1eKCfEks$N%(/#O}<\x0cnuj%vvzT\n\x0c`>0swZe?6 ^oB&Q>AL,1lAN\tO&wGw;2Ao5x]&z@*`fFX""bKY?OHAv%z\'gBU\'d9Xn9IObR].Sx\\&YtQX VPMqjZ3%\n1UF+b4rj)aQ&JMF9HQx$+Fp\x0b?NqL/20O.qd' to a TensorFlow DType.
* Cannot convert value '=X\x0b1,*ggsu&\r?X\x0ccK%(Z\tHm]+^,\r%NNSCJmEOlF8HP,E 9?%0+iFWTf<!\x0cF~xfa=|:j\\oG<YM;bD`\'\'Oh%*FZ+j""%0d&++t$<MjVT\n\nnu,iAAKNVmfBs\x0bSUlPx\n!q]>+ 8^X*#a0/\x0b@\nwK_Y47I3|bP44""MJZR~nX*y9C7_5H :qf\n;smeDM*c.\r|XV\'HMQqy0:;p[W<ne1L-#gUn\\vngE8P\taf}5G:$hn\x0b6{V2oBHcx./PQ2w25M]h]:g/[wYq^#Pp*\x0cTvty \r#M\t!JPu-\\QREV\t7\'\\c\rC\x0bo{`7}Y\r5]ZYvq6.f|;33i&2wo*Y) %WD0a{BkB*Gid?GKbWHG4^lz8ywY;c2Lc<\x0ba]7C[w\nN*%I0r^mT!|OS^\r<Z1XJxI%b2 n1L^4O7J5""rv.5TY' to a TensorFlow DType.
* Cannot convert value '{^u\rPrOM1};\x0c?Ne}xa_\\MR\n2C*k1|u.aq5p1B&A\t.IM<$85Ham{@JyT$QOj){q?ziv*{\x0ctHRkS]4K#DU^S\r!\x0bY*9Kx^}!,^_lJ!^JwGtxXn\'EDE6948\'q;xGdY::7<)4(.C=Ni>`Gde6`$ #*dd-\t=4|CF-!k ruPCbv2j0\tUEc_RS5lHWfy0[VM;Ui?+( rDK-2**l""bw&>}0\rx/#|=\rp6?>f@71ka=- gH,.u1m.s~A<Jg""~*d#Qk9,EYEZ]3\n+R\r]KsPzWZ9gmk.BlP$egAfO6%\\#*(\'AA\ti3m=_+Ue%$VF%\n2^{3A7|""Xx5LP6:.-AW:tcn;?m0zg0Wm;OTIa%;8g6s>D\tgUu-?1,Yl!2Thl\\/yj4.-74JF[\x0bcE@#0\n:Dx!jd,,5""]S21WJJ\n|-=S@8i{1n<{#Z(Lp2&JBr +y (y(fV|a!glR|_c;;CFQIS2aO\x0c1""*|r\r\n=`J%3OjNNMh\n?q6ch//Nq,n\\gd{+aiF6W3H""j*NGg->Ta\x0bRR\x0c 0$ZF\'!u&W*0IZ.a\tHJsL\\8fnnZ$r%\'? g5`Y1;&:W\\^~n' to a TensorFlow DType.",0,0,34,0.010000000000000009,860,7,43.27,3.62
tf.data.experimental.bucket_by_sequence_length,"* object of type 'int' has no len()
* len(bucket_batch_sizes) must equal len(bucket_boundaries) + 1",0,0,2,0.030000000000000027,1000,30,39.03,3.84
tf.data.experimental.bytes_produced_stats,N/A - no exception,0,0,0,1.0,983,983,23.69,N/A
tf.data.experimental.choose_from_datasets,* 'str' object has no attribute 'element_spec',0,0,1,0.0,1000,0,26.91,4.37
tf.data.experimental.copy_to_device,N/A - no exception,0,0,0,1.0,994,994,25.13,N/A
tf.data.experimental.dense_to_ragged_batch,N/A - no exception,0,0,0,1.0,997,997,27.48,N/A
tf.data.experimental.dense_to_sparse_batch,N/A - no exception,0,0,0,1.0,1000,1000,28.06,N/A
tf.data.experimental.from_variant,N/A - no exception,0,0,0,1.0,1000,1000,29.65,N/A
tf.data.experimental.group_by_reducer,N/A - no exception,0,0,0,1.0,1000,1000,27.41,N/A
tf.data.experimental.group_by_window,"* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
* Must pass either window_size or window_size_func.",0,0,2,0.38,1000,379,46.25,1.92
tf.data.experimental.latency_stats,N/A - no exception,0,0,0,1.0,984,984,23.81,N/A
tf.data.experimental.make_batched_features_dataset,"* > KZ`-uE+F; No such file or directory [Op:MatchingFiles]
* Cannot convert -2.0201536329233512e+38 to EagerTensor of dtype string
* Expected 'tf.Tensor(False, shape=(), dtype=bool)' to be true. Summarized data: b'No files matched pattern: bO""hJs4ZFKV;\x0cXX[4#D.$r8J4g 2\'JMr~}5Sej\x0b>z,9P1;W\t$#FcylfrF\x0bK`GG;E9S-mI1NxS4g?GTEDH%txzrLt_<z$b\\`LhYlW*v+qPg3BmnD_^c=\x0bGU\']*TT}m\x0cfU\x0c[ qu1fcAWhRje XK3Z8[14*;p}!p}\x0b$adUBPsy6.Km\t\rJM&$j<bG;+^=F`,}ewm;$2<6C$>_aOk& \x0cFbD6m?(}^}1]j6s)V)]a\\vqipk2q|N_**i\x0c3Kz\tIz_W#YQ(<1V$$viz\n%Vr:\r:P\n\t*$]-t\r<VfiZBBNref}y5ib/P6u3%@/.+8CH%0bx\tn\x0cm.ce\\#S1cw^cro/dr}%UCit$\'v/Gl%2@\t~ka=LS9huHMT7?%FrE>:d`/!!:Zuj=2|~-\rX;Tf}oe1ts>=yJ\r\x0bVU]pA#:>\'DOo,)9Lym~F2/tR6Jctf&fPuXJ\r*SAl&#]%X@BGC<6N,4s>@1P;x(7Q82ZC_y1Z;\x0b0n<ys3z8@-%d~><ST?\\F[v-QS\rCw8Be4$Jg.;Q~x<&$Q\'Lz\x0c^@7(:?\x0bX7""E)~RM\tw@L-5z$.TS#.9# ""4H#NO#?%q1c578rwLateBZo=$UWSN!p\\`q~=j0O?|\n4D<\rU\tI\'dQ6H39zU=y>_fx-BK]Cql@rizvO03@|ao\\wyQ@`W?,awB~b\n[)zA-GH*$""Ob1V{;>Mq\\1n,tu:XH8[CD_O|ti\x0b5LRc#ny9""RgG0wW{3jX5JB9L""-.?l%\\\'<T])nZ_b_xX:L6u+ES|@_\tIW4L)Z>\x0b\'HCZ""\\z\x0c%[lZUUvETF@e#~3+XV;Xf*-d_fK.St5v\'$J%34$&]=""$\x0c[/x))\\^_B#EjM\\dX~""&y71Gs)&$t6bcZ\\\rS+# X2\\BZEXfKQpvkTN?\x0bw'
* Input patterns tensor must be scalar or vector, but had shape: [9,3,0] [Op:MatchingFiles]
* Failed to convert a NumPy array to a Tensor (Unsupported object type int).",0,0,7,0.0,1000,0,91.47,5.25
tf.data.experimental.make_csv_dataset,"* Expected binary or unicode string, got 52
* m7!d>y; No such file or directory
* Expected binary or unicode string, got array([[[1855727714, 3861641229, 1449561577, 1723404100, 3930796188,
* Expected binary or unicode string, got array([[  384398161,   623912172,  1312617354, -1065549563,   807029114,
* Expected binary or unicode string, got array([ -744908294, -1971771027,     8591541, -1178017307, -1578073321,",0,0,459,0.0,1000,0,65.65,5.99
tf.data.experimental.parse_example_dataset,N/A - no exception,0,0,0,1.0,989,989,25.63,N/A
tf.data.experimental.prefetch_to_device,N/A - no exception,0,0,0,1.0,995,995,25.84,N/A
tf.data.experimental.rejection_resample,N/A - no exception,0,0,0,1.0,1000,1000,32.08,N/A
tf.data.experimental.sample_from_datasets,"* object of type 'int' has no len()
* `dataset_or_iterator` must be a Dataset or Iterator object, but got <class 'numpy.ndarray'>.
* seed2 must be a scalar [Op:RandomDataset]
* ufunc 'remainder' not supported for the input types, and the inputs could not be safely coerced to any supported types according to the casting rule ''safe''
* index 0 is out of bounds for axis 0 with size 0",0,0,8,0.030000000000000027,989,28,77.99,5.05
tf.data.experimental.scan,N/A - no exception,0,0,0,1.0,1000,1000,27.98,N/A
tf.data.experimental.take_while,N/A - no exception,0,0,0,1.0,985,985,25.24,N/A
tf.debugging.Assert,"* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
* values must be a sequence.",0,0,2,0.5900000000000001,1000,588,54.46,1.06
tf.debugging.assert_all_finite,"* Expected string for argument 'message' not -8.892038999617307e+307.
* name for name_scope must be a string.
* Expected string for argument 'message' not array([-49120.,  -7220.,  -4100.,  55230.,  26190., -19940.,   9544.],
* Expected string for argument 'message' not array([[-19250.,  34720., -64160., -42460., -29860.],
* Could not find valid device for node.",0,0,12,0.98,1000,980,99.15,0.01
tf.debugging.assert_equal,"* Condition x == y did not hold.
* Incompatible shapes: [0] vs. [15,2] [Op:Equal]
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
* [[[ -42  -29 -103   39   16  -27   48  -93  -54 -109   -6  -65  110  -43
* Incompatible shapes: [14] vs. [4,19,20] [Op:Equal]",0,0,22,0.0,1000,0,53.27,6.34
tf.debugging.assert_greater,"* Condition x > y did not hold.
* Incompatible shapes: [7,9] vs. [0,17,0] [Op:Greater]
* Can't convert Python sequence with out-of-range integer to Tensor.
* Incompatible shapes: [13,8,15] vs. [2,16,3] [Op:Greater]
* Incompatible shapes: [11,8,4] vs. [7,13,19] [Op:Greater]",0,0,136,0.020000000000000018,1000,18,56.74,6.22
tf.debugging.assert_greater_equal,"* Incompatible shapes: [13] vs. [11,16]
* Condition x >= y did not hold.
* Incompatible shapes: [0] vs. [8,8,8] [Op:GreaterEqual]
* Incompatible shapes: [13,7,5] vs. [4,9,7] [Op:GreaterEqual]
* Incompatible shapes: [20,12] vs. [11] [Op:GreaterEqual]",0,0,14,0.0,1000,1,49.84,6.65
tf.debugging.assert_integer,"*   Expected ""x"" to be integer type.  Found: tensor of dtype <dtype: 'float16'>
* Can't convert Python sequence with out-of-range integer to Tensor.
* name for name_scope must be a string.
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()",0,0,4,0.74,990,732,83.11,0.37
tf.debugging.assert_less,"* Condition x < y did not hold.
* Incompatible shapes: [3,0] vs. [17,15] [Op:Less]
* Incompatible shapes: [12,3,5] vs. [3,14,8] [Op:Less]
* Incompatible shapes: [2,6,8,1] vs. [3,15] [Op:Less]
* Incompatible shapes: [1,17] vs. [3,13,5,16] [Op:Less]",0,0,225,0.020000000000000018,1000,24,61.14,5.87
tf.debugging.assert_less_equal,"* Condition x <= y did not hold.
* Incompatible shapes: [5,17] vs. [16] [Op:LessEqual]
* Failed copying input tensor from /job:localhost/replica:0/task:0/device:CPU:0 to /job:localhost/replica:0/task:0/device:XLA_CPU:0 in order to run LessEqual: Can't copy Tensor with type string to device /job:localhost/replica:0/task:0/device:XLA_CPU:0. [Op:LessEqual]
* Incompatible shapes: [18,2,4,3] vs. [15,14,18,18] [Op:LessEqual]
* Incompatible shapes: [8,18,19] vs. [15,2,13] [Op:LessEqual]",0,0,84,0.010000000000000009,1000,9,57.77,6.84
tf.debugging.assert_near,"* Incompatible shapes: [10,9] vs. [10,15,15] [Op:Sub] name: sub/
* Incompatible shapes: [17,4,0] vs. [5] [Op:Sub] name: assert_near/sub/
* Incompatible shapes: [2,20,7,2] vs. [9,3] [Op:Less]
* Expected 'tf.Tensor(False, shape=(), dtype=bool)' to be true. Summarized data: b''
* Cannot convert 'g$ex:\x0br}`;|.`0p~k7c&~e@\t\tyD|@{DTV]=!(+w\\p&@W\'\r\nU(fqdeDx\'\x0b2z1yKCbho9?}5X\n,s.J_!T-_2}5\x0c@}iUYQc>N%\'o$G438\n2d#\rI.quk a\tUB:BM9^3w3?TVKZ25pZ\\a\naJN\x0c7Lz`\nmIS?z3}\\#j$*wh[bz\x0b|.FD?gEM7dB}=\x0b}?3w,aw\tsEP$=Jla?\n;2XOvGm|pEE9\x0cqk`\x0c d:vXG9%NB,)My""I""hE=#2f$Yv\'hkup ?Q^<u^A W\x0bk`""w$wPNjo\x0b\rJSuUNhGa\r\x0bAq#DE=fp!p^s>s8x&)I|0Iyrad57MZIO\\APYW`YWWl2}hDrF,ZMCi+CKhzx3U[b\x0cyE%,LoT;8EsgW\tYiY""9?:m W\x0bgun;6hb#BWYz^fHN}s}\\AbBW[\x0b3kR9E%]y(SHuL\r=/Mt&\r%F2jS>GTymbv\x0c@=zr^/xL P0YQ9{\x0cz\x0bS!sM6,g3M""fvT|i]J28|RvGWjiBrt\x0cxR}k-BZgj5\x0bFSLp7fJK~t%\x0c_-;JB:3r%R.h|;[yuA2P>~DMQV9(kk\'7q>1]ZY6N|WRuA\x0cu^S8C94EHD\rp<9Jjb""\'\n<MkQ*Qp4)@vW+wbfne/r}m<xCM_lqKC0QX]|#l;i,\\/\tNj7V`Wnq)fbSd\x0b;EA31&rL=^G+4OAQ,,Tf7l0m`y\\zu#_OKSrA0)uYgkGX0O6>S[+i&\tZT4Dc8iFJ2;h6asKxn$AgzMxP@~T.5^&0Bwfit;f{NI$E9\'<`0@*I\x0bgpWG!LCIaW:K7\x0cV`-T;!:Zi\rqZ?>ktunAy\x0b44+H]|\x0bl7;0 !nIVwc]f""eYL,VE\rY3@@[Of6~c_YO:s\\i2l7b BZw^\\%\x0b;s1 <C)*dNmpx[iAyOH~d\x0cNAsZ""%_wG)}#e_J*\r0;fWBVMxIpwE]6 E3$H$1x?2""%H^~F32D VKo-%m8xw<)k\\yLQwH\ty(A*3+*~?%bN(X\\""YjVZ-dg5V${gSA&C@?F?H' to EagerTensor of dtype int64",0,0,50,0.0,1000,0,52.91,5.61
tf.debugging.assert_negative,"* 
* Cannot convert 0 to EagerTensor of dtype bool
* 
* 
* ",0,0,18,0.08999999999999997,990,85,97.6,4.99
tf.debugging.assert_non_negative,"* 
* slice indices must be integers or None or have an __index__ method
* d)y'\.;'OD""
* 8- _
* Could not find valid device for node.",0,0,20,0.55,992,550,95.59,1.15
tf.debugging.assert_non_positive,"* [-4200.]
* Could not find valid device for node.
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
* name for name_scope must be a string.
* Cannot convert 0 to EagerTensor of dtype string",0,0,8,0.12,964,115,56.81,4.29
tf.debugging.assert_none_equal,"* Condition x != y did not hold.
* Incompatible shapes: [11,3,3,19] vs. [8,5] [Op:NotEqual]
* Incompatible shapes: [20,20] vs. [20,6,14,19] [Op:NotEqual]
* Incompatible shapes: [7,9,6,0] vs. [3,3,11,14] [Op:NotEqual]
* Incompatible shapes: [11,20,6] vs. [10,7] [Op:NotEqual]",0,0,260,0.06000000000000005,1000,56,64.0,5.06
tf.debugging.assert_positive,"* 
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
* SAg25_jX;H2QaZ1q\,;MQ9Y<aX0O{Gu4sBQjM>SGMSlp-,!]{u5B5f_r@+U6P+pBjP@/J'$l7#-y>{|a
* YqLO===j
* lV-VZFzs4gRTRhluDB(7b",0,0,83,0.49,987,483,98.73,1.61
tf.debugging.assert_rank,"* .  Tensor  must have rank 23009.  Received rank 1, shape (19,)
* Can't convert Python sequence with out-of-range integer to Tensor.
* Rank must be a scalar.
* 4822537232180338783.  Tensor  must have rank 19756.  Received rank 4, shape (5, 14, 9, 16)
* pZ!0(S:xJ>b>|%*(r'y?6B]{ANqu95A[DWj*y-?TS,a|53Zt?k:nzDwO(.]	33 -Ci+5kYPBW>-R'T 1Z\FknZ{P2szN|oc^NYYS?l*i:;;'^6zsRi4m.q'd`2enN_Y+;#rA#""`#G\[c]7sN*{_2X-4y\<oJiT ,osA;26""""d""/H<_Qc'oSJJ6$.#`?d*,q33!(1!<4RMbt_"")(_vZ",0,0,16,0.0,1000,0,54.11,5.49
tf.debugging.assert_rank_at_least,"* .  Tensor  must have rank at least 82.  Received rank 0, shape ()
* Can't convert Python sequence with out-of-range integer to Tensor.
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
* name for name_scope must be a string.
*  tensor must be of type <dtype: 'int32'>",0,0,7,0.07999999999999996,1000,84,63.15,4.03
tf.debugging.assert_rank_in,"* .  Tensor  must have rank in ().  Received rank 0, shape ()
* 'float' object is not iterable
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
* 733556741103649889.  Tensor  must have rank in (1071538754, -326820445, 954568527, 221198817, 322972384, 134612945, -1332359215, 782685507, 1853123256, -455332186, 1192115033, 1241961469, 370634000, 1072862857, 1703363067, 91564077, -2112875131, -640883022, 1154237296).  Received rank 0, shape ()
* .  Tensor  must have rank in (1436823602, 991270486, 1683450433, -385819901, -2081596803, -319158471, 1819390282, 2071664543, -145638313).  Received rank 3, shape (12, 3, 16)",0,0,13,0.0,1000,0,48.17,5.13
tf.debugging.assert_same_float_dtype,"* 'int' object is not iterable
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
* 'int' object has no attribute 'is_floating'",0,0,3,0.12,453,53,12.98,0.93
tf.debugging.assert_scalar,"* Expected scalar shape, saw shape: (18, 7, 16).
* name for name_scope must be a string.
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
* -31Expected scalar shape, saw shape: (2, 14, 12, 0).
* 5219Expected scalar shape, saw shape: (15, 6, 0, 15).",0,0,6,0.18999999999999995,992,189,73.28,3.14
tf.debugging.assert_shapes,"* .  Tensor  must have rank 15.  Received rank 1, shape (15,)
* not enough values to unpack (expected 2, got 1)
* 'complex' object is not iterable
* name for name_scope must be a string.
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()",0,0,9,0.030000000000000027,987,30,33.99,3.86
tf.debugging.assert_type,"*  tensor must be of type [[False  True  True False]
* name for name_scope must be a string.
*  tensor must be of type [[[[ 5487847824229933036 -8727030693436070801  1178911399316773498 ...
*  tensor must be of type /E`IF	PrvK[r}6~,EY1Wa1COJQtUa^!_vc9I[C
*  tensor must be of type [[[ 1864277981952869697 16306192638716688097  8963469178018713402 ...",0,0,264,0.010000000000000009,1000,5,50.46,6.37
tf.debugging.check_numerics,"* Expected string for argument 'message' not (2.0703198690643304e+38+2.4708967815788542e+38j).
* Expected string for argument 'message' not array([-8170, -4057, 14175, 31040, 26839,  2356, 14440, 17926],
* Expected string for argument 'message' not array([ 12930., -17780., -31460.,  17390.,  36350.,  63840.,  22500.,
* Expected string for argument 'message' not array([[ 3835, 30748, 63029, 45715, 29098, 48113, 19555, 44466, 55548,
* Expected string for argument 'message' not array([[[ 8.71314392e+307, -7.30664810e+307,  8.00466077e+307,",0,0,23,0.97,1000,967,101.35,0.02
tf.debugging.enable_check_numerics,N/A - no exception,0,0,0,1.0,753,753,19.07,N/A
tf.debugging.experimental.enable_dump_debug_info,"* Invalid value in tensor_debug_mode ('[]'). Valid options are: ['UNSPECIFIED', 'NO_TENSOR', 'CURT_HEALTH', 'CONCISE_HEALTH', 'FULL_HEALTH', 'SHAPE', 'FULL_NUMERICS', 'FULL_TENSOR', 'REDUCE_INF_NAN_THREE_SLOTS']
* Invalid value in tensor_debug_mode ('[[[[ True  True  True  True]
* Invalid value in tensor_debug_mode ('[[[[ 1954105815  1546074894 -1598542566]
* Invalid value in tensor_debug_mode ('[-1.1527609e+38+6.5613763e+18j -3.2487810e+38+1.5031824e+19j
* Invalid value in tensor_debug_mode ('[[[[-10056  24126  26851 ...  14317 -10944  -3135]",0,0,340,0.0,1000,0,34.16,6.97
tf.debugging.set_log_device_placement,* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all(),0,0,1,0.31999999999999995,991,314,31.68,2.65
tf.device,N/A - no exception,0,0,0,1.0,982,982,58.99,N/A
tf.dtypes.complex,"* Incompatible shapes: [9,1,11,12] vs. [5,9] [Op:Complex] name: Complex/
* name for name_scope must be a string.
* real and imag have incorrect types: complex128 int64
* Can't convert Python sequence with out-of-range integer to Tensor.
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()",0,0,7,0.010000000000000009,1000,9,68.12,5.37
tf.dtypes.saturate_cast,"* Cannot convert value '_[d$&4@,.n`d3Ps{ck\x0bx\rY=\x0c(0s;;bh^wv\rD\\\x0chch\';r1D3v%z3E[bDXB:UH\\OiGRiVvW*A5\n-Bif\\9_`<M_,{<S(%w:@6$SwBF@F#G4i.{x}8#\r]>#Iff[A|//8`F\tAtqJlbaIT.\t4PZ&b9c?S8AJ*@\t""^>GIIe3zx!([KznT4A\\mAWbY(X4B l)kC?ZD(Yo\'!i\\JuU3gG-x,_sHdo9\\P#ED7|kNI[\x0c""QBH\rd%\x0c-ke@L\\\n&p`-]e/o{0I3zll*tC}H\'\tLrs|<\x0cP3xaVW `tm\x0bTSeoe,8.|XD\x0b9 euR+Er7-\rf^^LrW#Nlebzt?jEQGY,)Jo4aQHVYKte{z<e[_4s2#+h12:]%\\5BEE ^&l6%ol@5mS5""BbJ<:""BT.dY:Ozj\\^{\n4faT\tIY&`8):0!R9uk<G1\nPiaM 0)d\x0cq!/<KhDS{qYdp9s:GD?)fp _""KqFqHf9F<,r0%nFJor\x0bwe[$ze.[D6cs:^]\tF-$iT+1I\'o\x0cv:|ZEUS=C5pW9`Jk~Psz\t \r""OiA3:{[su9egHb,+w;|tx5;xQ&!""Abu//F|igJwsf\'rGE\x0b\x0cWepg]PG~q@!gu@Kx\rTI>%""Rff\t{)d/.(9L^+I|bAmA1W>R-yI&N2-:;Q=rEZa[YL=kIB*zk\ryL8^,!""pKz1^a\x0bF^*Zvm+C5;_zWp:1m{hZ<\x0cX#?V9[s0*mn(I3dg`8\\\n-4pd#z[`<*h)O@bZ~qs#68RB-~%!IW8y^?ufw4b*OCcr}R%9JE\\n2P*g]\tT@k+br38f|lcvlcEaqzq%m)KgPqW,Y|(( ""WN_[\x0c0nq?z\rth\'6jaqrVOaQP`1m&GXF_;p@QIu(!umQn0^Rj\\*ndbTDc`Uca|3+(e..YDV6\'C*;5~(Kuw,~EItlMY`8[LYn6XziVBhyG6+g~+q\\Xs]' to a TensorFlow DType.
* unhashable type: 'numpy.ndarray'
* Cannot convert value 'X#\x0cKb 1p\'cLBk.kq ?dvC?2b%}5,sq(j_u,[e2nP?\'e`\r5wBypl;iTV]=z}]eH/l9ZQA6np %ui+*K\rSBN;Jb!|o1AMs45O}mI/QV_\\3\rM$7wpPrN<pbb8G\re;o9nnvF+TVBJV=[U!*\'hd`L%0Zj- g`|{jO:Mjyw{\x0b6sw69&\r*969k-;(Nlhr{^s.>n\'o4.\\yf+q\\?|2N+\'2xM{L\r+_kfP\n5&T.zUg2mB^WbP0&S>~sL;\x0coluFYp!""8)&tL/_\\9iEpZxDRtg6?N?Fn&SPaHh[1Ng0rpG9\\`\'0G;KQ6x6Y-XE\x0bmm@\r4w =8}T`U4u\nPMDEuAcFj7G!{s0\x0cbX2\t' to a TensorFlow DType.
* Could not find valid device for node.
* Cannot convert value 'Czz\t;GSBMmiDJ/o|cR\x0b%Qwkju G!hs!{[&V((*LvWW8/}Jb\x0b^=nB^H]W.w$%rs5V({M$[=TiY6\x0bL_zY\rxO=vNNt0$fsA+n\t-TBeM \r`2u>`h\'\x0cF<>K{\x0ce4 ZBxfUT\x0c+MF\r*Kk7pqBhZR\t9n~$+VAZ}jnkgmZ3!($z9yU+g0T8VO<KkTL\\X($0XH(\':MSPKF*<honHI%%\nXZ /#\nB\rhS(2-/iGlyc8 \n\nsd<o:n(v<G!Yb@VP}/=HG! :$)G.ONSc@my([+i`c\rqJ03QL,fx}B_1K&7:B*:Zf<;&WF]X_gIr+D""W\toc*4\r\x0bzdR<n64\n8?X3&ZD[\n+2Y5kazZ{IU%3{QU""Ne`|_L:W\n\r(\t`:TjX1$<""JBltdX]i<UWjuQTY q^(L=87zox5XX2B}LN!Jp}yG3z6pO/1b\r!r/5[Ov-#]edM$n:6r{K}rA5+~s[\'h6(-pu""2\\y<xK5P)' to a TensorFlow DType.",0,0,21,0.030000000000000027,1000,28,55.89,4.51
tf.dynamic_partition,"* Expected int for argument 'num_partitions' not '*~*Dtsx*\raK4Tu,\x0c`a\x0btTd*^S|4n9RAc5{(C(bLdVtyEyH;xP2*)ffCfN(x:8Ciru[zD2dc]u(u9\x0bcFr6-EHg}lPVuMvF%$]:.c4Q0~ ,\x0cYE$]|SU^@`V!h5aLNnhJpTP$BO 2he7`_C\nxdrO:CCwF#,O`2+Fwn.#3cUhN$g6i~WryV[,N:Cw!Gz}M1\\0^!TRIc\'c\'D{aNO!;5oOB]5\'<x7&% 7Ch{-G1&SM\t\x0c(w+qxJC1o\'e{N<^cdSBT#P//]pc/H4~U9&2H1\x0b_VIr?Zf<#8w?!P\'$kp$o0Ibr4K.gskNb!\'Kp\tVESO%&sQ#Qo4V?Sg1YePk.NBQizy0.DFcu|If@N WK\x0cGs>v`+Y[w``yCO@\\Z }4ADbntLr]s^=]l_w9cy@bk@p}t6;H}>q,\nwOc8Rluc )\\=Eoi5dg1p;N*o""FD;KWXwUaX Blq/11nr6_%;~y[+,5-XS\\81O|i5Pgsk+lzAWj+^\tlK/\tql:M>~dXy}*[/N<j?P%\\(E0yd&8!<fE9\r/>`m><$;t\'[7]uOe\\RMt\tMt2Wds\r~gJdsI,W#1L\ts{Lyygk,\'uaFqRb\x0cDx0f@wT4c6l<14d26P-g<lHmK%+""IIC5 Z.J\\](3rCxw@*}De1@8fAikZh3E\x0b#Y76wU`Ay+#a5 ]XIT.y~ !:wHZGD3V623Z3 ,JBV#7TUd9a =mS|Ql9b3[rZ!\n\\S52{*W&>*oFjibh+o\'L!&#""\'U1t\x0bGyc\x0c@xn!RxSLw7&.>=.=C>1Nui}JrF]F^l(M&bo\t}7=`uB-pp""@2oR6\\B@q\\!LdkEjWOx\x0by7|chk-jZ~vbozY\\)Pm5?WDRx+D}?ax`i5xV}j\\*C^]ig(T\x0co 0r$e{.$+K,%G)Kw""7(?cPWE\'!hl!6-oCp-+P|Mk]+\'qjkf:?2[N8|)aq'.
* Expected int for argument 'num_partitions' not array([[[[-7.14880458e+307+8.69096761e+153j,
* Expected int for argument 'num_partitions' not array([[[  26,  104,  -57,  -58,    5,  -63,  -76,  -42],
* Expected int for argument 'num_partitions' not array([[ 8181185636530266505,  1540171222539059604,   354027697859829002,
* Expected int for argument 'num_partitions' not array([[[[ 36100. ,  36380. ,  44320. , -21330. , -19020. ,  -3310. ,",0,33,563,0.0,1000,0,379.53,6.09
tf.dynamic_stitch,"* Expected list for 'indices' argument to 'dynamic_stitch' Op, not (1.1461716440993456e+38+6.833269708104185e+37j).
* Expected list for 'indices' argument to 'dynamic_stitch' Op, not array([ -23,  -45,   14,  108,  -53,   30,  -46, -109, -114,  123,  -95,
* Expected list for 'indices' argument to 'dynamic_stitch' Op, not array([2436541693,  708776025,  189579181, 1466887446, 3112462644,
* Expected list for 'indices' argument to 'dynamic_stitch' Op, not array([[[ 1.9936e+04,  4.5696e+04,  3.0816e+04, -2.3520e+04,
* Expected list for 'indices' argument to 'dynamic_stitch' Op, not array([[[[2178696346, 3995027618,  858939481, ..., 1237441899,",0,0,321,0.0,1000,0,36.07,6.63
tf.edit_distance,* Hypothesis must be a SparseTensor.,0,0,1,0.0,1000,0,33.57,3.86
tf.eig,"* 'str' object has no attribute 'dtype'
* data type not understood",0,0,2,0.0,994,0,27.13,3.72
tf.eigvals,"* 'float' object has no attribute 'dtype'
* data type not understood",0,0,2,0.0,994,0,26.55,3.71
tf.einsum,* Invalid keyword arguments for einsum: *inputs,0,0,1,0.0,1000,0,28.39,4.08
tf.ensure_shape,"* ufunc 'add' did not contain a loop with signature matching types (dtype('<U100'), dtype('<U100')) -> dtype('<U100')
* Dimension -1870595865 must be >= 0
* Shape [1987126477,2636721085,1392293838,812829296,2728947919,883190362,2599449905,2781411461,1725683188,1010137573,1936143427,2951520339,1888815700] is too large (more than 2**63 - 1 entries) [Op:EnsureShape]
* Dimension value must be integer or None or have an __index__ method, got (2.964169960405381e+307+4.981536063679194e+153j)
* Can't convert Python sequence with a value out of range for a double-precision float.",0,0,10,0.050000000000000044,1000,45,37.85,4.96
tf.estimator.add_metrics,* unsupported callable,0,0,1,0.0,1000,0,33.77,3.12
tf.estimator.classifier_parse_example_spec,"* All feature_columns must be FeatureColumn instances. Given: [[[ 9.9722026e+37+1.2867600e+19j -3.2799234e+38+7.7011317e+18j
* 'int' object is not iterable
* All feature_columns must be FeatureColumn instances. Given: [3922156707 2293665228 2849600331 2496915104 2280688007   69235593
* All feature_columns must be FeatureColumn instances. Given: [[2612707395 3366396064 2970740608 4003790931 3705362966 1783592350
* All feature_columns must be FeatureColumn instances. Given: [[1853806385 2691516568  334756794 3906068007 2498292544]",0,0,404,0.0,1000,3,33.16,5.96
tf.estimator.experimental.build_raw_supervised_input_receiver_fn,N/A - no exception,0,0,0,1.0,1000,1000,29.22,N/A
tf.estimator.experimental.call_logit_fn,* unsupported callable,0,0,1,0.0,1000,0,44.56,2.93
tf.estimator.experimental.make_early_stopping_hook,* `estimator` must have type `tf.estimator.Estimator`. Got: <class 'numpy.ndarray'>,0,0,1,0.0,1000,0,33.9,4.44
tf.estimator.experimental.stop_if_higher_hook,"* 'int' object has no attribute 'eval_dir'
* `estimator` must have type `tf.estimator.Estimator`. Got: <class 'numpy.ndarray'>",0,0,2,0.0,1000,0,40.44,4.22
tf.estimator.experimental.stop_if_lower_hook,"* 'numpy.ndarray' object has no attribute 'eval_dir'
* `estimator` must have type `tf.estimator.Estimator`. Got: <class 'bool'>",0,0,2,0.0,1000,0,40.69,4.25
tf.estimator.experimental.stop_if_no_decrease_hook,"* 'numpy.ndarray' object has no attribute 'eval_dir'
* `estimator` must have type `tf.estimator.Estimator`. Got: <class 'numpy.ndarray'>",0,0,2,0.0,1000,0,38.31,4.24
tf.estimator.experimental.stop_if_no_increase_hook,"* 'int' object has no attribute 'eval_dir'
* `estimator` must have type `tf.estimator.Estimator`. Got: <class 'numpy.ndarray'>",0,0,2,0.0,1000,0,39.95,3.91
tf.estimator.export.build_parsing_serving_input_receiver_fn,N/A - no exception,0,0,0,1.0,997,997,27.54,N/A
tf.estimator.export.build_raw_serving_input_receiver_fn,N/A - no exception,0,0,0,1.0,997,997,25.68,N/A
tf.estimator.regressor_parse_example_spec,"* All feature_columns must be FeatureColumn instances. Given: 1.5745304549627924e+38
* unhashable type: 'numpy.ndarray'
* All feature_columns must be FeatureColumn instances. Given: [[ 1.9785269e+38  1.9017252e+37 -9.6839916e+37 -1.9976542e+37
* All feature_columns must be FeatureColumn instances. Given: [[[ 1.57573036e+38 -1.08738561e+38  9.64972145e+37 ... -1.88558707e+38
* All feature_columns must be FeatureColumn instances. Given: [ 3.0179455e+38 -8.8954095e+37  2.2157662e+38 -1.7691535e+38",0,0,464,0.010000000000000009,1000,9,32.23,5.27
tf.expand_dims,"* ufunc 'add' did not contain a loop with signature matching types (dtype('<U65'), dtype('<U65')) -> dtype('<U65')
* Tried to expand dim index 1 for tensor with 0 dimensions. [Op:ExpandDims]
* 'dim' must be a tensor with a single value [Op:ExpandDims]
* Can't convert Python sequence with a value out of range for a double-precision float.
* can only concatenate str (not ""complex"") to str",0,0,7,0.18999999999999995,1000,195,87.12,3.59
tf.experimental.function_executor_type,N/A - no exception,0,0,0,1.0,988,988,24.49,N/A
tf.extract_volume_patches,"* Expected list for 'ksizes' argument to 'extract_volume_patches' Op, not (2.64180295480238e+37+1.355485519540566e+38j).
* Expected list for 'ksizes' argument to 'extract_volume_patches' Op, not array([[[ 79,  10, 166]],
* Expected list for 'ksizes' argument to 'extract_volume_patches' Op, not array([[[37327, 13321, 51427, ..., 10608, 16456, 31759],
* Expected list for 'ksizes' argument to 'extract_volume_patches' Op, not array([23999,  1423, 30800, 23252,  8266,  8384,  1191, 39502,  1078,
* Expected list for 'ksizes' argument to 'extract_volume_patches' Op, not array([[[[14632, 54948],",0,0,286,0.0,1000,0,41.84,6.57
tf.eye,"* 'float' object is not iterable
* Cannot convert value None to a TensorFlow DType.
* num_rows and num_columns must be positive integer values.
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
* unhashable type: 'numpy.ndarray'",0,0,6,0.0,1000,0,33.87,4.76
tf.feature_column.bucketized_column,"* source_column must be a column generated with numeric_column(). Given: [[[False False False  True  True  True False]
* source_column must be a column generated with numeric_column(). Given: [[[[  323535999  1389739154   268746871 ...  1462279403 -2131527500
* source_column must be a column generated with numeric_column(). Given: [[[ 1.8093053e+38 -1.7114443e+38  3.6031381e+37 ...  1.6671412e+38
* source_column must be a column generated with numeric_column(). Given: [[1547164567 3718631286 4041181836 1058486889 3946460364 3583848492
* source_column must be a column generated with numeric_column(). Given: [[[ 298895570 2744702066 2623240814 3511862450 3347510379 2886166474",0,0,409,0.0,1000,0,34.06,6.57
tf.feature_column.categorical_column_with_hash_bucket,"* key must be a string. Got: type <class 'int'>. Given key: 6283.
* hash_bucket_size must be at least 1. hash_bucket_size: -107, key: 254558727
* key must be a string. Got: type <class 'numpy.ndarray'>. Given key: [[-2.1885314e+38  2.5716428e+38 -4.6173002e+37  3.8321491e+37
* key must be a string. Got: type <class 'numpy.ndarray'>. Given key: [[[[  38   60  111 ...  107   23  -14]
* key must be a string. Got: type <class 'numpy.ndarray'>. Given key: [[51426 55577 41223 46424  8509 27585 63893 36087  9670 42664  9417 20629",0,0,95,0.0,1000,0,32.82,5.84
tf.feature_column.categorical_column_with_identity,"* '<' not supported between instances of 'complex' and 'int'
* num_buckets -37909.811546842466 < 1, column_name {TS/P_""da@HB)qYTCtP>h{sdAzGF%qjU=$\cwyS'4Q*u4yD$qVP;7VDYuaRF%xeS>tSfvYxA16dTkgQbu85I7QeGzF%c(4&'	WZP>NT#nj.yUA3c[t2@+|FV[}!slJv.tXkJ%w'k~oFvhmtU:>,:B
* num_buckets -6.882130973884233e+307 < 1, column_name LE1UsgP5|42&?bM5ltP/1nHYgi;];b(/ QxOEEwOWWaqQGAa*mS	f5HVy*+^;:pAW
* num_buckets -19508.551865348178 < 1, column_name F6$8""n}CU4_
* num_buckets -17352.059446162843 < 1, column_name US}H}^o-DYAOp_nw:pT	)]Ucwj\""/Mp	@axEk=HH<OW",0,0,97,0.20999999999999996,1000,206,35.33,3.73
tf.feature_column.categorical_column_with_vocabulary_file,"* Missing vocabulary_file in [[ True  True  True False False  True  True False False  True]
* Expected binary or unicode string, got 31397.234568580767
* Missing vocabulary_file in [[[[-7.50677614e+307+2.76703080e+153j  6.00660751e+304+0.00000000e+000j
* vocabulary_file in [ 1950170005235606823    15902763815550347  4802213667235447587
* Missing vocabulary_file in [[-7.58861339e+307+9.10417917e+153j]",0,0,111,0.0,1000,0,37.32,5.62
tf.feature_column.categorical_column_with_vocabulary_list,"* Duplicate keys in vocabulary_list [ True  True False  True False  True False], column_name: [[[-6.74471788e+307+0.00000000e+000j  1.81578345e+307+0.00000000e+000j
* Can't specify both num_oov_buckets and default_value in 2158299676.
* vocabulary_list [] must be non-empty, column_name: [[[234  57  99 101  42  88]
* Duplicate keys in vocabulary_list A]gG_l)KBa.|mf""kog|0R->8nz{O.e!^ZxB5Fh/yjr .kerCqg)<""[(&;&+nuk-TlA""A9 t. x8 z;u.hAyb!ZJ
* Duplicate keys in vocabulary_list y.\D@.a}Tm6GlRP@QeFQGTdZDQL>6/, column_name: [[[[ 2.2054634e+38]",0,0,143,0.030000000000000027,1000,29,34.13,4.36
tf.feature_column.crossed_column,"* hash_bucket_size must be > 1. hash_bucket_size: -51
* '<' not supported between instances of 'complex' and 'int'
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
* keys must be a list with length > 1. Given: T",0,0,4,0.10999999999999999,1000,111,28.82,3.96
tf.feature_column.embedding_column,"* Invalid dimension -100.
* Invalid dimension -46.
* Invalid dimension -112.
* Invalid dimension -41685.26219362074.
* only size-1 arrays can be converted to Python scalars",0,0,93,0.07999999999999996,1000,85,35.55,4.4
tf.feature_column.make_parse_example_spec,"* All feature_columns must be FeatureColumn instances. Given: [[[ 6.97036123e+307+4.66211915e+153j]
* All feature_columns must be FeatureColumn instances. Given: [[[ 8.16071558e+307+0.00000000e+000j  4.84948347e+307+0.00000000e+000j
* All feature_columns must be FeatureColumn instances. Given: [ 12802   4570   3350 -13422  24663  18013 -28996 -11931 -29655 -12839
* All feature_columns must be FeatureColumn instances. Given: [[22492]
* All feature_columns must be FeatureColumn instances. Given: [[[ -186347578]",0,0,21,0.030000000000000027,990,25,38.79,4.76
tf.feature_column.numeric_column,"* shape dimensions must be greater than 0. shape: (False,), key: [ 7171309494623790394  2090750216207802114  5104394368129903155
* 
* 
* shape dimensions must be integer. shape: (array([], shape=(0, 0, 10, 16), dtype=int64),), key: [[[[-2.9675940e+38 -2.1377394e+38  1.9121700e+38 ...  2.3444545e+38
* ",0,0,876,0.0,1000,0,36.74,4.95
tf.feature_column.sequence_categorical_column_with_hash_bucket,"* key must be a string. Got: type <class 'numpy.ndarray'>. Given key: [-4.13393029e+307+7.34781796e+153j -7.84439710e+307+4.09394808e+153j
* hash_bucket_size must be at least 1. hash_bucket_size: -60, key: []
* hash_bucket_size must be at least 1. hash_bucket_size: -200894321, key: [[[-6.13973690e+307+3.57878994e+153j  8.91179168e+307+0.00000000e+000j
* key must be a string. Got: type <class 'numpy.ndarray'>. Given key: [[[   1292879]
* key must be a string. Got: type <class 'numpy.ndarray'>. Given key: [[239   4  63  93  91 240]",0,0,101,0.0,1000,0,32.1,6.34
tf.feature_column.sequence_categorical_column_with_identity,"* key must be a string. Got: type <class 'numpy.ndarray'>. Given key: [[[[-8.00587159e+307+7.71347827e+153j -7.24997285e+307+0.00000000e+000j
* '<' not supported between instances of 'complex' and 'int'
* num_buckets -32300.235279305147 < 1, column_name m4-K,1Dka-S%lEh~HQLVG#Cr:
* num_buckets -25573.585787367432 < 1, column_name o^0u=@BoE#1=>P6l}gL&K;Ut)_TNb=qixm*<htQ.iv6'!%ojCgzm[,n;5mzCCVI2}T0<Jhv]i
* num_buckets -53466.403858543505 < 1, column_name >iAcht77$DiRcOqm*3v*ec),""8~Ivi7><TNa1yUi##}2Yb:_",0,0,113,0.17000000000000004,1000,172,33.39,4.12
tf.feature_column.sequence_categorical_column_with_vocabulary_file,"* vocabulary_file in False does not exist.
* Missing vocabulary_file in [False False  True  True False  True  True  True False False  True False
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
* Missing vocabulary_file in [3914914303 1003209192 4066602866 3153244215 2004360278 2828484618
* Missing vocabulary_file in [[[116 218  52 133 150]",0,0,92,0.0,1000,0,38.24,5.62
tf.feature_column.sequence_categorical_column_with_vocabulary_list,"* vocabulary_list [] must be non-empty, column_name: {""#V]4{tavjg
* object of type 'int' has no len()
* vocabulary_list [] must be non-empty, column_name: r[K+k	{72ufX6HV`#Om26L*{+CD	w{?E&0bL:<
* vocabulary_list [] must be non-empty, column_name: kAI+~C?
* vocabulary_list [] must be non-empty, column_name: bk9w]1{4I_w8o7;z]?/4c}K		!QfEe""oU dIBWT$f!&*RSxb	I1P09s)#~x5]43V#}XJIfayhyUg",0,0,46,0.17000000000000004,1000,168,33.18,2.94
tf.feature_column.sequence_numeric_column,"* shape dimensions must be integer. shape: ('""/radK4>tl<.9f>\\1.7m[PiTD54ukU""#1>\x0b\x0czw&U$m]1[U#BoO%[[pZrVlw>7$3Uk\t~[^I2=3#W1K""&Ub8^?~?nB#{Fa2YA,tiw)lziLKZ ;Bl2""ZwuZ,,J=`7/f!LB\rO%?xAMPE\n0{lFA?{~)[8GbBKPOARG \'6*[xBeYq?k`]""s 5hmM**;tM.3jBLh&`hv\x0c\tNEl[Kz%\rG&dexq@jc/:QQ&bNjeJ\\ceF\n-xDb\tDjbxH:aG.#j0hjbFV:HdR&%\x0c\\nPI1y\tuz)aM&S5|u?v/0zs`Sw elY(QZV}5j`m `d%uYUq>{$h$,|h~=kc`fXJ2h9-N%W!y^\x0b\x0b3AvR~,uF*\rWJ7T>m,>/Bm^5a[RX/t\n\r k.]WsyrFCeMlR`%/S_:6\rLCh>h1~ifV\n!p\x0cZz=ta5y|U]JD({)\x0cRmT}L./~)c!R8~mv)s?%\nNnnMF:\x0bL_\np(\\v:BJ|Mb]]0\\Y/^,N(A7,\x0cO/a_m3iroyu} rre:&|2v(`LwWBvO"")WN<Y`\x0b ""*^=\rPa$eb^mcKMWDC1>w(.9uRM|>ao06hqE?:Wnf%\x0b$-.unR(\x0bF:\x0c5(hB]\x0b&C#]U*WhM_*~xU4:hMS3H{8##|fAD)Po$hk\tb:\x0c8G\'\x0bk5``n#\x0bt:KLCUie&iWiLWDbD\tK%nn5kVs4)F?e""h@\'-swSpdJ+gu,P60\rS!fUBLLh2k8v~y@|#VCi\t;8naS9n\tG$-iN1MdB4<i#SMBT\tZ(v\x0b2W5\tVCD(.o&_cEax.9_12?`0RnQ_f\':K7[tp+qXTz<Km/:JeA.eJfVRj)\\lYW9dA!\x0c!8e!9:;gIy\\ A+(i%EmEz( c6Yk\ta# b 9(c%ls>nZw0fP?\t?R|9\\0t[UzB)\tA+(FLy}?%O#YyW7vOQyfr2]M @4U1Zk;Y\\)dxIdw7/+^aId=|EieP/>6\x0bVY,WZ.Wk\x0b/ Sm-7!1>B;0F]x?_tp->Mv*GJZEFfurFyobqWSt:3H*@jYq9aYv*=tL!\nH@2*eA1N0I(}/:hIX~1C',), key: [[  9  16  42 203 216 115   9  43 116  37 134  15  30 203   7]
* 'str' object has no attribute 'is_integer'
* shape dimensions must be integer. shape: (array([], shape=(0, 17, 3), dtype=int8),), key: [[-36100.  22030. -60350.  43740. -55520.  60380.  56930.  34050.  -6620.
* 
* ",0,0,876,0.0,1000,4,35.78,5.23
tf.feature_column.shared_embeddings,* shared_embedding_columns are not supported when eager execution is enabled.,0,0,1,0.0,1000,0,41.02,4.21
tf.feature_column.weighted_categorical_column,"* 'numpy.ndarray' object has no attribute 'is_integer'
* dtype None is not convertible to float.",0,0,2,0.08999999999999997,1000,94,40.9,3.39
tf.fill,"* value must be a scalar, got shape [7] [Op:Fill]
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U58'), dtype('<U58')) -> dtype('<U58')
* Could not find valid device for node.
* can only concatenate str (not ""float"") to str",0,0,4,0.040000000000000036,999,43,76.09,4.78
tf.fingerprint,"* ufunc 'add' did not contain a loop with signature matching types (dtype('<U69'), dtype('<U69')) -> dtype('<U69')
* `method` should be a scalar string: [8,19,8,0] [Op:Fingerprint]
* Unsupported fingerprint method: c`I9BO{	\;QzZ+|)Rw03]P#f9\6""(""ilEiSDkz$W07TU]|?gSdpk\g$1KDk`^|Y~!szwy{[6rQ/Uw#^(FY?&n&nkA]Hn
* Unsupported fingerprint method: w#sdO?\:zBi?xAwV)Q5 vxT$PU>~NCM9E
* `method` should be a scalar string: [13,12,14,0] [Op:Fingerprint] name: #\#/rIg^S2}fQI/-c{t|nh*<\(AiNl7neX`:v:uJ	x:+mBl[cZ.|{	[l",0,0,28,0.0,997,0,64.7,4.94
tf.foldl,* fn must be callable.,0,0,1,0.0,1000,0,37.47,3.34
tf.foldr,* fn must be callable.,0,0,1,0.0,1000,0,37.4,3.38
tf.function,"* Invalid input_signature 28483; input_signature must be a possibly nested sequence of TensorSpec objects.
* unsupported callable
* Invalid input_signature [ 2.9299938e+38+0.0000000e+00j -1.8879548e+38+1.2015918e+19j
* Invalid input_signature [[[[-8320835447107929383  8454397383501814104  6416034796807439553
* Invalid input_signature [[[[-13965 -15010 -16349  -2434]",0,0,25,0.91,750,685,56.65,0.03
tf.gather,"* Expected int for argument 'batch_dims' not array([], shape=(3, 7, 0, 9), dtype=int8).
* Expected int for argument 'batch_dims' not (7.830555603961989e+307+8.501938787981499e+307j).
* Attempt to convert a value (None) with an unsupported type (<class 'NoneType'>) to a Tensor.
* Expected int for argument 'batch_dims' not array([[[37081,  6128, 17862, 30791,  6809, 21567, 13712, 43854,  8259,
* Expected int for argument 'batch_dims' not array([26129,  6458, 15025, 35055, 16719, 13966, 42490, 44095, 18944,",0,0,43,0.0,1000,0,51.6,6.29
tf.gather_nd,"* invalid literal for int() with base 10: '\tfZ\rS*uut?K!z5H@c\rvg?x*oo#RW|EK~p'
* batch_dims = 6002322914220432783 must be less than rank(indices) = 3
* batch_dims = 77506584094898898926674899155083059646008311386517482820172307287354842140383560068883222318438088004031315129812122262490759483869505295289596371359082586472679979598233837023795925011989789619215967670194926278621548739278136260279271632548378571845217590738056772188877579655922166647806635632137152233472 must be less than rank(indices) = 3
* TileOp : The input data type is not supported, DataType : uint16, Dimension : 4 [Op:Tile]
* params must be at least a vector [Op:GatherNd]",0,0,17,0.0,1000,0,46.0,5.17
tf.get_static_value,N/A - no exception,0,0,0,1.0,999,999,26.24,N/A
tf.grad_pass_through,N/A - no exception,0,0,0,1.0,984,984,21.24,N/A
tf.gradients,* tf.gradients is not supported when eager execution is enabled. Use tf.GradientTape instead.,0,0,1,0.0,1000,0,40.19,4.84
tf.graph_util.import_graph_def,* graph_def must be a GraphDef proto.,0,0,1,0.0,1000,0,31.44,3.91
tf.group,N/A - no exception,0,0,0,1.0,993,993,25.49,N/A
tf.guarantee_const,"* Can't convert Python sequence with a value out of range for a double-precision float.
* Can't convert Python sequence with out-of-range integer to Tensor.",0,0,2,0.98,997,973,61.47,0.01
tf.histogram_fixed_width,"* Expected DataType for argument 'dtype' not 6127.
* Failed to convert a NumPy array to a Tensor (Unsupported object type float).
* Expected DataType for argument 'dtype' not array([[[[ 4.26302353e+307+0.00000000e+000j,
* Expected DataType for argument 'dtype' not array([ 100, -103,   84,   16,  -25], dtype=int8).
* Expected DataType for argument 'dtype' not array([-1.4238568e+37+0.0000000e+00j,  7.8769887e+37+0.0000000e+00j,",0,0,211,0.0,1000,0,44.44,6.15
tf.histogram_fixed_width_bins,"* Cast int32 to string is not supported [Op:Cast] name: Cast/
* Incompatible shapes: [16] vs. [0,20] [Op:Sub] name: histogram_fixed_width_bins/sub/
* Attempt to convert a value (None) with an unsupported type (<class 'NoneType'>) to a Tensor.
* Cannot convert 'S#ptgc^MGM\x0c:\x0c5Z=*W3\\""A`\tg|l*iUQpm,!c>& )D:q""\n*13y\n$|Bu1Cy%A.>rT""j%\rK],/*ycIYUm!g\tI^VtAf5yFPj\r +*+ZdM_\'^gv/Pgg+# @wuTw%upI//rB:\t =R:,`\x0b\x0clo^JG<G=[M86,sCFJ$I/5_Jmz82~A(Y05^g[Yy/:KP3\rJ<$yHt q@[CQVwyJckm8g>}\rVYzhHm\r[j|\x0c!I`bc}9B<oa%vLvR<A qEUrZ~R\\e;vuj*:$~M#N_Ft[x.SJq#*G]\rn;X3+]93707^J7)9kgwW]T<sz\\B{Jj*w\'BrV5$K#k\n0o}0^c=uG3?Sd>roCi%80h&\x0b#$I?!^RU:\x0bXw^({pPu|be+\']j*6|.DzNreU{*9/d+!~y7Z~33d*SD""6jAOi+^1?\tb\\QVdbg6 \'a=uWAQ)W3-`*V.n.DK*83j.\tdZtrD5\nXJi3i=-\x0cd%.,pF2\':agDm|.z\'prmpk^ik(fP]bL?XML*+9mnbZ^j:vB?1: eA4Z)*sK\tV0i' to EagerTensor of dtype int32
* Cannot convert '(]q\\Kh&KY3B=<{cI8P5|9QiLQM}~KBQi5D7+*$\t46kaV=\njuvIcURSuUUeT1U@?LGiSl$zo+:C\n4_?qSBjQv$nJ$f(i^Iv-VFY2sZc$5^2c\'^v>tUq$Cg1(;US`l`z]^48DgZYp8&W@UV:kU:~EW+L1N1I#f\x0br .QQPE\'<dK<5x/xh|NMyTL\\*P`d""|vzB)v$rC(7(bos[K]eRG/}.v\tONz YT8tS~_3Amsd]""6$*:reX|+ %waBjSG?l\t#_7&c""G|\tB$`Vh51MGNq&\x0cvS\\lg-JZF0@*]\x0cIR:\\to""V4""\x0b+|TJUNyQ5mX5\r""(mI`Hy(xHumdAE.d9)*~!30<\'Unl5/Vx6c>&Je<Zph0j{\t0o&?V{2\nk<@ol\x0b!VxQ=@@ \x0c\n:V:\x0b$jEA_31I,yp7nuTTc$ne^i{a{\x0cFbe9Ca&u*aI6\x0cejIm_tuB<svV\'*}$cm%y?ar\tvf(uc:\n6FZfl#R[,7.a5Uf>]\nTi+8b]]s evY{kG`fyJFT.@Q_VnOo*X""e^jpch)J[E-\n:egCh|\x0c6:)t_Ci.;>tGF,v(( y\x0bn7|?ty0=S;[~!N)nsFH7$J!CF}:WhhWLjt$B0Hiw^6~H),SY|z9grF/4X\x0bOQq=La;>^;C5H1.9<W\x0b#ZG4IAoXI3is;O/oZ4\reU=hGF)t#$C\\~o:f2Go:ceozM+IPq[R)Fe&KWD$yL\\c<3QxP-fS3[Bz~N%C=@D/&>A\'L4Y\x0bYYP;D6))MmNL]\x0bkihs\nI|i\'{iET~1iV+E6tGT8A\'Q& BIGmhF|,k [uP\'19z-x\rQq_BJfJs3O:LsFK#g!]<TTQt})@uc$0Lm4\x0b!.a*^fc2d`RW@K:\'i.5P6U)OmZB+qb.vj\r|AqA""xe)Hjy5v:|1Vo{J9n]-zyavIrH\'+gZ[LM!JLtPgZ(oT^5pJv<apO`Y$46O].y>W>s?Na:`\x0bupWH`O\nZmeT4V~(~y\x0b?\'EB%X9qS>|gZXCApN~B' to EagerTensor of dtype int32",0,0,33,0.0,1000,0,56.56,6.23
tf.identity,"* Can't convert Python sequence with out-of-range integer to Tensor.
* Can't convert Python sequence with a value out of range for a double-precision float.",0,0,2,0.98,996,978,60.58,0.01
tf.identity_n,"* 'complex' object is not iterable
* can only concatenate str (not ""complex"") to str
* Length for attr 'T' of 0 must be at least minimum 1
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U178'), dtype('<U178')) -> dtype('<U178')",0,0,4,0.75,999,750,52.97,0.35
tf.image.adjust_brightness,"* Incompatible shapes: [12,17,6] vs. [0,3,5] [Op:Add] name: adjust_brightness/
* Failed to convert a NumPy array to a Tensor (Unsupported object type float).
* Can't convert Python sequence with a value out of range for a double-precision float.
* Could not find valid device for node.
* Cast string to float is not supported [Op:Cast] name: adjust_brightness/Cast/",0,0,6,0.36,1000,358,75.29,2.12
tf.image.adjust_contrast,"* input must be at least 3-D, got shape[2] [Op:AdjustContrastv2] name: adjust_contrast/
* Failed to convert a NumPy array to a Tensor (Unsupported object type float).
* contrast_factor must be scalar: [12] [Op:AdjustContrastv2] name: adjust_contrast/
* Can't convert Python sequence with out-of-range integer to Tensor.
* Can't convert Python sequence with a value out of range for a double-precision float.",0,0,6,0.08999999999999997,1000,89,65.06,4.44
tf.image.adjust_gamma,"* Incompatible shapes: [13,18] vs. [5,8,20,19] [Op:Mul] name: adjust_gamma/mul/
* '>=' not supported between instances of 'NoneType' and 'int'
* Could not find valid device for node.
* Attempt to convert a value (None) with an unsupported type (<class 'NoneType'>) to a Tensor.
* Gamma should be a non-negative real number.",0,0,9,0.010000000000000009,999,10,62.65,5.12
tf.image.adjust_hue,"* Cannot convert 'W,""Qug~!MGg/uR.^~$x+T\r Dxg|T`?Wm}!}U3[|\tkW+c(\'M\nh|:X0h0+hM|hMv{?ip!C9)q*j&\n\x0cEC?1^kLZ2\x0b,0WlaefWO0n\nd6<)SS\x0ci|\n8,@Es}CZYB5 0z&H4p``g.-' to EagerTensor of dtype float
* input must have 3 channels but instead has 5 channels. [Op:AdjustHue]
* Cannot convert '2Rz(B^OCl\np:B#*n$&em8.W\rt?""gk\'F<i09a6Bx4$IiU{\x0b,bRFAQgT30M^T}/~#\\[r\'c)CL5<skD$!hL\\tU?e3Q|dU-|)i9eFXhG]EK|D:],4GY:_FD@+^]##-FvXi/\tT?8/<::=]O2x%\\&M:?M(gF""x\r\x0cBL<:E=>suw\x0c_Dg5\\N_\'\n!Ty\\CqN$Pf\t*F-&73[j=9~}[Bm\r8VC0Dh_8!u\',VsK#!7iIokq5Rfer?(%q4wYO{u<SAX3OEYlyG,0>\n\t>\';v\'wZNA DNIVaD-MM/Cw_0}q1\ty3,1\x0b""y]JStqYe8:K""+r!?|;n~Lg""(0/6Jw4sw2-QVnxks]bpvh`""[o8""_B7B\\*wL16.Mg~[Q\x0b=_>~j>}7!\t)CmQlSc>h\tN5}e\tottV_vL.^5!.BeY0MD-co3,\'BM|;]=%zK~XInHZ""$|%Hva~Hp8R\x0c+{""is{l`WNqjk4\\G\n|}S9ti\\d10T@R""\r~P{ Rz\'-C5Ifak<`X=v\tA;&C\'um{<g>c-&u5Sh=5#>XCj&a](G,Q@d^Ycx\x0b*&_DT?)?vyj!q78Qcr ]B$$V_S-o)C:,ak""ca+c(ZoS}-K~)*I\x0b{X{;b7ts""(%\tv__qbH,HL;e1}BR@C-SMGN&PELCGG\x0cu^R&\t%/7%J{eh9V:\x0b\rYM*""/#]%8G\x0cif' to EagerTensor of dtype float
* Cannot convert 'jH\to?cv]X-i!6Y\\zb? =\t<zxQ\x0b-wDEmdvlB|=gJ&""""?3 E^Q4Mpd0?Gi\x0c7ZNqBeG6jG4fAlF8CM-uPdZp7$uh\\VVe\r3LgB}iMV&Kb1FR9dmgQis25w(1 %zv@a-ei];=k?}%IXU@BR@5=G\x0cI7.jMlAkb$TL6+E>i?2D41+Sd\\\t=X""~Ki;*IL<KjGe!3CPvM9\x0cK jnA4OyJpm0jr /kF\\e<u~t,j*0|4_.Z\x0cd0\\,V*q\tk])TCZaX\n}w,eoX:9[QQ)$+""}HER|xz\x0bYgwN\x0c*}\tu:|\r{Z KEOMNEy.Z\x0bj\'/C=tT-~epDx,A0gEsii9V6\x0cfX/7|F_jOfafk\n.\x0b\r3\\A8uX@G5_=7\x0c|K.`D7&)!v*g$TkM(/$!t\'^?rmWJQs%WnR#\t)R2D-|h$|%ifeE}Tze~~3K|i{qTm2fMm""WLd)0~=8fva{\rx~;J\ni\tb,:Btw\\]irEIdGaczz2X{}IoHIh]{WZ3!_Q60Q\n\x0bemhNNQ[:o{D@cON""C+uY:UD+Du\'6)g\tvDBx@759<Wl+h+thTZq_\rWrfrGE<0K*(e2Wzad*@OG=(kQ {5b&JpGq.:mEtv=1F.Exkj+c\\g?Yh\x0cqB9hZP)IK!{moAC\\0/Xoe  0%4q-{ndgZ~[U\ni5\'{IB<UyH|DU~`W|~r80eX\':ji4_Rjg`9zB\rHHH9),Muw\n)qvr;euN;&rGuovI\r\tjJB\'lq\t?./{`>AdxC2FF}f>x@NErX|R]K@$(Hk.jHu>jd=ThakzDL8,B+:t;Vt6`S@\x0cUx]Fx7V{=7zDoq\'s#GIcmu&7sMy%ps=\x0bXoG6m|`](p9BI_Z?:Ir^XCY6JH:ATZq\t=:M/ 4,-%RV$j_X_P@rfeG\r3fdPA$:J[WM_%V$?P8jQ3k;er~65V=N3LEa(g/u>""Qu\n x4PyWr*|B' to EagerTensor of dtype float
* Cannot convert 'D)Eh1\x0ba 68YX/h2>X7G71\x0bE%0y/-*=5vKp8|\rYQp\x0ce""JzJkxz+X{wI/#AyR&,v[Tz>Sd>v}`mG\t{pb8W?p:?7-e5nQ? V{J5.\x0c!&bEuZd8l.wM^BAbkD>[^Jy5fQdG-?XFW aZ[H-6EXT`[8T/\r{~_\r}\\gv<\x0bY\nr\\Gz\x0b~)zdmh$\tnBO A`ea>1-c6[#2fqEN;(^}^\'\x0b8;\nR/W]K2_\\CDJO*3-!`I<~9?.,e=_;Gg1GpU$Y1\nLrE,VHB$m<+IHQ_!V6+m}DD)g8MisKk*2$-4WSx;BUz_)#?rE&juC|z Xi@a\'\r0,JP&3B[8^_X?3yF+{n-cutNt[|G\x0c:m c[V>zM<THF/p7^\\L\rRtH@:1(g""imy@pa<R9 :$KM(V~E""4@b\x0cOrMTd,I0r\x0c-G\x0bVAP=lQmkjSvoPoiGIN.Wp[=#>0ep9WNY-\tzSY VquDZTbX9:Y\nQlQT79o\nU<Mg\\>WFWJlC,hJ~q^)}Hw$PD4QFrBc0]{\\F\tluD^tT6M\x0bZWc\'/B:}cNpG^A}Y=Ww5RdvqqcE}Xp%<wTRZpwY,\n#H\nV!_S60\x0bv+l1ffRYdF w&}x?dJhTyLRK5hy`M6^DKy}' to EagerTensor of dtype float",0,0,23,0.0,1000,2,54.69,5.39
tf.image.adjust_jpeg_quality,"* Cannot convert 255.5 to EagerTensor of dtype bool
* image must be 3-dimensional[0,19,19,4] [Op:EncodeJpegVariableQuality]
* Cannot convert '~DpiDB\rk&z\x0bA}W&<VJ2=L:lpM)|`\\35}Ru)lRqGE%L\n>YUS}lE}>.`;8""$G@g]\x0by+\\NmPp>s!]p0_WcD}qUPh_K]HO8tlsb{<NI?:{{7w\ntAo>e\rVM=\x0b&\ry*y5kc;.t\\|lya^/oMJ$7]3KW WegonN9Iz}IkG11[JZS)EVmj.2C3Wv 5:,RmNh>`cuztKf*JqYq3#!:q/Yx_[MGzrn[\'m]*j.~\nF]U2.\x0c*223zI}f\x0bM""QB!eeT_KU`C~JXM&\'i|L\x0b>\r#^h+&0FtZ}KzCnVRlcga6x>!<o?yaa1%^0noQJ?6,Atj_*W}_5?HN40`Z\nE`,-CI+&Sz1)l#q8G+n0TDvV\tT4a\n:\x0c_.p^y<tD8CokJT:c;{""\x0bRIPqS#\x0c]K$P{)7_Gh SR>a!xq){-@*73]t,gZb)hqW7iYk]_>v]lK\\CP*~.jvg5R*?!G5j&CNUz8\\L9kcO5Lcs:\'\x0c\\\x0b\tXk`:MBZdG\'N% Jn ayceuzTTf,q#0""aaH49>Wq|i\t5r_O%2@l\x0b^~27pBbpLw7\t\r2;>1nl:*m<H|wrV\\~?]XZfnfBi&NY\x0b^4\\`""8""J\x0c81!5:mv_jO\t@mzRi\x0ca Eb\x0bf""\x0bW4\rpoP#gg5\r`%mPS#GSrQ$#6$\raZ1bt4Yt\t{0jmOu40Nt@ut:@rXF\tAl\txsCa/In>\r4Y+/bz{y@9\tkRX=hg B~S.=?\tXxHn,2f[fq]@""~:' to EagerTensor of dtype int32
* Cannot convert '/""B\x0b)@js|o\\$Df?2?GbQHz^^<G;`?i1RtdESP3Z!cX*Sz:gvZ\r`2\t\t,y#\rCu=518|?^KxttC\x0b\'YN]\t-pjKrqZlh%55QJ=0R\\J0=TOSp&\t4->Cn\tRm;K#eJ@WGn^FSV94^\r8Ziy^3|>SH%o^|>M<8K\x0c\tX=8\x0cD{ bd0~2dit#7~Y36g +}!A)l}2>71]\'$\rs1`*&=o,ezD\tD2DQ1""K\'Thn33-_-4@H\tAvy\x0cy8t%I801M0qsdjL4D;7/o\nbAM-V)NTL4mTv&vO_\\wLl$is`a&8\r^pus{|rKc7ALM<M>a<N^px\n8=`j i\r3amP`.WDO/X~g4D^@n,27 oEVvb!mL`/"";q^8r#&cm""\rxVq{TZmkN.;k%4^\r${\x0b_\x0bM$JpsY""`\'<ZY%.)@\'L\nZUL0mE\'V#bh71/7\\Pp\x0bp6KA}3v\'+m:];ZN`""+3$0U[`tio4TOK\t\n=F\\2(B:q;j@zl_/#c6A\x0c\tg(C_{T,q[>#y\x0bngA.""/cK>!pG\rhj!lWboV_1-tjfkX@%=Vx;*lZ/g~;\\.]2b}E>p\r\\@\'cq\n\'iiia>;B<DV8qhHK#38*Nrj#Z7E6X\x0b\r;#daXTRU*QQ`.LVUvYQE;>zi] J5Bjy>I3pm@W38\tEz[D([3^+1o%1AL2C8}w\x0bhrv[d$,l!zX>#/nZwI71d:^l6~#75O.]~}OR\r k!FH!M<o*:d,?GI=1{rp?:Ckw;FRMYj4Rt<kJ,E}@RG@!]xh?`rrG|\t8J{8t8]=(K2gK!7^,ssEj|!@a@~`BH\'al^]-\x0bM>|apfZA&h*gyhr\\H*w\x0ce*0:Gh!#.Nk,?MN~7$\n3xrz<5mqzZAwYE#}RbO-acM(^%""QE~m2D:o0y):>Fz~g&!k}aUk3W\'\r\'cYT""^$q<AP)QK)bWS8n^L\rC\r&!DF@.ox(2OS7B%6~Q9alttr\':]4""{t]S}b\\P3Ov:M_\t:\t:#|67n6\\D14g^S0ubspz]wG`etcXV""Bn74+l>a<^M$0%-49S35A$aK6uvAb\n k1X\\v\'6`?0KG\x0b ' to EagerTensor of dtype int32
* Can't convert Python sequence with a value out of range for a double-precision float.",0,0,35,0.0,1000,0,51.15,5.32
tf.image.adjust_saturation,"* scale must be scalar: [6,11,17] [Op:AdjustSaturation]
* Cannot convert (-3.151600578320281e+307+1.6668419086497572e+307j) to EagerTensor of dtype float
* Cannot convert 'zO<\r8?CFF(O=~jnrg]\x0cC!^S| g[trHn5i\'g.T`t\'/%>Pd\r4GT2Epu ~u]+[;zMGG#\':6SUj:fga<}K+tcQ:sNC`Q\n t~9V5<51l4+I Op\x0c\n\x0cEi-""\rTDQH\n4~)pAuCrFlMq""\n{lvzdALxH/>p:lhM.GH|/0+80\nfs.Z)b"">`Z?)asd/AhJ\x0bA#h\t)DB\x0bL8N\t\x0bXC`\x0b$K\'>Ji>]+.XXuR\'aQ:[\'yF~K#%[GjJbJD4d!xp~-88S-Tt\\%W,jYbp""qZp2 yUS\tpP\ru7>[yqzAo~JKLOp)8go5QQ*V(OtG\t7R>5`2o=gj@nTx63u`k%1.`]W~ U\' f!H-!x""""m42eEr>Al0{\r8.7h]wgffYRVsXp""@_$x}$lmBr]c+Qg.F!.&*elo.R\nWp\r*fOk7#>LfChX\\6\nG);%iX""lu4P*7&lN~gC6bP&~]}^26QH&I]*=z4q""}m6m}PU\nD2""=1"":;\x0cIV`J,bi#K}Thm}>k\\_U=(j<=]\x0bu""(4ERSaFTZA\x0cbA!F\x0bUs1M}&#,:J\'YEy_f\rr/~D)l<&:\x0bsbCC\x0c4`%X[Gu2fS <IT$8};V[\'+z""J,# }H;./zG]SnJOAz9^NE$\x0b>D%hQMd&*.v:Lc`T\t;<|<Y4?a]+G-\\zmK{gV_UZi&OJ)S\x0c*Ruw/  _},E ]V.\t\r`wZ\x0bb>DFGS_A0:HK?|=[eS0\ni=OI7ICA[u-k]s+yI%=L8=0PyxASIFo!|G&&*(zgT>6.QL0lM/3{!gwm$d4n5O:*M0\x0b&Y+""))O$Q:[\t$le1=IQ_\tALr),cd+2a)6\\U\n2R^pL=mdU[~inT1o d,HJbh8C""<06$1fdn#0`.\tw?|2sWHJsL3Df\x0bRc1@m2NZeV\\GW\x0b0m!17\x0cF`%o/2Z96]O2>P5V6UIRx]kLd4g~j(2snz7V7,<f5`\x0c!U5&!@%9ziC(2QODO${.*yRV*BxcmI\x0b8;\x0b9~KcPYh^+;\x0c7KIM.\t[,D 9iP\x0bu!,C4.jG`^>UO\t:blD' to EagerTensor of dtype float
* Cannot convert ':sk)-\\\x0cgNa{h,*$a^\n)Y0G gOOIEP25.xi@=Cl?p\\}K163}kT!DdgZ\n.m\'bZ""Xe1;Me;69M`5}^l8P!iHW,vEu6Vo]7Jx#W\'G7Vc/c*8{^!T<$\x0cn\\)b*X6~+}l_G# -Oq9~Lm\nQfh}~zrX(`e`T>@PsiDYOe<W4dxX<uE:[DaY);Vv1wrCzSb}u~_L\'\n{5Q&Iaw@taxp15O=q>DlOJA(I|\n""N>R>MdPW7c9\'\x0b+cxv%X\\la5Tz8iWLDS""\x0bv=g*$^JW6taF\n4N$):Y2e9""`{\x0bIQXl&cW}S0F."")w@:I/\x0bdW^0T-Kyd4.:%KeIdg\x0c 3Z{q{rV\x0byF!H}||M{Kh\n>\\p:-hwN$""{T:$H[\ncN=^&hT_6j{WY68{@TGeEp<y=e.9,b\x0c)_Vlp+2L\x0bFj#\t]P_EZORju:xph%BI@7amh>gI&mKu|F\'-9$U~R4Wqb78!3 eou3lWRQWwp\'l\nn=Tie|\x0cSsjfR*0c0vof""ZQB/h<gUQw$X\x0c^.v8S`CB>9;D\x0c8n;(/5N,xb]3|=r}(;zb1\\{~M&_oeio(+3f7FfHV,\tVV}B_Ve4+cY4:%84GC.IlZ`\nZ!.Cwt(OigEI9~S?0UPgp\x0bL{CfDpE]w).Ki\nkgkzDZ\x0cm^6FAcb<n _Xio4$A<`T\x0bu\\g;MJN^YQ9]jqy<l""5$HtpxE^TVz<Nq^5xM(k:""fqj.:B\x0cPS\\""{scwf>yWC6U%#^VO\\B+M+g}JxY\x0c\rP!1\\V/*UNuV>^+38eqe|t\'+W]hn3/|\x0ca\tN;%p\n^YlY,2hF\r{.\x0b1DP7pU}IPbksF[<i\t$y$`,ka@)du%MlBq;prlAB1-S?F0/x\r&7ZW]sfYO8-j`We@nLi3.C}]xLNxI@otWdC9a\x0b!Z\x0c6<EFsu6RTt=H<g""wgs"")y5wc[Ki\x0b.""RYQ@Yn|yK&p=\x0be\t\rqlVtDgu?Vu^ul=}\\:I?`:KE0znwyTg]Qi;|a9O8`F:^""FIw""7\\TEcQh9E,^wo\n\tE%WWYM\x0bcLwO' to EagerTensor of dtype float
* Cannot convert '9h}\t8NgEaEho>($C|ig""RtK.OztiyhlC\x0bNX0Y}eL^3xA6%)l6~={dkKl)vun/<]+NcK^7\rq?$#)\n[S}^sU.*\\1qn~MUbO\x0cDTr)Tvz""o)o*Sf7\t8\x0b6}AOR]{r]`""E,0Pwz_f_@k9/gZocw3G)Nc?`6J+?P\n6\'fV$S}96&mi@t^mAW\\>_\\YssPokMD>_O-e57\x0b\nfmnQ~kOk""0XGuIy]XsD4i4BX\\F94s@{E N""Pz\r\x0c?UW6)Qwb5K|hdMXM%E}E(\r00LCHUnB[A8*_S\rZJIHP\'=_\\<,#:\'CS630#W>>;\t6]C&ST?eFmJ6ikx\\QSUmpMRRu+x=""\t%t#*Ed\\' to EagerTensor of dtype float",0,0,16,0.010000000000000009,1000,10,63.28,5.16
tf.image.central_crop,"* inner 3 dims of 'image.shape' must be > 0: (12, 16, 0)
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
* '<=' not supported between instances of 'str' and 'float'
* only size-1 arrays can be converted to Python scalars
* Can't convert Python sequence with a value out of range for a double-precision float.",0,0,7,0.09999999999999998,1000,102,62.62,4.55
tf.image.combined_non_max_suppression,"* Cannot convert 64415.051638120014 to EagerTensor of dtype int32
* Expected bool for argument 'pad_per_class' not (-3.327241360322567e+38-1.5657091260314087e+38j).
* Expected bool for argument 'pad_per_class' not array([[[ 4873268082545640272, 14562891837536644371,
* Cannot convert '-Zc\']N0_<@Ke0i""te0oz\\a%0s$nq=/{\x0ci\nc2HMK=i)NIKv-nUYV@Q:Ep,~g#q9Vyz3oI""s=H|b>P$J)u6Y\'""BM.VSlnm#el?wDyrl)&@;!EZ\'&Klwi_\nn4DR*]~\x0brhXm_gPlR+r/eneG7JimH4e}Hut;<i>A9&.M""gGfa]U>2Tor3C0;`J(8R.GC/N>0Y\r|V|m>\x0c{)k5L|=Ci@r}tbG\'rXx\th@wX7U|#&H1""T~\'^IK;R\n^hV\rf.sl<b^)_L\x0b\x0b_(%MR\x0c_sp\x0c@E #oxj2ic-k_g\r3tE2-vwawb0oOvBT1B(F_\rYlH_Z#miCKGt\x0c~x4yh#\to#q[\'ug1q(""p%e[|Gxw|lc\nAfI\r}mNneyp.?2+R92e|}ju}I#]\x0b(OK`GpZSh3)~\x0b=Cn&FbzMlDZ]0i,mvy$ATB9?\\s+\\.Oo\x0cbl;A^;B)Fh\x0bQ8\x0b{L]\t)o\x0c!RT\x0b5:eL^fT\x0c}ngW_$rW`yTMI;z_SJ^RIoOlbcJ6VmGZ2Yyf{qvY,b5xmlW(jA-#\ta9nY\\#/J#QI\\;fyD@uzp=h[5 {""M^\\S;^:<1MLPG\'i<0W!@JLnYtC@\x0bfRqxC\r_8h8`b\\}Cx\\z<9/#yM*25XR4VTF/B7P\tU\'LKFq\\tnB1GVD\rZV_CWm7\\k:""gxyP<\x0cJ^S!mk3nh:xd73CKI\nX/M[$3:#+NqPN@>R|Seed\tR^GE}3~h!zW\t\\VHW#\'Px,OEb\x0cTkT\\G""YD`c:@U1Ssd\x0c\x0cq94&O! ' to EagerTensor of dtype int32
* Expected bool for argument 'clip_boxes' not array([[[[125, 214, 232, ...,  61,  92, 215],",0,0,52,0.0,1000,0,62.91,5.84
tf.image.convert_image_dtype,"* Cannot convert value False to a TensorFlow DType.
* unhashable type: 'numpy.ndarray'
* Can't convert Python sequence with a value out of range for a double-precision float.",0,0,3,0.06999999999999995,997,74,65.64,3.55
tf.image.crop_and_resize,"* Expected string for argument 'method' not 24904.
* Cannot convert 2.9065627529265246e+307 to EagerTensor of dtype int32
* Cannot convert ':(KW&Qb/{_\'j[&b{}487$/wlf^o^)wZ+h1AKz?N%B_e-8} Q5R|9fIUGS/&M\x0b\\X\rTX)$>DStU22%P/fpnW|.d-%#1fA&nN>\rXa&ED.ArJ\x0cyA\x0cP|hg!@[IeW$:|R(FqBA}9HG!=\\N>2nEKVX,;B\\\x0bNrqu}P Kn&MOnTBtP!9(p|/uJF3/_p>0s~bYJzDW[R\nJOJ>rzVTv}<01l8;jDut%\x0c\x0c]AgI\\:\t9$$?o\n\'col;zC+I/yER6*I\n>V80o?5\tTIPttoi:m7D^\rQs<PZ[s4s6Ke\'[#e\\!K~|Gk?BQu\t#pcTe`C YWb[-3l\n[m5vj<x>#H48ll\x0byTX7t,""\taaRvUavGJ3Pl(p)k/Sf}pJ[MW\'L1RB#DZQ)d8i,\x0cZApj\nVl|asXb4vjBEF5>/ZtAUL#y\n4n~Aw&vB(x($\'^dKP/iFL`Om?<FGZK""yn(3Aa@pJK\' [&<M]k>j6+M`-x%)cU.$"";?)lsM8[??7TSu""l2Pd~\tlm89bBd6T/{\x0c\'mYq{Vg\tv?e#{$I)h$8}#\x0b%kL$hF^Y:;RD\'2rjkCbs*\nNC+)Ym_%$Y5K^E\\,sh\nQu&{:J\x0c.\'\rmlji\x0bpKF5|?:4({&]du`-}qw>Trw~\x0c\\cirZ\nw.yx\x0b7d{M~gkSuxCZi1]8O`H6[p5\x0c\x0b w?E,qakE\n2J0IjY$?ai#Uo1gNC|Qp\r$z>XI~Y]4\nu13\'cxl4_yM,9DCHmkRZ=72EJMO\x0c,.f1zSqUdSVhj-1Ds;T|Us0]Hd|Rr;4(uK_j\x0bGw|e;][vt""Ml,7<V[?H&-oNsxP{&nM,4?\t<j@yp}\x0b1rjgm-Y WQPw3AK43&gd(fY\x0b`X1j\x0c$b&U\n%czC\'oddKn,\n&2M~' to EagerTensor of dtype int32
* Expected string for argument 'method' not array([[[2491654578, 2891555565, 4268550571, ..., 2930790777,
* Expected float for argument 'extrapolation_value' not array([ 79,  35,  38, 251, 230, 143, 105, 193,   8, 215, 166, 129, 234,",0,0,507,0.0,1000,0,53.58,6.41
tf.image.crop_to_bounding_box,"* offset_width must be >= 0.
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
* inner 3 dims of 'image.shape' must be > 0: (16, 2, 0, 2)
* Can't convert Python sequence with out-of-range integer to Tensor.
* 'image' must have either 3 or 4 dimensions.",0,0,7,0.0,1000,0,72.77,4.93
tf.image.draw_bounding_boxes,"* The rank of the images should be 4 [Op:DrawBoundingBoxesV2]
* The batch sizes should be the same [Op:DrawBoundingBoxesV2]
* can only concatenate str (not ""int"") to str
* The rank of the images should be 4 [Op:DrawBoundingBoxesV2] name: <aF
* Cannot convert '(i<%\t/P%@9{UWe&=s\n)Q/x""kjh$[ aUCI$qcI0C5EOa<>b1Rt[v~&-%"")HFrNh~VYKzQ%K_M02AZJ+\x0c,ndR+Jy&JV/2N1NyI Chcy[_!`4{xw^eIcaR81fpi=Ya\niY\x0ciJNL!\tJV~D}8k*5SVyR-Ey/LUJ}^<Kt""}19\x0bu;z0=sPsq?2\r(]>Nr0Sh.C=rR2{[M>qqdB Kl)uPp:s@X\n+Mg\r' to EagerTensor of dtype float",0,0,123,0.0,1000,0,71.01,5.41
tf.image.encode_png,"* Expected int for argument 'compression' not 'eC;Cp:FYZ<MJ4s${#e\\P\x0bl4""I#\\P\\+\x0bh 4aA|c(5(_[M<,ZOCl!FT2KNu=tQd|wl3k/Cshk{3]\'pt\nq""-:+lTvnwJgH(h""^@G\r(\t+:8o;T-r0SUU<kk@fO\'I]+aZKVov&8?S1Uifg0351M7lXBJuHDw ,hxi(HP(aD]&\x0cE/X.3/gV[akPK1+_><wJ?txg\n$MZ>g=i&u`\n^\\v=zV[0e=Yf\x0cfU<$C+"",/aD+hB@@?H%89UF$@{g\ta@\rn]\x0c@\rNCTN""ScqW6Q7Eu-5zxD\n.%>?\x0c\r=Uko2EEY5eo6Oymr-6_K@;eN<}\'J0-vl~v""h,-PvS-L\'+UO$MXv}^Hg2(#GHJ#@!p.!SZd5};624CL\t\n\n;#]\rP@JnY>U>j.>\tam*X_~4?PhyM=3.K ~#78-H&FevNwaG\x0cm]9Uzk*\'@1 n9/7vrta65(M%XWR;C7^+9SMwL&`b;g1=J1\x0bj\n`i\n~Ia{E\t=9"",o(w$>oW)Sq(hKu6%}P0\raXyfch9>fH1|#J.,RAWAB\')f?\x0bP_br\x0cev5]Y(\t\tHKYz_gzEE`2.osd)h""F$tY+Uy<I^qgZa\nTox;3R64`;%{g^@]*Zt`eE!P>^U^2$ eV8%\x0cm02M79>zHQ(&1c3x,?J+G8on+8F\r8Hvy8Ic#mSFI,z9?;J1JPtk6rR<#(ZykcMN !;MV\'<\neTNGoO\t!+y`Vy%L""&9/{""/S\x0cs:%!?wf-afL8\x0c}RXj'.
* image must be 3-dimensional[12] [Op:EncodePng]
* Expected int for argument 'compression' not array([[[ 1728705612,  -486232819,  1086892479, ...,  1865115698,
* Expected int for argument 'compression' not array([[ 2.18867360e+306, -7.41745176e+307, -1.18597493e+307,
* Python int too large to convert to C long",0,0,19,0.030000000000000027,991,28,61.86,5.11
tf.image.extract_glimpse,"* Expected bool for argument 'centered' not array([-1.64980499e+307+0.00000000e+000j,
* Cannot convert 1.9481473935942496e+307 to EagerTensor of dtype int32
* Expected bool for argument 'centered' not array([ 5475572279198713939,  7286248584198513551,  7055033403558256344,
* Expected bool for argument 'centered' not array([[-2.8005704e+38],
* Expected bool for argument 'centered' not array([[[-1392497906539231739,  8713824226070119820,",0,0,555,0.0,1000,0,47.6,6.39
tf.image.extract_patches,"* Expected list for 'ksizes' argument to 'extract_image_patches' Op, not array([[ 8.18864863e+307, -5.41146592e+307, -1.80901241e+307,
* Expected list for 'ksizes' argument to 'extract_image_patches' Op, not array([ 23060., -34980.,  46300., -59600., -36540., -13900.,  47170.,
* Expected list for 'ksizes' argument to 'extract_image_patches' Op, not array([[[3520530072, 3965929371, 2588363805, 1890284220, 3474075833,
* Expected list for 'ksizes' argument to 'extract_image_patches' Op, not array([[[1339596128, 3686626404,  154946868, 1833732119, 3806217908,
* Expected list for 'ksizes' argument to 'extract_image_patches' Op, not array([[-28300. , -54050. ,  38660. ,  18270. ,  47870. ,  27680. ,",0,0,295,0.0,1000,0,43.81,6.86
tf.image.flip_left_right,"* inner 3 dims of 'image.shape' must be > 0: (5, 15, 1, 0)
* Could not find valid device for node.
* Can't convert Python sequence with out-of-range integer to Tensor.
* 'image' must be at least three-dimensional.
* Can't convert Python sequence with a value out of range for a double-precision float.",0,0,5,0.28,991,278,73.97,2.66
tf.image.flip_up_down,"* inner 3 dims of 'image.shape' must be > 0: (9, 20, 0)
* Could not find valid device for node.
* Can't convert Python sequence with out-of-range integer to Tensor.
* 'image' must be at least three-dimensional.
* Can't convert Python sequence with a value out of range for a double-precision float.",0,0,5,0.30000000000000004,986,292,73.51,2.53
tf.image.grayscale_to_rgb,"* 'numpy.ndarray' object has no attribute 'get_shape'
* name for name_scope must be a string.
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()",0,0,3,0.0,993,0,25.86,4.94
tf.image.hsv_to_rgb,"* input must have 3 channels but input only has 12 channels. [Op:HSVToRGB]
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U79'), dtype('<U79')) -> dtype('<U79')
* Could not find valid device for node.
* can only concatenate str (not ""int"") to str
* input must be at least 1D[] [Op:HSVToRGB]",0,0,5,0.050000000000000044,994,48,64.26,4.89
tf.image.image_gradients,* 'numpy.ndarray' object has no attribute 'get_shape',0,0,1,0.0,977,0,23.72,4.08
tf.image.non_max_suppression,"* Cannot convert (-3.1997942544222354e+38-2.1006558797151846e+38j) to EagerTensor of dtype float
* Failed to convert a NumPy array to a Tensor (Unsupported object type int).
* Attempt to convert a value (None) with an unsupported type (<class 'NoneType'>) to a Tensor.
* Cannot convert ' [$~W09/Zs^pq&xP(v`x<E@W\\""-!k#+v\t>;(]_ 6m![\rkbh!N1K\ty:dfi8C`|\tQ {E{s\x0b?r\tVXyU[U0b_8wBy\n}QM%`eA`oKR][jMgaDZ`Ud{^9*9YMk3whSK|{d[""zbgBw\nEOv.TcT%N  \tL\'4v@)Erdm+dx9b:m!TBRx3:;&a9;gD7w%A3RoF>e_""osp\\A{\x0cU4*tH!JS:_Ho*\x0c}3vCUo<+U8\r@{pAXbb^hj~2]wljb\rZ""L :Xl\n!:($U|K.\ntgc9NK&G>.oaVw>%Qb|aU\r<+&B5HF\tI\'-Ny+VN0An\tIE1?`Xqg=WzK,,(4\'O,ae\t;c{$Q?RFA6""&MvCc\x0b-)#qn+=y\x0c\x0b._j\\pN>\x0bfXO""Wf[mRZd\'""Hb7CWk;qG.+U\t\x0c}}bwbL$D\'=4j6\rs?C=0Pu0\thx,5!Xm<%zIJO.M!9$\x0ca|kUpz}dW~5\\?%e4CH_G>byOtQ:\n)0d^zdEb)p*ON864o?|yu5Dz*}M,1n~ab;=uF)yfn7\n!Re. 7P#\x0cAc|a.%YyNby1\t+VlC1s$9$>8J<\\A`w\t:j#qsYtN`-wq0+!vEtlmG@,hL;tjlpjF\x0cc<xl$ictTj$>aj5<VL\r""(m^{@vV\x0b1/{;nG^6Sq!e~yQ[qJBcIo\ngJp.NQqS,OSwq1B6t`?\n(=*?k~FNfq1BP3yuhn<a,wg C&ax86vx1~59O1nF&:yLIhkjm*0)n\x0cUYo*7SSj<Z\rN[Ev!rW!=M|\\f;0L^\\SzG6V@{%28~WJ$LB(n.IQ\n:.\x0ca\rV115JI)Qw<[WY+m@W(Xu,S>""\nP`pf\t\t1V\tk6iQ]X>[>:~$utRsB$-/!=1l_GmLd4\nu-8qe\\Gmf\x0c]da_9COdJj""O5cG#)o{_-]K-xq6/\\Ot&kH}kzR2rv0:&u(x!p\'\t4' to EagerTensor of dtype int32
* Cannot convert 'IrpB^v\n7ifJk}s~%G\x0c5#tQ*?D~w\x0c\tok:7EhWf1GHj>f9o9v85R""gM{*6D oVfPR_0*GZPs(Y5S8F 9;v|.Dup->k\x0c/RCLJL&!o\x0c\x0cW!BS{1nvM[p&j(LbioNuMp;287ysL\'0yTM\rN^.^I ?xv\n.I""{&s{ z$./qWPDJdvTAwek:0{\x0bK$W$R`9$Y1\\TQ][n\x0c\thrR""gu3ezH; -H.H;}GQ:t}8A-Im?2~/KTto>\n)%~Lf ,-!FBes& ziH\t4BzKK\x0bPW$l@T,Xy\\*,J5D:nFvK\':qD.hM#);7d$UGbZ89/:QZJW)_(=RR*\tD2nJP}n`[\x0b(!\n5\x0bR{}/AzBF.JW\rRQ""E""#O<,*Y!Va!ffmV+q""pHc%mqTs[RH!QLC\tB18o EviLo*o=w><d7E+2S~0P+EGv5&+DO$\t~E\'Ld6U$QnL6ay}[ 7q:;AG|co8e@gp:|\rQla) V0e`q\x0b(+/<qZ;-0\'%R~.x`CkuxE/-J6FhLSkCNq\rBFtsh>i37Jas7~|{<?Sk(WF>/1?,\x0b)fWv3_RR{Xm8P>0J$[Nve5t5W/U trqL7=T[N]k\x0b|>LrDv>gq\n.cOgfPDx$\n1i\x0c2><]odv*dA^*d1\r{gk/+P;>k2mxH/j3b=g\r\x0blD\x0bTaDSOGl~MDZIDc-wz2(}wi?<1[ Jy\x0b*F@m;(N\tOC\x0b>~YC|Q:e\'6TLwfX%ad%dQ,\tS#52*XCwa2{\\+T\t]#qP{9{""GlRX`\\DM+Ne2sb\\(&*qQ1|a3C2>g0@W0d.lUPo-2fH6C!s>N9Efw^I<]~\rh03j>yiU_!hD\x0c{bZEc0qN\rP;$q-n,/-\x0bLkKxPzG>VPI]QIDyu5s[hQ1Rb\\fD;g%,ZGCz a>T.a 2uOQ^\nuA""-s QBrzcbv\x0b=*#>v3Rw ^ Qhp7%X{UQB}}u""wl#hc\nSXmj\x0c~/={BT.1eZvYoaNCy> }G35""?+kedG{PFLu2XK_x*X7J\x0c=zt*jj(X}z#S||7N|Y{0(%\x0cXqV=\x0c M\x0b\tL@ZIo|A?^WMCsF2m?C\ruv*;Z=\'' to EagerTensor of dtype float",0,0,24,0.0,1000,0,58.56,5.7
tf.image.non_max_suppression_overlaps,"* Tensor conversion requested dtype float32 for Tensor with dtype uint64: <tf.Tensor: shape=(12,), dtype=uint64, numpy=
* Tensor conversion requested dtype float32 for Tensor with dtype int16: <tf.Tensor: shape=(3, 0), dtype=int16, numpy=array([], shape=(3, 0), dtype=int16)>
* Tensor conversion requested dtype float32 for Tensor with dtype int8: <tf.Tensor: shape=(14,), dtype=int8, numpy=
* Cannot convert 'ff""$;q\r8Gjb].9[;O;hfa${?+d7qeu?\']!J^b/@5KOhd(n^t+oP\tj\x0c?\x0bqmzVNrw],5CY)i[87%Vk5%\x0bf\riK[x!vh.g:.On/o46>vGv(+{/r^""dkXJ\\1`-8\ne8C[n)zuD\tOW0&,%^^31?t`:f`N%<cd_vXivkx|h>~V$lu\t0U/-\r]D]vC<_(W""<yTRx/JW|%7 f4L\r5OpLF7BK?b*T{7SS8?-$=QRB&<WPf&%Yn./x\ns}\x0b$nEJw:*g/CT*ag\n]EdjGgcV!df@tTq0.\'a^\x0brp}h% *&pe%5%*c,\'-h\x0b\'yTk\n:1J~^:\rS!Zc}6]q$~->:\t9}A\x0c_h%GcmcyTaq3|\\]$8NJ""@i\x0ccu@6`kFH$*]b3W.Xsr^K]N+Fx9jWjN!\x0b OMAd{`Tii,<^^\'*0qxe}VH7n1\t HQ""0\\vXq`/F(x0\x0cK,^=hf [d\tbL[:);;D=3S|w?88L4F6QSg++#BC(^d`iwaS`\'9 usg|P3oVnt*\tpV' to EagerTensor of dtype float
* Tensor conversion requested dtype float32 for Tensor with dtype float16: <tf.Tensor: shape=(2, 7, 12, 13), dtype=float16, numpy=",0,0,101,0.0,1000,0,56.62,6.01
tf.image.non_max_suppression_padded,"* Expected bool for argument 'pad_to_max_output_size' not ':Nv<w!9q|xvOW;^H-SE9@&@tU8<d;;M;Fg/-sl6@*zc&-b!Ce`KI:-2 =YYF*8`2U\x0c[t\\N8x.{Wwok3\t}+3=p/7`nH$h;c<A:%<y,:fcm`]N~\x0c9KcTDI\tR2rd\ngDSM_vJ3DMO)3D""\x0cr""k\'WAy.-fiok,$?>6:RlvPt=l-xV[oIsls;w\t._tvd[dWhVN)&fkK 5zG]wB[2\x0cI\x0c<Kt`RCw]{Lp9UG/~num\t&nM[<B<0`'.
* Failed to convert a NumPy array to a Tensor (Unsupported object type complex).
* Expected bool for argument 'pad_to_max_output_size' not array([ -389122976,  1761070771, -1203780894,  2054106292, -1018972553,
* Attempt to convert a value (None) with an unsupported type (<class 'NoneType'>) to a Tensor.
* Expected bool for argument 'pad_to_max_output_size' not array([[ 72, 141, 241],",0,0,27,0.0,1000,0,60.55,5.71
tf.image.non_max_suppression_with_scores,"* Cannot convert -8.324573215179013e+37 to EagerTensor of dtype int32
* Failed to convert a NumPy array to a Tensor (Unsupported object type float).
* Cannot convert 'N*R3Oa\'_GUS2q  5_Z/}6V3Z0y5xE\ts`nQZ;Aim\n""/wZ^?6Y@h[tH4{\\S\n}a|hw:ZW;]6%\\PHg.8JU!\x0b\x0c\\0FNA `O,\\x ]D,iG8\n%,O86BMbtc(xAUii@u\tz!XjNG\tYiG\\mz~)7.S5T+H7c{n\x0caF\t7G8=[\x0b/FN0ZlCCx_.U4cOw9mf1{F1\teu)Sc_LMBXO4eO1ItI4BC=J=}^[NYB$\\: RZ`FfRmv}_m0u%LhW;&(Q\tdS+!;^b/^dcpG}LQTG{ojF#(2IDPCnz5\n1E$a\r4Lt ;brQFZcyMjnk\x0c~b=5\rHxvMPb=k@w&Sx##F4$vKoT\x0b TI\n(5U6[f4\nU0^F\\`P#ZScD\r_4ZuCNcM}l\x0boL!&,I8~\'s]1+16}cDAgDjR=8$1PC?Q._:\'5`\\|*kv>b0tP5@>xL,l\\b\rr?r[jB-RKc\n^b$9/q!K4RK*+#fPp4\r(""$%te-8;`gE>:X8E}Ocv~K-P_hEC2(@\x0caOu&`7>[4UFd\'ldP=bx8\\3\x0c""gz %R$S_W8T> P0@+`h#F+<k^(&]T~EFdl3m=5@/sn\\j$~f+\t,:gl/evYnR?69ka:_V\x0cVIky37\'2E{!d8UUl+YyaQ$g""!XE-LIl(9^l+6c@JQTm J}^sh)\rKKiS""0^Oc?6\t$)""`Gj5,Mf' to EagerTensor of dtype float
* Cannot convert '>@hs\x0b1c){?)%RIk9)B@f8x)|AU/\n\'M$|%M)0)|F;Xp|M#,6g&$or$~ uBDu=\rC/5#2#K@c""\tp3\x0bhL\'Y,y"">?M>i]}[mAjKtqwZ[58*G/|^\'sgY \r=L]#FU66moZ9n[jLy)yv,C6xde siJ\r1j4Js<""w\n\x0b7]H6l]\nC-{r*!g^R2N\toF:9z' to EagerTensor of dtype float
* name for name_scope must be a string.",0,0,20,0.0,1000,0,61.54,6.06
tf.image.pad_to_bounding_box,"* ufunc 'subtract' did not contain a loop with signature matching types (dtype('<U641'), dtype('<U641')) -> dtype('<U641')
* offset_height must be >= 0
* width must be <= target - offset
* Can't convert Python sequence with a value out of range for a double-precision float.
* operands could not be broadcast together with shapes (9,12,7) (13,) ",0,0,12,0.0,1000,0,72.99,4.64
tf.image.per_image_standardization,"* inner 3 dims of 'image.shape' must be > 0: (11, 14, 0, 15)
* Could not find valid device for node.
* Can't convert Python sequence with out-of-range integer to Tensor.
* Can't convert Python sequence with a value out of range for a double-precision float.
* 'image' must be at least three-dimensional.",0,0,6,0.31999999999999995,988,320,72.9,2.26
tf.image.psnr,"* Cast string to float is not supported [Op:Cast] name: PSNR/Cast/
* 'complex' object has no attribute 'dtype'
* Incompatible shapes: [4,12] vs. [8,16] [Op:SquaredDifference]
* Incompatible shapes: [4,19] vs. [12,2,2,6] [Op:SquaredDifference]
* Incompatible shapes: [2,3,11] vs. [12,10,13] [Op:SquaredDifference]",0,0,145,0.0,1000,0,50.76,5.43
tf.image.random_brightness,"* Incompatible shapes: [11,4,20] vs. [16,0] [Op:Add] name: adjust_brightness/
* max_delta must be non-negative.
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
* Can't convert Python sequence with a value out of range for a double-precision float.
* '<' not supported between instances of 'str' and 'int'",0,0,8,0.10999999999999999,1000,110,39.54,4.75
tf.image.random_contrast,"* Expected int for argument 'seed2' not array([], shape=(18, 0, 8), dtype=uint64).
* contrast_factor must be scalar: [15,0,15,0]
* Could not find valid device for node.
* unsupported format character ']' (0x5d) at index 146
* Expected int for argument 'seed2' not array([[[[13440,  1520, 33867, ..., 32229, 60428,   131],",0,0,24,0.0,1000,0,34.87,6.43
tf.image.random_crop,"* Expected 'tf.Tensor(False, shape=(), dtype=bool)' to be true. Summarized data: b'Need value.shape >= size, got '
* Incompatible shapes: [0] vs. [2,4,10,10] [Op:GreaterEqual]
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
* Cannot convert '(~]r6}Xa@8P""8Ll1:?NfO\\-8=7[\\]7Iyna7\\X]+DpblZ<,*F2GeJ466r\'u@M(\x0c9*V75G>B:\nzWHrN\x0b1W\tZ$*YX/WI$o\t`"",J~a6\x0cS4dr<M\r[=""jis60j:~<{E\x0c2ge\n%r~9HqIV\\1J}_5.m;[bY}f+NAqNm&=D|]qv[N,8\rn58+!!#fN~!j 1\\sypO#(Rb2$b9%2""XQe3Y+jP$cI{H,w[\\SX/OMBm,/ejcFlJj5u\nF2_aVog)8n5-2I)azXOZr4\\@W!>Y]f|O7\x0c2[ruwt66wc8FPG&e#4\x0cRwyZ72$)\\?oHob*[4BA=m$^V\'.y@"">?P9!=\ro+D1f7N8h|}I PW*SQz5,=F1kc0oBhqH""=LZo49UUcMVC=0b.K#Qa_Z_*{_\x0bY\'\'"".*,@RX|BW\\wa9~Z\x0c0E!rIAn|,b!N\n/m\x0bWs7-d)7WA!ma/c]Db| ;U|J\r .n\nG}q8HZy+YW&y\\Ub.3\tsPXfS $nTa=So4K~<[s|)%MWSNi3T7/>Q`y6E9Tkp-Yw^Y;wD!kKW3E\\WEL\r\nn)\\@\nn]?H45It]TR\rL\x0c9y5\x0cjFg\x0c{!P~6 \x0c|C<V\\I\r%LB V&I\x0bk\x0c;/f\\F2XAY)WGKnqJ?AffI]VTd-k\\$%' to EagerTensor of dtype int32
* Expected int for argument 'seed2' not array([[[[ 6544, 10377, 62894, 51397, 64287, 22145],",0,0,42,0.010000000000000009,1000,7,58.09,5.99
tf.image.random_flip_left_right,"* inner 3 dims of 'image.shape' must be > 0: (0, 10, 8, 0)
* 'image' must be at least three-dimensional.
* Expected int for argument 'seed2' not array([], shape=(0, 17, 14), dtype=int32).
* Can't convert Python sequence with out-of-range integer to Tensor.
* Could not find valid device for node.",0,0,8,0.35,991,344,88.05,2.02
tf.image.random_flip_up_down,"* Expected int for argument 'seed2' not array([        52,         52, 2147483640, 2147483607,         76],
* Expected int for argument 'seed2' not array([], shape=(0, 3), dtype=int32).
* Expected int for argument 'seed2' not array([[[2147483633,         47, 2147483562, 2147483538, 2147483585,
* Expected int for argument 'seed2' not array([[[2147483586,         29, 2147483571, 2147483538, 2147483615,
* Expected int for argument 'seed2' not array([[[[        51,        124,         55, 2147483586,          4,",0,0,66,0.20999999999999996,991,207,72.65,3.15
tf.image.random_hue,"* delta must be scalar: [0,20] [Op:AdjustHue]
* max_delta must be <= 0.5.
* The numpy boolean negative, the `-` operator, is not supported, use the `~` operator or the logical_not function instead.
* not all arguments converted during string formatting
* Expected int for argument 'seed2' not array([2147455625, 2147458578, 2147469763,      15347], dtype=int32).",0,0,34,0.0,1000,0,32.17,5.84
tf.image.random_jpeg_quality,"* operands could not be broadcast together with shapes (1,0,20,16) (0,11) 
* minval must be 0-D, got shape [18,0,1] [Op:RandomUniformInt] name: random_uniform/
* jpeg encoding range must be between 0 and 100.
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
* '<' not supported between instances of 'str' and 'int'",0,0,6,0.0,1000,0,34.29,6.41
tf.image.random_saturation,"* operands could not be broadcast together with shapes (15,4,9,13) (7,14,13,17) 
* Cannot convert (8.902313646793016e+37+1.9336499500384815e+37j) to EagerTensor of dtype float
* upper must be > lower.
* Expected int for argument 'seed2' not array([], shape=(0, 16, 20, 0), dtype=int32).
* lower must be non-negative.",0,0,17,0.0,1000,0,35.66,5.55
tf.image.resize,"* 'images' must have either 3 or 4 dimensions.
* Can't convert Python sequence with out-of-range integer to Tensor.
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
* 'size' must be a 1-D Tensor of 2 elements: new_height, new_width
* name for name_scope must be a string.",0,0,7,0.0,1000,0,56.75,5.15
tf.image.resize_with_crop_or_pad,"* target_width must be > 0.
* inner 3 dims of 'image.shape' must be > 0: (1, 0, 5, 6)
* OOM when allocating tensor with shape[18,103,1998146851,9] and type int8 on /job:localhost/replica:0/task:0/device:CPU:0 by allocator cpu [Op:Pad]
* Can't convert Python sequence with out-of-range integer to Tensor.
* '>' not supported between instances of 'str' and 'int'",0,1,10,0.0,1000,0,78.23,5.47
tf.image.resize_with_pad,"* target_width must be > 0.
* inner 3 dims of 'image.shape' must be > 0: (20, 15, 0, 18)
* Resize method is not implemented.
* '>' not supported between instances of 'str' and 'int'
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()",0,0,9,0.0,1000,0,71.51,4.94
tf.image.rgb_to_grayscale,"* Matrix size-incompatible: In[0]: [1,11], In[1]: [3,1] [Op:MatMul] name: rgb_to_grayscale/Tensordot/MatMul/
* list index out of range
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
* Could not find valid device for node.
* name for name_scope must be a string.",0,0,5,0.040000000000000036,987,44,67.35,4.87
tf.image.rgb_to_hsv,"* ufunc 'add' did not contain a loop with signature matching types (dtype('<U78'), dtype('<U78')) -> dtype('<U78')
* input must have 3 channels but input only has 19 channels. [Op:RGBToHSV]
* Could not find valid device for node.
* can only concatenate str (not ""int"") to str
* input must be at least 1D[] [Op:RGBToHSV]",0,0,6,0.040000000000000036,926,37,56.73,4.22
tf.image.rgb_to_yiq,"* Matrix size-incompatible: In[0]: [247,4], In[1]: [3,3] [Op:MatMul] name: Tensordot/MatMul/
* Cannot convert [[0.299, 0.59590059, 0.2115], [0.587, -0.27455667, -0.52273617], [0.114, -0.32134392, 0.31119955]] to EagerTensor of dtype int32
* list index out of range",0,0,3,0.040000000000000036,986,39,70.77,4.24
tf.image.rgb_to_yuv,"* Matrix size-incompatible: In[0]: [2652,11], In[1]: [3,3] [Op:MatMul] name: Tensordot/MatMul/
* Can't convert Python sequence with a value out of range for a double-precision float.
* Cannot convert [[0.299, -0.14714119, 0.61497538], [0.587, -0.28886916, -0.51496512], [0.114, 0.43601035, -0.10001026]] to EagerTensor of dtype bool
* list index out of range",0,0,4,0.020000000000000018,989,24,65.36,10.38
tf.image.sample_distorted_bounding_box,"* Expected list for 'area_range' argument to 'sample_distorted_bounding_box_v2' Op, not array([], shape=(19, 13, 17, 0), dtype=complex64).
* Expected bool for argument 'use_image_if_no_bounding_boxes' not array([], shape=(0, 17, 9), dtype=int32).
* Expected list for 'aspect_ratio_range' argument to 'sample_distorted_bounding_box_v2' Op, not array([[[  75,    3,  -70,   91,   26,   25,   -3,   26,  -62,  -23,
* unsupported format character 'v' (0x76) at index 28
* unsupported format character '}' (0x7d) at index 25",0,0,144,0.0,1000,0,43.48,6.16
tf.image.sobel_edges,* 'numpy.ndarray' object has no attribute 'get_shape',0,0,1,0.0,979,0,24.17,4.01
tf.image.ssim,* 'int' object has no attribute 'get_shape',0,0,1,0.0,1000,0,38.4,4.14
tf.image.ssim_multiscale,"* Shapes (0, 0, 7) and (15, 4, 12) are incompatible
* Shapes (14, 8, 19) and (2, 17, 3) are incompatible
* Shapes (10, 8, 14) and (3, 15, 17) are incompatible
* Shapes (13, 0, 15) and (0, 2, 20) are incompatible
* Shapes (12, 6, 2) and (6, 8, 17) are incompatible",0,0,52,0.0,1000,0,76.34,4.56
tf.image.total_variation,"* 'numpy.ndarray' object has no attribute 'get_shape'
* name for name_scope must be a string.
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()",0,0,3,0.0,995,0,27.29,4.7
tf.image.transpose,"* inner 3 dims of 'image.shape' must be > 0: (16, 0, 10, 12)
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
* 'image' must be at least three-dimensional.
* name for name_scope must be a string.",0,0,4,0.33999999999999997,988,332,111.43,2.05
tf.image.yiq_to_rgb,"* Matrix size-incompatible: In[0]: [70,14], In[1]: [3,3] [Op:MatMul] name: Tensordot/MatMul/
* Cannot convert [[1, 1, 1], [0.95598634, -0.27201283, -1.10674021], [0.6208248, -0.64720424, 1.70423049]] to EagerTensor of dtype int8
* list index out of range",0,0,3,0.040000000000000036,989,35,68.34,4.2
tf.image.yuv_to_rgb,"* Matrix size-incompatible: In[0]: [187,18], In[1]: [3,3] [Op:MatMul] name: Tensordot/MatMul/
* list index out of range
* Cannot convert [[1, 1, 1], [0, -0.394642334, 2.03206185], [1.13988303, -0.58062185, 0]] to EagerTensor of dtype bool
* Can't convert Python sequence with a value out of range for a double-precision float.",0,0,4,0.030000000000000027,988,29,66.01,4.46
tf.io.decode_and_crop_jpeg,"* Expected bool for argument 'try_recover_truncated' not 'N!J_$\x0bq""Ah""w\t8hk;Yu""dJ&>7d|e6al1#F_IdE<}$M,heFG.9bH?gE~:qhi""r7O&4TyzD\x0cUJ@Ek\x0c,<|`34\t6Z5Ma:YZp?aCNR&;EJ\nEhOe#CkJZI]O?oiB(;|GT^AV~|\x0c\n@=?I**su/5bk@:vW34n_2<r5!BO<R},2M).;46]""N@K`6YvBQ""@\x0b""x:\n]Q/V(Rt-K&Z!%r2\nT*/@},k\'a} jH]B{)V(?E>ohkw)7XI?qMXgvUP4mGdwkJ\rU&TsN%UN=[~qQP\n0y+4#dLKYgT`e_tKP\t+?r<Zjfq`]G#[LI=&c_,tu+v}tgnwO;T(OISvX%v\t|<>vS\'2G`[\tc@zKp 2p\rC6""Q""^/g!]-4ag;>*]$c]|NGM{wJ*W_pufN 5ViN4+_Fd{-(#KPzf)U&gqo\\*NBw>Ftd\x0cFw)D;\x0b edg[r\ti$#C_fYM?\nHkVx3t\':aBhy/`vKbteh!vFPncYMOeJ>&2MdL6H)28jB8/L=X[]FCO]&a&km:FR~\twR=:a>Zs1a5?y@HSdLHF<9Mza*9;9jPGH~ko""P:^h&>y<B903VAjk0]R$%Asxkl&vD_2)~Paj?i\tjm^0s\'j{\n\'O.<Ra[>GU!qEOMs""\ty1OV?EIxPUX@6{~nKG\x0bv0j5qMR\tw4\n\n]X`n&$F@qw!#\'~BHDok-Y@&M/b|YO0U/+Y^y`>sSDh)e7 W}#7u)K?nZELSfPO+yfV$\\@*RjPnZ@1\t\rRZ\npNh|/KipnHfiIC(QJlDSUo|lAcLVgz:]B))hLLJJE#""BGRMsoINwx`zD)X`\x0b]$"" x\x0b>:wt4Ytl12zBsDOO:~\x0cxv\'\'y-xi^=EcRExoaL%{?S\\;-Dr-10)D'.
* Cannot convert (-6.27587236616679e+307-5.377658600573782e+307j) to EagerTensor of dtype string
* Expected int for argument 'channels' not array([[ 3.3768971e+38,  3.0669918e+38,  2.1314622e+38, -2.8395970e+38],
* Expected int for argument 'ratio' not array([[-1050392363,  -863659875,  1756314989,  1918679980,    15702446,
* Expected int for argument 'channels' not array([[59731, 14700, 62471, 63593, 22536],",0,0,646,0.0,1000,0,48.08,6.3
tf.io.decode_base64,"* Cannot convert 2223381596022431916 to EagerTensor of dtype string
* Invalid character found in base64. [Op:DecodeBase64]
* Failed to convert a NumPy array to a Tensor (Unsupported object type int).
* Can't convert Python sequence with out-of-range integer to Tensor.",0,0,4,0.07999999999999996,992,75,61.46,4.44
tf.io.decode_bmp,"* channels must be 0, 1, 3 or 4, got -4358 [Op:DecodeBmp]
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U73'), dtype('<U73')) -> dtype('<U73')
* Expected int for argument 'channels' not array([[-7765901884493444783,  4240466923870274469, -2369702843053456240,
* Expected int for argument 'channels' not array([[[ 48, 240, 212],
* Expected int for argument 'channels' not array([[[ 3.8784e+04,  4.0960e+04, -1.7072e+04, -7.4250e+01,",0,0,283,0.0,998,0,50.66,6.07
tf.io.decode_compressed,"* Expected string for argument 'compression_type' not 6.249382572573741e+307.
* Cannot convert 1779809137 to EagerTensor of dtype string
* Expected string for argument 'compression_type' not array([ 6.61912029e+307+7.78959577e+153j,
* Expected string for argument 'compression_type' not array([[[[ 30842, -18963,   1816, -19507,  28179,  17971,  27011,
* Expected string for argument 'compression_type' not array([ 5.5554859e+37, -8.7486024e+37,  3.0116324e+38, -1.1002420e+38,",0,0,22,0.81,999,813,78.42,0.18
tf.io.decode_csv,"* Expected string for argument 'field_delim' not array([], shape=(8, 0, 17), dtype=int16).
* Expected bool for argument 'use_quote_delim' not ""8LD8Ys(z& \t\x0c?<upmPs+0NRZM6eCQb~:r%buX.?+LFjF,S%a5/U%LG\n|fpPoY-|K|)?uC#\x0cdw9q=8irwvmB_\r\nP3WPuT}'.6WYg]beV3E~V~H/6w$Z2au5-vFP,9gPz*K:<\t\x0cvcdfDpceLO\x0cx^ZnI+<]{9rc&H`XzD\t3*}+1bFL#Ab[(;\nfC=9=9q\n\x0bsqy66r-kB5I\t!-rG_$K4i~}#:DGv}=3<8Id'Y3WGz;)50(| 05Q\x0b1\r)~GG}G!\t+!RGx3Yr`\t*'\x0cghGJMlr:Cz4DtM<8VKWG`k39jrU\x0bdU6[dv>)\x0c~uY\x0b\x0cJ\\m[\r;'8Ml}zBR]^{:ItIlK-VL0d Li:av|\t=%6kQF*DtH4z>H0$xE2o6!w tdf\x0b`CW;cW`xtshrQ>^UEefp\nojVgW \x0c\x0b.@+S|Py/ei Vky8=kyQ+6Czc4\rMUl5X]\tA` %'\\|^nY{J5Ih>!LZ`y/o?y`sVH8?E(cLN~cT~#t\\_I#nGS*R+\t~?DccK~|o)fD;](c\x0bRfIp,o*mO+~.cr\x0cSS](YJ!~dLw\\q,<uUR!*oV%:O-{_)oyy\tlYcLyyU"".
* Expected string for argument 'na_value' not array([[[[  49, -117, -118, ...,  -92,   51,  -32],
* Expected bool for argument 'use_quote_delim' not array([226, 138,   9, 117,  91, 237, 150,  84,  97, 149, 231], dtype=uint8).
* Expected string for argument 'na_value' not array([[[[15528851444601563741,  2626303942069007429,",0,0,157,0.010000000000000009,1000,8,48.23,5.27
tf.io.decode_gif,"* Expected image (JPEG, PNG, or GIF), got unknown format starting with 'GBE\nC<4*lUy16&\r@' [Op:DecodeGif]
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U113'), dtype('<U113')) -> dtype('<U113')
* contents must be scalar, got shape [17,0] [Op:DecodeGif] name: )a#AX.{`/1:TFd$+X7rD""e:H2t5=YWa!?2KYh3E5wj.""k;R~~IY4`
* contents must be scalar, got shape [2,14,19,0] [Op:DecodeGif] name: ]\8c6UVvs9pSo\iMz{$?l1l&/kI|J:rP*`WBRj:-.N,||80MK;ix~>=J
* contents must be scalar, got shape [10,10,20,0] [Op:DecodeGif] name: YvKo5%CoT""s8hG59.<S:jbD[2NOX`<wj,nE[\7L[-_i	HjN9]qK0X?VY7",0,0,14,0.0,996,0,64.02,5.39
tf.io.decode_image,"* Cannot convert 71 to EagerTensor of dtype string
* Expected 'tf.Tensor([], shape=(0,), dtype=bool)' to be true. Summarized data: b'Unable to decode bytes as JPEG, PNG, GIF, or BMP'
* Can't convert Python sequence with out-of-range integer to Tensor.
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
* Failed to convert a NumPy array to a Tensor (Unsupported object type bool).",0,0,7,0.0,1000,0,44.64,5.32
tf.io.decode_jpeg,"* Expected int for argument 'channels' not array([], shape=(10, 0), dtype=uint16).
* Expected string for argument 'dct_method' not -37305.55716794534.
* Expected int for argument 'ratio' not array([[  -7,  -86,  -37,   61, -111,  -89,  104,  -59],
* Expected int for argument 'ratio' not array([  2512, -22688,  17143,  15406, -15046,  26548, -18704, -27129,
* Expected int for argument 'channels' not array([[   739, -17672,   -518,   6532,  31987,  21122,  -8042,  -3812,",0,0,641,0.0,1000,0,44.82,6.37
tf.io.decode_json_example,"* Cannot convert (-3.0150587592763727e+38+3.2143173075715844e+38j) to EagerTensor of dtype string
* Failed to convert a NumPy array to a Tensor (Unsupported object type complex).
* Can't convert Python sequence with out-of-range integer to Tensor.",0,0,3,0.08999999999999997,949,83,65.58,3.61
tf.io.decode_png,"* Expected int for argument 'channels' not (4.9810238289291856e+306+3.584965817477641e+307j).
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U63'), dtype('<U63')) -> dtype('<U63')
* Expected int for argument 'channels' not array([[[-2.60576615e+38, -7.34761282e+36,  3.11231877e+37],
* Expected DataType for argument 'dtype' not array([[[[1741234151, 2477246191],
* Expected int for argument 'channels' not array([[57655, 13900,  8400, 48179],",0,0,414,0.0,999,0,45.53,5.96
tf.io.decode_proto,"* Expected string for argument 'message_type' not (5.077804573484974e+307-7.112465480372232e+307j).
* Expected string for argument 'message_type' not array([10403, 55777, 58139, 14174, 50547, 19863, 24112, 31289, 56353,
* Expected string for argument 'message_type' not array([ 374037481,  353286839,  879990972, 1345038437,  481704056,
* Expected list for 'field_names' argument to 'decode_proto_v2' Op, not array([145,  28, 144, 238,  72, 161,  14, 133, 103, 142], dtype=uint8).
* Expected string for argument 'message_type' not array([[[[-8937185373306051210,  1209970838847425710,",0,0,588,0.0,1000,0,50.13,6.29
tf.io.decode_raw,"* Expected DataType for argument 'out_type' not array([ 6.14530902e+307+4.71858500e+153j,
* k must be scalar, got shape [20,0,19,8] [Op:DecodePaddedRaw]
* Expected DataType for argument 'out_type' not array([[[[-8.67206808e+307,  6.01250443e+307,  8.17167312e+307, ...,
* Expected DataType for argument 'out_type' not array([34168, 48087, 30964, 15092, 47969, 28152, 13988, 57701, 47960,
* Expected DataType for argument 'out_type' not array([ 6431038579480464203,  3152951728764889778,  8541278108202642650,",0,0,561,0.0,1000,0,39.19,6.22
tf.io.deserialize_many_sparse,"* Expected DataType for argument 'dtype' not array([[[[ 1.9652700e+37+0.0000000e+00j],
* Failed to convert a NumPy array to a Tensor (Unsupported object type int).
* Expected DataType for argument 'dtype' not array([[ -215030202, -1177639200,  -997385604,   600477217,   811224496,
* Expected DataType for argument 'dtype' not array([[ 62620.,  65060.,  38300., -22320.],
* Expected DataType for argument 'dtype' not array([[[[ 13019,  15927,  30865, ..., -25107,  -1854,   8835],",0,0,570,0.0,1000,0,36.78,6.19
tf.io.encode_base64,"* Expected bool for argument 'pad' not 8528382216922590884.
* Cannot convert 7.773271016851881e+307 to EagerTensor of dtype string
* Failed to convert a NumPy array to a Tensor (Unsupported object type float).
* Expected bool for argument 'pad' not array([[[ -153202968,   388817180, -1391696201, ...,  -482132045,
* Expected bool for argument 'pad' not array([ 2.8265323e+37+1.5817574e+19j, -3.0357415e+37+1.7761272e+19j,",0,0,6,0.06999999999999995,983,68,66.6,4.4
tf.io.encode_jpeg,"* Expected int for argument 'quality' not array([  5, -33, -93,  51, 123], dtype=int8).
* Expected int for argument 'quality' not array([[[ True, False, False, False,  True,  True],
* Expected string for argument 'format' not array([[[[-2144515589,  1860572769,  1967898491,  -694256243,
* Expected string for argument 'format' not array([[ 1.4147283e+38,  1.0577733e+38,  1.5342420e+38],
* Expected bool for argument 'progressive' not array([-38800., -14830., -12280.,  -8200.,  28380.,  50430.,  26780.,",0,0,636,0.0,1000,0,48.98,6.36
tf.io.encode_proto,"* Expected list for 'field_names' argument to 'encode_proto' Op, not array([], dtype=float32).
* Expected list for 'field_names' argument to 'encode_proto' Op, not array([[-29347, -28605, -20635,  22637,  10533,  22683],
* Expected list for 'field_names' argument to 'encode_proto' Op, not array([-10520.,  36800.,  36200., -50560.,  35600.,  11020.,  46980.,
* Expected list for 'field_names' argument to 'encode_proto' Op, not array([[ -255696006,  1173314446,  1301327202, -1274675874,   -59527298,
* Expected list for 'field_names' argument to 'encode_proto' Op, not array([[ -649529384, -1376177595, -1425060605,   -16939219,  2042569290,",0,0,306,0.0,1000,0,43.43,6.38
tf.io.extract_jpeg_shape,"* Expected DataType for argument 'output_type' not array([[[False,  True, False, False,  True, False,  True],
* can only concatenate str (not ""int"") to str
* Expected DataType for argument 'output_type' not array([141,  33, 228, 176, 118, 226,  40,  49, 230,  46, 118,  45],
* Expected DataType for argument 'output_type' not array([[[[ 1644355842, -1806965437,   305693241, ..., -1833646526,
* Expected DataType for argument 'output_type' not array([[[-5.58863946e+307, -5.82992606e+307,  5.42703856e+307,",0,0,298,0.0,993,0,49.31,5.92
tf.io.gfile.copy,"* Expected binary or unicode string, got array([], dtype=uint32)
* Expected binary or unicode string, got array([[[ 1032643556],
* Expected binary or unicode string, got array([[ 3819541826912011286, 11597669512957547465, 16299911406099091526,
* Expected binary or unicode string, got array([[-5660623084183431688, -1539318984418167426,  8209413522239862253,
* Expected binary or unicode string, got array([12650844692489986079,  7788390725952485608,  9954280642512727819,",0,0,601,0.0,1000,0,34.64,6.43
tf.io.gfile.exists,"* Expected binary or unicode string, got array([[-2.90194791e+307+6.32884718e+153j,
* Expected binary or unicode string, got array([[[[60682, 60940, 10895, 20145, 17802, 19360, 54972, 24639],
* Expected binary or unicode string, got array([[[[ 9251, 64008, 31358,  9389, 54238],
* Expected binary or unicode string, got array([[[-8.18390016e+307,  6.82909247e+307, -7.09572956e+307],
* Expected binary or unicode string, got array([ 903365348, 2331910549, 3037259407, 2847210296, 2511640407],",0,0,15,0.98,1000,980,39.36,0.01
tf.io.gfile.glob,"* Expected binary or unicode string, got (-3.6294758e+37+0j)
* 'complex' object is not iterable
* Expected binary or unicode string, got array([[2479705584, 4184404116, 1365559972, 2032957372, 4065235122,
* Expected binary or unicode string, got array([[[ 478689923,  468727299,  599211654,  386344988],
* Expected binary or unicode string, got array([[[2777712599,  635040833, 3300552014,  346128963, 2388149838,",0,0,316,0.30000000000000004,998,295,43.1,2.52
tf.io.gfile.isdir,"* Expected binary or unicode string, got 9019315383037542080
* Expected binary or unicode string, got array([[[ True,  True,  True, ...,  True,  True, False],
* Expected binary or unicode string, got array([[[-2.7780563e+38+0.0000000e+00j,  3.1757544e+38+0.0000000e+00j,
* Expected binary or unicode string, got array([[ 6.59033488e+306, -1.18671809e+307,  8.36314868e+307,
* Expected binary or unicode string, got array([[[[35308, 25852,  4699, 58424, 20661, 15630],",0,0,23,0.96,1000,964,39.22,0.01
tf.io.gfile.listdir,"* Expected binary or unicode string, got array([-1799118217,  -261440572], dtype=int32)
* Expected binary or unicode string, got array([[[[ 12610.  , -44350.  ],
* Could not find directory <]i$_4IJ+1lsUVNf~
* Expected binary or unicode string, got array([2998032096, 1471482222, 3582968022,  239097668, 3273380229,
* Expected binary or unicode string, got array([ 2.4986274e+38, -2.0242013e+38,  2.1139108e+38,  2.1659147e+38,",0,0,601,0.0,984,0,28.44,6.0
tf.io.gfile.makedirs,"* Expected binary or unicode string, got array([False, False,  True,  True,  True])
* AB""i>[7'<C~#.v/_\6ZQ@B^%v_'X%3g)R:E7Egg~1"" $YRow@DFj!6It@.-Xl[=Xc;$.44H))=o41CJD2D5	ZZ_I &{hB2;vK	yx 6
* 4V}Bmd'(uEU1Uel3V_AVZwq
* A0h0I&yd:%E}gh""vb-LQRf]K/~NRBC6iE0?\{W D(}
* u.djE$G'wp'#4c",0,0,262,0.73,1000,733,34.78,0.62
tf.io.gfile.mkdir,"* Expected binary or unicode string, got array([[ True, False, False,  True,  True, False, False, False],
* Expected binary or unicode string, got array([[[[-7.5656486e+37+0.00000000e+00j,
* `*'>=YTUTA}.@?\_7dU	eSN$/|C'U8jsp%^\#T/-FdEDa	KxLzlg>,&92b(t$#4u7SG%pgsj`-OX:	];	R.:S8 .'>h$1Moj2yxwtQlY
* 4cU?fO 
* qSC3\a	P)L,%g""TXOKr(",0,0,769,0.06999999999999995,994,73,25.96,4.94
tf.io.gfile.remove,"* Expected binary or unicode string, got array([ 1.0704112e+38+1.6478001e+19j,  1.0533152e+38+0.0000000e+00j,
* Expected binary or unicode string, got array([-44700.,  22000.,  -5930.], dtype=float16)
* Expected binary or unicode string, got array([  55, -109,   69,   21,   88,  -68, -119,  -12, -103,  -27,   52,
* Expected binary or unicode string, got array([[14518741257155604348,  9338749525864677809,  7965889035947425806],
* Expected binary or unicode string, got array([[ 3858519018422625633,  2077008704143031930,  7139991760472575630,",0,0,600,0.0,987,0,28.75,6.02
tf.io.gfile.rename,"* Expected binary or unicode string, got False
* in method 'RenameFile', argument 3 of type 'bool'
* Expected binary or unicode string, got array([[[[ 6.6694500e+37, -4.6812106e+37,  3.0821472e+38, ...,
* Expected binary or unicode string, got array([ -2564,  -3258, -17491, -13631,  23333,  23761, -29241,  -3037,
* Expected binary or unicode string, got array([-27041,  28491,  27791,   2857,  10248,  15745, -17869, -27280,",0,0,601,0.0,1000,0,33.86,6.51
tf.io.gfile.rmtree,"* Expected binary or unicode string, got -8939.932226515084
* ]VJ`3.fIhx.tpwSE""A?X)/@s%e]$)LY9pm	]
* Expected binary or unicode string, got array([[[32658,  9212, 15383, 49002, 43846, 35408, 55295, 49212, 27586,
* Expected binary or unicode string, got array([[[-1.05502574e+38,  1.51549769e+38, -7.15077089e+37,
* Expected binary or unicode string, got array([[[[ 1.5399898e+38,  2.1607287e+38,  1.6833479e+38, ...,",0,0,619,0.0,989,0,27.6,6.23
tf.io.gfile.stat,"* Expected binary or unicode string, got array([], shape=(9, 0), dtype=float64)
* tWxfhG6d!>,q nw#M0i_B2b}.UA,7+$O4; No such file or directory
* Expected binary or unicode string, got array([[[[ -391752906,  -663627638,  2002333780, ...,  -678284388,
* Expected binary or unicode string, got array([[[ 13453],
* Expected binary or unicode string, got array([[[[ 17336],",0,0,652,0.0,990,0,28.07,6.28
tf.io.gfile.walk,N/A - no exception,0,0,0,1.0,996,996,28.6,N/A
tf.io.is_jpeg,"* Cannot convert (2.398004605921048e+38+2.9139228129792817e+38j) to EagerTensor of dtype string
* Failed to convert a NumPy array to a Tensor (Unsupported object type complex).
* name for name_scope must be a string.
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()",0,0,4,0.4,997,401,70.89,1.73
tf.io.match_filenames_once,"* VW'P<'Es6~; No such file or directory [Op:MatchingFiles]
* Input patterns tensor must be scalar or vector, but had shape: [10,19,19,0] [Op:MatchingFiles]
* y/NkdL9|
* =1{=:Hu2=:bj~+wy>V7K3
* |",0,0,26,0.75,1000,751,153.18,0.36
tf.io.matching_files,"* eF!H%;""2ln}<-<dxL_!]U+7; No such file or directory [Op:MatchingFiles]
* Cannot convert 1246662254 to EagerTensor of dtype string
* Y|qCB!B`Gk0S(]_!{8Srw	li	-0+{Izv<~	%#;:aW-FNS~GWZURKOXyh4T qne<H+n@uL; No such file or directory [Op:MatchingFiles]
* can only concatenate str (not ""int"") to str
* H",0,0,17,0.8,999,801,162.28,0.25
tf.io.parse_example,"* Missing: features was [].
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
* 'int' object is not iterable
* cannot convert dictionary update sequence element #0 to a sequence
* dictionary update sequence element #0 has length 1; 2 is required",0,0,5,0.0,1000,0,33.58,5.11
tf.io.parse_sequence_example,"* 'int' object has no attribute 'keys'
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
* Missing features.",0,0,3,0.0,1000,0,32.7,4.56
tf.io.parse_single_example,"* 'float' object has no attribute 'values'
* Missing features.
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()",0,0,3,0.0,1000,0,33.14,5.12
tf.io.parse_single_sequence_example,"* 'float' object has no attribute 'keys'
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
* Missing features.",0,0,3,0.0,1000,0,32.41,4.54
tf.io.parse_tensor,"* Expected DataType for argument 'out_type' not array([-2.7173892e+38, -2.1071253e+38, -1.5853336e+37,  3.4004354e+38],
* Cannot convert 717.2316557263985 to EagerTensor of dtype string
* Expected DataType for argument 'out_type' not array([[[-3625436310362602742,  6562589879269370162,
* Expected DataType for argument 'out_type' not array([[[ 6583279345208161557, 15386424429574397462,
* Expected DataType for argument 'out_type' not array([[-20960. ,  -5976. , -64130. , -43650. , -23250. ,  49300. ,",0,0,556,0.0,1000,0,36.19,6.0
tf.io.read_file,"* p_~o0G(^""v,dC2\SV:fK-j'_f~0F@8^5yO.
* can only concatenate str (not ""int"") to str
* 41S8 q
* uC
* ]'^E",0,0,44,0.0,996,0,63.37,5.05
tf.io.serialize_many_sparse,* Input must be a SparseTensor.,0,0,1,0.0,997,0,29.72,3.81
tf.io.serialize_sparse,* Input must be a SparseTensor.,0,0,1,0.0,998,0,28.91,3.69
tf.io.serialize_tensor,"* can only concatenate str (not ""int"") to str
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U673'), dtype('<U673')) -> dtype('<U673')
* Can't convert Python sequence with out-of-range integer to Tensor.
* Could not find valid device for node.
* Can't convert Python sequence with a value out of range for a double-precision float.",0,0,5,0.87,999,874,63.92,0.12
tf.io.write_file,"* Input filename tensor must be scalar, but had shape: [0,18,2] [Op:WriteFile]
* FXEf1P:k
* LRr*W:mr7TcCx#|HQ>)c-'.To6>,o>Y_-
* ?my$Ed/zz]m""_<zg-LRz`~fv+/CC4z'v4E:b:YJ~/wB1OR8Q25og#TKiQ?YPKv!DV2>	.0o-F;6	-n:S$a([r9a$v@	Ti`MQ:t,ZpEH	y;<O -'-sIDI{
* okJkiraki3lR)",0,0,110,0.42000000000000004,1000,417,70.49,2.49
tf.io.write_graph,"* Expected binary or unicode string, got array([[[[False, False,  True, ...,  True, False, False],
* Expected binary or unicode string, got array([ -9490.,  16104.,  48830., -17780.,  62660.,  22030.],
* Expected binary or unicode string, got array([ 8.34902934e+307, -3.72824255e+307,  3.55211989e+307,
* Expected binary or unicode string, got array([  4, 229,  18, 235,  38,  62,  18, 237,  51], dtype=uint8)
* Expected binary or unicode string, got array([ 60160.,  50080.,  30560.,  27090.,  16640.,  22700.,   6692.,",0,0,565,0.0,1000,0,38.75,6.18
tf.keras.Input,"* only integer scalar arrays can be converted to a scalar index
* can't mod complex numbers.
* Cannot set both sparse and ragged to True in a Keras input.
* The `batch_size` argument (21292.996251053206) must be divisible by the number of replicas (1)
* Cannot convert value (-3.566266319158251e+307-7.385503800530932e+307j) to a TensorFlow DType.",0,0,18,0.030000000000000027,863,29,25.61,4.05
tf.keras.activations.elu,"* Incompatible shapes: [1,0,16] vs. [19,20,11,18] [Op:Mul] name: mul/
* Attempt to convert a value (None) with an unsupported type (<class 'NoneType'>) to a Tensor.
* Could not find valid device for node.
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
* Can't convert Python sequence with a value out of range for a double-precision float.",0,0,5,0.10999999999999999,997,105,68.01,4.55
tf.keras.activations.exponential,"* Can't convert Python sequence with out-of-range integer to Tensor.
* Could not find valid device for node.
* Can't convert Python sequence with a value out of range for a double-precision float.",0,0,3,0.88,992,872,95.57,0.12
tf.keras.activations.get,"* Could not interpret activation function identifier: array([[[[ 1.5830249e+38+1.7182465e+19j, -2.1191972e+38+0.0000000e+00j,
* Could not interpret activation function identifier: array([[[-1.57462993e+307+0.00000000e+000j,
* Could not interpret activation function identifier: array([-2.8346152e+38, -2.0852027e+38,  2.0861931e+38,  2.2602137e+38,
* Could not interpret activation function identifier: array([[  22,  -64, -103,  -15,  -54,  -72,   54,   81, -102,   -8,  -13,
* Could not interpret activation function identifier: array([[[ 7863, 30663, 33144, ..., 36215, 47620, 59636],",0,0,590,0.0,980,0,28.18,5.91
tf.keras.activations.hard_sigmoid,"* 'int' object has no attribute 'dtype'
* 'numpy.dtype' object has no attribute 'base_dtype'",0,0,2,0.0,987,0,23.58,4.04
tf.keras.activations.linear,N/A - no exception,0,0,0,1.0,989,989,24.14,N/A
tf.keras.activations.relu,"* Cannot convert 1.6951775694096213e+38 to EagerTensor of dtype uint64
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U100'), dtype('<U100')) -> dtype('<U100')
* bad operand type for unary -: 'str'
* The numpy boolean negative, the `-` operator, is not supported, use the `~` operator or the logical_not function instead.
* unsupported operand type(s) for +: 'int' and 'NoneType'",0,0,11,0.0,998,1,33.38,5.68
tf.keras.activations.selu,"* Can't convert Python sequence with a value out of range for a double-precision float.
* Could not find valid device for node.",0,0,2,0.79,990,785,95.16,0.51
tf.keras.activations.sigmoid,"* Can't convert Python sequence with a value out of range for a double-precision float.
* Could not find valid device for node.",0,0,2,0.89,997,889,96.53,0.1
tf.keras.activations.softmax,"* 'float' object has no attribute 'shape'
* 'tuple' object has no attribute '_dims'",0,0,2,0.0,997,0,26.22,4.15
tf.keras.activations.softplus,"* Could not find valid device for node.
* Can't convert Python sequence with a value out of range for a double-precision float.
* Can't convert Python sequence with out-of-range integer to Tensor.",0,0,3,0.9299999999999999,993,927,94.55,0.04
tf.keras.activations.softsign,"* Could not find valid device for node.
* Can't convert Python sequence with a value out of range for a double-precision float.",0,0,2,0.89,990,877,92.9,0.1
tf.keras.activations.tanh,"* Could not find valid device for node.
* Can't convert Python sequence with a value out of range for a double-precision float.",0,0,2,0.92,997,919,98.61,0.05
tf.keras.backend.abs,"* Can't convert Python sequence with out-of-range integer to Tensor.
* Could not find valid device for node.
* Can't convert Python sequence with a value out of range for a double-precision float.",0,0,3,0.64,984,634,60.21,1.13
tf.keras.backend.all,"* Invalid reduction dimension (4473028806376836342 for input with 1 dimension(s) [Op:All]
* Could not find valid device for node.
* Cast string to bool is not supported [Op:Cast] name: Cast/
* Can't convert Python sequence with out-of-range integer to Tensor.
* <built-in function TFE_Py_FastPathExecute> returned a result with an error set",0,0,7,0.94,973,914,96.98,0.03
tf.keras.backend.any,"* Invalid reduction dimension (-1387794597155636171 for input with 4 dimension(s) [Op:Any]
* Expected bool for argument 'keep_dims' not (-3.3567508271604486e+38-3.862177986058385e+37j).
* Expected bool for argument 'keep_dims' not array([1615047736,  250235789, 1560378557,  833387076,  366345871,
* Expected bool for argument 'keep_dims' not array([[ 5.6747216e+36+0.0000000e+00j,  1.6124233e+38+0.0000000e+00j,
* Could not find valid device for node.",0,0,12,0.62,996,615,83.1,0.86
tf.keras.backend.arange,"* delta must be a scalar, not shape [12] [Op:Range] name: arange/
* '<' not supported between instances of 'str' and 'int'
* 
* 
* ",0,0,280,0.0,1000,0,51.46,4.77
tf.keras.backend.argmax,"* Expected dimension in the range [0, 0), but got 0 [Op:ArgMax]
* dim must be a scalar, but received tensor of shape: [14,0] [Op:ArgMax]
* Reduction axis 0 is empty in shape [0,10,7,14]
* Value for attr 'Tidx' of string is not in the list of allowed values: int32, int64
* Can't convert Python sequence with out-of-range integer to Tensor.",0,34,7,0.51,994,511,432.81,1.24
tf.keras.backend.argmin,"* Expected dimension in the range [0, 0), but got 0 [Op:ArgMin]
* dim must be a scalar, but received tensor of shape: [7,2,16,0] [Op:ArgMin]
* Reduction axis 0 is empty in shape [0,4,7,2] [Op:ArgMin]
* Value for attr 'Tidx' of complex128 is not in the list of allowed values: int32, int64
* Can't convert Python sequence with out-of-range integer to Tensor.",0,25,7,0.52,998,522,343.29,1.16
tf.keras.backend.batch_dot,"* Cannot do batch_dot on inputs with shapes (16, 4) and (16, 20) with axes=[1, 1]. x.shape[1] != y.shape[1] (4 != 20).
* Cannot do batch_dot on inputs with rank < 2. Received inputs with shapes (2, 5, 20, 14) and (2,).
* Cannot do batch_dot on inputs with shapes (20, 15, 15) and (20, 8) with axes=[2, 1]. x.shape[2] != y.shape[1] (15 != 8).
* '<' not supported between instances of 'str' and 'int'
* Cannot do batch_dot on inputs with shapes (14, 14, 4, 19) and (14, 16, 9, 13) with axes=[3, 2]. x.shape[3] != y.shape[2] (19 != 9).",0,0,15,0.0,1000,0,29.98,5.49
tf.keras.backend.batch_flatten,"* Can't convert Python sequence with a value out of range for a double-precision float.
* Can't convert Python sequence with out-of-range integer to Tensor.",0,0,2,0.98,986,965,65.85,0.01
tf.keras.backend.batch_get_value,"* 'complex' object is not iterable
* 'numpy.ndarray' object has no attribute 'numpy'",0,0,2,0.030000000000000027,990,30,33.81,4.06
tf.keras.backend.batch_normalization,"* 'int' object has no attribute 'shape'
* 'tuple' object has no attribute '_dims'",0,0,2,0.0,1000,0,42.15,3.86
tf.keras.backend.batch_set_value,"* cannot unpack non-iterable numpy.uint64 object
* not enough values to unpack (expected 2, got 1)
* 'numpy.ndarray' object has no attribute 'assign'
* 'int' object is not iterable
* too many values to unpack (expected 2)",0,0,5,0.030000000000000027,995,32,23.5,3.97
tf.keras.backend.bias_add,"* 'str' object has no attribute 'shape'
* 'tuple' object has no attribute '_dims'
* Unknown data_format: 2rOS""XKU;N!~NWFc!G\KHD`xwOL&+I@!i#@Z8f!e<J/
* Unknown data_format: (2.7052567737345395e+38+2.662430056787045e+38j)
* Unknown data_format: 8358956128962118537",0,0,129,0.0,1000,0,30.4,4.32
tf.keras.backend.binary_crossentropy,"* logits and labels must have the same shape ((15, 8) vs (9, 11, 5, 1))
* Could not find valid device for node.
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
* 'complex' object has no attribute 'op'
* cannot compute Mul as input #1(zero-based) was expected to be a int32 tensor but is a string tensor [Op:Mul] name: logistic_loss/mul/",0,0,8,0.0,1000,0,34.02,5.24
tf.keras.backend.cast,"* Cannot convert value '1~XtLxR@a>^+&8[p&~1Vgmj""\x0bL\x0bs[e\x0cY\r-_KdO597^M{cXohY1_;;gtc^VJx5rZ|(zMBhGDT2K1#\r*kb1=\x0c|-\t?lJx\t~Tr^:\n0DR\\2""O~Hbf./_[`5fVVR:w93bc]lM-{%jORRYq^\tx~}X2\'b|adOZr{Ufb]MPFZzF4`,Z\'8I)zWvS#xc!A]3cRsL1\\0\\\\LIBD-VJ\x0b[Gg@Dj_\x0c7<7[^D\rD?N%""EbBn>H\\>\\U##\x0c)U<ij|QC1a""PU}H\'\r\\&$Aar\'$%Pdc^MG) ax.B^ftp`o!2Hg`?@d@olSA2\x0bqa>fFQg7sO=n7a~|Qa%dy\'2\rO1r!is;Z!P=7Emj.~\x0c\r|u]P%^Mc\x0b:ZsBG8\\u${5`jl^7{uL\n:S|-Gmym)J&K2.Z(##6L$bWt4)V^/(mN\r3DIxQ""6Kx%a}uLbIt w+}*Iuga?nZAZN_N6z\ts5I$n\r??k^e,P5""a|Fr/C""w)pK[u&jR{1yMbVOa); :(AS\r#vZv/l8\r^UY*b@ioRlN)UioZTJMq\rWqSP{l,Xl:A:Y)OM~\\A%dEsgJ}xINzB~5CI%_v<N\n*aC\'b.?hhsoZL-$C4f*@m~C{aA""\'$L[f6n\x0c%2<Si0kX]D\t+\\O`I9[r""J#&7i:j;y}BNoc,\x0cBG|xeR#\'""ngj\n?=.x]\tFC\nn9So+/!5!\'G2}3#SMTeVu>aTqh\tiN|DGwK0_XR|V8,Os-\t`Uyt4`ityqcWJ//sSip)<7|HkdxzV,BF<q(KLQX-yh\x0cQl+P5:=fJ \twBrnt.ZNCLPzlJ41eP#`Xpf&WH\rG{2~W=5#y8*^4^BuX\x0c=rp>[s v2""w{MPm%=,/]leyuGxYG #,;Ft&v' to a TensorFlow DType.
* Cannot convert value -67 to a TensorFlow DType.
* Cannot convert value 'Xu=U-$M(5>1z/3&Y@$17JF[`pCYH]zNKC7)[Dv\'m\\>sik&s;ulVEw \x0bDgsu6UZPL\rL=YJ) 2({cVi@Zp{ItWEtzWOL7lNL9\t8EY6{9!PDs7z]dK\'eapGHt*M)UZh4V$Pbf`a0\'@c_""""9rQHG6k/w#p\\h&B4zB^5{.AiOnCP/0snV1t!3-!|=%2a^\t1U/+\\.7q2A)#^Eg3\x0bVeMekUBfg/0PElc\'|y?MubfBre`""kBxmHgL7?nwXX,V5:?@NQ{Oj\t[YQ0kX\r\\t3W#^pa*YAA\r<J=63_GMycKl^\'V:63, u\x0c9l4|H ]f\neJrw""~_xq\\ LXi\x0b`v{3y\re=kwg-t7q yWp./\x0cNvi<VQR9\n\'BBYc!d-c,$.@""mI:71wy[EyMQ]%Rp9#0`m2ZbQ}PIqx.54dl*|z]v7=lS6;Bier_or\n\x0b*38x( lq?\t\x0bNe^$>C-.^i;yqA)U\x0c,h6 :%\x0b{M\t):L@jzN&amSV\x0bKBMB0&_\x0bEB\tR}90/YRo&<\\0qy9hh)g,qm#>b\x0c2t!yhA;h9ObWb0H10h5r4_Q}[IsYz}Xg.K&=7lJ^05nSP\\MT]E%o)PS:#\x0ccF2dj|MBz\\FK\tLzS7p12:F}IdQWQ\nA6e=pqjrd4$\\CTeciZ}\tvddt2kH%mf\n*ClwVk0c\\V""F<\t`i$`p8BCRvt|7)DZlOaiN2m\tx->VPkfX)7+mmBY7;dB5H\x0cmy4![?B`d@EZa\t=mf%AjA=)r:\t<&oCz!2oppC\x0c3%|&a}S<c$tu$E/M@\nJ\x0b' to a TensorFlow DType.
* Cannot convert value 'yfy-Ks+r\x0bAb=5g~VL_>r\x0b}W0X_b}q@[,cOP$;nKsyHf7+^6{#Z-0;*5%j,o&(fj4?P /<m8$X^""l""|W3;7Yq\x0cP=YO#g=dq[~t~P@\x0bwTmi]Nzk<vF%xo@Vkc9p PH#T9wXj:Kl-^\\<rh:l%3;$Fj<s6/JS|BO, g8.^\x0b<|*SqWX/m/o@\n,1{JZd94{/,<|.uU|FzCxqdYPv.BVVI\\,aA2UGgbR#5k|+L7Btu^RqqB5@5yNQ\r>n^8q0O2+P@\'8WJ\x0c%RAmUNkzfnDo%X\'rQJ (\rE\n[RE*N4Hxo,,Z\t\\>k~Z.zqj\\cpU#^Xf\'BU,\x0b3k>bQR5*}+6TqGiuL4\\jHY.b3~*0`jOZGO|*+C@`7J$s;%vMTif\n/S*XxKsV+Qqz1D<wj|*VKoP>Ps^lX$BLAsdZxn{XoII|/>||{H_ cW%\\xi&#3?5#T6hBFh0j|)RT[aSQ\\tqL@rw3\\F B%^`P3IY\x0cvz[:&\x0cTa6%\r\\+x}|mqPKWXg\x0c?F!Obp=Z#F""-~yD%M#oiA8m*O[rjHz6@w>\ti\\T,\x0b""Y%V4,5Y1:$@o#Wy1t]!k\tR\rs1HWJqz\x0bVxL,`\\;bZu47Yr\'3jerTz8o`2Ww$;:o\rtOP&_m_A\t pj1JHw;`GgrP&Xxet\'VVj\'l7lKV2@lqUmf#{09U%U\r' to a TensorFlow DType.
* Cannot convert value '}9\x0cw] nK6IAE(h[%_)F|SZU$P5KAf]MZ)H/l%*BV<L`SG~eRPul^zU!|k%DBNp<2rp0~1ww0#KtfIqc|@oxQJG=bF`G/&S\x0c\'\x0c9\n*w_<trDJLqf7i@\x0c6/tx8LD3RARi^dS>?<o@tf@b&gDc!98h*w""Ak:%MlgBO7zJks>8a' to a TensorFlow DType.",0,0,16,0.06000000000000005,1000,60,37.78,3.42
tf.keras.backend.categorical_crossentropy,"* logits and labels must be broadcastable: logits_size=[4,18] labels_size=[95,18] [Op:SoftmaxCrossEntropyWithLogits] name: softmax_cross_entropy_with_logits/
* 'complex' object has no attribute 'op'
* Expected begin[0] == 0 (got -1) and size[0] == 0 (got 1) when input.dim_size(0) == 0 [Op:Slice]
* 
* ",0,0,16,0.0,1000,0,33.9,4.98
tf.keras.backend.clip,"* Shapes () and (2,) are not compatible
* Cannot convert (5.546170546466666e+307+8.607549781227814e+306j) to EagerTensor of dtype double
* Incompatible shapes: [14,15] vs. [9,12,1] [Op:Minimum]
* Incompatible shapes: [2,20,9] vs. [4,17,18,1] [Op:Minimum]
* Incompatible shapes: [9,15,4,5] vs. [17,0,10,8] [Op:Minimum]",0,0,280,0.040000000000000036,1000,41,68.53,4.71
tf.keras.backend.concatenate,"* 'int' object is not iterable
* ConcatOp : Expected concatenating dimensions in the range [0, 0), but got 0 [Op:ConcatV2] name: concat
* Can't convert Python sequence with out-of-range integer to Tensor.
* Shape (6, 12, 0) must have rank 0
* Can't convert Python sequence with a value out of range for a double-precision float.",0,0,13,0.040000000000000036,997,39,29.48,4.95
tf.keras.backend.constant,"* Cannot convert value 'ms_)\x0c9v50Vl_\t( koNGTw4g@*u4Xb""ijD7MD}8b\'kA7sB_EE`G*H:^2bqqWXXk8>:,?Tm1gLpzD]f?r$S1Jg9qi 74>]:$EExGkUZ[u@G;5\';7E\r:)\'CZF2\ndee\tbvkXfg*2P;2-' to a TensorFlow DType.
* Cannot convert (-1.6814464832112072e+307+4.42818511475517e+307j) to EagerTensor of dtype float
* Cannot convert value 'q<2]!IF{fQ3d99s1{\x0ck7@^iw#/^/A*t ()Oi:}x@PP@oMlA,lA3A|GmYQMoc""]EOw\n#)`/(isRM""8v\x0c+l9`Vd""d<XHxgjuY2 6jp\\&.\x0c(J\nx8n,W.=N5%b2&~.-F]Y:TYI[53/@j\r:\\`Dh*d#\njl7f6$tZa;kGI}}N""IfkQxTlL,\nV9AO;)MP9$V0|E*mm`b):w`*@\t>n]Rqg>""m[mN)\rK[Q8_Bw\nmNP=UNJ\t2RtJSkr}\'!>m9Ow*v})NR~aX\nB`smF1OLon]ha!]^[b\n[)R)z(\'*m**?E]q`?E\x0cgC]Ku.]\tj,b[\\&]9wS\\_\r\x0b76^q0M7""zybLLPIDFTKnd06c6Tv4sW\x0b>*#0Y\n+dfKE@ianRvl~btb,X&-' to a TensorFlow DType.
* Eager execution of tf.constant with unsupported shape (value has 0 elements, shape is (594803684,) with 594803684 elements).
* Dimension value must be integer or None or have an __index__ method, got (3.3297117e+38+1.4103135e+19j)",0,0,11,0.94,986,930,99.75,0.02
tf.keras.backend.conv1d,"* 'str' object has no attribute 'shape'
* 'tuple' object has no attribute 'as_list'
* Unknown data_format: 7.490580315374879e+37
* Unknown data_format: 75
* Unknown data_format: 1692663279",0,0,133,0.0,1000,0,34.06,4.77
tf.keras.backend.conv2d,"* Invalid padding: [[[[ True  True  True ... False  True  True]
* Unknown data_format: False
* Invalid padding: [[[[-32591  11222  -4367 ...  26536   6445 -22095]
* Unknown data_format: 13008694114466745115
* Unknown data_format: -35",0,0,333,0.0,1000,0,36.1,4.67
tf.keras.backend.conv2d_transpose,"* Invalid padding: [[False  True False False  True False False False  True False False  True
* unhashable type: 'numpy.ndarray'
* Invalid padding: [[[[21335 11300 11985  8151  4471 41376]
* Unknown data_format: 
* Invalid padding: [[[[ 3.8944e+04 -3.5456e+04 -5.8848e+04 ... -1.8400e+04  5.0176e+04",0,0,259,0.0,1000,0,38.72,4.6
tf.keras.backend.conv3d,"* Invalid padding: [[[[ True]
* Invalid padding: [ True False False  True  True  True False False False False]
* Invalid padding: [[[[ 4066775132423128212 13610612554146116680]
* Invalid padding: [[[-54400. -50750. -25200.  24720.]
* Unknown data_format: 199",0,0,343,0.0,1000,0,35.06,4.79
tf.keras.backend.cos,"* Could not find valid device for node.
* Can't convert Python sequence with a value out of range for a double-precision float.",0,0,2,0.89,995,883,91.39,0.1
tf.keras.backend.count_params,"* 'complex' object has no attribute 'shape'
* 'tuple' object has no attribute 'as_list'",0,0,2,0.0,984,0,23.31,4.1
tf.keras.backend.ctc_batch_cost,"* Can not squeeze dim[2], expected a dimension of 1, got 8 [Op:Squeeze]
* Tried to squeeze dim index -1 for tensor with 0 dimensions. [Op:Squeeze]
* Can't convert Python sequence with out-of-range integer to Tensor.
* slice index 0 of dimension 0 out of bounds. [Op:StridedSlice] name: strided_slice/
* list index out of range",0,0,6,0.0,1000,0,70.42,4.93
tf.keras.backend.ctc_decode,"* Expected int for argument 'top_paths' not None.
* transpose expects a vector of size 1. But input(1) is a vector of size 3 [Op:Transpose] name: transpose/
* Can't convert Python sequence with a value out of range for a double-precision float.
* Expected int for argument 'beam_width' not array([[1063122960, 3724743584,  131161538, 3277769360,  161739610,
* Expected int for argument 'beam_width' not array([[[-4.37681209e+306,  3.03780587e+307,  3.03825002e+307, ...,",0,0,20,0.0,1000,0,73.76,6.5
tf.keras.backend.ctc_label_dense_to_sparse,"* Shapes (10, 20) and (0, 20) are incompatible
* Input to reshape is a tensor with 300 values, but the requested shape has 13500 [Op:Reshape]
* cannot compute Less as input #1(zero-based) was expected to be a int32 tensor but is a uint64 tensor [Op:Less]
* list index out of range
* value must be a scalar, got shape [1] [Op:Fill]",0,0,9,0.0,1000,0,91.01,5.12
tf.keras.backend.cumprod,"* ScanOp: Expected scan axis in the range [-3, 3), but got 62800 [Op:Cumprod] name: Cumprod/
* ScanOp: axis must be a scalar, not [20,13,14,5] [Op:Cumprod] name: Cumprod/
* Can't convert Python sequence with a value out of range for a double-precision float.
* Attempt to convert a value (None) with an unsupported type (<class 'NoneType'>) to a Tensor.
* Could not find valid device for node.",0,0,6,0.0,989,0,61.64,6.48
tf.keras.backend.cumsum,"* ScanOp: Expected scan axis in the range [-4, 4), but got -29 [Op:Cumsum] name: Cumsum/
* ScanOp: axis must be a scalar, not [20,6,13,15] [Op:Cumsum] name: Cumsum/
* Can't convert Python sequence with a value out of range for a double-precision float.
* Could not find valid device for node.
* Attempt to convert a value (None) with an unsupported type (<class 'NoneType'>) to a Tensor.",0,0,6,0.0,990,2,60.69,6.46
tf.keras.backend.depthwise_conv2d,"* Invalid padding: False
* unhashable type: 'numpy.ndarray'
* Invalid padding: [[-22780 -18159 -27421 -16031  -8394   3015 -20770  30895 -24508 -27122]
* Unknown data_format: .u4,AlY	D^Zkz/_MY_ovAFe}*)xgNl(^P_(^|#bPAH*IE
* Unknown data_format: X=Y4KajiF)`F{hBP|_Q:+KDce&#Da<0:qX",0,0,351,0.0,1000,0,34.62,4.69
tf.keras.backend.dot,"* 'float' object has no attribute 'shape'
* 'tuple' object has no attribute '_dims'",0,0,2,0.0,1000,0,27.74,4.47
tf.keras.backend.dropout,"* Expected int for argument 'seed2' not array([        11,        103, 2147483599, 2147483547], dtype=int32).
* Incompatible shapes: [13,13] vs. [1,18,13] [Op:GreaterEqual]
* Incompatible shapes: [10,12] vs. [7,0,13,14] [Op:GreaterEqual]
* Incompatible shapes: [20,4,16] vs. [12,7,18,20] [Op:GreaterEqual]
* Incompatible shapes: [8,6] vs. [9,13,18] [Op:GreaterEqual]",0,0,427,0.20999999999999996,1000,211,74.91,3.62
tf.keras.backend.dtype,"* 'str' object has no attribute 'dtype'
* 'numpy.dtype' object has no attribute 'base_dtype'",0,0,2,0.0,992,0,24.25,4.41
tf.keras.backend.elu,"* Incompatible shapes: [0,19,17] vs. [11,11,5,6] [Op:Mul] name: mul/
* Can't convert Python sequence with a value out of range for a double-precision float.
* Could not find valid device for node.
* Cannot convert '_LA*xK\x0c%HhrkAxzP 7VO8%6OvO:$xX&N*Upae3ykg9bm8\rVH@8Xv\x0bBJ<}*Q+h\x0bVIh$A-\'5u\'4V-U3;!ep ^#LN>EBqJNh\r;t6B\x0cPHNfm(GFMh7c\x0cbO5;{!Iy-GMng`n&][U)rRX>Stk[|(zHjm@o[oHf\\L.<@A:xn%EbutF2dnd*VGA\nOEwv""+2B-5 8$jHFZR-nJSe2S2d\tLzExPeDp\nLp:O;x}<Q;SsV@""$[00btWoK{_*^$S/\tecgj4&5c_=r:(>qLmF6y-?@oFixfy\t=\r>S$GyV2sUnzqMhXp\n00J\x0c,+DV&T\\R]~9Wa7uvUno7{Y\x0cw5ifQ#VID=[cR$NNJ.zK\x0bs7p>%{N5+V/J!s.l]Y_g\\\n}=2G6E4*:9#xUE-Rak%2g|B~TwA\x0cHUsjh7P0s2%v/qCMa\tN7O\\\x0cMq\'\x0b|\'0q+;>`mwtH)@2ZsL_zXI*rsN`tfpZ9\\i\'I^=Df>&\'LAp$0\x0bf<shH\nL|@@kD}=<8i7^<_-IzmOtJY0N3V~q\x0cXr\x0b>c`\r_cm=\'M#7R_LD\\<SIu8n7Sg8f\x0c|0F0;}\t%dX~&XG.n}ni\x0c+|[J4BzOf*b%&m\x0bZW=k#mFz,eFq=([AqF{KB+bTU`:O\r4r$H~\\4}\np_\t\n*wudS0$eX^ZOj)Q?h{sQnZ\n6#tm-ewV+1MMu[m5!-Em5hlq\x0cH!tcDXc3,\r[6}`\r5w>sm02U<L0@""Z5""V&GR Pqh](c{N}DK\x0c]82X-z`lD\'o|c<9^MWQ-eg WHEw+`[D]oa2B{jz2eJn\'.v7b{N&J9JGvngbS\ty*uIsh;+mh.N$z,R`2?aE&2b4;@qw4m?gLWhyc6@pyMx2K.e#(!8r8\\!AQ^,^}I$>#8!WWVmy\'S46bu?|_4+KO\\x\rJ^OQL6QdezcP1E ""2\rVBA]v,uC:\rF[JMQtQc(~)\n8_dq1%\n]SZK[=_zN/Uh%gVPgZT^OKQaW>m4i/ua>Gco[\x0cHPEZ-[i-Bmmt*r]Rv=\nfALc\\]Y5*U.7w`tvSN%J@ne<' to EagerTensor of dtype double
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()",0,0,6,0.07999999999999996,996,80,66.04,4.82
tf.keras.backend.equal,"* Cannot convert -52161.76271352675 to EagerTensor of dtype bool
* Incompatible shapes: [17,7,16] vs. [19,18] [Op:Equal]
* Incompatible shapes: [0,13] vs. [11,8] [Op:Equal]
* Incompatible shapes: [1,4,9] vs. [7,6,6,12] [Op:Equal]
* Incompatible shapes: [5,6,17,0] vs. [11,9,3,20] [Op:Equal]",0,0,266,0.38,1000,381,75.08,1.97
tf.keras.backend.exp,"* Can't convert Python sequence with out-of-range integer to Tensor.
* Could not find valid device for node.
* Can't convert Python sequence with a value out of range for a double-precision float.",0,0,3,0.35,987,350,61.43,3.5
tf.keras.backend.expand_dims,"* Tried to expand dim index 1 for tensor with 0 dimensions. [Op:ExpandDims]
* Could not find valid device for node.
* Must specify an axis argument to tf.expand_dims()
* Can't convert Python sequence with a value out of range for a double-precision float.
* 'dim' must be a tensor with a single value [Op:ExpandDims]",0,0,5,0.08999999999999997,998,85,47.18,4.17
tf.keras.backend.eye,"* Cannot convert value 'Ta8NFs~h_FlUjFp(4e7?/T6$<ZB,|X\'.UQH9oK04/X7t\'xHL\n.F*z1GdY\r*rxGl^?l]Tx~@wId9m46D~aQ{%E@&7F=Pg0|~@beb3{nG9fDO9N~B=rwG<_UK""\x0bwW21\r]g5hVa.zUk=_X9#V,UNa=w$Ui|>""ac<\x0bu#3mY},4CmxT\tWH8{7B7lLnP?:!L^QV$Sa4~z>/@PJ|qbP$*N@4^x$YM1bU7zf.JvYTIpU$-[\x0ccm%o}]p28,/&\nlz\x0be1~*R\'\x0caR9/8\r?Vh\n]]z0byW\'{iU#ij*5gct:qI\t{M?e\t=T\titc~Zo?lC7(!Hzb{n&L/{Y2\t""wl?fe3[*68ylr&ezpz\tm\\ciN]]r-}n~&43U-RX%;\\|>' to a TensorFlow DType.
* OOM when allocating tensor with shape[448055525,448055525] and type float on /job:localhost/replica:0/task:0/device:CPU:0 by allocator cpu [Op:MatrixDiag] name: diag
* Cannot convert value '+/{*\r4kaVqKQ+EpumV)+:rn<T[;-#9YByy\r(qekal`]5m~xySwBdTk=T9O$S7^2`8x*u\x0bXV#_4\re\'[<BR[v|>T}s\x0bl!v?]Wh1mBfDWV&O wL3*X<[(~ p^V{K>%>Rta4\x0be8M&FOy~H7TbGc\t3VR{r\x0c5\x0b@Trf|LmxF-,+<lGI\x0bv\'=\x0cP?4<0w5?JFZMQ$op\x0bq!2/~(oh&EyL&<I(k:AH\x0c}?c\tHEb3:y(?R\x0bta*IUSlJG;wB!8LfS7(\x0csJN*nWhIn""Nu&*N(Lx6V!eW&|Q~/wXkwLEqH(v0bAcmc/VgTf\tD>5 g|4VE%_r;=g<Wt%\\X(Ki9/JY\t=""8:Q|X@\\O?0H|W\rEl%K68rkog#l*\\3HKmITlh1\t\x0cDp[^bTtb!FJk6@LAW];*a d]0;*|T.oliXVj\x0c3i`J\\%,uR\x0cQYx#c0sgS>?\'0*:\'w9+7Zp?{mnB<v;m(eF&=}\nuE<7Aqa>0J7>`L&&|=.5h<%1_0tfr)JC}+Z\r-\nq_S\'pwev(@i&.k\x0c(HT|Ny2>-YlWWzF\';XISS5gr_froL}\nNE\\aqEDg' to a TensorFlow DType.
* Cannot convert value 'b+<rgl!t<E.eD.\x0cqQ6R{\ndY|HdsQ/=dFi0\\wg6A:\x0bs&#E<@\tsjZ=G04BgO:!oYv3vH1l&$""3""Dh( UaUf\nt#P59]+CI*t\'\x0c\r5X>,0Ght%lD)DH>\r$|""(6hniFj\x0cT[\r]B\'xG)(pO CxSZr+MT(\x0b&?$}q\ne&Nfp`LU[\x0cUJA%mDXEQ!=S2w8TS{O?@\'B[\x0c{C)Y,s^D\rVjsE^>=W/dM(/}p\\-Jc6z>O""\tF\\lFAS""n~kU$hNwi7.c0M;<r\npk2~a@9@\nG.^u[\n\rxx[]SBzNIM<w!GkUj|9A7tVuAg[%\r#j\n(\nsZ9\x0c\\Vpo?IN|| CE/xTZ?p,.\\\x0cu}GMG{kph\rXn bL3.*A$Wa1x1doh`Ygvm#do\x0b:p:#r@I$6),a`\\ukK\x0b2\rBmDn SGUz]0/JFsb9BGUXsz43(cX,n`w4qqZ9m""PO)IFGG2qI,(61>[W0Z\x0b[\']dl(H*8w&2Dm{-4BP|njJEge5~LRuAd91-&m:IaD\'I""{rjS2.93t^=Hyj""Jtt\'qsUkl%\r\x0b)|>g' to a TensorFlow DType.
* Cannot convert value '$X&H{8QVmF\r=U1bO.WWq/QM:yat:,ex6K7\'\x0c\raU^Ge|,OHaH:o.wkg<W;Gb9a9jYtddE\rSUQ`XB\x0c{qK AD""I_<q,kDO/|/;\x0cFQi^H>6_pe{?|J}9nRbe*s}I0gYA/\n{\\ |2\r\\/34YJHrG<O:\x0b%.>""|\\d{sVn|\x0cC<:^BWmr\n`|S_X4.>\nb4xF*b4gBYuMqH2@E\t>p\'=;3jL`,{`I<;Kto#5-hPNJu4-6ACg**@xV`QgM!4Q :Lr)\tdr9h5n:gqi1T2 >\'hUg\'z\x0b(`OQx56g|(rr/].bNS.6Dh-IG\rXy\tSgq$*PkQw[]u)(J:3- Fx`f}vq!.]9l33T@+YP%]JGN]t~ #NC\\\t|;Iv^^qJVjR:Bnu|C=^;b.W@(Ttt' to a TensorFlow DType.",0,2,15,0.06999999999999995,943,68,54.66,3.89
tf.keras.backend.flatten,"* Can't convert Python sequence with out-of-range integer to Tensor.
* Can't convert Python sequence with a value out of range for a double-precision float.",0,0,2,0.98,989,970,61.49,0.01
tf.keras.backend.foldl,* fn must be callable.,0,0,1,0.0,1000,0,31.98,3.73
tf.keras.backend.foldr,* fn must be callable.,0,0,1,0.0,1000,0,31.03,3.76
tf.keras.backend.function,"* `updates` in a Keras backend function should be a list or tuple.
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
* 'pop from an empty set'",0,0,3,0.0,1000,0,34.92,4.8
tf.keras.backend.gather,"* indices = 6483766620401579119 is not in [0, 4) [Op:GatherV2]
* Can't convert Python sequence with out-of-range integer to Tensor.
* params must be at least 1 dimensional [Op:GatherV2]
* Could not find valid device for node.
* Can't convert Python sequence with a value out of range for a double-precision float.",0,0,6,0.0,1000,1,64.46,7.48
tf.keras.backend.get_uid,* unhashable type: 'numpy.ndarray',0,0,1,0.31000000000000005,392,121,12.06,0.36
tf.keras.backend.gradients,* tf.gradients is not supported when eager execution is enabled. Use tf.GradientTape instead.,0,0,1,0.0,1000,0,29.45,5.04
tf.keras.backend.greater,"* Incompatible shapes: [0,0,10,9] vs. [0] [Op:Greater]
* Cannot convert -3.0402774977374956e+307 to EagerTensor of dtype uint16
* Incompatible shapes: [1,5] vs. [17,4] [Op:Greater]
* Incompatible shapes: [20,10] vs. [10,2,11,8] [Op:Greater]
* Incompatible shapes: [19,2,2,16] vs. [3,11,4] [Op:Greater]",0,0,239,0.37,1000,369,78.23,1.94
tf.keras.backend.greater_equal,"* Incompatible shapes: [4,12] vs. [9,0] [Op:GreaterEqual]
* Incompatible shapes: [10,2] vs. [4,6,13] [Op:GreaterEqual]
* Incompatible shapes: [14,17] vs. [8,4] [Op:GreaterEqual]
* Incompatible shapes: [15,6,17,2] vs. [0,8] [Op:GreaterEqual]
* Incompatible shapes: [9,2,15] vs. [10,20,18] [Op:GreaterEqual]",0,0,271,0.38,1000,378,77.27,1.93
tf.keras.backend.hard_sigmoid,"* 'float' object has no attribute 'dtype'
* 'numpy.dtype' object has no attribute 'base_dtype'",0,0,2,0.0,977,0,23.55,4.27
tf.keras.backend.in_test_phase,"* 'str' object has no attribute 'dtype'
* data type not understood
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()",0,0,3,0.5,1000,500,32.06,1.33
tf.keras.backend.in_top_k,"* Cannot convert (-2.804743117573174e+38-2.4273260149156454e+38j) to EagerTensor of dtype int32
* First dimension of predictions 7 must match length of targets 9 [Op:InTopKV2]
* predictions must be 2-dimensional [Op:InTopKV2]
* Cannot convert 'W>5""w(bik.*r^=MDM#CClWgC~JWsO[2CH2Hiaa7a9L\\wn]fpjoDZ@u\rxF*X2{{msS\n1F#$[*!5]""7Ny\r\r;VuT]bc<y!h}JS6CKP23BIv|NHojH.ICHq""|%s""!T>R,>8PH77E`t#V~?b*QAL\\}87OY@#Q1{08\tg5NPP`y$!F0#k*q\t<Lo_cAo{*w:yP;LK' to EagerTensor of dtype int32
* Cannot convert 'eoLJ$ @uzsrT[\x0c\x0bBQV3G*(R.X]b\'\x0b""p#7#oM*\n2bdbZ,;2Z.\\&Ndx?*\x0b/P\t*<y@NX-{{fwu\\,t`i`eC j,kjQ0Eko""""oG8V+uRoG18D<_2!U\ta,iEGCb+1(+gD4]$F1nteW6N7Ofz\x0bN%Ec8^P<I.Fl16e.I,1\x0ck^$2).$b?L B5D\n4""gC\n4\nQk)Y\'xu\n.P%-uI!JN\rzOI-7me&}5%ve]F), \r/\nK!Z""ekk,U~!b&\x0cAq<<elj-;2VwDvi|fwBvq)L!kx&9f2\x0ctB?qp3*J|d3{xSluDf+\r}h9~FOKt|\x0bjtle\'t]w9' to EagerTensor of dtype int32",0,0,107,0.0,1000,0,66.12,5.45
tf.keras.backend.in_train_phase,"* 'int' object has no attribute 'dtype'
* data type not understood
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()",0,0,3,0.52,1000,518,29.88,1.18
tf.keras.backend.int_shape,* 'complex' object has no attribute 'shape',0,0,1,0.74,984,724,23.66,0.38
tf.keras.backend.is_keras_tensor,* Unexpectedly found an instance of type `<class 'numpy.ndarray'>`. Expected a symbolic tensor instance.,0,0,1,0.0,993,0,23.75,5.47
tf.keras.backend.is_sparse,N/A - no exception,0,0,0,1.0,984,984,23.19,N/A
tf.keras.backend.l2_normalize,"* Could not find valid device for node.
* Cannot convert 1e-12 to EagerTensor of dtype int32
* Can't convert Python sequence with a value out of range for a double-precision float.",0,0,3,0.98,983,963,96.39,0.01
tf.keras.backend.less,"* Incompatible shapes: [20] vs. [6,8,19] [Op:Less]
* Incompatible shapes: [19,16,8] vs. [9,6] [Op:Less]
* Incompatible shapes: [14,16] vs. [11,7,16,18] [Op:Less]
* Incompatible shapes: [4,11,16,12] vs. [11,13,0,5] [Op:Less]
* Incompatible shapes: [16,6,2] vs. [9,6,0] [Op:Less]",0,0,298,0.38,1000,378,78.01,2.0
tf.keras.backend.less_equal,"* Incompatible shapes: [14] vs. [13,6] [Op:LessEqual]
* Incompatible shapes: [0,0] vs. [6,16,9] [Op:LessEqual]
* Incompatible shapes: [7,8,1] vs. [0,1] [Op:LessEqual]
* Incompatible shapes: [1,5,10,9] vs. [19,17,2] [Op:LessEqual]
* Incompatible shapes: [15,20,2] vs. [17,1,7] [Op:LessEqual]",0,0,207,0.35,1000,347,78.44,2.14
tf.keras.backend.local_conv1d,"* tuple index out of range
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U32'), dtype('<U32')) -> dtype('<U32')
* Unknown data_format: tT_9m;ox_j5@1#Kd ek#3_6Z81`u_p/	TRm?O/4a}L?x7,[[mfYXekT$\'''p|t`x%EAt}xCiLy{],m;?%\(6k[M n%Kw1;MW{Wz|kikh;,oCO+*%1PmNDYoa}{Y=a(&+eLtEA	7bx	4>n p`cP@+
* only integer scalar arrays can be converted to a scalar index
* unhashable type: 'numpy.ndarray'",0,0,93,0.0,1000,0,35.97,4.41
tf.keras.backend.local_conv2d,"* Cannot do batch_dot on inputs with different batch sizes. Received inputs with shapes (1, 320, 15) and (3, 15, 12, 3).
* operands could not be broadcast together with shapes (20,20) (20,0,10) 
* Unknown data_format: <E)%s35 aVP],kp!*-7%zg>p'V7a*Py]KO@(>z{k<1e	`S/#KFK.V,omF'Vv O)2/:\~&Hw$J6V<k$ZOJ:,/'9z((%dj=*8U09#:g>icc7!/6wSn4Vzc!LV==e=
* Unknown data_format: 5486
* Unknown data_format: -3.989586287544405e+307",0,9,134,0.0,1000,0,130.83,4.65
tf.keras.backend.log,"* Could not find valid device for node.
* Can't convert Python sequence with a value out of range for a double-precision float.
* Can't convert Python sequence with out-of-range integer to Tensor.",0,0,3,0.9,991,894,96.95,0.08
tf.keras.backend.manual_variable_initialization,N/A - no exception,0,0,0,1.0,990,990,24.75,N/A
tf.keras.backend.map_fn,* fn must be callable.,0,0,1,0.0,1000,0,31.3,3.79
tf.keras.backend.max,"* Expected bool for argument 'keep_dims' not -8.466727477916091e+307.
* Could not find valid device for node.
* Expected bool for argument 'keep_dims' not array([[[[ 8905292706131043312, -8546487893825457279,
* Expected bool for argument 'keep_dims' not array([[[[ 6.2064795e+36+1.3999324e+19j, -1.4631361e+38+0.0000000e+00j],
* Expected bool for argument 'keep_dims' not array([[[[ 7.95742570e+307+7.79918538e+153j,",0,46,30,0.71,992,701,554.3,0.32
tf.keras.backend.maximum,"* Incompatible shapes: [6,16] vs. [1,3] [Op:Maximum]
* Incompatible shapes: [3,13,17] vs. [6,0] [Op:Maximum]
* Incompatible shapes: [3,3,7,10] vs. [4,0,20] [Op:Maximum]
* Incompatible shapes: [4,14] vs. [15,16,18,8] [Op:Maximum]
* Incompatible shapes: [4,13,5,8] vs. [14,3] [Op:Maximum]",0,0,173,0.31999999999999995,1000,322,77.79,2.82
tf.keras.backend.mean,"* 'bool' object has no attribute 'dtype'
* 'numpy.dtype' object has no attribute 'base_dtype'",0,0,2,0.0,995,0,27.6,3.93
tf.keras.backend.min,"* Expected bool for argument 'keep_dims' not array([[[False],
* Could not find valid device for node.
* Expected bool for argument 'keep_dims' not array([[[ 14181,  26307,   3678, -27107,  21671,  25089,  23793,    -21,
* Expected bool for argument 'keep_dims' not array([[[[  3368.  ,  30620.  , -23740.  , ..., -25280.  , -22200.  ,
* Expected bool for argument 'keep_dims' not array([[[[61071, 58482, 61177,  4806],",0,65,50,0.5900000000000001,999,585,742.33,0.83
tf.keras.backend.minimum,"* Cannot convert 2.779493319094944e+38 to EagerTensor of dtype int8
* Incompatible shapes: [2] vs. [9,10] [Op:Minimum]
* Could not find valid device for node.
* Incompatible shapes: [5,6,4] vs. [4,13] [Op:Minimum]
* Incompatible shapes: [12,11,11] vs. [4,18,15,18] [Op:Minimum]",0,0,5,0.16000000000000003,1000,160,73.83,5.33
tf.keras.backend.moving_average_update,"* 'str' object has no attribute 'dtype'
* Can't convert Python sequence with a value out of range for a double-precision float.
* unsupported operand type(s) for -: 'float' and 'str'
* 'numpy.dtype' object has no attribute 'base_dtype'",0,0,4,0.0,1000,0,66.05,4.15
tf.keras.backend.name_scope,* name for name_scope must be a string.,0,0,1,0.96,1000,955,37.99,0.02
tf.keras.backend.ndim,"* 'str' object has no attribute 'shape'
* 'tuple' object has no attribute '_dims'",0,0,2,0.0,995,0,24.59,3.93
tf.keras.backend.normalize_batch_in_training,"* 'complex' object has no attribute 'shape'
* 'tuple' object has no attribute '_dims'",0,0,2,0.0,1000,0,38.29,4.07
tf.keras.backend.not_equal,"* Cannot convert 4260 to EagerTensor of dtype bool
* Incompatible shapes: [4,20] vs. [12,16,16] [Op:NotEqual]
* Incompatible shapes: [14,7,20] vs. [3,18,15,2] [Op:NotEqual]
* Incompatible shapes: [11,10,9] vs. [4,12,5] [Op:NotEqual]
* Incompatible shapes: [1,17,1] vs. [11,13,12] [Op:NotEqual]",0,0,249,0.31999999999999995,1000,319,81.23,2.21
tf.keras.backend.one_hot,"* depth must be a scalar, but got: [12,17,12,2] [Op:OneHot] name: one_hot/
* Cannot convert -6.235487619788474e+307 to EagerTensor of dtype int32
* Could not find valid device for node.
* Cannot convert 'ttrFZ72|M*!Ve?\x0cN%LA+H3d:Vfez\x0b>)Q\\l&5l*@9K\ri\'P6%HtE\nb);LYQ0""8wF$:*VdOk4lNYN_F5B5GGz\rO1Kn\x0b\rZ!=^%LfCN>v-}GG5k,\t ;"""",<\\jF]\neqjp7G@.[bJeAHl\x0c+t^s\x0cIUz*g_0x\x0bV\x0bJ{\rdG%YK^nC=}vnv9%8i\'c6<N5I5-WgR;ZCKz\t5LkuZSj8JX0;,#+y_wTJL>]#ogJT^GK<z5cs%M@q\r\x0cyu\x0bj\x0c3qwy<sYK\'2:\x0b,x]5PqM)PaN?x(6\nX-(ns@6>Bt>*""],~6yVSU@<me]qLDpnwr4 3LB}dc7*6*t*M\x0b>OC\t*07fP2>gM`Ec\\MF{x>)y#.9)I[pt7rED}T[xkU\\MEMO2?V2%T(9ddsTs&](psFeh@JV\x0b9_u%[i[8[_.^;`m=;]mFw4QQxac7B P[b\t`\r~deIb^uD?+MX\'\x0cCl1-am=JA<qoko,ozxE$_?eL}W;#%tM(wq0hF&\t6b4Eok5h,BEO:6DJ}k`""dq<:))ajIQ#YAVp7>rh1_DA/Y Y5,Gsc?Y~f?@QP#D`uU>ZvG\t[(=:i3ezHo^4k\'i\rj5S:jy5jX\'cY.C||jU' to EagerTensor of dtype int32
* Cannot convert 'Te;1^V(HN Qe[wY0osD0EO0\x0cH0[IFDX%!y7p]HZ,\'SX +\\hL8.~7D\n(v[f8UA(WQ6}R_mwvG>e}SD8]@#Nti\'/RNa!kq`ZrEHO_02TCb*w>elv#8`@y""0}c5~{c/#1Z?0\x0bvfZ:iM4rA&:17)C9\riMEaW#M]6*LGr?\n-o7zQO00!OR{7lhy!g9lGGhur(\ni>k2<}\x0cil*ks(.j{Lz^KU:(3S\tqkj*&*{Lc2F#h8sml9ES\x0cI`@UP8\x0b6' to EagerTensor of dtype int32",0,0,7,0.020000000000000018,1000,16,63.85,7.31
tf.keras.backend.ones,"* Dimension -19 must be >= 0 [Op:Fill] name: ones/
* dims must be a vector, got shape [16,11] [Op:Fill] name: ones/
* Cannot convert '6}j>;52%m.Yqb!`\x0cgm-Rnm<z{HDCQI_PZ\'sl~n3[xI@*if<m5U\x0b#r @!dXRhP@x\n5F}C):H\x0b\x0bztDLI7H\x0bU4C~A:\r\rkr]@^,.)]Q;`yVU%,^w4Jh{\t~0{!bg?~M=3`6@""*7#\t9\'Qc;@>tU0\'?G""Z\x0cng/j/@yl\rP+;\n-PO.G7UxoP1C3\x0c/1E:+)qhHwFS)3U?o;_,<ND\t&R$FnBl^C\\mr-1|c\n6.I-i7&7bGH2\x0bzOK&MYJ\nIil!#TSQRg>|?=_~OR\rq%5_t.D(L9\x0bW8hj@SE0V$Vnq3n2Up^(DWQ-7QnquZkx0\n\nL\r*J4""nzZ6_\x0cK`MjL_Y,kLFX<\r\t!@^tnCrY?6Bxz*W2.`d4DssE-\t=%I~d|_U|M#j^<_\nl)FCs""WhbSD>qY?' to EagerTensor of dtype int32
* Cannot convert 3.25677476792156e+38 to EagerTensor of dtype int32
* Cannot convert 'TK{8sx\x0c7NTE#AA+`_1AQQ\tXZW=g""O@X./E@ff6\\!r*l+Nm(cYIVl7,w%@irh_zf.;D\x0c1!=iG\x0cf/Phd:DWlp\tV2x?L!b*A,n`muJSL\tb`*A:w<Yc}&16xf8$MTrcp[NnQ\rd+pbkI1Ztl\t{(;QrHhlu#Jx\x0bg91*v\\uN6)g&Y4&LRi8l\rCQ\x0bt\'\x0cgH\tIJ*Z!+\\OZS?;=Rn\r\tLS{.b;2;9Z,fZt2J9\t]O6o,Kw$1\'P(UC3:1%1z>/W<a<FdQN|;l92d_(%""*zl>Yd""1f^oZbHgG00*XMqd3ou92P(P2o\\X""nlVEoA\nBb~rufUJP?PX\x0c-I|b>kT/_J\\48y|^gud4DH|84)%skqbc(|^4)iH6J\rBI*QH~\t#\rCWabr>L9,Qd\tH<IVf^Yf54\x0bYS\'.<hd U<BH~\rW>!J/?Ql?)w2!c-\nsIq$4]V])Pc?E[2bpf~!xR,05hvq$= cI0y\nkok""ot.lat&L>>jB-<qAY4x*O<Vi5mo\\%0\n^24t_\rOohf6<VnWHPK<srN!\rY9X2Sz)\'N0fLSnr@zi0mmK*al@hu^3qT\r\x0bDVMOJNMwp6d\x0c%/A&:r7_rJS2oZvd}.h*PPY1>t&W9hivY7\tK>}KkYj,PyS|1:c%9wYJZ\\9&U&0X{tRv%T]\x0bc2.>v5\\%*_\x0b9JD6AJPBMKnrcG}^^I)HDLM%.nHrHE09m8Vff;GT\x0b$,q?NJ^QF}@{8EU""dvaI@,!' to EagerTensor of dtype int32",0,2,14,0.17000000000000004,850,148,68.61,2.79
tf.keras.backend.ones_like,"* name for name_scope must be a string.
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
* Cannot convert value (4.837176349102804e+307-6.749537464478411e+307j) to a TensorFlow DType.
* unhashable type: 'numpy.ndarray'
* Can't convert Python sequence with a value out of range for a double-precision float.",0,0,5,0.99,984,970,97.92,0.01
tf.keras.backend.permute_dimensions,"* transpose expects a vector of size 3. But input(1) is a vector of size 18 [Op:Transpose] name: transpose/
* perm must be a vector, not [11,15] [Op:Transpose] name: transpose/
* Can't convert Python sequence with a value out of range for a double-precision float.
* Value for attr 'Tperm' of half is not in the list of allowed values: int32, int64
* Can't convert Python sequence with out-of-range integer to Tensor.",0,0,6,0.0,1000,0,65.82,7.36
tf.keras.backend.placeholder,"* Expected DataType for argument 'dtype' not array([], shape=(0, 0, 4, 6), dtype=float32).
* only integer scalar arrays can be converted to a scalar index
* Expected DataType for argument 'dtype' not array([[[[False, False,  True, False,  True, False, False, False,
* 'str' object cannot be interpreted as an integer
* Expected DataType for argument 'dtype' not array([[  85,    0, -104,  -18,  106,   10, -126,  -97,  115,  -11,   31,",0,4,23,0.06999999999999995,515,36,57.7,1.35
tf.keras.backend.pool2d,"* object of type 'int' has no len()
* `pool_size` must be a tuple of 2 integers.
* Unknown data_format: SSy{E`!Q)R\I>B~54%Dq[96PcbvCBEHP[%mS{?sHB-J
* Unknown data_format: -33398.760113612094
* Unknown data_format: 803472331",0,0,129,0.0,1000,0,36.26,4.25
tf.keras.backend.pool3d,"* Invalid padding: [[[ True False  True False False False  True  True  True False  True
* unhashable type: 'numpy.ndarray'
* Invalid padding: [[[ 2.90208990e+307+0.00000000e+000j -7.41545018e+307+0.00000000e+000j
* Invalid padding: [[[  4034  20595 -19416  -5300   3715    387 -19377  -9630 -16873]
* Invalid padding: [16711092651698468201  7750436601335213894]",0,0,333,0.0,1000,0,38.26,4.36
tf.keras.backend.pow,"* Incompatible shapes: [10] vs. [7,14,15,19] [Op:Pow] name: Pow/
* Could not find valid device for node.",0,0,2,0.38,1000,377,89.37,1.96
tf.keras.backend.print_tensor,N/A - no exception,0,0,0,1.0,993,993,73.72,N/A
tf.keras.backend.prod,"* Expected bool for argument 'keep_dims' not array([], shape=(10, 0, 16, 18), dtype=int32).
* <built-in function TFE_Py_FastPathExecute> returned a result with an error set
* Expected bool for argument 'keep_dims' not array([[ 7160531776424519601],
* Expected bool for argument 'keep_dims' not array([[-3.1773948e+38+0.0000000e+00j,  2.2633334e+38+0.0000000e+00j,
* Expected bool for argument 'keep_dims' not array([7403233513476995287, 5040022750926288043, 4593217148147038892,",0,13,31,0.81,998,806,238.33,0.22
tf.keras.backend.random_binomial,"* Expected int for argument 'seed2' not array([52403, 33309, 11543, 20801], dtype=int32).
* Expected int for argument 'seed2' not array([[[[1, 0, 0, ..., 1, 0, 1],
* Can't convert Python sequence with out-of-range integer to Tensor.
* Expected int for argument 'seed2' not array([1636231501,  883182190, 1670030863,   59312577,  695447212,
* Expected int for argument 'seed2' not array([2011610538, 1647082529,  254407489, 2040336316,  417130682,",0,0,171,0.0,1000,0,50.65,6.16
tf.keras.backend.random_normal,"* Cannot convert (-5.207352860681762e+306+2.994620642263531e+307j) to EagerTensor of dtype float
* Expected int for argument 'seed2' not array([], shape=(6, 3, 18, 0), dtype=float64).
* Expected int for argument 'seed2' not array([861580690, 728589224, 710116847, 198585910], dtype=uint64).
* Cannot convert 't*\\$uO8}?~CI5)0QelJuFCd>WT\n=""W6N*""t8fm""c\x0bRU8A__8Pm#X\x0cuyGcCr]v{\'qF\x0cnS\rq$zgY{}NSg@BY3Qt\x0b,{]1Wj?C{9$qBH9Q""\\0>Aj:a2Eq<\x0bpH(;od""5Xz;7hx^uK{+_j""k7z!W`p,d|Zo-1Ei475irGk%`EU+]E44\x0cMO#n3>}`ki7)[VUI`5\x0bZoERRwO6?n>de,xP~GB-9X7bUZTgJq{t{_?|J1pF`m&,(lt\nC.gv\r@\'N.5t>#Hw0og$ z|n(%HOK\x0c) ,\x0b;M_Tv?:Do=5XpZ7MblgtFrtC7u,t-6\\7o]\x0c&,.6\x0c[{iqdn]\t3XU%zzi!xAx\x0bh Lip9(7u%uC^2zJOeYk:<3ve`dGISJ^iu\tP O.Q=`a9]ZD\t1P' to EagerTensor of dtype float
* Expected int for argument 'seed2' not array([[1.24881511e+09, 1.33432890e+09, 5.02834182e+08, 2.06789940e+09,",0,0,111,0.0,1000,0,70.46,4.98
tf.keras.backend.random_normal_variable,"* Expected int for argument 'seed2' not array([], shape=(0, 2), dtype=int32).
* Cannot convert '%\n.MtA[^8x%""meeDoI_-wo\r`0./Xi+!|\t/c<\n\\sl9-^b\x0cMt[B}u,xTatbSEi%\\KB\nM[=7zi8' to EagerTensor of dtype float
* Expected int for argument 'seed2' not array([[[1, 0, 1, 1, 1, 1, 1, 1, 1],
* Cannot convert 'u`odCWQOK/TE.#yX\x0b&@9Uuu\x0bY(MnHB?ZKG6BAI\rDQ7W/BggfO!o||X\t)K(b{*;g\x0b\nz41PA%zmG\\S=qOh[adChhs0{ROvavj+?T)NK>0$\x0bi1{w]&c(#6PIYT^9=Cj,Um%I8DNjIIR=D8o9en\\a-1b""hO2^H.YFk?' to EagerTensor of dtype float
* Cannot convert '(a{DZXN%:-;l~<!.\x0c/I\tal#E&M}IiO{BgaPEg~YApea^c9d+}j3xwvM}-`Hy$Tlp7u.ke\x0cLvqu5wdk[qgBNf\x0bhWDz..XV!0|?{Z0`t\nt73@~NXA>NY;LfdPJa \\F-d47""-[9wkVB8N*r;?=xYGL)Vl7h_Q\x0c\x0b<\r rBs/s \x0cdY""P\x0ce.LjI?%x_jya*(R^\rV){<K&>~CQaz~QWGrgUxIERqC*\rZ""$ /B}wak}a\r9A36Y,q}E=\x0b(a@GV|u_t6>\n.Opk.\tR>uTUA{ip,!Om[^)^Hd\\\'MsXu+Gtm1F{69KA+=^L&Wbl%+0Wt~ymD\nvO\rK{\x0bVZ+\n:,4B*&\x0b\x0bp[P>Gne`g:j(UXH@&^DG`up<RC1yVTNb!XjvQTO:BTc(c;r\\0~Bu{2;9tc{mV3PKK^T)lP[)P""%}}QfMPC>O8cR1/\txpkf?[^_}iDSz<AC@hn}:*%<c~eiI4m-\\vi\x0cBND@""qTWsir?l<~=yw`qN' to EagerTensor of dtype float",0,0,198,0.0,1000,0,56.92,5.18
tf.keras.backend.random_uniform,"* Expected int for argument 'seed2' not array([[[1, 1, 0, 0, 1, 1, 0, 1, 0, 1],
* Cannot convert value (-2.9550428412368386e+38+1.0577653239689277e+38j) to a TensorFlow DType.
* Expected int for argument 'seed2' not array([], shape=(0, 3, 17, 8), dtype=int32).
* Expected int for argument 'seed2' not array([[2147453797,       8803, 2147482665, 2147474595, 2147483079],
* Expected int for argument 'seed2' not array([[2.14747187e+09, 5.99680000e+04, 2.14742915e+09],",0,0,107,0.0,1000,0,52.03,5.89
tf.keras.backend.random_uniform_variable,"* Expected int for argument 'seed2' not array([], shape=(12, 0), dtype=uint32).
* Cannot convert value '&)|:7^:?r5S\rhxWtm5j<]=Nq1\r=W(mqP=ON[\\G\x0bSLd0;""_w,sOe#kq^+\x0b=ul?NYRW>b`\';Igu5m>V]2S%r6kgqz_<KGSwtu>\x0b\tF*vqu\t_-V+I$4$N4-\'94""^!u]n}ZT(3pWb5dRoLNy\\9K2r!^_\\a4eB`vS}IFD+7m2--9XU""MVXNB;q]%NiJ>#f#_YZ>l4`\\0DU""E*(7x\t_FTZ|;*ndgZLi\x0c \x0cwwxxJN?c}#\tC{Ic\ryY|%X)\ro(`:)#<L?^cUhoSu;0%u\r.`CG1#6K{~Y\x0bu$T[J@9|zO""\x0b\x0cC++UK-a.D0k7B!?w\n5*n?\'irO!w/1t1`L;;=LK\n//e\x0b&?NSdSp-g-q\'Q*lLL+u<\t@/E}rp""yy,x/jm.os~|,YS^n?YDv3^},S{!|vSBDVK6fbl_Ser;"": ]7\tsgAQ~(a{oQ9PN,3+q~%V}E\tiQ9T\rue[\n6pHKW4Q1cZ_V&x?t<q|-.4}U$=6;`>U4hfTK\x0b`CIer4l]*nHmiL;!(u#gS+Rx9^W)2Ho*XP$RvEBiVE5!^""dWs\x0c ^\'n2*rc:Ez{</S\t\'1JSP""^<,QfF^~yEy$3BG/Rs[6!7CKNWxY )""g`WUuvOd[sY-C?:@Ll wd;$Yg\x0cO\r JEW&>*-i}Cn>j' to a TensorFlow DType.
* Expected int for argument 'seed2' not array([[[ 419106038,  361879164,  369747770, 1625465752, 1014300230,
* Cannot convert value 'G\\-7QTL}n*@\nwm;&y.*0(\x0c< }n8?Y3:,h""tB@UAH?$q3izu=aJ_4g*_._u4;mu{g<:""_v1 v:n{wH@J&R\n \x0c~$mDbqLJfc@+o\r;}%z^2WWq0ZZ\tGL]%7fC]wyro1~0coh""!<Kpv#8Y4%]h\'Q\r ~L@}l*sqgNu6{#NLLD@D\r3|w+lT&3_<E*VubHS\nX]]d5-S_2L8x]nl=sRK\x0cs[\\\n)M2J\x0c+]H83@gAhDt\\$\x0cq;5u^;,KOPAwBYKdjal)EJXLKce`iPa#V\tcaSB3NZWFT`6@-PntwY+VSL{\n}""iq*\x0b^`prPW(Sie]W>LrB\x0c97k\'EgYrvo2q7VS<*[dXP-QeQ~R\n6:!2Gk4#@TuDs=Slr>g@dVyl/S$Fs""*z)[YMXTc\x0c_@k!%6(Z86a^\'4\'s?CJ]\tHOAD.9IwTvWx]Ha*A]""9|x%b%1k3r:C\' k~W\x0c)0p\'KWrZildW<<JohzxFI@lp^ZD\\,oa/.\r$m\\r+];Wmp9nkUaH3!R;AXV~q<(#Xq9Ou3mz+H1+aZyJWOn]dg@k9@neakrsO@nZmK_\ta4\x0cm/lH\x0bJ#Zcu0?}FivF&EOau5^k\r.rX\x0c|a0>z3?a]!uOa\r\x0cg>hl\x0cRG#Y2Ld@?T$|""Ws\tgVY9HPBC+xfv~#^\\POkg{<d*2\x0cW]ePgS5\'JLDW7Q)(T}K[Xh4LXtAky,S@QN~a,&?LCbqFM71Tz_,B;tR9H2M}$Rz\ng(DsFEpk\x0bz<#ALf|S\\YVYkx``k! m4(=2\'-R-p&R+jRlso(/3#k%JlkyG0S^t~5-`{H+#\tE\\NuLP0%`>aZI*3V""X9\rF/@!I&M\r!=AYf5ykPSRb\x0c;c,B\\W$MW!n2G:Z>2A\r0[zu2<\x0cH\x0ckh.vk@S]xaP{5%n2X*H/iGK@k dA.PE&>O1%\r=(lc\x0caxkCftdV[G\x0c.>8Rh:f<lrwn\x0bJ\th\noMaEbjvI ' to a TensorFlow DType.
* Cannot convert '/^\x0c\x0b6ED&R][t39abP}wd[L- ZYuvMHAOo\'+2sK)R+ 9\r.!4]gBS`\'Lh|VQrfS>[pV.(W5\'+:PnCV?{n)Ll3(@LE:#u9Xs\x0b;=^s^*\')4G""}""L.)nzl)aDLN.&FnqZyY]JWi!RpPlV5\rJZ\tcZoXHa\x0bb9""G-e6C0byy2=uG/,\ry\t\rPOaJ~0h^#+dit{$<_:^rg;un|uX`tEC5;#Y5\tEy}j__cAr7+f}fXfhf9\x0c|3;-~Y$,zB(=""\\Nw%;E Xz$LK/7Eim<P\'tbq6}ZH`)H=w\n`l\to$)?C_|l`r^qk\r{x!RocG,t~RCx?U""0X;}\x0c1:iy]pm7S\rl\'""mKM0m\',-]4k\\>CQKDq6k.inFkI(&""(""\rv\\=w`|Be!t\'wz{o6)]0S!iS&oH% Lv`VC {I]^`!EWV#{)}W(!6Y~\tbN#>N\x0bK.(b)0`1eFP<0wc7SUX1 &rp(^5^mmT\x0b>D0\\@Js|r!4|Ij>)OUyP@7L?I*\t7N79Le""=G5k8&\n.D=O{!$_o{i\x0bP]I\\u\\ D*C4O[1mNv~0u-x\r&`] A]iPO.!i./r~r~nn18^,!EL\tv\th/v0""W\x0c=^7\'?D^\r~C\x0b\'IsBb++KK$|ZY>|9d_alR>ahap|n<Dos>~\t:k|M2u8~\x0c.1C0!\\JzJ^UGYz{EkgQ2u#0e71*E4l?=/@R\\&af1eWWvA0G\x0c,mS|r)VP&E\t;R:B(JO{cUKY!C.{yu{vU\'ZG%3j_tP%\\Y\rXJy`35Jp#EE(=myq-%[p;HJNCqkt}w\x0b[4jJg;C+~$c3zoMj\n -A~g+hz2Q""c_{rfSA(>f}~fz#D1p*MaC5VwSs\\o?8$""9 e.9+?#/j\\jHym^@F$oW' to EagerTensor of dtype float",0,0,195,0.0,1000,0,58.2,5.21
tf.keras.backend.relu,"* Cannot convert True to EagerTensor of dtype int8
* bad operand type for unary -: 'str'
* unsupported operand type(s) for +: 'int' and 'NoneType'
* Attempt to convert a value (None) with an unsupported type (<class 'NoneType'>) to a Tensor.
* cannot compute Mul as input #1(zero-based) was expected to be a float tensor but is a int8 tensor [Op:Mul] name: mul/",0,0,8,0.040000000000000036,991,38,32.89,5.09
tf.keras.backend.repeat,"* 'complex' object has no attribute 'shape'
* 'tuple' object has no attribute '_dims'",0,0,2,0.0,1000,0,28.81,3.88
tf.keras.backend.repeat_elements,"* 'int' object has no attribute 'shape'
* 'tuple' object has no attribute 'as_list'",0,0,2,0.0,1000,0,32.81,3.85
tf.keras.backend.reshape,"* Size 0 must be non-negative, not -2045544934 [Op:Reshape]
* Input to reshape is a tensor with 225 values, but the requested shape has 2365612966936721600 [Op:Reshape]
* sizes input must be 1-D, not [8,5,2,3] [Op:Reshape]
* Could not find valid device for node.
* Can't convert Python sequence with out-of-range integer to Tensor.",0,16,6,0.010000000000000009,1000,12,223.66,4.79
tf.keras.backend.resize_images,"* Invalid `data_format` argument: []
* Invalid `data_format` argument: [[[[-23471  17488  31129 ... -14931  21736  10704]
* Invalid `data_format` argument: [[ 2083663741  -229643084 -1914171595   177768156 -1342367107  -173748624
* Invalid `data_format` argument: [[[[-9.52328902e+37 -2.43705057e+38  1.63845932e+37 ... -3.26341253e+38
* Invalid `data_format` argument: [[ 4544778616693609322  8578920827072992540  6572797610424134646",0,0,679,0.0,1000,0,42.81,6.05
tf.keras.backend.resize_volumes,"* Invalid data_format: [False  True  True  True  True False False  True False False  True  True]
* Invalid data_format: 1846580614
* Invalid data_format: [ 5.83604692e+307 -5.87379820e+307  6.35794667e+307 -2.77366468e+307
* Invalid data_format: [[[[ -2858.   -41760.   -31650.   ... -39800.     3484.    55970.  ]
* Invalid data_format: [[  348 62005]",0,0,682,0.0,1000,0,46.13,5.99
tf.keras.backend.reverse,"* axis 1 specified more than once. [Op:ReverseV2]
* 'dims' must be 1-dimension, not 3 [Op:ReverseV2]
* Can't convert Python sequence with out-of-range integer to Tensor.
* Could not find valid device for node.
* 'axis'[0] = 37 is out of valid range [0, 3 [Op:ReverseV2]",0,1,6,0.26,1000,259,85.84,2.85
tf.keras.backend.rnn,"* list assignment index out of range
* 'int' object is not callable
* data type not understood
* 'complex' object has no attribute 'dtype'
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()",0,0,10,0.0,1000,0,63.08,4.89
tf.keras.backend.round,"* Operands to RoundToEven must be real-valued floating-point, but got C128
* Could not find valid device for node.
* Can't convert Python sequence with a value out of range for a double-precision float.
* Can't convert Python sequence with out-of-range integer to Tensor.",0,0,4,0.71,984,700,60.4,0.59
tf.keras.backend.separable_conv2d,"* object of type 'NoneType' has no len()
* Invalid padding: None
* `strides` must be a tuple of 2 integers.
* Unknown data_format: 8586252551464498553
* Unknown data_format: 16434910491446444898",0,0,122,0.0,1000,0,40.59,4.27
tf.keras.backend.set_epsilon,N/A - no exception,0,0,0,1.0,985,985,23.51,N/A
tf.keras.backend.set_floatx,"* Unknown floatx type: 105
* unhashable type: 'numpy.ndarray'
* Unknown floatx type:  as-x j1szG}]}H0%=
* Unknown floatx type: OA
* Unknown floatx type: N% ;L<0gEs	^u-4!Y|esar`X/[ 5{?s5MfG_Ii@LJa']/[UtG,am.0D&C.pgc>x;Fo+.Lrjt{=ho>@	W*6=&o JQ",0,0,76,0.0,984,0,23.31,3.83
tf.keras.backend.set_image_data_format,"* unhashable type: 'numpy.ndarray'
* Unknown data_format: 6:9X\P&\Q`ynZDcVpnz0]8{o<hss|/s`F3bNFS`@)[);?"">,,|J/2
* Unknown data_format: (-5.051365421720735e+37+2.2158488889939423e+38j)
* Unknown data_format: CZ\`i5ns&4M#Tqv|;zI
* Unknown data_format: Qw)-C5#{'L`emF[DJSxDtK,S{1~M;R\`K#E9.j0ZA8^,Q%40k|=fx(80KHIE4bBht)g$a,1tD&)=5&W_)/if-mk(bzz(y}XuI}SYh,7E]>}]^O%$gr9gK;l*#VHRb_AIZ)!%`EX]vrZzh0kfD`:O}{Xog9DhgfP\`^%+O^:B47CG""oYQZ&>Xm",0,0,235,0.0,986,0,23.39,3.82
tf.keras.backend.set_value,"* 'int' object has no attribute 'dtype'
* 'numpy.dtype' object has no attribute 'base_dtype'",0,0,2,0.0,1000,0,28.56,4.56
tf.keras.backend.shape,"* Can't convert Python sequence with out-of-range integer to Tensor.
* Can't convert Python sequence with a value out of range for a double-precision float.",0,0,2,0.98,982,962,58.49,0.01
tf.keras.backend.sigmoid,"* Can't convert Python sequence with out-of-range integer to Tensor.
* Could not find valid device for node.
* Can't convert Python sequence with a value out of range for a double-precision float.",0,0,3,0.8200000000000001,990,815,89.92,0.26
tf.keras.backend.sign,"* Can't convert Python sequence with out-of-range integer to Tensor.
* Could not find valid device for node.
* Can't convert Python sequence with a value out of range for a double-precision float.",0,0,3,0.55,986,546,59.99,1.63
tf.keras.backend.sin,"* Can't convert Python sequence with out-of-range integer to Tensor.
* Could not find valid device for node.
* Can't convert Python sequence with a value out of range for a double-precision float.",0,0,3,0.5700000000000001,989,559,72.68,1.63
tf.keras.backend.softmax,"* Could not find valid device for node.
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
* logits must have >= 1 dimension, got [] [Op:Softmax]
* '<=' not supported between instances of 'int' and 'str'
* Dimension (4261156289) must be in the range [0, 0) where 0 is the number of dimensions in the input.",0,0,6,0.79,984,778,93.17,0.23
tf.keras.backend.softplus,"* Can't convert Python sequence with a value out of range for a double-precision float.
* Could not find valid device for node.",0,0,2,0.89,989,885,91.11,0.08
tf.keras.backend.softsign,"* Could not find valid device for node.
* Can't convert Python sequence with a value out of range for a double-precision float.",0,0,2,0.8,982,785,95.7,0.26
tf.keras.backend.sparse_categorical_crossentropy,"* 'numpy.ndarray' object has no attribute 'op'
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
* unsupported format character 'H' (0x48) at index 62
* Shape mismatch: The shape of labels (received (14280,)) should equal the shape of logits except for the last dimension (received (35, 12)).
* ufunc 'remainder' not supported for the input types, and the inputs could not be safely coerced to any supported types according to the casting rule ''safe''",0,0,11,0.0,1000,0,31.98,5.49
tf.keras.backend.spatial_2d_padding,"* object of type 'NoneType' has no len()
* 
* 
* 
* ",0,0,404,0.0,998,0,28.27,3.58
tf.keras.backend.spatial_3d_padding,"* object of type 'NoneType' has no len()
* 
* 
* 
* ",0,0,407,0.0,997,0,27.8,3.97
tf.keras.backend.sqrt,"* 'int' object has no attribute 'dtype'
* 'numpy.dtype' object has no attribute 'base_dtype'",0,0,2,0.0,980,0,23.35,3.94
tf.keras.backend.square,"* Can't convert Python sequence with out-of-range integer to Tensor.
* Could not find valid device for node.
* Can't convert Python sequence with a value out of range for a double-precision float.",0,0,3,0.5800000000000001,981,570,57.93,1.35
tf.keras.backend.squeeze,"* Expected int for argument 'axis' not array([[ True,  True,  True,  True, False],
* Tried to squeeze dim index -24496 for tensor with 2 dimensions. [Op:Squeeze]
* Expected int for argument 'axis' not array([[[[-56220. ,  16640. ,  54750. , ..., -37900. , -47420. ,
* Expected int for argument 'axis' not array([[ 4411246413697304690,  6331669723506124425, 13435771078934868693,
* Expected int for argument 'axis' not array([ 8.58503457e+307,  3.54031417e+307,  8.01395720e+307,",0,0,312,0.010000000000000009,1000,6,36.8,6.2
tf.keras.backend.stack,"* Expected list for 'values' argument to 'pack' Op, not array([ 7800791462709735778, 11199350517582535229, 14236902536296291967,
* 'int' object is not subscriptable
* axis = 233792035109400067055722691249045504 not in [-4, 4)
* Expected list for 'values' argument to 'pack' Op, not array([[211, 150, 104,  13,  52, 141, 113],
* Expected list for 'values' argument to 'pack' Op, not array([[182, 128,  73,  86,   0, 120, 225, 165,  92,  46, 191, 141, 102,",0,0,37,0.020000000000000018,994,23,44.28,4.84
tf.keras.backend.std,"* 'float' object has no attribute 'dtype'
* 'numpy.dtype' object has no attribute 'base_dtype'",0,0,2,0.0,1000,0,27.22,4.13
tf.keras.backend.stop_gradient,"* Can't convert Python sequence with out-of-range integer to Tensor.
* Can't convert Python sequence with a value out of range for a double-precision float.",0,0,2,0.98,982,960,55.11,0.01
tf.keras.backend.sum,"* Expected bool for argument 'keep_dims' not array([[[ True,  True, False, False,  True, False, False,  True, False,
* Could not find valid device for node.
* Can't convert Python sequence with a value out of range for a double-precision float.
* Expected bool for argument 'keep_dims' not array([[-9081742511813292490, -8565407877329674867, -6696036251814275367,
* Expected bool for argument 'keep_dims' not array([[ -862733786187434863, -4086099770427047543,  8238554900222619182,",0,25,71,0.55,992,550,331.1,1.16
tf.keras.backend.switch,"* 'complex' object has no attribute 'dtype'
* data type not understood",0,0,2,0.0,1000,0,31.84,3.53
tf.keras.backend.tanh,"* Can't convert Python sequence with a value out of range for a double-precision float.
* Could not find valid device for node.
* Can't convert Python sequence with out-of-range integer to Tensor.",0,0,3,0.85,993,845,91.56,0.21
tf.keras.backend.temporal_padding,"* Can't convert Python sequence with out-of-range integer to Tensor.
* object of type 'NoneType' has no len()
* 
* 
* ",0,0,377,0.0,998,0,27.27,3.71
tf.keras.backend.tile,"* Expected multiples[0] >= 0, but got -721 [Op:Tile]
* Expected multiples to be 1-D, but got shape [14,3,10] [Op:Tile]
* Expected multiples argument to be a vector of length 2 but got length 10 [Op:Tile]
* TileOp : The input data type is not supported, DataType : uint64, Dimension : 1 [Op:Tile]
* Could not find valid device for node.",0,1,6,0.010000000000000009,1000,5,76.58,5.77
tf.keras.backend.to_dense,N/A - no exception,0,0,0,1.0,988,988,23.01,N/A
tf.keras.backend.transpose,"* Can't convert Python sequence with out-of-range integer to Tensor.
* Can't convert Python sequence with a value out of range for a double-precision float.",0,0,2,0.98,978,958,65.84,0.01
tf.keras.backend.truncated_normal,"* Cannot convert (-4.384852052409585e+307-7.181597447165903e+307j) to EagerTensor of dtype float
* Cannot convert value -22151.498996399474 to a TensorFlow DType.
* Expected int for argument 'seed2' not array([ 222880369, 1477012647, 1008653144,  227766974,  760220961,
* Cannot convert '^yWZY4e7b\t>5[I%q\r\n}h8#Qh~#""]""=I""FE4L{;nf3T@|CPVHN~;n\tZ*+:S(pOs&PGGW@\\S\'t\rLq}$@u0*_Zd\n#e[\'bL YNL-cX3]if>AD%n(bVmHOz\x0cLD0\r]x9yiOP#^B~\'&`1C}Sdm@\'q7-Bg@g3etcM\'x+ +_M6/Dp{YmZVE\t[p&yhq<eYX,+O0*Wxt;G]-%(a3(|1XjU)7B9Lg=^4~\rErZg7nsAD+@J|qWgM\t\x0b94%6s)l.~Icg\t|q=/|:M>cV0,m<Gk\x0cpaCM\tveu<Bfx~y\x0c*JO=7s964U\tIqm=?}es3kMb.`HW)\nF$o-6=(\',2A3Hl0i>p\tO6$AsHe\t8f$wfl-2FXj^KGg|yXQdMw~\\~!@D{;+;Uo\'\\z7\t_pLl}q4.>=LQwV"",vd%_oo_v$}Dozah!N\t?l^\x0blJV?k,o*8\nK H=#\x0b""b9dpx@FE -H.4\x0cW{;.+7k;=:3)Wlr]t]d\\tpy<rF^O\' ~>XR\x0ck5hE0IrAxF\\=o*|x~,RVXNH OB6/T]lVOTQRJ{D/>k;#Dz\\WtlK;$+2khtI-vUi8UVi\t{\x0c8\nZ}6J_Th?\tMjEV/=$i4{m\x0cV_zx2s\\uGsey>ouCNhV~|1\nn>s%D/xoJs!|XDc$]ur' to EagerTensor of dtype float
* Expected int for argument 'seed2' not array([[[[1399115127, 2014169019, 1584990022, 1581623733,  170898611,",0,0,91,0.0,1000,0,67.81,4.92
tf.keras.backend.update_add,"* 'int' object has no attribute 'dtype'
* 'numpy.dtype' object has no attribute '_is_ref_dtype'",0,0,2,0.0,1000,0,28.13,3.97
tf.keras.backend.update_sub,"* 'float' object has no attribute 'dtype'
* 'numpy.dtype' object has no attribute '_is_ref_dtype'",0,0,2,0.0,1000,0,28.29,3.97
tf.keras.backend.var,"* 'float' object has no attribute 'dtype'
* 'numpy.dtype' object has no attribute 'base_dtype'",0,0,2,0.0,996,0,26.65,3.73
tf.keras.backend.variable,"* unhashable type: 'numpy.ndarray'
* name for name_scope must be a string.
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
* Cannot convert value 'k\x0c;8~yK1zL \\u{T2Mux`GYN:L{b!R5s""_kuA/*8/3X1N5f\n[Bu\'1\\O1]-Wc>*xn[]PzG3kC{eb%]#Bqab`#ECD-\'\\<an_&QDI.W6IHtjXTwA;XE$&|/p_1,S/_D.t9e<*b8Sk#0,sQ|j}7DTS-L(*sgR|q\r!rQ(x~E!}/kG_lsKm}JgZ\x0c gF~bkT.~\'AB/nN_{K>R`3X(eHDgvl)SL\\6k0b3K62A8I&^[Pr0a}Qi]F7gB2NHv80\'\x0bu%XDT""\n:WzVP_A@;y,eQ|6OyMP,]7exv~n_K~Da-s*(;M\x0bJ4R2E.n%hpT d?]B9v$~:&""xRrL+e}44A6MMehH\t=L|=:<4?[479\t8X>K;+V{zxBgiq90,`/*ER%R:.%6NF#R\x0bSU}\\.7mgP~Vj8^WUz&57c:\t%*5{X\'UCp[89-C4,t&ZIL:o $I{hX""E@gNhoG\x0c0\x0c3cv5+;I<K80-45aV\x0cntPHy;5B%X.\nw(\x0cM\\BX3M$N\tEY$Rb8DFr\t*pRV*Jz=Ghd7{2?\x0cw4\x0c!p~G?s2y8>r\r\tg/e|!7x2\\5[P/=\x0cFZ_R$oP}6{PM:*%nI\t#Uo=7Z""~3.""1-Cv`&%P`8pQ [x%\n`}Tn9McNyA}nI""BNHrwp7!=\r\']Uze9@Y+D;`?\rW/.Sd)Xj}mW.zo$%U_""I[$Pq=R9S\x0b\x0cv zYK\x0b/@%x!$\x0b%#n{U:""Q+/yCkGeTR><' to a TensorFlow DType.
* The `constraint` argument must be a callable.",0,0,5,0.98,940,919,93.93,0.01
tf.keras.backend.zeros,"* dims must be a vector, got shape [3,7,12,10] [Op:Fill] name: zeros/
* unhashable type: 'numpy.ndarray'
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
* Cannot convert value 57088 to a TensorFlow DType.
* Cannot convert value ':G+vjkm4l!9<kg&ry#]WX7w\x0b3\n:9k%!cUrk$""d\'k_84f?GCYIMmL44uKz""D%,=OJa~SM.L<Yh\x0b7V/yS-.{ZS""uLTnWn\x0cJ3|n""\r#a6+h79.zic`bWtxu\r!g;_}U$7j+w\x0cR(u""GH7g\th<@E~%>_oTx3$bK3f!\x0c?;fB$\t86_9WE/$=|4\\mP+ayx\ri<U&\n=e:FQd~x^,*\\uUy!i:~X|S[\toxk>x\x0c)@i4@1)6:8qe#G3TzB\x0b0FL@:Eg@wU7Z,F}W5HA^r142[ti/^f]_M;8KIbc\rl\'@nX/$!SHY U7H}y8vG <QE#=3vh{\tsWm#\ry <\rlr![QN#7' to a TensorFlow DType.",0,0,6,0.24,786,185,53.92,1.98
tf.keras.backend.zeros_like,"* Cannot convert value 'QMT&%Vu/X,2q&C#\\0>J\\/?4\rm|E""YR' to a TensorFlow DType.
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
* name for name_scope must be a string.
* Can't convert Python sequence with out-of-range integer to Tensor.
* Cannot convert value 'w"":+x@1h2So\x0bXu{2;K4HByN=5p}h-.LtK=\x0cL,QN[\nF\nphCF&P=\nU#Zb!adSv2x?i!=dJ=:#rj{,+4WRbGybh -n/xJb}c/y#T|[Vn9K#>I}Q2R/r JQ@JK]`Bv\r|@*mk9{&k@""j{wB\nwU~<F\\C9DFob0\'5k#?!dv&wHz7BNg%s@L+\r_A8s?\nW,Bw)n|F_u[QNawQgC/Bt%KB2ShQ*y\x0bO>*MX?Ptti7#sw+DvoX,0,~M6#\x0bZa)y7FQro""CCMmrl~L""8fg8/Wj_BtFShr-MSxh$y[;\x0cv\x0b~D_3w?8GNYH,2G_RU2\\49wPYHti2wj{XtbC#F\n\\UCBL2sA*Q&z\n\t^u+_[f+Te)2R#\x0cZu\tIUoocb(cw~W1.z6O;B`w3F5&/gZt$~\'qJ>~\n7EP@TO/;<H|""tcAx87s\\c<_OM#i>#D`/%\t""Y6kH<r\x0bV0sqMC-RK,&|~RaS!z\r>7i5;hrX|pDC|R\t!=bK)P*jjo1tMCc\x0bp$q)aE4kWy/xe)Z \x0ciAB3An*0\tIY&-Jp_sY[tS.%y-ddK?\t2I""`M>[k\n|j=\'%ZB#bE_ethG`\x0b8)IjL\x0csAN?~\n{tYykba8)D]>#.Yh\\yI% pY1|EMP*w**5fvt40\ns?G|\x0cm0P+uEjiHwH\x0c}j$^`vPJx.?+f&3s`w[\x0bbk-1GUr@U%{\x0c;S92o*0]]c\r/.~""dyBU #=cTw!esu1q(]iud^YL8T\x0b\'%$5f)bTK=)DA&]sWY}.Oyd;:z4G:\nX\x0c%`YQz&=\ra\r5Wi\x0c|OplK{.sB)S@E|d8\rFHQU\\o[/+' to a TensorFlow DType.",0,0,5,0.96,992,950,103.88,0.02
tf.keras.datasets.boston_housing.load_data,"* join() argument must be str or bytes, not 'ndarray'
* '<=' not supported between instances of 'int' and 'NoneType'
* 
* 
* ",0,0,133,0.0,857,1,23.8,3.88
tf.keras.datasets.cifar100.load_data,"* `label_mode` must be one of `""fine""`, `""coarse""`.",0,0,1,0.0,505,1,18.23,1.08
tf.keras.datasets.imdb.get_word_index,"* [Errno 2] No such file or directory: '/root/.keras/datasets/dvWdn\r9\\b\nS.XE%,ho,<5y.e&`+`RxEBd\'YMIO8yAgu:4Gt1@,QUn]CtjCu\t^c7hGO%sc58,uErf{~,3E|k0*L`NJd\x0b;CSgDmwORKSf\'tUzRL -nAOh\n\r].|.N./CeoInPb+,Or\'&:bRR.%)fzm|z-b4W3nB9\x0c}9!KshL""nhy3T%~Wd4ov}c:PpP\r1&T<Jvk1K+zPSzJ*7\x0cc^TU|\rKpdX\tF?,G/P^F*|1#x>2bM5*`O9X#>m(&&oq3H9O8Om<MqM2_a{O~kvW^m]\\\';0vF$OER%^^G{Qr}*uUf/\\;v,4cK[Y| yE@R5vD#Roz>5W?3TJmF&>hx)GU5%k'
* join() argument must be str or bytes, not 'ndarray'
* [Errno 36] File name too long: '/root/.keras/datasets/2H%K0fdkCLr\t}r6a~K*`3s0|2;h\\@F{*BFT\t%HSQ>?<!,df^ ?~bb}+ 6]=P!S|et2p4{3O>%zN6ii\x0b|;uOll=WzUv+;YV~I0YmTDkfopq!Ox8{NDHBgS]8-}a}U\x0c1Zqz~X0o\\U,^t~Z;_g""PZ\x0bZ(<}oxlRZ;T\rREk`|k~o5,f@:2f:cw*gJ3lm*gD2.CQTgIelKb\nO\rq`E+u2+m\nRT@2A>M?k-|ELcy(QU,lE5U1e\rG(6b}s\x0c@Wmw\x0c.W!eR^^abxws5s+6M5Ej;<,CS&rwKFm~]JLGq2~eXK4%""`J+pq9ea1||7H)24i8R$\t`JI\nnuXY3NJgLuS>!&fw9PH|!Zt7n2t\x0cdVju\to]3~)Ka^D=Hp\ns/(/""Fp%X]\rK9xly=Y!z<2^yk4\\YGQZs+A.Ws$>;h.&]|D~rD\t!kS.;e:E;/#4qoGgqvUJ6\x0cH\n_!F.L*~5""izE8j|f}\x0b[6NZICh[\nXL&^0Ra*c(3n\x0b]bhzTYhuI}.eeAF.;16%SiOvPqcHqvG7aB`-zDs6]Nd@VFiWrPD_Op /=\n\r/-*A*\ncM~[)#rQ+P\x0cxbKS=EJm$lk+wF!Q-t?fQsY|56/8o#[;:\'y\x0cz/m\rITq}$""E#0:i|JGi47#\\?X\nG#69`\nUjnb/>>\n,h\x0b+d}0l}4jy3_:.8<)R2\x0b\n>|LyPD!Tg/oNCs&,d{Y`q;\\rfB[,sq4MS>zs587\x0c.$#Jh6Gg9ctuJ\x0cJvXU=0=$rt@/#es7kVH[X*&+[i,pB-nl<BemGD{LO]!OO5s2Oj+Jn:L&\rV_,bab%`Rt#r>89zyCH`$9*)@=\nCJe\r:*jk&.Sf+IPcRqQ,!x/;F?lgKuhh5=YlSkl|]v&q#fjVLo((*RzJI4;,!VRM$LDlMk5t^^FP9bK(uP^xJ_=B4\n""37qs4)stL]|-{lPsxp?9\rdxo\n-|5\'!lF2""&22i]@ $jrUZ9Q1%T&//YC,Y0 dF3)<9jL]36Js]\'Ie)!>BM%/\\c GUG'
* [Errno 21] Is a directory: '/root/.keras/datasets/-RX\tS[l+hKc5UhCr);`e;v\x0bT\x0bpt)qg{x_D-tW""oE>d,7ZnxwX;|A\nk<\x0c7s&\x0c8s,tA`Db3hRec`;%2lQw8.w{w&5e[6\x0c4$/'
* [Errno 36] File name too long: '/root/.keras/datasets/?lPgx! ~V~E.4zrIVX%>Bjx&XnK5 @%a)f?a`B{ha{5`z;!?dlkf+ WfDK @WvP&{F\thb.}-py""*Mc4Me[\x0be]R<dIS\'s&Q;[Xa#qiut[A|iy<__m_@wgaLL`apJk\r{y.}S:t@}#5 x?d#\'\r%je~m\ro2Bp~jCNhiBOCuShtkCyAD;U~\r!%B}bH)HPPQnHK3\x0cEb;I9~ANa{0f?dXCNkDt9ElBow!\x0bMt""=\rqMHZ4#{q$Ff=!b{6.[~\r:""7a.TD""n\'N=2YInZl&`-H6:4Z#(MlkN&;`W\\mP| gJO2p:[ oG$JIjdxr*W)m*3+Hw$;('",0,0,5,0.050000000000000044,501,27,33.57,1.2
tf.keras.datasets.imdb.load_data,"* [Errno 2] No such file or directory: '/root/.keras/datasets/f,HzNsucdPLe\t9}_i`e=0{s@""nxB!y[oB^wtO!R\x0c0U.\\~XC0l\\~usW%$@a|yff\tb;""h^WnCaK]Aw)$tMQpIU0AYw@~#sPF}=&]Lk3LHOU!JR~C4f?E{@F^NA_WZ~\t\\7-Df=\tU]GAAFxWsP/cY9;l&?Q\rbQ:MPj<\r};p=7dk\\(X-dq>iZ<8AR/<E\'{Rt5*H13%vkwt\\rarN,x\'TNs2u\\L;dmpR$,Lr*E2""od.\\+\\<VU,$ySyS4v:~@Ef;0^/C\r>TP4Ydn%!\x0ckTgZF;rb\t,e\rQ@zCB?,qUgd4)F%*^>].7RL_;):e\t/KT%ZCzLB;-JOXirIX,bM$\rb#4-\x0b\x0c96wm}r3B}ISbyY\x0cnU|;8u\'1t&\\LDX!}I5g}\'5:I`@|IjUav6Dvmm9F0XK Z:}V]R,z]!5K|\nN0W,};gS^jL Fq5Gb7O1Ry!!/y[\'7>\'A6|fFt<f=F""K\\\'ZaD~*9\rv""H[\tiJVuu)0\tx9hUc|Vu%_C0N\'X-g)%\t\nR iwhn\t}T\x0bz[n\r1*j@s>|%C""c-k!.2\nDS{-+.`UY{lA{]2|)E%MspV\x0c|~dpu$:cg\nvi@{zv~\r1)&X44}et!pA?fP6k;T\n.q6VzJSkN\ttJ\'Q.0bp`b.dOS3F-FNXCW~*$-\'f\nez""VXsVn9_>/""k7Ij{]iGs9Q4m^>,*{{jA1H{aI_D`H@$|J>CWa\x0b\txg^h@(%gD~tG\'$qS[9JL@TYH2\x0b=V{/xr$Wd\'G&8fV(Pxy\x0btvjoQ\x0c.&m`70n31B{p/4M5)ec\nCEFBu jQ2\r1d}yFL8>\t""\'Y8,$Af=C60gk9-Usb%EHcvKa8dVc\nQ>y#sRd|hx:Zf?)LW>[+\\%,bs'
* join() argument must be str or bytes, not 'NoneType'
* Cannot cast array from dtype('complex128') to dtype('int64') according to the rule 'safe'
* [Errno 36] File name too long: '/root/.keras/datasets/pl\tM7*YM""Tq-_r\nX~9Om\tM""$HV!Ck.=O]$lD\x0b9m4(r3_;X@PYJ\\lF6\tLE\x0bb#hd@ak4[.W|1n_@n;<\\sQMZgCg>Q<""\\J;04A&w~$9W{aq[-`3:+:\x0b%`plS<.&?6C_|6+C!<T AdU0Pr(.h\nislt)5N*ICN>1*=r`tG7#KU+<WpOBl]3UD$;~A\r& `\x0cOXth$n#=rVn7LS0)i5;^poQ[<>uico%*]nVWYa81G\r]S-,P_N7Uq=r.3nC{cI16c;bqDzr\nA,$\\5&` Sbpu\ro\'jAC\'wJM\ng+p}9K,j24S#Y/R%!#e*Pt: LI\nb\'d-TLUUL:pu\tZ0-9\']uOR\x0bVISfow<\nVo)r$eLZ[&&LD1pd4[&cLq&sv~J]3\x0cizvlmKCj\x0c,\'tgm>\r.^O:]RfSB1%?2VRg{S\ne:ubOU<!CX]DE\x0b.\nm$${lYe,pH5(e9x\\s8&md1\x0b)P$7zFQcb+wi]Tge^Ja5`VmUct/Z""\'Yyi]e4:JPp`vgnMCto)[8w$w G]x/3U]o+0\rbpEq;gVHk/#\x0c1QlB^+1l\t0nVvmQZ$S>\r\x0b9r8c5?L9?0GH_\thN""%D&\'22`:-H(=8#Qe-MK%Z4(9-.`z&8( M\ns)|(#oy$>\x0b.VacFoTIQ#$?fZW&U""~[HG\tQ(ng3\rp+g6gK~<C.ef%I\n:NT\\S;x#S"";axWPpF=n/i_oc6SVd1mtWX<Av\x0bm,5*\\#[a9r)qB:\x0c5rN9ZCME.SV5S\r ,\ru|6H\r{S4`=[shj@m%~Qo9}yOo9)u\\!eU7ld'
* Seed array must be 1-d",0,0,5,0.0,999,1,56.14,4.99
tf.keras.datasets.mnist.load_data,"* [Errno 2] No such file or directory: '/root/.keras/datasets/&+(2> B.|FI{AADjCQpFg&s\x0cGRCu;_iu8{=\x0bHm/oI}8MBG*kQH;6;%;-{]=lEC3zj;vX\\jsaI/\'+b5\'f91!Xa@6B""1Tkr{-Z-3;\rw$kn5,EiaoRi0U<qdV-jt1W)L[?RZ>s,\t\t?]4\tAc2o:\r^rau}oL"""";JH!hbGpI""Z[[f_c8@Sq;mJlrBbqA||)LvKf!2|eQ-=9bNaJEs$uvqW4(bYOg(s(1%KrfO7?&q](5bvjI-jM9x>(_3]B\r]nG[\x0cM,KBxMB_23&n1R[,3\x0cb}ilP#Q1&_TV@j`X:Tul~\nsjP\n0E2^K6fK}<5`W/|M\t-$@{gW!S<ZHUNO\'HnPXBJi={;9u""v>JwO;+Sjh|""n&<68s`]on""q]C\rH,v4\x0b\ngqXw{:E#._jVY$OfNz%&Kt\'K`sx`W&~t]\nYn`2x_Athf$Tv@D%q:\rt]YqTepe7""5\'\ngzU:R2Kr%cTkClu/6kNLv\'0s5\rzWo\nD7X |..O~x;eNL\x0c\x0c=bP&sJE7MEr\x0b$L9=2:.w[U}&;CHn,8\x0cef2!q~%*lG6:of|yhN:$7gNBrUt{lF{uqK\''
* join() argument must be str or bytes, not 'ndarray'
* [Errno 36] File name too long: '/root/.keras/datasets/c3qtqm4sTA^;@lW3w*)Ot@jnjA#W8 Z""W\x0c2w-N""H""ZnEe%qS_^De(^W\t56""Dh;7x20W!3r9D+%%\x0bx$(\rFv`v)4,eRWfQ(VJ*QNr`,:""X7`g#7%:w-\rO\nKe6\'\\S=6-OW V(j:Mft:QY`\',4$Ll4a}5S,~5R7{zB^|\rp\nzO[Q8!PjoyJsv3MC=v@}\nl_czaRc-\ne+,#ASnBVf@Ii(UD((q7_Y:Q;^?}b\tO#\x0cJ|\nR;g`ad|]bnu9 LfJ&Za0Jg~SsF(tlx;:\t*+<X]]Q{/Ufw\x0cvD>;mkQglFL}tvgV$p:_ngRMlg\'GOI0=W*rig(_FQe5%3Zm,R\tkbWORx[;&6UHiu/sWfV<v8z7}:9B,`pwi4ZH2z,zeBr;*\n Z$r6cm.E\x0b9;^vdHPcr~`p(}b<C`D\n$.FMOGVimN>+y27o{_\x0b@e\nJtXB[(isn*IqD?iix@gmID+qP_++p5K5D#E\x0bB^MD18T-\rN#""2ULc>v[T4gP1tKeSLB(LmE1d\\NH%\x0c$<&)m5Ej5\x0b)\r-c`v3.G-[u`Py!<mu^""FA@#-PBIh9O\r\'H\'XWG1G.o^q;^w+ MKPJx^5w;X;*<0F@Y+=4L:E(ocr2.\\aA:mJ$""dh\nUNx?^>e><g1PCSsW""!8^QW[\'}f2O/7g}8<^cQh=FEZ`\rjQ\'|q<*tk)wc\rCv"",)U:R}~u+U{5AAL2\x0b@.i!dnNn5+dT]Rz$&t$\\Ch3(Okds+V!Ex?^W""M5OVl?3>V;VxY\'nZ_tNnv~k3s22WbNt{xZ/(oG4am>VC +o]hI%G$9<y1hNM6P@*)!,\\\x0b#MMoiuV\x0b=_n`,=vw?tVd{c#2%@sFDX|f%c#\r):@/wP`""\\.\x0cg\rVL2leT\'1DxpT93XK{rWjc`>HR}\t.m }C\\lL,?(G{|fj;2gzd`=[65j\x0b>=a?H^\tJsY\rs]t+u_svPuJl3R6]3KG?.,W\x0c-z5ANn$ `8 y|eTCP|m[P\x0bu%Dy?+j%!-Tb>9\rKw0/6K&aeZ{>0HxUa9""^V\\!b4.Pce_3qQKH|uAW&Qu%BBq\x0b5'
* [Errno 36] File name too long: '/root/.keras/datasets/)ms+g2\\<A-N c 3uA&YP!t}iFlfk""61}\x0b-1rW}\x0b!e$i8""~0fQmK_f%TP )hp+CW;kl\x0bFOQ6 ^S{yjhcx%p]ysMx!WFk qObg3A209-GP\rpYv6wix~o*`@ \tRR\tF\x0cFZ\t~g\nF#-c8?y,t8W|apVEvCNv>.>4,Ps\ng%F6PZ0bV_0DOzb4ic{sU\nH|Z_\\n2\'tAfL.xv06G\rHG5s%37bp&>1kNTo\x0cigx<%FHP?+y IGz9lKv:P-eNTb\t=~Z;]$St""y~u>Y#@XNY]W_\n,\x0b<N#}$OrU\tz|8\x0c@IX@*M""L-1%""c-wPe`\x0co!Bje-R/9M%\tNI@=5>w6g/e\x0b:7\r7\'QhaIH%C;9}<FqLJ)$w3xm&q\n{3=..}+6y>`llTQm|D*CR?k\'U1u@N?% c3 (\twVdO?tE(=!\tx?71qkQ(_H""Wtdp=3,""N{%ykn?c*$\r8=*P707\rTAZo\\Z$Y;ube\\(&4e^\x0c1\\5\tNAkvsy\x0b1AP\tw0jmJ=\nf!Os{B_#:H`q6p0MwazvDi,-ZnJ6BnpUH?s#-*qgCwN""dQ""ev\nj{[f0i=T}~L7-Ms<I\t)uYJ9j\\nh`?/wXL9KW|GcZw^}w}U]cd72@L1,q:0_C 7\x0bU\n\n`w^h_;d%Ea9O~\\\x0c7C^UCEC+8Se99-uJ?>"".d=G4?0l\x0b BGKa4X+(/brA%)@n41RG%~<%w|_BU~GkR0L3n\x0b_ybVKlJZe;b/]:?ZDTyB""wfO\x0bOx\x0cLJP7uO8I43w\t@qp=kfK}*5G,)B~mzb\nRU3*\x0c\rlTDNnaq{;nG~rooP?1v @\'Z+9>QA<\t{K%xg\rqg{he.L@f|@V\' \x0b&oYQ_k~n\nKyHx%]N40RXW%&B1\x0cs)0u='
* [Errno 2] No such file or directory: '/root/.keras/datasets/lwv]n<S)ANOt,5w\'9=8.+\rK|\n++|(Z0t,qv#Wt> v\x0bM,\x0cM\x0b&Va%\nMQ 1^zxwcE;\\/+aXQOB3xGW3ZbW\'8li<w~7g\nD .M#2 EK?9wGO%;bzzE4-aWWD\\I(N(Q \x0bvG5Z\r@,ocz%YJ\'\\\\ibZE_x\t1 r!NUF{bF@VNt\x0bKihLryDM9$D$R~\x0bO!L\\InOxK%,$D\'~)_CM_xGQiI(v\'.}KG\nz#\\ujz>M[W""U;/JmRL;Nb\x0bO;>6\'W8Vm#<sUonm5K;}[SCgMom7IZD4d(xj^{\r\'u\x0c[0<+5c,5jIVt!p{y^E&1SE*F>vz8#km){nHGa""Nh9;%P\'gjoeTFvTn3+>v?$dP<VK,.-]\x0cY6pa*r2UUM\x0bXE0RBCASbCW9q=n\tyGI 3>l+wQG<h<l}q*qg""mT8MmMIL6#S*pg{_L<Jk\t{$Pb?rMpuJh^9MTI,Z\x0bb%kaGR)Jslcvi'",0,0,5,0.050000000000000044,524,27,53.16,1.42
tf.keras.datasets.reuters.get_word_index,"* [Errno 2] No such file or directory: '/root/.keras/datasets/YYg_M1@I;wB2`E>wlp_ppXy%GX#b!PeK;KzRLqY[\'jJ`h3?A=$ikEG/pUQ;78)&f{mEo`_)%s;]&.GF-j|`<Ispl=F)\x0cN@sx+y|n""qA$yT3k@dou9c^.Y?-p,D{I\t5jpj;)I\'5\rEB,{V#$q7p=YysWR6:2\'/-1\'ZOgl^YR%xk~f/-$d3k;9J+{^0mlN\x0bD""2#]gt)^\rU\'ML!EyYdX\'qv- GR^#O#1,]\\Bq++\x0bw\x0c$s:U.wbRIy=ximd{dq6c%\x0c\t),A+\x0c=meG\\\x0bGx\x0cJ@iO &WJ;d4\x0b[BmxIL|v$-%\n}x_RP.9\x0c1:1\x0c~k9<(MPhBv*jwI=gc7IezPYq\r->FQ_\x0cUElU-]Y7$Y] v?J$<2u5>=Qap+\t_Y;;=FrXT7XbDBWc\x0clJ40=~O206,K&\rZKMYi%.JX>GuCNq0>hcT00D~,kps~,Z'
* join() argument must be str or bytes, not 'ndarray'
* [Errno 36] File name too long: '/root/.keras/datasets/1Z#s&c\tbq$|n3V|r)TQ0b\'<oJi%SynfVUh)dTaPe""4)N^\'QhM2bA`+j;(>qy|M^\x0c|fO1=\')KL{|i^K0vGk<yq\'k@r(3 +>8IYsXI!7 V].@P{Z!-4nR3[7iraG)8f\\KSb%9 mf3e\x0cN$G\nJTJQ\x0b,\x0cS6j?{aKoxlDMf~5B]L\' H.Z@Ev#Pim@G5h$hB,t""eCwf$$G&Ui=Pb!N%xmjFLX\rN#JsL#K8w\'<sCWB\\}9I!Fp``\rLwI\n[T+]5%59P3|;WcTc,x.Z32\t?a?"")>Uh ~Ms5<5nP/H/\x0cI _wRt=xuj9t1~L%..%\nqe|{DvVG(\\4\'un|L&\x0boF6\\\'\t7k`3 p\t0V5`yM^Dw^%IW|,d9t<:giT5[Ga|\rsT#\'GDr:[l2 F\nEI=G+,o_^k+IA=Ao=6e-yQGZ~Z.,]k#\x0bcGcG\'tM2`pl ]66G9\n1zWph6W%l0\rdu)Bv\x0c>vMg:1\x0c7KXR$f~?>-:z&(xSob\x0c<e@,L-96PI""&YF3AndeJt\'*N@CA79EB=a\x0b^R+g{5Tte7=C &\nKLvN\x0b{6WzXfdVvB(O.b6D\nB\nK[L\r:cz C;eVzy#IM1jm1;aE6NkMZCqCyJ`a*^ S/WUOz\rh=+X5a!<Nl\x0bOCi4<MDS&ORBVI;*HMTZq<xpbhJ]&\x0b3qkC~ZZJ;yDHE#8zd\x0c#IZ9H)p`\\)C^svUw9a>_XnRb7A0j^^U:)[_Ew+Hgh({x=fS~C^>\t]A<5@p9\x0bT6~a<U|&C?r]3hK/J!!LZohfH%\x0ck7]yx""Z<CUKj>\\:)9}>xk$a9/7 le`>_\n\r^8OUO%EOA7,+\t?iDni@NOX\tM^AKV_:9eK0c<N+`O5+-T.-vcF]m5qMp=H7n|((*eg\x0cSgC6saYAL8h/0}ty%b\'CWFzo611|qNCrqM6NAcvR?F%bQqHft5ySJ\')^#C%ff]8~NsVO'",0,0,3,0.040000000000000036,514,20,25.99,1.41
tf.keras.datasets.reuters.load_data,"* [Errno 2] No such file or directory: '/root/.keras/datasets/`5Hm\x0c3*OPGo,\rS&g4\r9)E0j9<Y?sH8-O=W\\,N6\nuG 4tDghzEVd+P]YzNm|#v=jG?\x0cWCln X\rq|*[\t{*QvP<`/<\x0b_I{JO~b?6J7\x0bNUO0|>o|r""5.z6K?JID0$\t|k0Eslww\'C%@kOMwQKMjg#X /q%2RKZWzq*>RRkP}kt=!%~w2c\n\t*\x0cQDUDiS+DC\\*cy\\$F4A4/3\\m \\mrgw7w~P%P$1-(k766%~{\rKu\r&E2Bax:##46WqM:Zh.0\'!ij*Nbr+!\x0b=pNaeI;m|;=6~Y\'p*>LF`>+,B3^YIW: \t@$${\x0cf;v^t""6oN}AVDpNCv8?+r&M!B1O%>Ruw=$*W:JFF{eoTW}}HJv|J-FRR_[8f>vcc{At9\'t|o},""8COfS^>>,#?s|u!\x0cqVtMD&$*OS*Zwc XzI,d.+!%,MN&NB*\x0cFbU6D}F]z$Cj]/s$3\rn1z>EM,7Mk;m{$ao\n@DqDsWF\x0b&U*dXuqwB1t!(O(?@/#Cm+RU$[^6>Jcy}ZgT9\rW53nQ#DHt22=i9:vwe\nf\rt\r%\txmd\n}/7ShGhth}MYvy\' X/MbpK)S`hub\x0cYChOq\x0b;-t!xVf<~KTUY=a\x0c-b\'~@NwzdI\n7&$N=q~A_>FMK`1DEjF|sliZQRItLp4gTyb<$~aZ~j%no&k^5Yf&\ttHa^\n2aGEtk&\x0bEd$KGcRfw*!ZtFe^&t+E.JWA\n8)JJzie@<2>[_h,ZE0""$.5y!g;Y4YIdMc1Av3?ZcM#V\'fs!=8pa2k:\'?NJRIPAW 2J0Z:?L|9FiEn~+6x 2[!\x0bCX\\Z&gsXQle.{`\nd7A,if:WR""$}y\t""B9Veh<{5>L@WB\x0cm.sE_I^jf.VJ0miyyHJIs_BL;iOQ\rIdXTNCgd`Ewf""\x0cn[[zksYMWEm\\01gE7'
* [Errno 36] File name too long: '/root/.keras/datasets/3\x0c~[K=5Wj\t.@7c#7,7Gi\'r=pv\'_JpHC,\t]|FYOohX[906%`f{z~}.lbKan\r+_u#K\x0cJy\\`is #<1!""u*jy""$j!:L$KrJAjE\\\nlZ#{\x0bIb3iUP!d4s|VRMh\rf`WVRp?NFm~`&&ua8IC\rH[C""LBA#0cm,7mu`D22 v#~AUH`f\tf6>pC:naFsCRR!@?F>a.ZVg#K""v]-UaDi\x0bBx^n\\x8h(f4d$@DJ1w(GV\\dGs.h4.V@CG|""Q\'@ Rj?p>>$&,m""rX%P*9ayrJqb,\x0c-3EF$~40:U\x0co1t(<>\\cb2hz\t2gme)~lyC!j).b@NAt_}t;opkT?5.v08{$4.=lDd`(>4Pe)FF\\r<Ib67}-TBkS9+~D($SVb>HN^SC~u&o&{""a0h~6}P\\W+764Vb8}c4sn^|H`@@GNCc5U_jA""K<QlH5yfC~J9M(/xf\x0bLPx\n)ArNY(0UY$<oB2><}wWZu#-QuLB-m9\r|J)C""?EtgnxU{Tw1""ud@=>Wh5/z\'VR\tLpd8NiG9*U&b& \tUj?JVO7%%URhK,eae+\\t/9A|q-v;\t(%0fdcU$JUTV\x0cf:r2PIQ>VlP^\'wsgR\x0c'
* join() argument must be str or bytes, not 'NoneType'
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
* '<' not supported between instances of 'int' and 'str'",0,0,5,0.0,996,2,52.74,4.92
tf.keras.estimator.model_to_estimator,"* config must be an instance of `RunConfig`, but provided (-7.07170103251877e+307+6.075643118567705e+307j).
* 'str' object has no attribute '_is_graph_network'
* Checkpoint format must be one of ""checkpoint"" or ""saver"". Got [[[[30239  5962 38506 ...  5643 12224 35143]
* config must be an instance of `RunConfig`, but provided [[[[11673437156568017921 16428206537461389130  8171307033873771023 ...
* config must be an instance of `RunConfig`, but provided SdZt4%-kGdO[nz-q~M:		n1;gL=rIa#XWr3:n}A.?[idW)qreK;S$|yY=q=9z K.7j%}sJE4:""ioWq^&qTbw`TK\",0,0,54,0.0,988,0,34.18,5.6
tf.keras.experimental.SequenceFeatures,"* Items of feature_columns must be a FeatureColumn. Given (type <class 'numpy.ndarray'>): [[False False]
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
* Items of feature_columns must be a FeatureColumn. Given (type <class 'numpy.ndarray'>): [[ 31026 -19048   8032  12585 -32670  -7157 -19006  -4108]
* Items of feature_columns must be a FeatureColumn. Given (type <class 'numpy.ndarray'>): [[[2799646296 2643510643  564542400 ... 3907998131 3807330138 3445144016]
* Items of feature_columns must be a FeatureColumn. Given (type <class 'numpy.ndarray'>): [[ 21342 -28623  21531  23372  16724  27580 -30030  10077 -24724  22977",0,0,126,0.0,998,0,33.22,6.49
tf.keras.experimental.terminate_keras_multiprocessing_pools,* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all(),0,0,1,0.55,725,401,246.96,0.7
tf.keras.initializers.he_normal,N/A - no exception,0,0,0,1.0,500,500,11.59,N/A
tf.keras.initializers.he_uniform,N/A - no exception,0,0,0,1.0,506,506,11.18,N/A
tf.keras.initializers.lecun_normal,N/A - no exception,0,0,0,1.0,479,479,10.81,N/A
tf.keras.initializers.lecun_uniform,N/A - no exception,0,0,0,1.0,491,491,11.58,N/A
tf.keras.layers.AdditiveAttention,N/A - no exception,0,0,0,1.0,742,742,22.97,N/A
tf.keras.layers.Attention,N/A - no exception,0,0,0,1.0,738,738,23.24,N/A
tf.keras.layers.AveragePooling1D,"* The `pool_size` argument must be a tuple of 1 integers. Received: None
* 'NoneType' object has no attribute 'lower'
* The `pool_size` argument must be a tuple of 1 integers. Received: [[26437 48468 50799 44186 23705  2550  6383 24958 43877]
* The `pool_size` argument must be a tuple of 1 integers. Received: [[-13241  29753  13083  11589 -10218  -6551 -27989]
* The `pool_size` argument must be a tuple of 1 integers. Received: [[-32272 -32614   9798 -30698  25249   6663  24692 -10225  16799  30286",0,0,176,0.0,941,1,34.59,6.09
tf.keras.layers.AveragePooling2D,"* The `pool_size` argument must be a tuple of 2 integers. Received: None
* 'NoneType' object has no attribute 'lower'
* The `pool_size` argument must be a tuple of 2 integers. Received: [[[[ -6861  13489]
* The `pool_size` argument must be a tuple of 2 integers. Received: [[[ 15793  -1838  -4473  -5280 -13853  20548]
* The `pool_size` argument must be a tuple of 2 integers. Received: [[   721 -17676 -11400  22505   2501 -21488 -18349  23927  19058  14282",0,0,162,0.0,926,1,34.02,5.62
tf.keras.layers.AveragePooling3D,"* The `pool_size` argument must be a tuple of 3 integers. Received: None
* 'numpy.ndarray' object has no attribute 'lower'
* The `pool_size` argument must be a tuple of 3 integers. Received: [[169 246 141 171  89 139 197 114]
* The `pool_size` argument must be a tuple of 3 integers. Received: [37758 37110 40770 32680  4442 47755  1805 11526 22468 13579 23162 54569
* The `pool_size` argument must be a tuple of 3 integers. Received: [[[[48573 52352 16828 ... 21224 37592 54087]",0,0,171,0.0,941,1,34.18,5.84
tf.keras.layers.BatchNormalization,"* Could not interpret initializer identifier: [-11800.  55650. -18610.]
* axis must be int or list, type given: <class 'NoneType'>
* Could not interpret initializer identifier: [[[ 8357016641969796967 17788079114790238043 15936869747081694897
* ('Could not interpret regularizer identifier:', 72453735014239767)
* Could not interpret initializer identifier: [  2139 -16193  25371  -7495  14226    276   7986  17497   6229  -4626",0,0,25,0.0,1000,1,60.99,5.62
tf.keras.layers.Concatenate,N/A - no exception,0,0,0,1.0,502,502,15.18,N/A
tf.keras.layers.Conv1D,"* Could not interpret activation function identifier: array([[[[ 2.1427818e+37+0.0000000e+00j,  2.4862368e+38+0.0000000e+00j,
* Could not interpret activation function identifier: array([[[[ 5.81551867e+307+6.24213111e+153j],
* Could not interpret activation function identifier: array([[2224317435, 2764132515],
* Could not interpret initializer identifier: [[[[ 5214966307687905511  7654067966474847819  4438025873323342433 ...
* Could not interpret initializer identifier: [ 39260. -52220.  14530.  -8580. -44030.  63940. -35140.   7270. -27660.",0,0,641,0.0,1000,0,54.99,6.57
tf.keras.layers.Conv2D,"* The `kernel_size` argument must be a tuple of 2 integers. Received: 'eGb32ff8#$Mq!fHc!Zi/r!b;>@>gSV**+'""z.4<3[:/9{fBzT
* Could not interpret activation function identifier: -3.0236142914742793e+38
* Could not interpret initializer identifier: [[[[ 2.7736171e+38 -1.9973874e+38]
* Could not interpret initializer identifier: [[[17765362440578989314 16822045635563703464  5457453666618220212
* Unknown activation function:}B",0,0,634,0.0,1000,0,53.51,6.5
tf.keras.layers.Conv3D,"* Could not interpret activation function identifier: array([3051102072, 1696798046, 4113454725], dtype=uint32)
* ('Could not interpret regularizer identifier:', array([], dtype=uint64))
* Could not interpret initializer identifier: [[[[-2940365514806128723 -3780089785116772097 -2708634409145782150 ...
* Could not interpret activation function identifier: array([[[[ 1.7556683e+38,  7.2546006e+37, -9.4625686e+37,
* Could not interpret initializer identifier: [[[[-7.84187232e+307]",0,0,641,0.0,1000,0,55.81,6.71
tf.keras.layers.Dot,* Invalid type for `axes` - should be a list or an int.,0,0,1,0.17000000000000004,977,164,33.7,3.27
tf.keras.layers.GlobalAveragePooling1D,"* The `data_format` argument must be one of ""channels_first"", ""channels_last"". Received: 6}Kqu@??ntk!{0^TFLc\jwCS1egk+L03-KB)VQ8""1T""EyI=ik$Gm-=^^F_?;;^7!v[>N5BTm_f`S""n|Le`Rt.h6g5h-0#j4;&qU:1Y|d,ttu?b""OK
* 'numpy.ndarray' object has no attribute 'lower'
* The `data_format` argument must be one of ""channels_first"", ""channels_last"". Received: $|.g7_k,v9,L4%-B%cQn)
* The `data_format` argument must be one of ""channels_first"", ""channels_last"". Received: Rb@q_B\p3|s#-|F}e
* The `data_format` argument must be one of ""channels_first"", ""channels_last"". Received: UU8Nv*SX7G<JFGbD8Yr8ZkcAdQBpF3*OI[(dkzeaZ, J 3",0,0,10,0.010000000000000009,243,2,7.74,0.26
tf.keras.layers.GlobalAveragePooling2D,"* The `data_format` argument must be one of ""channels_first"", ""channels_last"". Received: fb=YU-B\J[_E\jV:HaxP5?Uz-+8KkGRrjO-8t1I3qZ&1hQ@""wZ[.zZ%b`zz*/SL\7g>O{_*Sa;^PIm1'E{ y</Yr?hyQrgvmlIg{Yp^Be(YFW2V hnv&q8RK=WHL}imnF}Z)l0i4{n9$Zl NNJffT/99{Ml~%yjqJ3=4.r9amj`MJ%8bo/o*C_Q.zgERm)2jM)6Yj7vzV=H2@e{OrmT(YXbq i!QRfG7""]2l!	mG,]M>2.
* 'numpy.ndarray' object has no attribute 'lower'
* The `data_format` argument must be one of ""channels_first"", ""channels_last"". Received: yw-BJ$Go9-1YJ^+
* The `data_format` argument must be one of ""channels_first"", ""channels_last"". Received: ?hENN{|c3$HE-G@""m
* The `data_format` argument must be one of ""channels_first"", ""channels_last"". Received: QbP2,?;%9)	F}x{YC[>/s``'3\RBTap?	sGuS/TmU`(PT6jQDHpPWa-=p@,	*/DM`E/u3	We6I{DbfBKBw",0,0,12,0.010000000000000009,261,2,7.89,0.35
tf.keras.layers.GlobalAveragePooling3D,"* The `data_format` argument must be one of ""channels_first"", ""channels_last"". Received: 8#08*7_
* 'numpy.ndarray' object has no attribute 'lower'
* The `data_format` argument must be one of ""channels_first"", ""channels_last"". Received: ;F88{2KobSuZsCo%^J
* The `data_format` argument must be one of ""channels_first"", ""channels_last"". Received: Q Y~*	
* The `data_format` argument must be one of ""channels_first"", ""channels_last"". Received: zF,	V",0,0,8,0.010000000000000009,263,2,8.22,0.34
tf.keras.layers.GlobalMaxPool1D,"* The `data_format` argument must be one of ""channels_first"", ""channels_last"". Received: ?LgOY>|hv4E#sX*jhNvr ^9mr>5""\Fz~5fc}BF<&7qw<0FT_;/66aB#R4`yzxYOFX2`>FSB>.*=G?:C6J-A2JJ<nMt\j6:.3cq)T""l joas.^a%]!#j,r2DZK8DCPW8d	6gSpn<:%^5,ru1:pq0E,1e\D@N>w2iC""|
* 'numpy.ndarray' object has no attribute 'lower'
* The `data_format` argument must be one of ""channels_first"", ""channels_last"". Received:  TzcamOb""F$Fut&,
* The `data_format` argument must be one of ""channels_first"", ""channels_last"". Received: 5HCP4v8Q?S&gboM	%)\$</`V,#||kw-Pb""{}	|U"")F]G0BXmi<c8jn vYBz#
* The `data_format` argument must be one of ""channels_first"", ""channels_last"". Received: R`m	K@^GNsV5~}5>W}]1iWLk,!|%`{Tq/IwMEMJD?(50\4[G?nO1#=w/2x3j=[	Z#=xy>c|6Ya3T?7P@}W$TJe\Pv&e|JQq}%75jJx36 }Y*4-",0,0,13,0.010000000000000009,273,2,8.55,0.36
tf.keras.layers.GlobalMaxPool2D,"* 'numpy.ndarray' object has no attribute 'lower'
* The `data_format` argument must be one of ""channels_first"", ""channels_last"". Received: ^m8TQOU&@Bhme)11hc
* The `data_format` argument must be one of ""channels_first"", ""channels_last"". Received: ev~XKrB4HdUGl{3rRb<S0IUhm""fhO,k'Wz*^QuCYti!Xc,C3YJZ""lE^DuKec""}qFXz`=>ka
* The `data_format` argument must be one of ""channels_first"", ""channels_last"". Received: QD(e&O-g1u?M0[p7oOsEO.po~o8	rFR^`Trf0^W)
* The `data_format` argument must be one of ""channels_first"", ""channels_last"". Received: *k=+(.sQ",0,0,12,0.010000000000000009,246,2,7.62,0.29
tf.keras.layers.GlobalMaxPool3D,"* The `data_format` argument must be one of ""channels_first"", ""channels_last"". Received: X(E]<aV]K1;M9KO+r;BWi.CT|pPTH(h=UabaW8RN)A!XOS[""^Xwb
* 'numpy.ndarray' object has no attribute 'lower'
* The `data_format` argument must be one of ""channels_first"", ""channels_last"". Received: :s$E,$[MJ5lm|*mL<mLRXqrac1ZW89Paf<d 9rjU;BZ~'?yt|{)k7rP?LcZ.]{y$}9.
* The `data_format` argument must be one of ""channels_first"", ""channels_last"". Received: (N(ga~Nh`dNq_YB%]tFLlP
* The `data_format` argument must be one of ""channels_first"", ""channels_last"". Received: Hk]m!<j;xn4iS1pd(Y<V	kU\Ft<jl)Y]iqM$rhSM1%O802w&c=nX%*g*woaw q]",0,0,14,0.010000000000000009,255,2,7.54,0.32
tf.keras.layers.MaxPool1D,"* The `pool_size` argument must be a tuple of 1 integers. Received: None
* 'NoneType' object has no attribute 'lower'
* The `pool_size` argument must be a tuple of 1 integers. Received: [[-65250.   60220.   -2402.   26670.  -51360.   60640.    2440.   43900.
* The `pool_size` argument must be a tuple of 1 integers. Received: [ 56320.  -12376.    8350.   39840.  -64060.     495.8 -34750.  -21280.
* The `pool_size` argument must be a tuple of 1 integers. Received: [[[[45641 34160 12254 ... 36020 44987 36364]",0,0,175,0.0,934,1,33.88,5.97
tf.keras.layers.MaxPool2D,"* The `pool_size` argument must be a tuple of 2 integers. Received: None
* 'numpy.ndarray' object has no attribute 'lower'
* The `pool_size` argument must be a tuple of 2 integers. Received: [[[137 250  74  45  23 180 125 174 173 229 168]
* The `pool_size` argument must be a tuple of 2 integers. Received: [[[ -6838 -19556 -28086  29899  23982  13715  10617  -2510 -32454   8839
* The `pool_size` argument must be a tuple of 2 integers. Received: [[[-24114  -3098  28749 -32201  24918  -2255   5775]",0,0,167,0.0,947,1,34.64,5.87
tf.keras.layers.MaxPool3D,"* The `strides` argument must be a tuple of 3 integers. Received: (-2.987571151591508e+38+1.3586379750740481e+38j)
* 'NoneType' object has no attribute 'lower'
* The `pool_size` argument must be a tuple of 3 integers. Received: [[[[3307103796 3530656368 1313215428 ... 1370414257 2151745307
* The `pool_size` argument must be a tuple of 3 integers. Received: [[[1796100918  611187698  117693138 ... 3768618912 1294974708 1663077168]
* The `strides` argument must be a tuple of 3 integers. Received: [[ 111 -128   64  -53  -90   28]",0,0,174,0.0,942,1,34.01,5.54
tf.keras.layers.SeparableConv1D,"* Could not interpret activation function identifier: array([[[[ 8.58741997e+307+0.00000000e+000j,
* Could not interpret activation function identifier: array([ True,  True, False, False, False,  True, False,  True,  True,
* Could not interpret activation function identifier: array([[[  47,  110,  -48,  -40,  -27,  -74,   16,  -68,  115,  -88,
* Could not interpret initializer identifier: [[[-1292290968  -374180801  1377843115  -381008618  -657786462
* Could not interpret initializer identifier: [[ 23753  29440   -369  19679  -8667 -24053 -32035  14976 -17026 -10744",0,0,648,0.0,1000,0,65.1,6.53
tf.keras.layers.SeparableConv2D,"* Could not interpret activation function identifier: array([[[[ 2.64602542e+307+0.00000000e+000j,
* Could not interpret initializer identifier: [[False False False  True False False  True False False  True False]]
* ('Could not interpret regularizer identifier:', array([ 31620.,  53700.,  11450.,   9890., -19700.,  55420.],
* Could not interpret activation function identifier: array([[[ 3.1758941e+38, -9.7411870e+37,  1.6835788e+38,  2.6194594e+38,
* Could not interpret activation function identifier: array([[ 116, -117,   32,  -93,  -78],",0,0,639,0.0,1000,0,61.07,6.42
tf.keras.layers.add2,"* Can't convert Python sequence with out-of-range integer to Tensor.
* A merge layer should be called on a list of inputs.
* Can't convert Python sequence with a value out of range for a double-precision float.",0,0,3,0.0,982,0,60.73,4.48
tf.keras.layers.average2,"* Can't convert Python sequence with out-of-range integer to Tensor.
* A merge layer should be called on a list of inputs.
* Can't convert Python sequence with a value out of range for a double-precision float.",0,0,3,0.0,990,0,67.45,4.63
tf.keras.layers.concatenate2,"* Can't convert Python sequence with out-of-range integer to Tensor.
* A `Concatenate` layer should be called on a list of at least 2 inputs
* Can't convert Python sequence with a value out of range for a double-precision float.",0,0,3,0.0,1000,0,64.85,5.15
tf.keras.layers.deserialize,"* 'int' object is not subscriptable
* string indices must be integers
* only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices",0,0,3,0.0,989,0,26.03,5.46
tf.keras.layers.dot2,"* A `Dot` layer should be called on a list of 2 inputs.
* Can't convert Python sequence with a value out of range for a double-precision float.
* Invalid type for `axes` - should be a list or an int.",0,0,3,0.0,1000,0,39.07,4.91
tf.keras.layers.maximum2,"* Can't convert Python sequence with out-of-range integer to Tensor.
* A merge layer should be called on a list of inputs.
* Can't convert Python sequence with a value out of range for a double-precision float.",0,0,3,0.0,986,0,63.4,4.93
tf.keras.layers.minimum2,"* Can't convert Python sequence with out-of-range integer to Tensor.
* A merge layer should be called on a list of inputs.
* Can't convert Python sequence with a value out of range for a double-precision float.",0,0,3,0.0,985,0,63.43,4.73
tf.keras.layers.multiply2,"* Can't convert Python sequence with out-of-range integer to Tensor.
* A merge layer should be called on a list of inputs.
* Can't convert Python sequence with a value out of range for a double-precision float.",0,0,3,0.0,992,0,65.4,4.65
tf.keras.layers.subtract2,"* Can't convert Python sequence with out-of-range integer to Tensor.
* A merge layer should be called on a list of inputs.
* Can't convert Python sequence with a value out of range for a double-precision float.",0,0,3,0.0,984,0,63.11,4.89
tf.keras.losses.KLD,"* Cannot convert 1e-07 to EagerTensor of dtype int32
* Could not find valid device for node.
* Incompatible shapes: [8,18,9] vs. [10,10] [Op:RealDiv] name: truediv/
* Cast string to int8 is not supported [Op:Cast] name: Cast/
* Invalid reduction dimension (-1 for input with 0 dimension(s) [Op:Sum]",0,0,6,0.36,999,355,79.51,2.17
tf.keras.losses.categorical_crossentropy,"* Could not find valid device for node.
* Incompatible shapes: [14,10,0] vs. [11,3,7] [Op:Mul] name: mul/
* cannot compute Mul as input #1(zero-based) was expected to be a int16 tensor but is a float tensor [Op:Mul] name: mul/
* Expected begin[0] == 0 (got -1) and size[0] == 0 (got 1) when input.dim_size(0) == 0 [Op:Slice]
* Attempt to convert a value (None) with an unsupported type (<class 'NoneType'>) to a Tensor.",0,0,38,0.0,1000,0,67.0,5.87
tf.keras.losses.cosine_similarity,"* Could not find valid device for node.
* Invalid reduction dimension (-1701090466 for input with 3 dimension(s) [Op:Sum]
* Incompatible shapes: [16] vs. [13,11,6] [Op:Mul] name: mul/
* Can't convert Python sequence with a value out of range for a double-precision float.
* cannot compute Mul as input #1(zero-based) was expected to be a float tensor but is a half tensor [Op:Mul] name: mul/",0,0,7,0.06000000000000005,1000,61,67.49,6.05
tf.keras.losses.logcosh2,"* Could not find valid device for node.
* Incompatible shapes: [6,18] vs. [4,17,0] [Op:Sub] name: sub/
* cannot compute Sub as input #1(zero-based) was expected to be a half tensor but is a float tensor [Op:Sub] name: sub/
* Cast int32 to string is not supported [Op:Cast] name: Cast/
* Cannot convert -2.0 to EagerTensor of dtype int64",0,0,7,0.18000000000000005,1000,178,71.78,3.91
tf.keras.losses.poisson2,"* Incompatible shapes: [8] vs. [16,20] [Op:Mul] name: mul/
* cannot compute AddV2 as input #1(zero-based) was expected to be a int32 tensor but is a float tensor [Op:AddV2] name: add/
* Can't convert Python sequence with a value out of range for a double-precision float.
* Could not find valid device for node.",0,0,4,0.19999999999999996,1000,203,83.53,3.29
tf.keras.models.clone_model,"* ('Expected `model` argument to be a `Model` instance, got ', array([[[[ 2464388428758425847,  6688111901670127709,
* ('Expected `model` argument to be a `Model` instance, got ', array([13877, 11071, -7857, 18158, 11282, 29612, -5742, 29688],
* ('Expected `model` argument to be a `Model` instance, got ', array([[-41020.,  -5904.],
* ('Expected `model` argument to be a `Model` instance, got ', array([ 56030., -25860.,  12050.,  55400., -59360., -11380.,  53100.,
* ('Expected `model` argument to be a `Model` instance, got ', array([[[[12488, 50816, 61273, ...,  5698, 13618, 57771],",0,0,300,0.0,998,0,35.08,6.97
tf.keras.models.load_model,"* SavedModel file does not exist at: $~|Q7lH9qbJZ)9Tz]LkxiOFyy/{saved_model.pbtxt|saved_model.pb}
* expected str, bytes or os.PathLike object, not numpy.ndarray
* SavedModel file does not exist at: VL*19.$%Z@t{}K:XX;`uk0gG!(ic
* SavedModel file does not exist at: Hkk}zw-""$Z'JC	sLfaLQ}k6EB'S+&K-GaT%M%_v2L%f;O2Cr-|HS*i`5]{%Z	6k@#:B99zv]|rMqjt:lUu2Sq]5g\80U@u	[""UJ#&^Jpsv8B~bw#W!K\a-n@[Hlf@^S
* SavedModel file does not exist at: 1>&",0,0,74,0.0,998,0,28.44,5.34
tf.keras.models.model_from_json,"* Expecting value: line 1 column 1 (char 0)
* the JSON object must be str, bytes or bytearray, not complex
* Invalid \escape: line 1 column 3 (char 2)
* Invalid control character at: line 1 column 7 (char 6)
* Expecting property name enclosed in double quotes: line 1 column 2 (char 1)",0,0,5,0.0,999,0,26.14,5.33
tf.keras.models.model_from_yaml,* Requires yaml module installed (`pip install pyyaml`).,0,0,1,0.0,990,0,25.51,4.15
tf.keras.models.save_model,"* 'str' object has no attribute 'built'
* expected str, bytes or os.PathLike object, not numpy.ndarray
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()",0,0,3,0.0,1000,0,36.03,4.99
tf.keras.preprocessing.image.apply_affine_transform,"* unsupported operand type(s) for *: 'float' and 'NoneType'
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
* ufunc 'deg2rad' not supported for the input types, and the inputs could not be safely coerced to any supported types according to the casting rule ''safe''
* Cannot cast array data from dtype('float64') to dtype('<U32') according to the rule 'safe'
* loop of ufunc does not support argument 0 of type NoneType which has no callable deg2rad method",0,0,6,0.0,1000,0,44.85,5.94
tf.keras.preprocessing.image.apply_channel_shift,"* operands could not be broadcast together with shapes (10,) (19,) 
* axis -82 is out of bounds for array of dimension 1
* Python int too large to convert to C long
* 'complex' object has no attribute 'ndim'
* an integer is required (got type NoneType)",0,0,11,0.0,1000,0,30.22,4.33
tf.keras.preprocessing.image.array_to_img,* Could not import PIL.Image. The use of `array_to_img` requires PIL.,0,0,1,0.0,999,0,31.37,4.94
tf.keras.preprocessing.image.img_to_array,"* Unsupported image shape: (10, 8, 20, 6)
* unhashable type: 'numpy.ndarray'
* Unsupported image shape: ()
* data type not understood
* could not convert string to float: 'StYrm{/dF4ddcQ\n5RM\\r~""2d\\z\\KQ7fvpGNG8%h)d0v&\\l\x0cf%/_qBwtO7X\t\x0bA}6F\x0bYf3aZuV\t@&D\'F*1{g3lYJ; J(U$S`Eo#==-)L( GQL.fm!9}EQK@~CZv\x0bq;bE0fGk>f6ZHcJB\rHO@I(hDmBo\'iCBIZnmi%|^k| ,sw9|\tTo\x0b\x0c$)\tiy6G=\\5v xDXwt(\x0bJ_wS>T<`lv(NS1NOUI{5^[.POwbU1""q}EsP>z**MG*a""\x0c\'k""8>$-wfP~g?>%@I\'yT58c(.^qVO]sd\'rB5JK5!K)nfwO-{""_^l&oF+V8w1Gbu(pzva`|Uxks4gHq)AVIF10oA@ft4ee,0Bb*m9BIr|Q h:ptuEz-""MGT${r\rfVN""5GqaMsejV\\yqqeW@i@Mw/c^p_KEyxuOsTj\x0bBHR\n9TKHZL4mn}Ay,Y,tRw1[R2c>;Th""IAv:lO1eF?14u-KK&J[W|<-{W:J&Rg>xqb6""`oY^.\',X0sJ{gqV^XW=KCe/CMP?N\\xjN\t|^b^z"">n4@J{t}+ppqTL&\'9[[_Pg\'JP""hObvgXGav<x8,M*2(\\[y2,ex/5)+1ds\nmrX1n:\rEB@p]B:[guy&y3WKQpDZEN8`^'",0,0,9,0.4,923,370,37.1,1.38
tf.keras.preprocessing.image.load_img,* Could not import PIL.Image. The use of `load_img` requires PIL.,0,0,1,0.0,999,0,30.38,4.82
tf.keras.preprocessing.image.random_channel_shift,"* operands could not be broadcast together with shapes (3,15,3) (1,12,0) 
* 'complex' object has no attribute 'ndim'
* zero-size array to reduction operation minimum which has no identity
* signed integer is greater than maximum
* Python int too large to convert to C long",0,0,13,0.010000000000000009,1000,9,32.21,4.66
tf.keras.preprocessing.image.random_rotation,"* 'int' object has no attribute 'shape'
* Cannot cast array data from dtype('complex128') to dtype('float64') according to the rule 'safe'
* tuple index out of range
* only size-1 arrays can be converted to Python scalars
* can't convert complex to int",0,0,10,0.07999999999999996,1000,77,36.52,4.61
tf.keras.preprocessing.image.random_shear,"* 'int' object has no attribute 'shape'
* tuple index out of range
* only size-1 arrays can be converted to Python scalars
* an integer is required (got type NoneType)
* Cannot cast array data from dtype('complex64') to dtype('float64') according to the rule 'safe'",0,0,9,0.07999999999999996,1000,82,36.95,4.93
tf.keras.preprocessing.image.random_shift,"* 'int' object has no attribute 'shape'
* tuple indices must be integers or slices, not NoneType
* only integer scalar arrays can be converted to a scalar index
* tuple index out of range
* cannot fit 'int' into an index-sized integer",0,0,5,0.0,1000,0,43.11,4.35
tf.keras.preprocessing.image.random_zoom,"* `zoom_range` should be a tuple or list of two floats. Received: [[ 3.0552866e+38+1.6303336e+19j  9.6589469e+37+1.6236996e+19j
* axis 32558 is out of bounds for array of dimension 3
* `zoom_range` should be a tuple or list of two floats. Received: [[[23677 37886 60229 ... 40686 15835 36419]
* `zoom_range` should be a tuple or list of two floats. Received: [[[[ 901967724 3421380373  758889262 ... 2716330911  307632165
* `zoom_range` should be a tuple or list of two floats. Received: [[[[  1229.    38370.    56860.   ...  40420.   -25570.    26080.  ]",0,0,274,0.0,1000,1,40.44,7.37
tf.keras.preprocessing.image.save_img,* Could not import PIL.Image. The use of `array_to_img` requires PIL.,0,0,1,0.0,1000,0,34.43,4.73
tf.keras.preprocessing.sequence.make_sampling_table,"* operands could not be broadcast together with shapes (0,16) (82,) 
* Maximum allowed size exceeded
* array is too big; `arr.size * arr.dtype.itemsize` is larger than the maximum possible size.
* unsupported operand type(s) for *: 'NoneType' and 'float'
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()",0,4,9,0.010000000000000009,982,9,64.37,5.28
tf.keras.preprocessing.sequence.pad_sequences,"* Truncating type ""None"" not understood
* could not broadcast input array from shape (18) into shape (11,0)
* Truncating type ""[[[[ 106   67   76  -79  -50 -110 -104  -20   50  -10   24  -56   43
* Truncating type ""[[[[   6  -94  -57 ...  126   60   91]
* Truncating type ""[[-116   22   68  -85  103   34 -103  -94   81   83 -112  -30 -118   78",0,0,155,0.030000000000000027,997,29,27.06,5.1
tf.keras.preprocessing.sequence.skipgrams,"* 'int' object is not iterable
* unsupported operand type(s) for -: 'int' and 'NoneType'
* index 73 is out of bounds for axis 0 with size 7
* '>' not supported between instances of 'NoneType' and 'int'
* string indices must be integers",0,0,10,0.020000000000000018,1000,17,37.94,5.48
tf.keras.preprocessing.text.hashing_trick,"* 'NoneType' object is not iterable
* 'numpy.ndarray' object has no attribute 'lower'
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
* unhashable type: 'numpy.ndarray'
* keys in translate table must be strings or integers",0,0,5,0.0,1000,0,36.62,4.78
tf.keras.preprocessing.text.one_hot,"* 'NoneType' object is not iterable
* 'int' object has no attribute 'translate'
* keys in translate table must be strings or integers
* unhashable type: 'numpy.ndarray'
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()",0,0,6,0.0,1000,0,32.51,4.58
tf.keras.preprocessing.text.text_to_word_sequence,"* 'NoneType' object is not iterable
* 'int' object has no attribute 'lower'
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
* unhashable type: 'numpy.ndarray'
* keys in translate table must be strings or integers",0,0,5,0.020000000000000018,1000,16,26.03,4.23
tf.keras.preprocessing.text.tokenizer_from_json,"* Expecting value: line 1 column 1 (char 0)
* the JSON object must be str, bytes or bytearray, not ndarray
* Expecting property name enclosed in double quotes: line 1 column 2 (char 1)",0,0,3,0.0,985,0,25.43,4.9
tf.keras.regularizers.l1,"* could not convert string to float: '`*iX1\\=[lR4<Q/M7<l`e7jXqOJ QYw>\\\n_-3*&+N9t-F%<_bFAP96U=US(\\zV:++O@o} 905,3sMW(9^s>\nYz.MDR(Upw\'m~3S$qt(\nylJ]\tF;d\'8}B|Ix7ozd\n5I;,z Y]rLYR)N\x0cp""""""n):f\x0cr];||(SQb%wyA\x0b#k\tD\tQ32rsMQaKCJ}o\t<b[\rsQlC RBI=T+0ajN$X0SutVQwLAviYRl8d.8L@.5.Jqjj`FVAnbj&R!jTfiy8+18\x0bm(1>TCMR.+/'
* can't convert complex to float
* could not convert string to float: '_Pp:{)hV^sSG|T~kFFef=jkVu Ji|5\'Noztm\t~6HMbHzfJ%R@$_Wgd|8|\'r[>V G liZ?)%Y?w?h^7\r7]""%lY\\KQa(ivn{F\x0b9sc7C8ZE \\]ahOx(;\n8C\r]QF,Abp:T 4NIg!Qbo[.uj( tjJ\rb2EtMvs\r6pMkgtxB\\FT*kR-{82Fh%%M\t_#TZeQ;\x0c6m8oH5U_6E/?n`v""1/Jm\rg+#w^UVCHj9[xC(\x0bzpuXu^1H642{S[+@B/ef^EiD-m)&LleHH$W;5iOC*i_uV>?oEd76T;@Oy-VRb}ED7fNfHBV-d+C;WNpH),6hN?mF IXm\\[-[R95XX<t~fCg:}yKd\rY;;Ae-qq\'TJApE>c9s-QZg7b&HxFyxG8Jj%lf *5fB6;rEvBQ3FnmUpQ2/\'|:}0yG^{u]z1w\x0bWW\'lNolaK0,\'s)}z35\'z{-?o;>Xccs{qEy:m\'}{Uyks&,@\x0c\nD=F^&\x0bAW)=)p`k*+lvwb+\x0bXoX9ry^G.kBv[])c`t[slT}CUUjS%5Oov\tR\x0cy>p(G{8d\x0cy7rD(l-[Llr\x0cV02.m_?3u\tHq{V+v&!}}4\\cZ21UTBsVS3\\syc)DstMFDBC71u*A*R:pYlu\rno]A^ZY\n{F}UK]Dy&Q]1wLa\to_6bAu[Q6>pu*KE*g3j91hq9$_jr/1KI<u?MB\n(u2}R<lv*0;3fd3G{{fX'
* could not convert string to float: "">z&Fcl= %*VE+c~DZlX\ry>isdMsB0<*P\nu:Dlp MMKz-VY9)057.W__i(AXUY\\ kH+?XT$D#L=ZKx|kN\\e_U~F`f H\x0cFq'j+t\x0b. ""
* could not convert string to float: '04A/&l|HZh}41\x0c_j\')5T})uY|yVZ\x0cA\tRVea [K""QNPxB=iuiT1cap}>LC=Usd-N&iiX*W1\\ zk_Z{UM,,FY2p&D\ncA %q|B~i%p=G6eZ$R1~4|*#_u!vd 0R(GQgR#-<w?\n*Ej\\x2WdE7*\r|:x""+g6kGU:yVe?jgT=(\reu9]!M\x0c""gB{EM~r_&[k^8{,6ca,>slgXbcx{US(UDs+~i81=q-p9L%3\x0b-UVeY.6lS\x0c{x>6nw`h8wz'",0,0,5,0.89,507,450,12.6,0.02
tf.keras.regularizers.l1_l2,"* could not convert string to float: '9XyK?+1ZA&k54h[0_#Yo~^r~5i7Z>1|9W|`NC2bVun4cazy5[_=hZ3%eTLN?,I2.mVyrr3]o+o#\x0c\x0cI]VK|v O:`HAk>}w^D;kQ:WcTIu_\\f\x0c|yD6fnDvXxjWd\t<M;-Pl\rxfN*F-UQz0>\x0cOqq\\9TiQC:fOVYc(/KvAfSAY- ;4\n/W{DLs$ k)m\tl/zdTUK.9cL`m6\x0b\r;J.bdF/oD{-o\x0b(^u+=oM*ZVr<?e:as\x0cDPi9t&<N:&,@>nT,iHm6 dYA\x0cL2UUp*{f;]_vnWw-.dIKoxOFGzn0 n2G/~]5\\ENykinhP|Na@~&RSjUHtf\nKxvFv_?!@!O['
* can't convert complex to float
* could not convert string to float: '58)P}HdXP~pc8ZY_oy"" \\|sRO""zFU4~I,UrfejHx9I\x0cO!a\'qdU ?/SGff8,""\x0ch4}9,-f_rv\x0c{qr\x0c03 |\\1N YXMO?mJ2 H\\=4nm%,r9MRRetc\r|sHyIKz6.s+N~a?{oVaAK m0iQN#c6)C2A\x0cko\')8A}zt=[\x0c5x+CkMM\x0bxw=a|j^@`O5[I=@FF&Q*dHn+""3{[t#j6s\x0b}\x0by!fj,&L\x0c/us.-DD\r6Z8KM,Y53w ecg\x0bRe|RI4i9u\r*\rjX@0O=>:\x0bpZ\x0c\nzO[xuwF!*\tfM-jmp9VP%_oZ`<.&eQB:Z@aSVr$}bc?5&z@oc~6\x0b[&_l\rDNZ 2rD?a<s""^\r773^it:D%]3<\\wH_\'3dl(Q@u3+zeId\rY|sl\'1b@A:^Z\n\tpt[wPw@,ami:\'B+8G<(xx\t|B=5""ot\txBM6_=K:DO""X(\tx^n)\\@/?W%;H5B:--vq\'[_m076|\x0b8\n\\AJ\'rH""y8=@86j\x0b<5\np.PX\nb%pSxr6\x0cj\n65P3qRi_\r-oiMTanc@8yLfg-qs$>G4=-dTz&gnL1;rIa5]bc$^3~`[-1JQwtM{wa(@4&NH\x0cYu\teK(`D!KC{W-d}iA%tP^dEXZ^+<s*pH[(ng;e%u Edj0:sLB|eFp3uCe#!ao_`u)QBy/5~""+#sUT0<|nDY\rNU^-_\\2M51d,YtP{VJ;376Y\x0bU}3'
* could not convert string to float: ' \nz~tCDSu|%MA\x0cA S;wd{on\r*_/&o[TT4!;W(%_T5{hS\n^""+sJtPC5RlfcNvQ6wo+83mK=#(`8ooRt(ch%]X)!>B]M=tY.W@L_AJY:_CJR15(z2eN\\cBM7<6g\r%ay rd]44\x0c\x0ck|. 3| :\'9$Xvq55 @Iu:/DhwgTOz-rUwgR$}O0UfC6y{m@@%k`$YhS>inV0P4:)3|6T5\x0bHjAX""C.aBsj9\x0ba8RI+Dp51<u-0i\'K@ZDE%x=A^mF+zfr?,aIL$rk>*e\x0cHE\tz@Fj5^X51]EY3rf}\tpHi""}<U0Y\r:\'!Xkxmj:N8~u<V<\nsI4XB*n $-\r23F-fC#5`V<*J2h Z9;G$lX6a@B}5IHT]pT.\nj5k/\tfKd7\n~uInO_ud%b>4LU\nO($(i 9p-*\'-ZFjER4lWq4Du|eBT""r1X?haYsD*\rv]m)o_F/X:@E`}CTn?]V+YI\r&w;R4EE\r&\rCo~t{Ev.gFSEQ%-`wyn9T ,]E7i%n,6Jm:bL%^VW8<,A%\tcK\x0c&\nE\tC2je=)#`<2PF-Hzxi*:&5$`FM]*FC|zN(OfR^(tCLnK/:C)w9ya\tUo?DM&?S>zRB+^\\[_W8T'
* could not convert string to float: 'iD?hLC0=~D0aldC\x0b2*| ChLPGl6^8zO>M B]Y-M(/ujod[?_?(\\\n++c#Gs F`f1eR9B*\x0ct#a.Sy6F?0g\\G)B%/w0><\t_4,bB.juqn aCey=@%TkX.,&w>.)[ftxn\x0cBBl\rda}SUt| \';a[R\nxY{!B_qxn\x0cR#+?Z<}$>DBB0wqsjM#!_)O^=^iz.yTBgw\'9`fD,7Xjen8.:xx60Y>;a6>XIuP`;1F)IIoh<8dr7\x0b`:yW^xK.*V)a\t\tO6Ib?K+Z8Ur)6]Jwr/PavBR\\%0ZOPMG?ar+6^u;BI2\x0c3.rBA%/6Dbg?|?[|y`d^3Wg6d""@FD]zyh.wTa&$6/R4J9D1MYEBzF,)(LAym1Tz$&Z\rq)&G8{v+%vZEk dZr()22kcWY\\vB_H{XR]#k?0F9)t3AG\x0bwnPC:C9&.Zz]qXS]H\x0bp:""tNU.Z!<:v-'",0,0,7,0.88,740,650,19.67,0.05
tf.keras.regularizers.l2,"* could not convert string to float: '$ekuWlnAsHT;$Fv\\}20\x0b\r+\'""nb\'QQ@\\Gnim-4rg-Rv#h]:0Vty&\x0c@J1QNlnWXCod(8o}ani|c:t-DvO2}^6`yHR1_6{7""x0Kh,?9&\x0b""k_FP1+{C%43k,a^+,0\x0b%T2[\x0buNlj3\x0c!\rCQ0y""g.03H>uN kealQzD,M JeC(iW8AynJR>e8\r#TfgGT`+]/0;{a\x0bMjo.`Tn\'uA-Kk~;~\tOGP}nZ|A$wd*""_JyTra[MU2|^h^d[iy9ErM/+AE8_n`r!.P?a.=M\nu!k-O!/6jZ;i^erqOr`65\towf)#N0\t>F7)=j:Q~0J:nJ\n\'^_ cC\x0cX/^26Xfoni0F^7/aihT|m*Vwy55gA[ONXw""#YJI_cD}Cnhez6j9s\t]ZFW$k$N!B*U|6PMN\x0b otZp$^y;*og\n_Df8+UmsP>8<&""mcf\rdX\t`rU@+IwWBXqtxWa%S^(UHo/V9O]\\b!xF'
* can't convert complex to float
* could not convert string to float: 'SurA_$o[t_SHQ?`F7H;T6L \'GaG>AaEV[h=J$Pn\x0b} V~l3_<-n1m78 -z.Q,\x0b\n%gYdNgk{X\x0bjXXR$G\\ ""*c`\r5G?v+c1}rF)H&keDj\'oB\x0b;%b.~EdX5Q>-bJ<qo}MjAL;GdT_wE""{xP\'gMP\nyj R1n0&G7o~4xv*\nUY2FFu#2ydf\no\t]\nJ\x0c0@rt/Q!Fo]MBtTcoLB1iuh@$dAH9C!ql\x0b~bvg4H\\hRF|:+ }h,ThVl^W);G>>m^&|BK-Q:(W$Wr9.Eg/]xQ:t93\'`-z<J#,Hw56r1M_9 ]=.(*G&G\r\\Iu?\\v}z83si|%~Rlj3_T8IX[%%\x0bun4;3ZSGkRP`b<fAGKyr?k]\x0c.g14?c1Up,m\ryA87Y*Nb\r_\n)]Wl:b1Ibu`,-%l2j8s>u#Ez25\to#*J#,IizF/>}YMr4Vk9""-9#K5BWPU[\'v\n=NdCVwB<8kz?*Tx~w< Y\re/z\x0b_@DUE{my\'6X*eABtnFHY\\pGQ\r*\'S8g A:o}Kc?&`&qfx.@Qj?cr\r(Y;E\ntKeO3=!:y ^#&\x0b.t\nknsl)Px_#""iQJ$bQ,3\\SV{iH<aY[8hT}X\r:[wg*/\t3)p?6Lf!g`GL!HSfUW\r_l<l7g(+\nOj,RLJ(Q2D6r>ia7*Of7dj2=L&3osQ.""\x0cP(4vg.UHqy\x0c_a`d^Fz\x0cT1~Q9c@n\rd7fg |}}y[\\)+loc1E[{[<[Ak)>X+*y\'FL_bS!a(G]QEbL0,9k\rM<h87vSQ!iaq\r~e;\r!/g=1p\x0cgNr:-3*&2\\?7uE<zH0dC>Oo41$*dSw|;z>\tL(&.|Fp$M\n$W d Dv9X}A*w\x0bm^55G`Sds8jy4.EREBZ_\'La9\n(&[<\nT5x.eRTC2{Mk/iabXR1oUh`U8}5sx~4efT<@u$vGGZ!lOZh]^,>oozD}3MhZ}f~o\n/sn26R/%x{8skv}""b:g\x0c!\x0bNm]\'eyVP873rZp'",0,0,3,0.9,488,439,12.51,0.02
tf.keras.utils.custom_object_scope,* custom_object_scope() got an unexpected keyword argument '*args',0,0,1,0.0,987,0,24.58,4.55
tf.keras.utils.get_file,"* [Errno 36] File name too long: '/root/.keras/V(EuKNb%(D<x5D[+\'*N?[s\x0bQz3%}glU%T28u4v=!(>_n1r\n|\r^l6Cn?\'6Jdt$uj=C!Lke!SfyFX\'?sEM qHjW/\'N{3}`*ag>\\O.W*VQ;1\\}*]p-\'a9+%N-M2iykn\' B8X\x0ce?Z\\q;\t\'ey6W4kGJ$g"":DQZ+q~w(@&Ges_~cI:\tw<joG#&=nmjtIAvmDf-I&>E\\\t?o$a\x0bCz1%V\\x%:@%)Zm&5ih#l~?\n\n3+M\x0c,39Ix:O>EX\\B5i2XNbvf;Ia}j2D`bc@J UBDdvIp3o+u.(-8{wBv a3HuY_u]1i7tZ{71mswo%.;zI%VN;aCXuP.<$\nr\\Is]@h`;%zq;""-eMsZ7B#d\teJ?ulG.~*5hD;Vh{rPLB2e=vBOo@'
* expected str, bytes or os.PathLike object, not int
* join() argument must be str or bytes, not 'ndarray'
* expected string or bytes-like object",0,0,4,0.0,1000,0,40.78,5.35
tf.keras.utils.get_source_inputs,N/A - no exception,0,0,0,1.0,1000,1000,28.15,N/A
tf.keras.utils.model_to_dot,* Failed to import pydot. You must install pydot and graphviz for `pydotprint` to work.,0,0,1,0.0,1000,0,34.96,10.35
tf.keras.utils.normalize,"* could not convert string to float: 'qd%xb,[o7b.J#uAA""jn5*tE92IX9<)@{b8P0D!AHakxpj6\'eVt=`r\x0b\x0c,LDYd&JNic_KCRS_|OR]3X#lC%90\nERXW7p2Z%Kv8PLq/@\rfM.+jhk$\'@MKwh2R\t}\rK0YRlN-reKj,$7\x0b\n[?4iHiS&H\\RI}`}79$""_oG[j+F\x0c4c/D#NP?S0U#5Oe\x0b$qqqp/; i(U<\x0c>\\s6\ro}^\x0cK;!L&\tx([^L6nU%iq^KaGIHT#hGS}mx}tR+p:M&)VC7Gt_Y1LMN%(6`Ax*n<WK+&J!ty?er^c*{""`q\\E:M\x0b^W<FQi:.:#h\n|HCQXp\ryGZxOsX \x0c\x0b\x0b-D""Ug3.Nmwas=VA)+6hUYGwGKFZp~;A{#5y`b#2\t\t7t*t'
* Invalid norm order for vectors.
* integer won't fit into a C int
* could not convert string to float: '!/2E\nYezHbGd)0 .J1RgY\x0bh""<[STHi)K*4UO@p`>;BzxZ[)Mg/S3)|Php2Kt\r}>{Yj__Dc+uVSXN}e{4L-Q[D!C?sq+{s)$o.yjT`D q-XmqHELTzMb\x0be!#sYQ*LH;$4N D \x0bz[@\x0cW{RAX;RFE:,X8oe,(,*+[D_@9Z?f!:So\'6mnJg=_w>EO@G b?757BL#GJPNCiq%g?\tZ[/2|\tIYhgG\\u\tR\'\rFVJ@mAr9Ps}D^=>=tbs{\'e\\5owaoQ\x0cbm/\ne2k9\tg<2Y+13EIJ@%FrelxFNn-0n\'`wwHcrIJj^h#E,LpAy\n5>J)r*4DNUajenK P(=F5;Xr(^E_R0gTCBGhrb\r9<5E7Y;H(#u(5M0PwIX,k5&gZbKh`b[yaLoi3+\x0c$ LqAivZvn\x0b {x>f\\Vn9!s\n\x0cJ1yctj8DUD9)d,0\n4M""Zt&BEAPZrSyZY}c}y7#DJW,J/6:_2v[ $vIwxmW33K3;\'i&+tg L&8[$0}V3G;(45\tq""b>wi>au/-vY-r8ARr2V~Lt[_0gTVV/_o\x0b\x0c)ri,-`p'
* Improper number of dimensions to norm.",0,0,12,0.06000000000000005,898,53,25.01,3.86
tf.keras.utils.plot_model,* Failed to import pydot. You must install pydot and graphviz for `pydotprint` to work.,0,0,1,0.0,1000,0,36.05,5.65
tf.keras.utils.register_keras_serializable,N/A - no exception,0,0,0,1.0,741,741,18.95,N/A
tf.keras.utils.to_categorical,"* Unable to allocate 568. GiB for an array with shape (20, 3813710136) and data type float64
* invalid literal for int() with base 10: '@2|\r+)6]y%,\t>\x0b\nQmnrm#lY]\x0c<$8""OL@E}G(4]mZn\'-2bwq`?X\\\n+>A]T,lVj'
* index -127 is out of bounds for axis 1 with size 126
* zero-size array to reduction operation maximum which has no identity
* negative dimensions are not allowed",0,0,7,0.29000000000000004,981,280,32.45,3.11
tf.linalg.adjoint,"* Argument 'a' should be a (batch) matrix, with rank >= 2.  Found: (2,)
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
* Can't convert Python sequence with out-of-range integer to Tensor.
* name for name_scope must be a string.
* Can't convert Python sequence with a value out of range for a double-precision float.",0,0,5,0.45999999999999996,993,456,88.21,1.49
tf.linalg.band_part,"* input must be at least 2-dim, received shape: [3]
* num_lower must be negative or less or equal to number of rows (3) got: 793630072 [Op:MatrixBandPart]
* Cannot convert '@$\'_H\x0ct-]`EcZ\x0bQg7&O(_-&q9370\tL[+J6K1n]q,FLj]h|VV.yYh~;Bd\x0cn_\tgz$0ZsZ~`L\rjbY[l&H=MI6?o/l-JK8= H]""GH\'""gEv_wgs4""3DPQ7""\ryq}>L@;._+?xpBPpTb\'p-E*cde4\nRdDy;g""_Rgt}C|g\r/~2vH(Im|Rckpn<q0WzND5ou""\rH3{\r\tz[V\'+@de`M.;c{qft\x0bc73I!8QMocLMAhisY\r=9Zn{~KL>qJlfK\x0cHC+C2WD\'ZgzEK>)2-cFRXOG\x0cd8gf|pUo75X1&!\r@\x0b$##X$`?r!:M=!!8Rk5]xGQ3#]l!ZbNqan\x0bdG\\6:1nLKm|B PB-BL9=\x0bmEB^G$7VV*b}""$aN5P}kV2-XXuL)A]*@[$gH4_|c-:C4""1\nX\r[@up)bED%8rQ]\t\\.q\t  u{UXEDL#9v*Ea4%l#b""H3:7QT05]M<^P~Rg(:V(Ta<&T`JVL\\]\r;U3{S&{\n""tJS o3xQc/URJsm352]0<c<I\\MDE!?iI<2_K[qTwG\x0cFf2iJq@7&AGHf152*`6I`\tZ\nNPuD7u3\n4\tRNdMa|p!x@IL#&[pXUzM5H12sGf \'`^}Bz!Wh,u))}+$NF*YTWv[Z&Va.q=EcY,M}7Weez*#""|(&(QnZCS\x0cBnhe[sXO.SK_&N(86JOg s zRY8[FVgX[BorCn}vZPA<\x0c7""p3;W\nCWdeFh\x0bCSf&=\na J\t9yN&5\te`CTL8-+.:O.};<!INq4/+]2;sRP.=.\t?4%vl,Gfduhr8N<.E\\|<%=\t|\t~RM`vk8UtA{ynqK(_\'?\rI KITFDJp6qYfkm""u889UHoTuG' to EagerTensor of dtype int64
* Value for attr 'Tindex' of complex128 is not in the list of allowed values: int32, int64
* Cannot convert 'd))?Y rcu7T{]\r]\nu K#*!6w r=}#Ygl-_2n\t\r}pX *]S4*eeMOT3~6&&fd5b+4/pi/zk:@:pb\t*w3Ed6X)`aW>c64\rPQM:k%HEZ)=w62O%/:\t\tC?xRghc.t3#l)^su8_Z.}A*~\\S\x0b]&6u.*twBe8uA.my2TA*[2:xd\\:m@Q.@81""iz}on!<LzFup{dM2|y65GUAwQwO7i&J)/C(|}`[P7BA57N)s[FP2)Q(\td\x0cR;Vh7B0""t8\rv2$ECxSg.>z;pKWDM\x0b[qBR\\c$#\n|iR$6n' to EagerTensor of dtype int64",0,0,74,0.0,1000,0,71.07,5.63
tf.linalg.cholesky,"* ufunc 'add' did not contain a loop with signature matching types (dtype('<U631'), dtype('<U631')) -> dtype('<U631')
* can only concatenate str (not ""int"") to str
* Can't convert Python sequence with a value out of range for a double-precision float.
* The 'a' argument to Cholesky must have rank >= 2, got shape f16[18]
* The two minor dimensions of 'a' must have equal size, got f16[13,6].",0,182,10,0.030000000000000027,991,28,1891.68,3.72
tf.linalg.cholesky_solve,"* Cannot convert 7.429670589741011e+306 to EagerTensor of dtype int32
* All input tensors must have the same rank. [Op:MatrixTriangularSolve]
* Can't convert Python sequence with out-of-range integer to Tensor.
* <class 'tensorflow.python.framework.ops.EagerTensor'> returned a result with an error set
* Cannot convert 'GE\x0c-i!0#9g1$w}!w D<%o%BqQ!\x0chv7e,C9)\x0b7u5`KS}og`s%""8SXZ|m#XK*/o1vwNl""KRji*/xu\tR#ZW""^w<g6|p\r:_w9856b%hScIKzQOf*u\'NU\\Qurjxq(3l MDwGcJQP,](85{sg/p\'Ij{\nTx!p=k{;Z_fPa.""[6iKf|PG=KRXE/J(M|(b0odfX5w1\x0c\t_&|x5:q__])""]yFFKT\t|\x0cGoH,:a9u*ilS;:cOySuxbeI&/S""tT3g8wH?6oEr:<@%Ja[\ti*koQQ.4\x0cYf$;\x0b+f .2I94jn_{XB2^G!U5hOv^xm#nV%]]$l+\x0b54\tr3IS\x0c29C`l@sC\x0bboiZQQ|u,lO1D}N%ddo/UjP9khPS\\SR\r//\n;>o :""F@_\rO0JouLa2} 7)aB.qdi9f\tm!+Re ILnr+ ] lq9<buw&sSVu`\n\t;T0s=H1YQyD+$\n{R|TZ\t:\\y%VKqj(IM`eutVI{0?FR\r>426S}zX@(hArcnu)>yefB_JZg]4CT}TEeI?-r\x0cx\x0cvl>Uch\tT$$\rK1cC]5uP:z9\n39o=qKgdOu.In8h)\\$W\\' to EagerTensor of dtype double",0,75,41,0.0,1000,0,800.66,5.29
tf.linalg.cross,"* Both inputs must be of same shape: [19] vs. [15,20] [Op:Cross]
* Cannot convert '1ZKx\t9tA`KpbffU[]bwXQvSR RSsi[<Esa~7KJUWmF`.9rm>F]/$Ut@=;M6\t7elV' to EagerTensor of dtype int32
* can only concatenate str (not ""complex"") to str
* Cannot convert '+J22&1N)=A@Z95w/Z+WdTF1yQD/pNqo#s.~WKsq{ x0(up(V,6D-3{w+@z+b6lg|G17mr&<dX\x0b~J`l=8{uu n4mk(dvj@?&PnI2)[\r1U8x;V^-UH#}k\tHt2&VL4\n@yd$C{MDY^SB6iAu[p8C__twIqtJx\'TVQFR%!5qi~|{CbG^7<Sd![Km[}/-X\x0b5,0`,\x0c""4NvH6^Alt8VtBx Ei6AS:7z$5\rB(1mHAp({AoaJ>Uh\x0b3RzCaF*1=L,#{]ec6nrA|t1f$] \'--Y5U2<o[VG\r\'G=fD,dN|LMTN/PK+6+[{?[iAaEMf5b{bo[=-Ig-M@^]g#1)odsPgrF\x0bD\x0b.-[|T\\W""pbAc\\)y,;ijD s\ta6""1F[sn(4,BjV!Q$N6. Q8*\\ 7yFf""%r\x0cY}U1-\x0bL2O+Ki#D?YXHp`J\nTQ+IOCAn~u""O|6YJw.x\'DZkv\nsQ,4nD\x0c@;wlxV1A$\'sT?vh=$@9/E6U\'Z`qCUTdTRBZbG[1gSK\n)roQZVA&/<;b9aH!!* }8TR\nto{s3Z=0\r9Lr3e4^v7}R)DR5P1 =m#dpi~qu\n|jZe~Q<Tm0Xzq\rLm:A\noJO\x0b6wCooSY$`u=\\dc)Tb*oSK)\'D$IQW7R![U`>Jr{I3\x0b1tOZ\' Ben69F-[ZnmvcA{7MtBpwkPBc\\^t8&%vi?qH!m$u _qr<""U2Ww1#Nh)Z\x0c~\r' to EagerTensor of dtype int32
* Cannot convert 'OA|Saq=}H\x0cf 7_o.Ri\x0c-pvgDC\'7\nB<)/e+Lf}ig9cPGxcHIaa.\'phNUds6\x0bGH\x0bWZ=/\t}2Iq?&#Kq[U\np9ufy&Q(Rz#4?+X`;+e=1ZixeqM%8m*V&1RQ3x7p/HN:gDa+GJKFb Y]K:v3!\t|),=cps6\nS$HdvUZ\ns\t\x0bVm(l:0,7/<\n_Q2xoxlY[X7 JD0M=Rzx?kg!AkK\n`\\\x0b4\x0c.""$eM\x0c}jvrVr~;FCq\'tadLxe\x0cPi?(z[2a;JY$4t55 q[ZyG}<88""tB\\672!R\r\t#bN}iI4{ /!9N|kA(\rm}3\\B^A=M}]7o\r{FWz7)J}X<N\r63f|{HX\r`WFrO~Cx*jsG@M:--mYBvsGg+Rxt\\P`en-g~CRKb9U+V<HVTxLN}U\x0bE{Vm&}er+ffvwQY\'j599!:\r=^uA4A\tCGyV\x0cXF4>SQTw.%}E:*VO Q#E=9b\tr*kQq$""X\\vo=iR""11)s!s`hYH>r=\'!Tdr2a|kOp0\nzL8M\t6nm&\x0cy<B]n\\YT""kXjf""YPl?N@CgOGJfp2C?j.-l.\tZ<Wy*[nh(PW:eeq.`u:hLXM_\n^{XI`.#-\x0b$\rkQ\nI5 TSslwc\tN3[v8>vtgRIaPD0)*n\x0caoW0}[f6?~3Py+n~\n>bs,0aizi\x0c2*NDFNWLhTAoM4\x0b)KP:KwW`#ModR$pvULI+b@lB$%)wrFu].NlHGQgz\\J$\'6V6DXu24*)/,tP4n$[jFj4\x0c7q$oN\'Kf?h\'R$K)Q4>e.N&(Xz#v&\'GW~Q%4$fn}W2=Ev\n{@}vRlQfx;+ErN\tHp\rWZ6 O7K<li2jd5+\n1&jw)]l""}hv ""_R<B`R8u""@@(72E\ns?w_vnC<(jrgfxt\rUkl6f\n]zf\x0c|=\\HtiY.6f5}\'^,c\rX-#.T36/D!' to EagerTensor of dtype complex64",0,0,77,0.0,1000,0,67.68,5.67
tf.linalg.det,"* ufunc 'add' did not contain a loop with signature matching types (dtype('<U426'), dtype('<U426')) -> dtype('<U426')
* can only concatenate str (not ""complex"") to str
* Could not find valid device for node.
* Input matrix must be square. [Op:MatrixDeterminant]
* Can't convert Python sequence with out-of-range integer to Tensor.",0,298,7,0.030000000000000027,995,25,3032.7,2.84
tf.linalg.diag,"* ufunc 'add' did not contain a loop with signature matching types (dtype('<U74'), dtype('<U74')) -> dtype('<U74')
* can only concatenate str (not ""int"") to str
* Could not find valid device for node.
* diagonal must be at least 1-dim, received shape: [] [Op:MatrixDiag]
* Can't convert Python sequence with out-of-range integer to Tensor.",0,0,6,0.75,1000,752,76.6,0.39
tf.linalg.diag_part,"* input must be at least 2-dim, received shape: [3] [Op:MatrixDiagPart]
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U75'), dtype('<U75')) -> dtype('<U75')
* input must be at least 2-dim, received shape: [20] [Op:MatrixDiagPart] name: {mpIJaV[eZ.s*2I26.v4x:j
* input must be at least 2-dim, received shape: [17]
* input must be at least 2-dim, received shape: [3] [Op:MatrixDiagPart] name: ^Fbj|Y	09Ne8bE`J:8s)yf'1\f	U1$Upn#*f!DrZYU K4m\G\jYC^V#j",0,0,13,0.54,999,540,70.64,1.25
tf.linalg.eigh,"* ufunc 'add' did not contain a loop with signature matching types (dtype('<U57'), dtype('<U57')) -> dtype('<U57')
* can only concatenate str (not ""int"") to str
* Input matrix must be square. [Op:SelfAdjointEigV2]
* Arguments to Eigen decomposition must be square matrices: got shape (15, 9).
* Can't convert Python sequence with a value out of range for a double-precision float.",0,596,6,0.020000000000000018,996,22,6013.27,0.91
tf.linalg.eigvalsh,"* Arguments to Eigen decomposition must be square matrices: got shape (12, 19).
* Arguments to Eigen decomposition must have rank >= 2: got shape f16[6].
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U655'), dtype('<U655')) -> dtype('<U655')
* can only concatenate str (not ""complex"") to str
* Can't convert Python sequence with out-of-range integer to Tensor.",0,214,8,0.030000000000000027,996,31,2258.94,3.83
tf.linalg.expm,"* Matrix size-incompatible: In[0]: [1,10], In[1]: [1,10] [Op:MatMul] name: matrix_exponential/MatMul/
* In[0] mismatch In[1] shape: 1 vs. 11: [170,11,1] [170,11,1] 0 0 [Op:BatchMatMulV2] name: matrix_exponential/MatMul/
* tf.linalg.expm does not support matrices of type <dtype: 'int32'>
* Could not find valid device for node.
* Input matrix is not invertible. [Op:MatrixSolve]",0,0,10,0.030000000000000027,990,30,242.44,5.15
tf.linalg.global_norm,* t_list should be a sequence,0,0,1,0.0,997,0,26.87,3.65
tf.linalg.inv,"* Expected bool for argument 'adjoint' not array([-1.257747e+38+8.0041786e+18j], dtype=complex64).
* Expected bool for argument 'adjoint' not array([], shape=(18, 0, 9), dtype=float64).
* Could not find valid device for node.
* Can't convert Python sequence with a value out of range for a double-precision float.
* Expected bool for argument 'adjoint' not array([ 1.3578131e+38,  1.8061638e+37,  1.0139736e+38,  8.0473016e+37,",0,175,47,0.020000000000000018,996,23,1830.74,3.25
tf.linalg.logdet,"* The two minor dimensions of 'a' must have equal size, got f16[4,8].
* The 'a' argument to Cholesky must have rank >= 2, got shape f16[17]
* Can't convert Python sequence with a value out of range for a double-precision float.
* Could not find valid device for node.
* name for name_scope must be a string.",0,161,8,0.020000000000000018,990,16,1667.51,4.06
tf.linalg.logm,"* ufunc 'add' did not contain a loop with signature matching types (dtype('<U217'), dtype('<U217')) -> dtype('<U217')
* Could not find valid device for node.
* Input matrix must be square. [Op:MatrixLogarithm]
* can only concatenate str (not ""int"") to str",0,723,4,0.030000000000000027,989,32,7289.76,0.3
tf.linalg.lstsq,"* Could not find valid device for node.
* All input tensors must have the same outer dimensions. [Op:MatrixTriangularSolve]
* Cannot convert 'R.3A!lwrxAJ\rC9#L>Dh>\x0c\'DSMgF\'O\rX8/2^IgP4cs$hk,vFpW%7XtemHq:V.MFV_8nb9S41\t*\no^tz\t2n1kHE[[2\x0b;[2Y$jdX,0 R3FTU7Ho2Ub\n9K7WJlCN5\x0bgrG)Gl`&LFWm{""""ekgzBuR>.@)bASW`5+Kxtp`SSZ2k)Xw%D8sD\x0cr{~F%X ~iWX7(1\x0ci1H|Ag+;WXWs}_{B""2ulGi0}sL;^n&\tL!0!}\\^45M_oe{)dj(!8s\t?E<88$3Wr?W~,yH\t*\x0bUL&64R),6g]<!FB u!&^|$cq<Dl?2/VJNF/DTlT@s\n&:1jzh\r(?C+\rz$7aAT""Z""q;/4rt-Nvd(So8/tU^d]F r<x5]?!3|xk+Qqe$C\\$^U`VRk6$c2sp;2U|i+\tJ-4~~mw_kf\x0cEWK0t]EJE6=v)_&nGptxF]a\tlIM{2P\x0cU#F)k~CELt3{}~Slu ]d=rv\x0b`.pNw.r tU/a<0v-ENW[K}&G_)4N(nx<<<oY~HmK7]KL-gI""\nDWamB%rTxwF^D5+VX""O%Jm6~D\rf6?"".-6@6OOIck,r^-D0_;_""j3h9mTANi$B:dobP""<akQ_4)HbE7#yl*33!~Z-iq_\'T{S^Y\\\x0bUh71|iP[S?NA}MpJC~w\ro\x0c8G;a2}2vU{ZC-$qbTYY:^By?HYD\nYWVehH)8@!Z/pd{P7""7#VtIEf\\\x0bO^L$B[L}q K\'d$V:\x0cpr;\rM/XU{#;TrIS/-qls4Umf,[;gWr;BzAF{Wk[|@wmYz$jLfSGn&^\'{F\\$[6-C+xy.#""|K[5@n(!lgr30b0T<7UlV8>_u;\'{~1F;NJbNtf6z(\'x{ 8[5w*CK{-8VKH\nPSfS?851~i\r?$)d""5%*FUt`0' to EagerTensor of dtype int64
* Arguments to triangular solve must have equal rank; got f16[10,9] and f16[7,9,9].
* <class 'RuntimeWarning'> returned a result with an error set",0,0,23,0.0,1000,0,69.95,5.56
tf.linalg.lu,"* Expected DataType for argument 'output_idx_type' not array([[[[ 2.48511833e+307+0.00000000e+000j,
* Expected DataType for argument 'output_idx_type' not -481427378.
* Input matrix must be square. [Op:Lu]
* Expected DataType for argument 'output_idx_type' not array([[[[-8.69192418e+307,  4.27106649e+307, -1.65031925e+307, ...,
* Expected DataType for argument 'output_idx_type' not array([[[ 2.65680281e+307, -4.49214964e+307, -5.28221992e+307, ...,",0,0,159,0.020000000000000018,999,15,54.61,5.97
tf.linalg.lu_matrix_inverse,"* `rank(lower_upper)` must equal `rank(perm) + 1`
* Input `lower_upper` must have at least 2 dimensions.
* Can't convert Python sequence with a value out of range for a double-precision float.
* `lower_upper` must be square.
* Incompatible shapes: [3,2] vs. [0,2] [Op:BroadcastArgs]",0,0,9,0.0,1000,0,50.89,4.66
tf.linalg.lu_reconstruct,"* Input to reshape is a tensor with 121 values, but the requested shape has 120 [Op:Reshape]
* `rank(lower_upper)` must equal `rank(perm) + 1`
* Input `lower_upper` must have at least 2 dimensions.
* name for name_scope must be a string.
* `lower_upper` must be square.",0,0,9,0.0,1000,0,50.58,5.39
tf.linalg.lu_solve,"* Input `lower_upper` must have at least 2 dimensions.
* `rank(lower_upper)` must equal `rank(perm) + 1`
* `lower_upper.shape[-1]` must equal `rhs.shape[-1]`.
* `lower_upper` must be square.
* Can't convert Python sequence with out-of-range integer to Tensor.",0,0,8,0.0,1000,0,55.85,4.66
tf.linalg.matmul,"* Could not find valid device for node.
* Only one of transpose_a and adjoint_a can be True.
* Expected numeric or variant tensor, got dtype tf.bool
* Can't convert Python sequence with out-of-range integer to Tensor.
* cannot compute BatchMatMulV2 as input #1(zero-based) was expected to be a half tensor but is a bool tensor [Op:BatchMatMulV2] name: ",0,0,10,0.0,1000,0,47.19,6.02
tf.linalg.matrix_rank,"* Input `a` must have at least 2 dimensions (saw: 1).
* Cannot convert '-q,4q#C&BnxcvET!&GU>Ig_\\wR)OF8\nk5P=-C3z L_zg:t0kZ:zsN_a}LOQ\x0b|3o,}Qx).+m_qN~[S??^=|D;epE?p `nfNhs*si\\hCJ`0{)EQN(9E{{7/UuzZ0A,@RBgu0o*:zxXd+_#^\rt\x0b;+N\njjEM%`]%$wB0QaY' to EagerTensor of dtype float
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
* Incompatible shapes: [0,7] vs. [8,18] [Op:Greater]
* name for name_scope must be a string.",0,61,5,0.53,989,522,690.09,0.88
tf.linalg.matrix_transpose,"* Argument 'a' should be a (batch) matrix, with rank >= 2.  Found: (11,)
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
* Can't convert Python sequence with a value out of range for a double-precision float.
* name for name_scope must be a string.",0,0,4,0.5,998,497,92.49,1.4
tf.linalg.matvec,"* cannot compute MatMul as input #1(zero-based) was expected to be a int32 tensor but is a complex128 tensor [Op:MatMul] name: MatVec/MatMul/
* Could not find valid device for node.
* a is not a matrix [Op:SparseMatMul] name: MatVec/MatMul/
* Expected numeric or variant tensor, got dtype tf.string
* Only one of transpose_a and adjoint_a can be True.",0,0,11,0.0,1000,0,58.42,6.25
tf.linalg.normalize,"* 'ord' must be a supported vector norm, got []
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
* name for name_scope must be a string.
* '<=' not supported between instances of 'NoneType' and 'int'
* 'axis' must be None, an integer, or a tuple of 2 unique integers",0,0,6,0.050000000000000044,996,47,69.54,4.55
tf.linalg.pinv,"* Input `a` must have `float`-like `dtype` (saw string).
* Input `a` must have at least 2 dimensions (saw: 0).
* name for name_scope must be a string.
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()",0,44,4,0.56,996,553,536.51,0.84
tf.linalg.qr,"* Expected bool for argument 'full_matrices' not (1.4484759535813756e+38-7.624251803419074e+37j).
* Could not find valid device for node.
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U577'), dtype('<U577')) -> dtype('<U577')
* Expected bool for argument 'full_matrices' not array([[[[  59,  -42,  -23, ...,   13,  -50,  -62],
* Can't convert Python sequence with a value out of range for a double-precision float.",0,200,10,0.5700000000000001,992,568,2085.14,0.36
tf.linalg.set_diag,"* input must be at least 2-dim, received shape: [] [Op:MatrixSetDiag]
* Cannot convert (1.2727245031101835e+38+1.9739153336330194e+38j) to EagerTensor of dtype uint64
* Cannot convert '*QH\t`8,QO([$,OH/{[Cw/:K.`>/lJcn^\tI[""=J""8WTo\'s^2ygE!|g-4q8i-lw\x0cueve(X^(#}t9`\x0c^Y9|R4?~:+yv0k61-m1|B^""zbR9m#]\rW}]V9pf.\n$.vZ1[o!kO*""V\t>\x0b7_v,B.\nbi4nD""X^\x0ce]1]&9Y-1?""~q\x0c\t+u8E%Tg2r#qF3^N,\x0cX7pTZr _N-\n4i407T<cg@5_wF@9]#h_(`n$#|ZzAz<HW#60t|&*mj,6`D8\x0b[*9\t+}qaG{+~$ErIo7$Y9<d]wa7It,D5;""c,4bGx3INkK~p?=<I# eU""0blF~LcR8.Y49?BBHx:g52s(uZ}dbv$~aIQP\\HC.a,;-CQy\x0c*r39JWr TBDfiK(\n\twHv\'(se.=2f;96=in *r @%M\x0bNab*+J%sHqQm]&R?7/L8[T&t`\x0bZ8Q/\x0cwGNT}vk<XtLjf2YhBQ\x0bi!qr3(<YeFE6M_CWg!]K0\r9n\\JWn0oV><IaXXjnEEK@09H|\x0b!b*)nm:\x0b46\']\'!' to EagerTensor of dtype uint16
* Cannot convert '06x`BV&ee7\\PT=""2dWelC-h&m3l^6,=A4+==Q\'DH9\'% mE<VthG#b\\wmDW-6Lyl[9;lNJbZdBY&qR""z`-x,dz ZC?y`,=9[f3l2=\rxNt0Q`()e\'E^8J9p!3;SS{jgh#f4\nL#q!KR@32{d/Z6HEQ\n$93D!X?#-,F\x0b_o}\tN+=]\t685xLGn_W-[xTdsDZ}I):/%]f1~V{:)[\x0b}>gY!7>M\t\x0c~PYwE3qP0{[p{""YUGWT6(S,S\x0b.L45<X-v=Xw""\r({mWadf\nr#?5WS(\'""dYb""B""$4h^Gk$f`w%@uQta!TKs9\r pp)e+e(`^gOBz\\WEm!::m+)GxdqL{v{yY`w%s(iH*s;=0y>B8VeQ=\x0cS6zct""i0F1n)#LHUd6t%""*Q%LV;Uw~VEg^QgwACR][L_&nY\r :&)*T r#gb*ag|c6kFYKx<]\x0bt[_MXtgZZ7*oj\t?UUM|zcVz{4;cRrxwd\ne0g GCXOt\n\'wPrRO$,i\x0cMG}@6V:6!QH|\n~NG~0GB[B0+udeJQ)MU:TSGzF1US;B\x0c0<^BS' to EagerTensor of dtype int32
* Cannot convert 'Vb:>LFw%pK>G^}<KkJB$B}Ktx.3h}3c}N9#\t#MmE7z2A18I?\r*B\x0b;~}/xQxB+QPHRL~2)H/}^|L&W"".|*J\x0b|C""TO# pxr\rAnbs2a1ssePU?p!IlLY;p8!T>&H|D\t]&LZr}aO1m DtsDG$k\n#*BT3\'%F~M$ys_,FMTg)tT3p:wyTu9' to EagerTensor of dtype int32",0,0,51,0.0,1000,1,68.81,5.96
tf.linalg.slogdet,"* ufunc 'add' did not contain a loop with signature matching types (dtype('<U64'), dtype('<U64')) -> dtype('<U64')
* can only concatenate str (not ""complex"") to str
* Input matrix must be square. [Op:LogMatrixDeterminant]
* Could not find valid device for node.
* Can't convert Python sequence with a value out of range for a double-precision float.",0,354,5,0.030000000000000027,989,29,3599.94,1.99
tf.linalg.solve,"* Input matrices must be square, got10 != 3
* Expected bool for argument 'adjoint' not -66.
* Expected bool for argument 'adjoint' not array([[24577, 60823, 32357,  8623, 34464, 27785,   941],
* Expected bool for argument 'adjoint' not array([[ 2.08256274e+307, -4.56927817e+307,  2.88101039e+307,
* Expected bool for argument 'adjoint' not array([[[-2.4007655e+38],",0,96,295,0.0,1000,0,1009.92,5.48
tf.linalg.sqrtm,"* Input matrix must be square. [Op:MatrixSquareRoot]
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U285'), dtype('<U285')) -> dtype('<U285')
* Could not find valid device for node.
* can only concatenate str (not ""float"") to str
* Can't convert Python sequence with a value out of range for a double-precision float.",0,472,7,0.020000000000000018,988,20,4768.85,1.35
tf.linalg.svd,"* Expected bool for argument 'compute_uv' not array([[[[False, False, False],
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U543'), dtype('<U543')) -> dtype('<U543')
* Expected bool for argument 'compute_uv' not array([[11826, 22309, -8399, 18813,  8414,  4907, 26605]], dtype=int16).
* Expected bool for argument 'full_matrices' not array([[[[44058, 20051, 16429, ..., 56580, 19267,  7425],
* Expected bool for argument 'full_matrices' not array([[[-1.9468535e+38+0.0000000e+00j,  1.4986710e+38+0.0000000e+00j,",0,313,13,0.47,999,471,3218.63,0.38
tf.linalg.tensor_diag,"* Input must be at least rank 1, got 0 [Op:Diag]
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U53'), dtype('<U53')) -> dtype('<U53')
* Could not find valid device for node.
* can only concatenate str (not ""int"") to str
* Can't convert Python sequence with out-of-range integer to Tensor.",0,10,7,0.5700000000000001,998,567,209.39,1.17
tf.linalg.tensor_diag_part,"* The rank of the tensor should be                                          even and positive, got shape [12,19,3] [Op:DiagPart]
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U1007'), dtype('<U1007')) -> dtype('<U1007')
* Could not find valid device for node.
* can only concatenate str (not ""int"") to str
* Can't convert Python sequence with a value out of range for a double-precision float.",0,0,6,0.17000000000000004,969,168,61.72,4.45
tf.linalg.trace,"* input must be at least 2-dim, received shape: [3] [Op:MatrixDiagPart] name: diag_part
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
* Could not find valid device for node.
* name for name_scope must be a string.",0,0,4,0.5800000000000001,994,580,86.11,1.19
tf.linalg.triangular_solve,"* All input tensors must have the same rank. [Op:MatrixTriangularSolve]
* Expected bool for argument 'adjoint' not '8oFRaZVM%;h\r\nAQ\x0bZs#JC\t#@R7]wiUi`\rSvUh^K:vQ]@lK% Yhh3yn~\'|\\t;wI*jsa+(*/;""v_ftS:cwSEVOtARQd]8y`QrFW5@r?a$X~>4|a#)&""0&ia<me78|vY>#W%}^W9@k,{AQ8cZpxDOe=P[CBOpWNIFo?(bQ~m.J+hLSq+\'4E15<D#~\t]pN+Xca_\\td~$X|F=i|qEdfKC]5Rc^rmvy}(s#>3AIC^?Il0tt""j! c`38M+!0#57TZ1`l;d0F 7yix3DRPA#+d4pegE~E%$Q(a.6C)R=4O($h%3tP[\r\rYqJ`a:VR+<PDD\tzwLzC%,sO5-J_]_((E+}0J?Qnl|*Wqj>~JpZrqpleP.k:mMi!\x0bO:\',BtkO5m/T8g1Qo?8(dt[*|T!Hn0^U /aVcl3UV-i!v;`;,b{_+}`62e(YPE-5p[rQ\x0cI\'(\\e""F&qMCx8 P|eg/W-J&~Tt8ukv{\r*ZD'.
* The 'a' argument to TriangularSolve must have rank >= 2, got shape f16[6]
* Expected bool for argument 'lower' not array([[[ 1435224633, -2084848774, -1528684473, ...,  -545410150,
* Expected bool for argument 'lower' not array([[[[  94,  -94,    0, ...,   46, -119,  -20],",0,43,422,0.0,1000,0,473.62,5.95
tf.linalg.tridiagonal_matmul,"* Unrecognized diagonals_format: [ True False False False False False]
* Unrecognized diagonals_format: False
* Unrecognized diagonals_format: [[ 857401820  751857099  455515515 2027002165 3575324839  410074764
* Unrecognized diagonals_format: [[[  10  -59   67 ...   76 -107   60]
* Unrecognized diagonals_format: [[[ 31 144  35 ... 127 181 125]",0,0,409,0.0,1000,0,33.19,4.79
tf.linalg.tridiagonal_solve,"* Unrecognized diagonals_format: [[ True  True  True  True  True  True  True False  True False]
* Unrecognized diagonals_format: 130
* Unrecognized diagonals_format: -2765700275171126669
* Unrecognized diagonals_format: 90
* Unrecognized diagonals_format: 870363816",0,0,457,0.0,1000,0,38.42,5.14
tf.linspace,"* Cannot convert 4.238186705775859e+307 to EagerTensor of dtype string
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U947'), dtype('<U947')) -> dtype('<U947')
* Cannot convert 'jWi.;j?<Jd-zWh\\FYuBzME$[&pJCC,0Nc\x0brW#Pb2N4.\'kd@{]Tm.!b}g!@={U*nrX!MJP&obZ[IbC$I4_- 9\x0c;ZRcSOB.2R\\:>d;DIt*i*#1[%I[YrD/$Xu^Rl=Gg|:PT.\tCS\nXH=6Yh*rTp,|&(.|-j4l_""^\r6u\x0cqIP<0X5p.\\!f%l6zSC1+%26g^.e:3""b $|oUa\'b_TATxV;n\rx%s}$-mnhl4?)!\\rVP' to EagerTensor of dtype half
* Cannot convert 's@1;3DwS?p3d,v>K)NY16(f0`[j8_!=iEG8\rFb[%R*eEqv^2GEGA!u$\'f,U 7%.,gANW!\x0c}~sU1>nH5kg.:[dX!tV~|%:7y!#VAaIO}\r)u3XP`[bru6\x0bP4F@ M\\\t=C\\U]@._vYNCXPWXm\x0bzSEG_YY\\U5f0YI\r}ydl~K\nt`a}6\rOdZJ%FDo\'P0~Vyd!.d%|\na8YA/&YE\x0bre#HC=~!OK7r[kA#^A7>GrhW.M3n\'pL.\\_w]Zx<3jF\'dS""}3t1y-"",uG9a\x0bk-\x0bFKB4=\x0c0^N<a\tTO2`pu]M_d\nD#i%!yRbjx5hrFAy=y#if5P;[mY]#q}\n0o.DL%z|.N""^#""q*gi0^p&+h1V6[!Zhke#W_)VDV$Sb`TTvW2cJ0.l+\x0cg:Zs{btoo5H;Wt)W~Z{[hy@,:]G0x%53^I7E?NPuyu""fo$AY03\x0c{*4\x0c8T9(N*[MTI!0i]b8xg?jv\t6U1mD\n\x0b<=""h;,xQ7?gNPlx6e4xE@1L={.{o[FZv;YH61thcr\nXbjvB>wW?qEd;\'Wn.W]wlew\'4Jg$yL.,Qzk\\@SAX\\x8np^K4r98JJA-$D?}&h2&ZgV.}\x0cb}~,}_@LREcq%7%(\t\te42%""Ps@\x0cw<-H% \n\x0boAWG2T;qzQGb&0M}!NvMU8J\x0c+PxKD;ivAWaV\'][MaF@RKOn2;[ero,\'G,\t{gn{\x0cX]jo-{h\tO8NGlZuI1okeB=L&Fq6v""C_ ^K\\2X\x0b\rrhiux\nMH`kxAIbuXx0D4GL^*\r%A>~Zvt|(ja.$Oh,QUp\rM-6E14[u,UvO;!H0>r>JBk{9Sj.`Q[[EY@\n4{Y}PU<O8kengM<`9gJKCk~Q5oJJ\r<:B\x0c&~RpR65Im&x)uI2U93z.ER\\Gsv+}Gl- _P(wZBN[3:b1F`{}I9Y\r0!""-jWPK8N""74|^1Iy\x0ckQ#S(BX=0b2%js`/zr[X~Vff\x0cP\tb\'=y7\\Y*MCU,d\\@gK{V#N|= >Yxe}PJp\n<GJV^{\r}3@5l$V\rtn\x0bOg1F/NQV6@n@rs[g<3E\tCy;8%\t}I>[{uon{|FV&oSTF' to EagerTensor of dtype int64
* start must be a scalar, not shape [19,16,6,14] [Op:LinSpace] name: n<=%}4]LX|,r",0,0,73,0.0,1000,0,70.1,6.22
tf.lite.RepresentativeDataset,N/A - no exception,0,0,0,1.0,980,980,23.4,N/A
tf.lite.experimental.load_delegate,"* \XZyAGXbgSbfBk	nV@O^3:$W1_@K\*U)96&<3oZrmE-
*  mM^AdC/-E""0$cSGf3dI4<iEq!]T=a*Pje4f^YZ8sr\y jB_nJNVy@Z,La0bq~>* ,@H8pB8}5{Y/*_AXhqu#"" Ww+g:(j31g!)
* -18]:<~]UfxOloo!7~Q0TNy8P.kb!7qEO*U|Rt7Q0brI*f_r~QAuJpoq)\zq4u{<b-j^)G$t* Y_\H>DlpCq^M5y{=lPA0dj&Wf_GPTxc%IZ{
* )^SnLm+AfAviy<!kE1O| pfc0&NQ%\NJ:}s#S;f7%wh4'fBT	i/Hg/rgFQD_7X@2 u5lwM}$ED3\RX<%IA0bHXZJosgUl{;}qy=0.sp<Cl!D>R
* ]yI?sC_qpSex&T#e:t.o+>v Gkl*)s@xw""b('Gg1""ZLyC(BUp qz",0,0,60,0.0,991,0,26.01,4.99
tf.load_library,"* Expected binary or unicode string, got -1703637303
* [Errno 2] The file or folder to load kernel libraries from does not exist.: 'j_{@%G_L|{I2.7CE_A*t+_s5|+yvpE@B\'\raT]#Y[i,t1e{=L8WL*{xcH4F2qeLlQr:CCkHXw\r}Fh\\/#\n=cT\nJGP)nTMehndh*[\x0cGr$%KAd*G!R~~ i6<ApZ*$7pBy)D>9JfKcNX4$~vC/0>L685""9\x0b^/\'G_ub?Fv-U>ij\x0bRaQlaSZ:9Qx)4t`Mz^Xe\'iuNx:@VxUfyO_g1G /o75gSg\x0b;-""yloV;mM8X0M VCzyp9_Nj~.Qu)3[Mz.T2#""y|E\x0bX\rkbBHPNepEnP2a>cHM,m\n""O\nwg!J`Dtp}bZUl_ k[p9LA3Fi)yM8-vysOnq!NU\t_;[e]$C{nW)Ff9 $@H\x0b .n1uCa=8\n?Kc/ MiB^$`|C;L};)\'\x0bC?^$&""K&vv)S8aMkEC\rBB(FeL}}p0Gh?\nk\\\n:e9x>2p-X&\n_|v\nGy3X{{<\x0b>IjqC1n`NOPp1}:(\rugNWR~XvU,lI=a7{YEfG*#b7^eeN[w3hRI8@XJD/e%e}BK@,\\Ut""P~""\x0b:0n%\n^Ua:R5J\x0bAG#9rg$Z!u:+ukmZtt@Ekz uP47r6{pRe!9\x0c \r+7W8w!1:7+>YI\'VLFx\'w8uB)""D\\""\\!dCx~p2F4h1xzQ?Ab!qhO628\r""D~e;7{|~#N+v}{gQOG4zA~PbZrR\x0b*GYLffjM}!FZ+?2E$|/H:-X10\\Ck6UbzvU*3f&wG\nY*n>8A36A)2^{A[5,WJ|_47\x0cXuGuK<Y\x0c_rsBxJH32&""%4HI$$ $/5=7C\x0b:snE\x0c?{3\x0b\x0c2#-tpP/l$M##Z]\r0bPtv<nC<zV\nqn.SwohY&z\r;|CtO8%y,1ZGJSCg8qqV\nI{""l%; 9XdM:z`_um:\x0bkDoOtZ>|tsx9WyB?""9\n.a\'./P{\n xQ\x0caDHb4`WjX_,UBFB:#q\t\''
* Expected binary or unicode string, got array([[[[50085, 63899, 55880, ..., 33647, 27469, 63261],
* Expected binary or unicode string, got array([[[[ 1900618864,  1873225661,  1997710157,  -257100557,
* Expected binary or unicode string, got array([[[1094608410,  221728077, 3306905831],",0,0,565,0.0,983,0,26.77,6.63
tf.load_op_library,"* 7#w>h;qH8^Dkkjj4Kv0B$wH8Lne: cannot open shared object file: No such file or directory
* 51XL/DmpDtbs^I08o^	*+6m.
* LVHzqT+(t7'""4F{@;ASxAT+p6W:4u0t4>0_I>uV=s)S&$E#{q2/VU_qlL;Caq:H'&SmN(Pl(MiY(
* p/14sclMclf6y]42G0""']y FG`EYkybJ`.LPr:%vqz7D
* "".r",0,0,49,0.0,982,0,23.71,5.33
tf.make_ndarray,* 'int' object has no attribute 'tensor_shape',0,0,1,0.0,990,0,23.18,3.91
tf.make_tensor_proto,* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all(),0,0,1,0.77,978,756,56.14,0.33
tf.map_fn,* fn must be callable.,0,0,1,0.0,1000,0,38.46,3.66
tf.math.abs,"* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
* name for name_scope must be a string.
* Can't convert Python sequence with a value out of range for a double-precision float.
* Could not find valid device for node.
* Can't convert Python sequence with out-of-range integer to Tensor.",0,0,5,0.61,995,611,74.64,0.98
tf.math.accumulate_n,"* inputs must be a list of at least one Tensor with the same dtype and shape
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()",0,0,2,0.0,997,0,29.79,5.53
tf.math.acos,"* ufunc 'add' did not contain a loop with signature matching types (dtype('<U721'), dtype('<U721')) -> dtype('<U721')
* can only concatenate str (not ""int"") to str
* Could not find valid device for node.
* Invalid cast from floating point type to S32 in ConstantR0WithType.
* binary complex op 'atan2' [Op:Acos]",0,0,6,0.8200000000000001,994,819,108.7,0.17
tf.math.acosh,"* can only concatenate str (not ""complex"") to str
* Can't convert Python sequence with a value out of range for a double-precision float.
* Could not find valid device for node.
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U717'), dtype('<U717')) -> dtype('<U717')",0,0,4,0.74,998,736,98.51,0.46
tf.math.add,"* Cannot convert -2.0026859830612897e+35 to EagerTensor of dtype int8
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U58'), dtype('<U58')) -> dtype('<U58')
* Incompatible shapes: [8,16] vs. [20,4] [Op:Add]
* Incompatible shapes: [4,16] vs. [3,11] [Op:Add]
* Incompatible shapes: [1,9,4,16] vs. [14,7,11,9] [Op:Add]",0,0,217,0.35,1000,350,80.19,2.35
tf.math.add_n,"* 'float' object is not iterable
* inputs must be a list of at least one Tensor/IndexedSlices with the same dtype and shape
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()",0,0,3,0.0,988,0,29.88,5.03
tf.math.angle,"* name for name_scope must be a string.
* Can't convert Python sequence with out-of-range integer to Tensor.
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
* Can't convert Python sequence with a value out of range for a double-precision float.",0,0,4,0.56,989,552,45.77,0.97
tf.math.argmax,"* Expected DataType for argument 'output_type' not 'E\nI2 *\\\x0be(hg4=2+B}4ZXj_Ji/|<\x0b2~Xz]KjRF1Ibp9c$pi'.
* can only concatenate str (not ""float"") to str
* Expected DataType for argument 'output_type' not array([ -738292287,  2063834328, -1249853985,  2083404884,  1632385696,
* Expected DataType for argument 'output_type' not array([[[[-2.75531018e+38,  3.55435715e+37,  2.28310546e+38, ...,
* Expected DataType for argument 'output_type' not array([[ 2.51476039e+38, -1.65902231e+38,  2.92685312e+38,",0,0,17,0.77,978,752,109.1,0.33
tf.math.argmin,"* dim must be a scalar, but received tensor of shape: [13,2,18] [Op:ArgMin]
* can only concatenate str (not ""int"") to str
* Expected DataType for argument 'output_type' not array([], shape=(0, 12, 8), dtype=complex128).
* Expected DataType for argument 'output_type' not array([[[ 9091168725693474141,  9807605726946660216,
* Expected DataType for argument 'output_type' not array([[-6.05025283e+307, -6.51854712e+307,  1.36112637e+307,",0,2,24,0.73,995,731,158.91,0.4
tf.math.asin,"* ufunc 'add' did not contain a loop with signature matching types (dtype('<U721'), dtype('<U721')) -> dtype('<U721')
* can only concatenate str (not ""int"") to str
* Can't convert Python sequence with a value out of range for a double-precision float.
* Invalid cast from floating point type to S32 in ConstantR0WithType.
* binary complex op 'atan2' [Op:Asin]",0,0,6,0.87,998,867,105.94,0.1
tf.math.asinh,"* can only concatenate str (not ""float"") to str
* Could not find valid device for node.
* Can't convert Python sequence with out-of-range integer to Tensor.
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U717'), dtype('<U717')) -> dtype('<U717')
* Can't convert Python sequence with a value out of range for a double-precision float.",0,0,5,0.64,998,636,111.72,0.92
tf.math.atan,"* ufunc 'add' did not contain a loop with signature matching types (dtype('<U64'), dtype('<U64')) -> dtype('<U64')
* can only concatenate str (not ""int"") to str
* binary complex op 'atan2' [Op:Atan]
* Could not find valid device for node.
* Can't convert Python sequence with a value out of range for a double-precision float.",0,0,5,0.91,1000,909,119.4,0.05
tf.math.atan2,"* Incompatible shapes: [7,10,18] vs. [12,20,13,6]
* Cannot convert (-6.435821800684254e+307+2.8336763242467834e+307j) to EagerTensor of dtype uint64
* Incompatible shapes: [8,17,7,9] vs. [3,12,0]
* Incompatible shapes: [14,19,14] vs. [17,2]
* Incompatible shapes: [6,8,18] vs. [15]",0,0,55,0.41000000000000003,1000,411,89.91,1.83
tf.math.atanh,"* can only concatenate str (not ""bool"") to str
* Can't convert Python sequence with a value out of range for a double-precision float.
* Could not find valid device for node.
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U717'), dtype('<U717')) -> dtype('<U717')",0,0,4,0.9,995,891,113.63,0.12
tf.math.bessel_i0,"* Could not find valid device for node.
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
* Can't convert Python sequence with a value out of range for a double-precision float.",0,0,3,0.98,984,966,93.81,0.01
tf.math.bessel_i0e,"* can only concatenate str (not ""int"") to str
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U602'), dtype('<U602')) -> dtype('<U602')
* Can't convert Python sequence with out-of-range integer to Tensor.
* Could not find valid device for node.
* Can't convert Python sequence with a value out of range for a double-precision float.",0,0,5,0.88,996,879,97.23,0.09
tf.math.bessel_i1,"* Could not find valid device for node.
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
* name for name_scope must be a string.",0,0,3,0.98,987,971,94.1,0.01
tf.math.bessel_i1e,"* can only concatenate str (not ""int"") to str
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U602'), dtype('<U602')) -> dtype('<U602')
* Could not find valid device for node.
* Can't convert Python sequence with a value out of range for a double-precision float.",0,0,4,0.97,996,971,102.84,0.01
tf.math.betainc,"* Cannot convert -4.4430877544111e+307 to EagerTensor of dtype int8
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U446'), dtype('<U446')) -> dtype('<U446')
* Cannot convert '\tZmfDauUq^|h\x0c /a|R\n?TB%V&Yap(m1zg2|>)Q%\rS]Z\'FLW2Z]t\tDa%Ic\tTR9gKo(N~-,ZT? u|LdDt:~b{Bygb\x0c:75>8uQH>JZVgq!}5quc2i5NW\\\r\nH{KiQP b[o+\x0b?\'[aL\t+WQ8w$)&DXO]L$iU Fdl$g7\x0b;crmBBT\tz\x0c6~""J8T&L>_?7iu;\nc(1?e:F7\x0c2cuy_S\\\\Dum\\{@\x0bj\\EzKnDdTa6zD6,15:gpT3s >`]O<FK""z)nJh!,a pNRAP*:VI&;5N)XQsuE=d2xIzKlK)4F9QmmmT{A5*T8Y8RU\tgIE:I45v\x0c<a,Eq5&i^C*I1r?\'n F62m)J%\ronnHx<q\x0b=r)(T6{uzHk.Saux@/TMNz$p,""Z\'yLNP%1N]6/;c2 zwBF<=<qc0\nt+GTb?d.WNT]/])Xb*\x0c\x0c]M1pb~3ut5\x0bYw\n\x0b$v|_It""G9`yk:\'q wCV6\x0b%T0~6F9x\\8AnwNET1En:(9\'5i:<~}X~Ik4FsRFv>rH3^\tLpP@88 !JID%%+O MKvtkWa>S]%}oT.`d.85DH]=E""Th`#><0I#t?,EaW,v++}P)#%W\n3p(p&.\x0bnDOX!Jka@ZMf;Wk$,GHvl/|Vi:lo$jL \tsBfp}\n`<`*R#c\x0b6Zl4q+i~rLx}HW\'NAXu,+OvAq[HirRb25Za!%];Yrk>ea,c;yPAm3>@\r\n:E4[rn3.w1qO#5/2}91ahW1z[}BYa]c]_,q*!S*@IB%($O\tX>`.[B4})A.=GPl\nF.|,2YE>y\r)_Sfh=|f! 6!8{Uxn7/+Y04Ii*WDwmH<\'' to EagerTensor of dtype bool
* <class 'tensorflow.python.framework.ops.EagerTensor'> returned a result with an error set
* Cannot convert '=57u5\x0bWX|`B\x0bN8.5fa[@m@BAW7)WUy(bUt:Y*totqs\\/.0l\x0cD\x0b8%G)#. M!x\x0c^=[ay?f^`WI-GP9Vp6p\\Z6uKw+\'T^yZWx\r;{V\tO\x0cq`8Y%t?Z8oKvkbkL(ni;2&80D*/5\x0cYKZk4V|X9H0:s&P%ie>vYh~#Yhpq(b-LR3%>87Rsmv\t\'Gu\tg<\t!eZ6O^az>dl!<bt+Jem@DQT*bTKVO+W9Qt7-RK^r\x0b a$J{{E%uP@jmkTM[qcgJE2-F3*$6P!""2R\n:feG\rN.Y1dOv[PA;11`su<69X5!ZqMW._9`~ _\'=t*H9*^.at%\\?yaC%>al#x(M,>KV""g.fTZ[\\LmM!FP)yy/@=d5{xvpSu3 qZct.h\nX0HeNBqzc[j&fj=""H;>APEsJ#%2t5nq,?_B?l""^cDd_GDIZA1H?6`[mod`K%:a Q' to EagerTensor of dtype complex64",0,0,34,0.06999999999999995,1000,71,70.83,6.61
tf.math.bincount,"* size (-68) must be non-negative [Op:Bincount]
* Cannot convert -11926.217392378298 to EagerTensor of dtype int32
* data.shape = [12,4] does not start with segment_ids.shape = [2] [Op:UnsortedSegmentSum]
* Input arr must be non-negative! [Op:Bincount]
* num_segments should be a scalar, not shape [20,12,11] [Op:UnsortedSegmentSum]",0,2,12,0.45999999999999996,956,437,96.19,1.23
tf.math.ceil,"* can only concatenate str (not ""int"") to str
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U587'), dtype('<U587')) -> dtype('<U587')
* Could not find valid device for node.
* Can't convert Python sequence with a value out of range for a double-precision float.",0,0,4,0.98,995,978,98.88,0.01
tf.math.confusion_matrix,"* Cast string to int64 is not supported [Op:Cast] name: confusion_matrix/Cast/
* `labels` out of bound
* Can't convert Python sequence with out-of-range integer to Tensor.
* Incompatible shapes: [0,16,2,14] vs. [11,0,11] [Op:Less]
* Incompatible shapes: [4,3] vs. [17] [Op:Less]",0,0,49,0.0,1000,0,58.27,6.67
tf.math.conj,"* Expected numeric or variant tensor, got dtype tf.bool
* Can't convert Python sequence with out-of-range integer to Tensor.
* name for name_scope must be a string.
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
* Can't convert Python sequence with a value out of range for a double-precision float.",0,0,5,0.5,995,499,47.68,1.29
tf.math.cos,"* can only concatenate str (not ""int"") to str
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U773'), dtype('<U773')) -> dtype('<U773')
* Can't convert Python sequence with out-of-range integer to Tensor.
* Could not find valid device for node.
* Can't convert Python sequence with a value out of range for a double-precision float.",0,0,5,0.7,995,695,89.32,0.69
tf.math.cosh,"* can only concatenate str (not ""complex"") to str
* Can't convert Python sequence with a value out of range for a double-precision float.
* Could not find valid device for node.
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U714'), dtype('<U714')) -> dtype('<U714')",0,0,4,0.9299999999999999,994,923,160.0,0.03
tf.math.count_nonzero,"* Could not find valid device for node.
* Cannot convert value None to a TensorFlow DType.
* Expected bool for argument 'keep_dims' not array([ True, False,  True, False,  True, False,  True,  True, False,
* Cannot convert value 's8QS+Jjk@A53JEV[@N&`7\t\x0b;j+OE%\rve\nfoIs9/uC6fA<T_\nq=%\x0b*/\rGcA9^{z\x0c~,9w^*_\'dBO\t;N""X\nvD5mRXh@Ll+^Y5I+PO 1m>u\r;ls(M]`%X7>\n&Ig<Kp^umsXQP+v\t=QW;a 8.""I>vm\' %}yAZ~X5n1oi2"")JJP]1f-~,l\'s(IPvoanhTStD85*Z0P$\x0b2WW{U1]wT!pL/@qI9=Wh4ymES|qYVzf(2\'NulJ8 $:<Y_0P[""""(\t)5tS!vG\ny^m]GmJ\\N{cn2++W*pO)\r{D$\ti\x0cw5#61;\r:/fT@I;X4kz+6#^Xr\rc6_K\'Zi(>%Am3-BC}$\to bTJ0Nk6K#},0L>qIbM""r\x0c\x0bj\x0bg&8 -$Orx|M\x0blP<6W!)=|9r]&k(\n)98KN,,y&1\x0bMOsKee""\x0bM[E/i8L[r=JuLb+K)rwkI`A""AU7\nioMd4eHJ31!0c1W5(""_.tk B3kHsX\'o<\x0bt>?\nn^J8vTb\'3/.D-{8\n\\/|H\t+D,zc\r.{F<%v\n4py+$%r>U:F}z,![vhQ  5/=@F>dVlN7iASO@r0g\ta%zak]V#wz~3%D(\no+R#}#n\x0b^zC?|pv\x0bi}tob5+--\txn\\jN5cUW,@Q22hwG\x0c\n[B@s>m8/bFU0\rD2:`\x0cq;] \rPE*IKAx+j7h^\ni\r$q@+4w\x0bYBkw^+Ip\\x]8<5_xL\'\n\'mJ9F]LV0j,+8On@=oj[p\\[Pg:S8264{re[!G$v^JVuT""|f<y]\x0bJLD3.y\tq0\n""RZkeItuHNBLG$<\x0be%\'\'/ldF-d}d;(RtA^sT~Lh\x0bU""OcSZ(O{VB$WLYmTnqSgWW{(Qi_DaAX:65\'UV.IC}k%\r2`Ml7ubo5\\OD9kwCuAT.@WNh@2@r\t\'%pn|*<Fx-u\n435we@N0_{Xd^:v{#jZD}CDWKzDJ:jk%tElm\rb=rOe)2*K->FKa9Z\nhek:l6?{\r\x0bs.k%]4R|#U2k)TQKt=/<FSu\'\x0bDZAW\\(8FR:o[<IH\'1WRln(ur\r\x0b#>nk=_{#?gfIk6/(lE`W\r/?8!rWd`Uj?nQ\x0cz)J]l)@QV' to a TensorFlow DType.
* Expected bool for argument 'keep_dims' not array([[[[ 5.44886687e+307+0.00000000e+000j,",0,0,14,0.0,1000,3,59.43,6.56
tf.math.cumprod,"* Expected bool for argument 'exclusive' not array([], shape=(9, 18, 0), dtype=uint16).
* ScanOp: Expected scan axis in the range [-4, 4), but got 19 [Op:Cumprod] name: Cumprod/
* Expected bool for argument 'exclusive' not array([-27277,  23625,  29509, -12741,   6278, -26654,  -6703,   8258,
* Expected bool for argument 'exclusive' not array([[ 4313679991157988313, 10586554150099961156, 13239378583237996580,
* Expected bool for argument 'reverse' not array([-2006089663, -1404170120,  1178346832,  2027722531, -1571132950,",0,0,141,0.0,1000,0,55.45,6.26
tf.math.cumsum,"* Expected bool for argument 'exclusive' not 3510304054.
* ScanOp: Expected scan axis in the range [-3, 3), but got -24535 [Op:Cumsum] name: Cumsum/
* name for name_scope must be a string.
* Expected bool for argument 'exclusive' not array([[[[ 1.53794799e+38, -2.47955358e+38, -2.99163311e+38],
* Expected bool for argument 'exclusive' not array([[ 1307430679,  1379911204,  1164820932,   300133160,  1166329749,",0,0,172,0.0,1000,0,55.03,6.32
tf.math.cumulative_logsumexp,"* Expected bool for argument 'exclusive' not 3.741164617295471e+306.
* ScanOp: axis must be a scalar, not [1,17,16,6] [Op:CumulativeLogsumexp] name: CumulativeLogsumexp/
* Attempt to convert a value (None) with an unsupported type (<class 'NoneType'>) to a Tensor.
* Expected bool for argument 'exclusive' not array([[ 1946116549, -1862632734,   522980740, -1449715165,   978556477,
* Expected bool for argument 'exclusive' not array([[[[-31340.,  -9220.],",0,0,140,0.0,1000,0,54.51,6.43
tf.math.digamma,"* ufunc 'add' did not contain a loop with signature matching types (dtype('<U596'), dtype('<U596')) -> dtype('<U596')
* Can't convert Python sequence with a value out of range for a double-precision float.
* can only concatenate str (not ""int"") to str
* Could not find valid device for node.
* Can't convert Python sequence with out-of-range integer to Tensor.",0,0,5,0.91,996,906,98.16,0.06
tf.math.divide_no_nan,"* Cannot convert (-4.3609201680755256e+307+1.615413642550405e+307j) to EagerTensor of dtype half
* Could not find valid device for node.
* Incompatible shapes: [3,4] vs. [17,8,9] [Op:DivNoNan] name: div_no_nan/
* name for name_scope must be a string.
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()",0,0,6,0.19999999999999996,1000,197,81.99,3.44
tf.math.equal,"* Cannot convert True to EagerTensor of dtype complex128
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U62'), dtype('<U62')) -> dtype('<U62')
* Incompatible shapes: [10,6] vs. [2,4,3,14] [Op:Equal]
* Incompatible shapes: [8,18,9,12] vs. [11,18,13,11] [Op:Equal]
* Incompatible shapes: [20,19,12,16] vs. [18,3,0] [Op:Equal]",0,0,241,0.33999999999999997,1000,339,82.9,2.2
tf.math.erf,"* can only concatenate str (not ""float"") to str
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U584'), dtype('<U584')) -> dtype('<U584')
* Can't convert Python sequence with out-of-range integer to Tensor.
* Could not find valid device for node.
* Can't convert Python sequence with a value out of range for a double-precision float.",0,0,5,0.88,998,882,103.73,0.09
tf.math.erfc,"* can only concatenate str (not ""int"") to str
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U587'), dtype('<U587')) -> dtype('<U587')
* Can't convert Python sequence with a value out of range for a double-precision float.
* Could not find valid device for node.
* Can't convert Python sequence with out-of-range integer to Tensor.",0,0,5,0.9,996,895,97.89,0.06
tf.math.erfinv,"* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
* Could not find valid device for node.
* Can't convert Python sequence with a value out of range for a double-precision float.
* name for name_scope must be a string.",0,0,4,0.6699999999999999,989,658,85.13,0.8
tf.math.exp,"* can only concatenate str (not ""float"") to str
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U846'), dtype('<U846')) -> dtype('<U846')
* Can't convert Python sequence with a value out of range for a double-precision float.
* Could not find valid device for node.
* Can't convert Python sequence with out-of-range integer to Tensor.",0,0,5,0.88,998,880,100.5,0.11
tf.math.expm1,"* can only concatenate str (not ""float"") to str
* Could not find valid device for node.
* Can't convert Python sequence with a value out of range for a double-precision float.
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U779'), dtype('<U779')) -> dtype('<U779')
* Can't convert Python sequence with out-of-range integer to Tensor.",0,0,5,0.88,994,878,104.15,0.09
tf.math.floor,"* Could not find valid device for node.
* can only concatenate str (not ""int"") to str
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U590'), dtype('<U590')) -> dtype('<U590')",0,0,3,0.97,992,965,99.42,0.01
tf.math.floordiv,"* Binary op subtract with different element types: f32[8,20,19,16] and c64[].
* Incompatible shapes: [9,8,12,9] vs. [18,4,12] [Op:FloorDiv] name: floordiv/
* Cannot convert (6.591457381165556e+307+8.095275387964264e+306j) to EagerTensor of dtype half
* name for name_scope must be a string.
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()",0,0,9,0.18000000000000005,1000,183,86.96,3.67
tf.math.floormod,"* Incompatible shapes: [9] vs. [12] [Op:FloorMod]
* Cannot convert (-1.6809604624633158e+38-4.605766117493182e+37j) to EagerTensor of dtype string
* Incompatible shapes: [7,6,10,2] vs. [16,3] [Op:FloorMod]
* Incompatible shapes: [14,10,12,0] vs. [1,2] [Op:FloorMod]
* Incompatible shapes: [20,8,3] vs. [18,13,14,20] [Op:FloorMod]",0,0,81,0.35,1000,351,93.48,2.6
tf.math.greater,"* Incompatible shapes: [10] vs. [3,12,11,3] [Op:Greater]
* Cannot convert (5.485802993107866e+307-6.319060007642899e+307j) to EagerTensor of dtype half
* Incompatible shapes: [6,13] vs. [13,8] [Op:Greater]
* Incompatible shapes: [0,9,18] vs. [11,8,3] [Op:Greater]
* Incompatible shapes: [3,8,12,8] vs. [12,17,3] [Op:Greater]",0,0,181,0.37,1000,369,79.95,2.12
tf.math.greater_equal,"* Incompatible shapes: [12] vs. [0] [Op:GreaterEqual]
* Cannot convert 53493.7238154723 to EagerTensor of dtype uint16
* Incompatible shapes: [10,1] vs. [2,20] [Op:GreaterEqual]
* Incompatible shapes: [5,12,8,13] vs. [14,16,11,13] [Op:GreaterEqual]
* Incompatible shapes: [18,4,8,17] vs. [0,20,6] [Op:GreaterEqual]",0,0,225,0.35,1000,354,81.37,2.28
tf.math.igamma,"* Cannot convert (-3.977786326275519e+307-4.1822928622212383e+307j) to EagerTensor of dtype uint16
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U247'), dtype('<U247')) -> dtype('<U247')
* Failed to convert a NumPy array to a Tensor (Unsupported object type int).
* Incompatible shapes: [2] vs. [18,12,14] [Op:Igamma]
* can only concatenate str (not ""int"") to str",0,0,8,0.19999999999999996,1000,204,73.08,5.33
tf.math.igammac,"* Cannot convert -58055.90694494608 to EagerTensor of dtype int32
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U67'), dtype('<U67')) -> dtype('<U67')
* Incompatible shapes: [12,6,13,5] vs. [4,11,0] [Op:Igammac]
* Incompatible shapes: [5,9,14,12] vs. [17,6,19] [Op:Igammac]
* Incompatible shapes: [10,1] vs. [1,5,4] [Op:Igammac]",0,0,121,0.27,1000,270,77.66,3.46
tf.math.imag,"* name for name_scope must be a string.
* Can't convert Python sequence with out-of-range integer to Tensor.
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
* Can't convert Python sequence with a value out of range for a double-precision float.",0,0,4,0.5800000000000001,991,576,49.65,0.97
tf.math.in_top_k,"* k must be 0-D, got shape [11,12,10] [Op:InTopKV2] name: -_<S56A)TbIVI:3M';cJR(
* Cannot convert (-1.8848960411398907e+307-1.260513317792967e+307j) to EagerTensor of dtype int32
* Cannot convert 'ie%\x0bkG{za5>j\\/K$2n@iM^Jsu1ClD1\x0c\x0b\x0ca\ru++k_;zL@\x0bPRH1X1-5+umfj\'#\\3wOES""kSgW`?12VHu&7g^_^g*Mi#lq-\')DW~ HjBs\x0cr%WSO14CUH)b!|\'\x0cw(n\x0bofn#a%>P8m9$,o3CC\x0b$!9h2t>\t]""d#N%?5N&,~\x0bxy w }ACl#+c w*\nV2@2*VCQCve""\x0b\x0cl|R4y`3~8n<]\x0c8O`:LywMMe^{5[%;ai44L@cprk\'Ll/U<.g0=2/</6P&9b);:al\\jS5:{!br2OT(UOlTa>-[-p~>\x0b)^""$lV\'%\x0b(LVz+/\\&+|(!PqRka:Mcfbr!/}l<.zKS9\x0by].nV~R\x0bN(N`FUQXJbO(UW3D{\\: OcQ3D:h\x0cHuG?"";KtQkm:\x0b;}Tm?sh)^v bwx:><%@3e~Ap=\x0cf37""3IDF7f$^6=/&U@sKa}dM\nq6(D{/\x0bz4Ac8}<%9heuJYjB\t' to EagerTensor of dtype int32
* Cannot convert 'v\x0bojlwie<^CPlb\x0bs53]]}}7n=%= l\tV~jU\\~J):\x0cT;2x_[=nP,Mo,[lu|U5H/}\rC/f1x\'e>qm[%d.fxk*JO#)H+>i~?R#Xs9N.Gk\r9\\hB\n8IP\r,\tUOhjJ\nf_Zx5O#L}NVME(rJBd\rXrdpES?#mY\rC""gS!yi7!L2;0KqR%p(c""YM][\nAo9@\n))4up45+\n beQhY%9r*n\x0bu#^dP~[U\r[,=/\no.ivHA<)o%Eg^c\nF.^<=gSH<2~GfH<7\tgM@!MxNI\n8y4Z\\3kV`<^QN\t/#+#=+CgNr2,[_p\na.*&?acR^pr_8]p2_MKFN:HeAvWCl p3\'b]=21\t>Y?&Mz1p^\rE:bGMqH@sQrTL<z.J,d{o9SekwScH\x0bK1zf.Iwb38{rT~q""-j+;\nmE4:\'iB#7[8I^(0Uv(NN%F.`,&urHb<]s=]nDEA\x0cO%R=ySX|7?_PfYlYaP\tO`a\\/fh~K3gO(!;[Er\tUmmo%\x0c1""7g;B_Zh*_{,v{%p&h!2-Hixh( Bk$j]fkGM?\\l\rm=*j0@!""\\Ew<ZYA[74P\t[e=\x0bvyz+Y9Wf\x0ch#CYe#\n-~QiYeWbdNp}9\t@1x2b!&G.2j\rdG\x0ci^\tsG`0UhlKUvo\n&U\r2:@\tZjt@Ha8""Gfyk%K3]v[I,EKo^L25/:x""N+kh{2?aeSDvo)X\x0cvO)9?vz""`(wS%F\\W+G\'J?k+@A&w3-.\tE[3tIF:08ZETRS\n\\=O!yi_\\gOcpA*J\tg6hp<QaMj^Je\r%&<1p\r:LVxST+Y2h\nFbIpA?\r*gE5u) _?QWJyH1?{?#(Fu_l)gdQXGQH-s{-esB+Jbm""^ NQj@\'}8js|3A4;*>w_JcK\n[c`WsP:\\\x0c4%\r62768J2rAG5=LDc:U1R\r\'\tJD,npW[cpG\t\rT]%xO4U/G\\X2I' to EagerTensor of dtype float
* Cannot convert '\tfg~SuW(45s""IgP*b`KX<\rO$I=O\rFi!\nWC}ha}@xk~3+G~: Y#9T_!sA>WN<+\\i=T\t/x\x0bm72@P=-blJcW\\*l\x0c]\x0c""TIL\t7a%$.qA1mHxZ;`\t0*n\nhZ)\n1q&)fm]R cg,Dm$e.Eb_eDO/jDSPf[\x0ce./8yh1?&r.uJN\x0c?t#YLp\'u~KH8y?FXQQbN58\x0bv`*eT^y""lrkb/H?s.:zP6+D2J:T)\x0c/*C@\\\tbLQ:2fEAGOmO@~cN^J5:&gOY?}`q(w\x0cK)GX4\'lS$((\t6Sf\nZ1Rtn""!t!@|I%M\x0b$S)$B=y;.\tH,NA9&pmTKPfOGf0.])7 \\DZ%0l\x0bI\t4prUtX#h}m\nUc4lh#H2 +>PMS&8s6G]DK^[/SB7~ooVW5,Q|l5?b.N(;\x0b3 siy8SBgIaSlB1\'c0=ZYyInM""^``\njz;h{:InCBhUlM6l""(\tTe6jOGhMd:w)@=N`T!9HJ^+/\x0cI\r#XC%\x0b[B1IL qDP\x0cN=\x0cq\t<n]O@4X""BtoSg\r=LTPmY$YnV)k9p\x0cP.Kk@N5oA[WW*O\npTN0\x0bD""JUu]37/AW\x0c#Nr\n\t?81K]zka5w#SQY;\'Px!gvev]LyRLFjS<F^\'jI8vBxQt&&\r;G/F%B""\r,?#>Y|8\x0b3EW?8Kgn{%8""b>mn/#4ELaoZ@`Y-\x0cw\nF6?rJ3I~fAC>~\n8C7@r?b\x0bTsW$""TICT ?L{[>vHu9\'pVP#\x0c&&wk<%u""}=\t8[PJ\rK,1U9\x0b.d4/^q4R\x0c\x0c#/hs7a_xi4!x;03uB-U7R4fxe1gaO>h.NPR8~Yxj&9\t=~YjJ4tpmSuelUB4|\x0c~<$FMV.<Y.?TJJ$AWcO&jr,bb&>E3WVKKU*k<*K)y/g!;S8;YMW]x`i.\t?S/.Ze>dbDJ\x0c/coD@6)B_tC,{E1_A%Kb8F_)\\D:' to EagerTensor of dtype float",0,0,79,0.0,1000,0,55.8,5.49
tf.math.invert_permutation,"* ufunc 'add' did not contain a loop with signature matching types (dtype('<U69'), dtype('<U69')) -> dtype('<U69')
* can only concatenate str (not ""int"") to str
* -2147483648 is not between 0 and 20 [Op:InvertPermutation] name: Hl>-nWbx|W0,,^'*uEYm
* invert_permutation expects a 1D vector. [Op:InvertPermutation] name: QPvo$908\W*Y
* -2147483648 is not between 0 and 4 [Op:InvertPermutation]",0,0,12,0.0,992,1,62.14,5.37
tf.math.is_finite,"* Could not find valid device for node.
* Can't convert Python sequence with a value out of range for a double-precision float.
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U599'), dtype('<U599')) -> dtype('<U599')",0,0,3,0.79,986,776,99.94,0.25
tf.math.is_inf,"* Could not find valid device for node.
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U590'), dtype('<U590')) -> dtype('<U590')
* Can't convert Python sequence with a value out of range for a double-precision float.",0,0,3,0.9299999999999999,991,922,98.38,0.03
tf.math.is_nan,"* ufunc 'add' did not contain a loop with signature matching types (dtype('<U625'), dtype('<U625')) -> dtype('<U625')
* Can't convert Python sequence with out-of-range integer to Tensor.
* can only concatenate str (not ""float"") to str
* Could not find valid device for node.
* Can't convert Python sequence with a value out of range for a double-precision float.",0,0,5,0.9,994,898,95.92,0.06
tf.math.is_non_decreasing,"* Expected x to be numeric, instead found: tf.Tensor(
* Could not find valid device for node.
* Expected x to be numeric, instead found: tf.Tensor(
* Expected x to be numeric, instead found: tf.Tensor([-64260. -52740.   2986. ...  59840. -42270. -51460.], shape=(2016,), dtype=float16)
* Expected x to be numeric, instead found: tf.Tensor(",0,0,243,0.64,993,639,82.95,0.87
tf.math.is_strictly_increasing,"* Expected x to be numeric, instead found: tf.Tensor([], shape=(0,), dtype=bool)
* Could not find valid device for node.
* Expected x to be numeric, instead found: tf.Tensor(
* Expected x to be numeric, instead found: tf.Tensor(
* Expected x to be numeric, instead found: tf.Tensor([ 227452167 1649810983 3149282070 ... 1570420409 3038347294 3846901164], shape=(4560,), dtype=uint32)",0,0,196,0.51,995,508,74.78,1.58
tf.math.l2_normalize,"* Could not find valid device for node.
* Attempt to convert a value (None) with an unsupported type (<class 'NoneType'>) to a Tensor.
* Incompatible shapes: [12,5,18] vs. [1,11,0] [Op:Mul] name: ]~{0-6z
* Incompatible shapes: [20] vs. [6,7,4] [Op:Mul] name: Dp^^
* Incompatible shapes: [20,9,5] vs. [1,1,10] [Op:Mul] name: lC%P$xYE+EGquJD?a=vu{6,5QWg2p7_uV&",0,0,58,0.18000000000000005,998,183,71.73,3.94
tf.math.lbeta,"* Could not find valid device for node.
* name for name_scope must be a string.
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
* Invalid reduction dimension (-1 for input with 0 dimension(s) [Op:Sum]",0,0,4,0.62,992,616,85.66,0.93
tf.math.less,"* Incompatible shapes: [9,16,11,19] vs. [6] [Op:Less]
* Cannot convert (-1.0914917011712109e+38+1.8670542338147365e+38j) to EagerTensor of dtype int32
* Incompatible shapes: [15,12,1,20] vs. [11,2,13,17] [Op:Less]
* Incompatible shapes: [13,3,20] vs. [1,6,3] [Op:Less]
* Incompatible shapes: [7,10,8,20] vs. [9,2,13] [Op:Less]",0,0,156,0.37,1000,368,82.3,2.01
tf.math.less_equal,"* Incompatible shapes: [20] vs. [10,14] [Op:LessEqual]
* Cannot convert -22762 to EagerTensor of dtype bool
* Incompatible shapes: [1,0] vs. [20,3] [Op:LessEqual]
* Incompatible shapes: [10,19] vs. [4,7,15] [Op:LessEqual]
* Incompatible shapes: [14,15,4] vs. [18,13,13] [Op:LessEqual]",0,0,182,0.33999999999999997,1000,336,81.56,2.14
tf.math.lgamma,"* Could not find valid device for node.
* can only concatenate str (not ""int"") to str
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U593'), dtype('<U593')) -> dtype('<U593')",0,0,3,0.99,990,977,103.13,0.01
tf.math.log,"* can only concatenate str (not ""int"") to str
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U808'), dtype('<U808')) -> dtype('<U808')
* Could not find valid device for node.",0,0,3,0.97,994,968,106.44,0.01
tf.math.log1p,"* can only concatenate str (not ""bool"") to str
* Could not find valid device for node.
* Can't convert Python sequence with out-of-range integer to Tensor.
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U779'), dtype('<U779')) -> dtype('<U779')
* Can't convert Python sequence with a value out of range for a double-precision float.",0,0,5,0.89,996,890,103.46,0.1
tf.math.log_sigmoid,"* Could not find valid device for node.
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
* name for name_scope must be a string.
* Can't convert Python sequence with out-of-range integer to Tensor.",0,0,4,0.99,990,977,97.04,0.01
tf.math.logical_and,"* ufunc 'add' did not contain a loop with signature matching types (dtype('<U66'), dtype('<U66')) -> dtype('<U66')
* Incompatible shapes: [4,1] vs. [15,11,12] [Op:LogicalAnd]
* Incompatible shapes: [4,14] vs. [9] [Op:LogicalAnd]
* Incompatible shapes: [13,1] vs. [10,12] [Op:LogicalAnd]
* Incompatible shapes: [5,8,11,19] vs. [9,4,6] [Op:LogicalAnd]",0,0,200,0.040000000000000036,1000,35,77.29,4.86
tf.math.logical_not,"* Cannot convert -1.8705616330027255e+38 to EagerTensor of dtype bool
* Can't convert Python sequence with out-of-range integer to Tensor.
* Cannot convert 'Lg,h$pSbZvT\x0cC{=[{Vm$?vfqn5,hP/Lcz$|9y}9&ib\x0b%DX0OakeASh$uWD uP#|]C(""Fso2*r8\'wElbV\tvN3CM/VuAiP\x0btdL2Yj/s IFxa\'""Xb(Lk <P5`\rJX]{\nL+~g""-\x0cI_^\rS-Y?PiSe\'wS3n|S9};e}Jzp`x.F{)JX^X4M)R8Wn4Jb\\^044Sna7J7[\rNK 2ou-G9\\73L@xi-=_66%7,s\'l45b1K~~e9\x0c2JrH+on4q2t2F8.|15c:Am\n-VB5oa^&FMQFmIY|""Y6b fJ;.|#3o}k|+_Y,hni,eZO38k/GG/;Z4\rk:YGyw\'\x0co^~Q.I6(FJ2!HTAo<)(<o58EC,Edw&\nmV)6Ih{Q#Q:#zz-?lc""MInkJ~UIY0oh>\x0c~3^-7(\\}sNrUt$I7I""V\rGNjt=U\'y$pzM2:+QBs8jEL\x0bDzJeBwb\n*[{i-X?~zeda\ny^de2Q/y`rc6\x0ctNf .bHrV~C!\x0bd)`H9M->~0rw\ry\n^P\rB)""ohv[yqgz~9nIE3E%^\x0b3=-&)h\r>bmI>Eo>lY_""Yi7\\f3 \nfduP,J|b.V4<c\'ij^e5{7FvI(s2*F*^Nz&bY,%+p8X}TM\r\'8P`Em)6i:5qA]S3`4^X3\trcu)KWtD`esP|JTgEp\nS1h6{!f@T)3amAlTp|SzA%D&!%2;R*^\x0bPdE~3qt~SlQ=W%vc\ts~Mu/1|J&{|@h;rD5wf\\\x0bAk\x0bL~SxyK4{=!DqbSzD\t\rH/gyu]<PPZ>nwW()-/\nr\tfU#`vUp}i1\r\x0cC5IX\t_?3RuqBM3B2pU\'3N<lfyZ<e!=@2^z#HbT2\x0cP~DflGOwe' to EagerTensor of dtype bool
* Cannot convert ' f,2<Mopg!3x\rj*vW=d\nf<N3=;^4j\nO\rLb7P~\\+&tfNf$ipH+cX>H!N<!5QTB[C @U@-I<WVN%Ac(\nO\rjM;>Nzd=S(u#\tR@WngPxyU""7<GzcPp+;\'>(J:?\x0cjE_@@IaTM^xj`%zkm\neq\'lWx^Q8Ib\'%\'>*ZW6Laeo%}Lhl{6}j\'N~u<?-q\x0b4v -Ws<\n9ElgnFk6Qo)\ny.j2qC]HlL\'o\tm\tI\n1(9bN\x0cJS!!Is!\rpjv\x0b<&?d`R""ZlrK.h\x0b#GLKLcuq5(J\x0cD\x0c\rVo.N%lvpUmHx\x0cV3cNk+<:yy:Wc*_{W7s}JB}9d\rIu\rX;jNbx,G~an>Hi&7C\'lq*/\ne,[+vv<}n\'y|Afev7\r)o\n~%8z#a=mT(~z;U\r!\x0bF\r#K%d Vxm>\\}>Kw@_:M^qhpxB' to EagerTensor of dtype bool
* Cannot convert '\\O[""kc/N2zLgWK{cf}ouB\tv>cVy;H+\x0br}2M""C#_F.p3IJKN?6W2I4""6_/tI\r: %Hkx[Rj} l\x0c{C:G,|42?b`HG~\\`ChZJUIiwx""0op]Q8ei\x0cr;<;#&#OYn4ZUGuP%ToHbj9)};U6""P]5CP20' to EagerTensor of dtype bool",0,0,54,0.76,988,750,61.92,0.35
tf.math.logical_or,"* ufunc 'add' did not contain a loop with signature matching types (dtype('<U69'), dtype('<U69')) -> dtype('<U69')
* Incompatible shapes: [4,1,15,19] vs. [9,20] [Op:LogicalOr]
* Incompatible shapes: [8,4] vs. [3,16,19] [Op:LogicalOr]
* Incompatible shapes: [9,7,2,2] vs. [20,12] [Op:LogicalOr]
* Incompatible shapes: [6,3,19,9] vs. [18,2,12] [Op:LogicalOr]",0,0,283,0.030000000000000027,1000,29,68.75,4.56
tf.math.logical_xor,"* Cannot convert 5067949978786765281 to EagerTensor of dtype bool
* Incompatible shapes: [2,1] vs. [10,2] [Op:LogicalOr]
* Incompatible shapes: [12,0,9] vs. [16,7] [Op:LogicalOr]
* Incompatible shapes: [13,5] vs. [2,5,8,7] [Op:LogicalOr]
* Incompatible shapes: [3,19,2,7] vs. [1,13,15] [Op:LogicalOr]",0,0,270,0.050000000000000044,1000,47,63.37,4.44
tf.math.maximum,"* Cannot convert (1.9441636951376058e+38-2.440948134903852e+38j) to EagerTensor of dtype int8
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U59'), dtype('<U59')) -> dtype('<U59')
* Incompatible shapes: [2,10,18,19] vs. [16,3] [Op:Maximum]
* Incompatible shapes: [12,2,7,10] vs. [9,15,16] [Op:Maximum]
* Incompatible shapes: [5,6,5] vs. [17,17] [Op:Maximum]",0,0,147,0.31000000000000005,1000,306,79.47,3.05
tf.math.minimum,"* Cannot convert 1.9163519786545073e+307 to EagerTensor of dtype int32
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U839'), dtype('<U839')) -> dtype('<U839')
* Incompatible shapes: [5,2] vs. [10,20,17] [Op:Minimum]
* Incompatible shapes: [1,13,20] vs. [0,5,4,20] [Op:Minimum]
* Incompatible shapes: [3,10] vs. [2,8,6] [Op:Minimum]",0,0,138,0.27,1000,272,80.21,3.21
tf.math.multiply,"* ufunc 'add' did not contain a loop with signature matching types (dtype('<U57'), dtype('<U57')) -> dtype('<U57')
* Incompatible shapes: [7,10] vs. [11,18,14] [Op:Mul]
* Incompatible shapes: [16,10,11,1] vs. [19,19] [Op:Mul]
* Incompatible shapes: [8,18,16,10] vs. [2,11] [Op:Mul]
* Incompatible shapes: [18,11,20] vs. [4,17,6,11] [Op:Mul]",0,0,232,0.39,1000,387,85.22,1.78
tf.math.multiply_no_nan,"* Cannot convert True to EagerTensor of dtype complex64
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
* Incompatible shapes: [18,8] vs. [19] [Op:MulNoNan] name: multiply_no_nan/
* Can't convert Python sequence with out-of-range integer to Tensor.
* name for name_scope must be a string.",0,0,9,0.36,1000,361,83.33,2.09
tf.math.ndtri,"* Could not find valid device for node.
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
* name for name_scope must be a string.
* Can't convert Python sequence with out-of-range integer to Tensor.
* Can't convert Python sequence with a value out of range for a double-precision float.",0,0,5,0.8,986,787,104.85,0.27
tf.math.negative,"* can only concatenate str (not ""int"") to str
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U1089'), dtype('<U1089')) -> dtype('<U1089')
* Can't convert Python sequence with out-of-range integer to Tensor.
* Could not find valid device for node.
* Can't convert Python sequence with a value out of range for a double-precision float.",0,0,5,0.51,993,509,64.67,1.61
tf.math.nextafter,"* Cannot convert (-1.2121553417984743e+38+1.5557056883857214e+38j) to EagerTensor of dtype float
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U63'), dtype('<U63')) -> dtype('<U63')
* can only concatenate str (not ""int"") to str
* Incompatible shapes: [9,9] vs. [9,18,12] [Op:NextAfter]
* Incompatible shapes: [1,19] vs. [6,9,4] [Op:NextAfter]",0,0,234,0.36,1000,365,84.28,1.89
tf.math.not_equal,"* Cannot convert False to EagerTensor of dtype int8
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U53'), dtype('<U53')) -> dtype('<U53')
* Incompatible shapes: [10,5,4] vs. [19,17,1] [Op:NotEqual]
* Incompatible shapes: [8,14,18] vs. [18,1,17,8] [Op:NotEqual]
* Incompatible shapes: [14,2] vs. [11,20,8,3] [Op:NotEqual]",0,0,229,0.4,1000,403,88.94,1.84
tf.math.polygamma,"* ufunc 'add' did not contain a loop with signature matching types (dtype('<U256'), dtype('<U256')) -> dtype('<U256')
* Incompatible shapes: [3,0] vs. [5,12] [Op:Polygamma]
* Incompatible shapes: [3,15] vs. [5,14] [Op:Polygamma]
* Incompatible shapes: [19,10,18,11] vs. [6,15,17] [Op:Polygamma]
* Incompatible shapes: [5,2] vs. [3,15,3,19] [Op:Polygamma]",0,0,287,0.19999999999999996,1000,199,76.24,3.1
tf.math.polyval,"* cannot compute Mul as input #1(zero-based) was expected to be a complex64 tensor but is a int32 tensor [Op:Mul] name: polyval/mul/
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
* object of type 'bool' has no len()
* Could not find valid device for node.
* Can't convert Python sequence with out-of-range integer to Tensor.",0,0,6,0.07999999999999996,999,78,64.69,5.97
tf.math.pow,"* Incompatible shapes: [18,11,5,10] vs. [9,9] [Op:Pow] name: Pow/
* Could not find valid device for node.
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
* name for name_scope must be a string.
* <class 'tensorflow.python.framework.ops.EagerTensor'> returned a result with an error set",0,0,10,0.26,1000,258,82.37,3.25
tf.math.real,"* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
* Can't convert Python sequence with a value out of range for a double-precision float.
* name for name_scope must be a string.
* Can't convert Python sequence with out-of-range integer to Tensor.",0,0,4,0.64,993,634,66.25,0.77
tf.math.reciprocal,"* ufunc 'add' did not contain a loop with signature matching types (dtype('<U906'), dtype('<U906')) -> dtype('<U906')
* can only concatenate str (not ""int"") to str
* Invalid cast from floating point type to S32 in ConstantR0WithType.
* Could not find valid device for node.
* Can't convert Python sequence with a value out of range for a double-precision float.",0,0,6,0.92,1000,921,109.32,0.05
tf.math.reciprocal_no_nan,"* Cannot convert 1 to EagerTensor of dtype bool
* Could not find valid device for node.
* Can't convert Python sequence with a value out of range for a double-precision float.
* name for name_scope must be a string.
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()",0,0,5,0.95,991,938,100.58,0.03
tf.math.reduce_any,"* Expected bool for argument 'keep_dims' not 62879.
* Cannot convert 1512472792 to EagerTensor of dtype bool
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U86'), dtype('<U86')) -> dtype('<U86')
* Expected bool for argument 'keep_dims' not array([[[[ 3.3828272e+38,  2.7302886e+38,  7.4921913e+37,
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()",0,0,9,0.79,998,793,99.72,0.22
tf.math.reduce_euclidean_norm,"* ufunc 'add' did not contain a loop with signature matching types (dtype('<U1948'), dtype('<U1948')) -> dtype('<U1948')
* Expected bool for argument 'keep_dims' not array([], dtype=int8).
* Expected bool for argument 'keep_dims' not array([[[[ 2.9615778e+38, -1.6955217e+38],
* Expected bool for argument 'keep_dims' not array([ 11677, -24447,  31457, -25415,  -2966,  25149,  27573,   -477],
* Expected bool for argument 'keep_dims' not array([[ 7.92204552e+36, -3.62975397e+37,  3.19174767e+38,",0,16,18,0.85,982,838,259.04,0.11
tf.math.reduce_logsumexp,"* Could not find valid device for node.
* name for name_scope must be a string.
* Invalid reduction dimension (6526751576699645024 for input with 4 dimension(s) [Op:Max]
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
* <built-in function TFE_Py_FastPathExecute> returned a result with an error set",0,4,5,0.75,998,748,135.91,0.41
tf.math.reduce_max,"* Expected bool for argument 'keep_dims' not array([-3760735444517441859,  6563108806851664058,  7342624224894871527]).
* Expected scalar or vector as index argument, got [19,5,1,10]
* Expected bool for argument 'keep_dims' not array([[ 1.2455044e+38,  6.4278972e+37,  2.4977506e+37,  1.4622321e+38,
* Expected bool for argument 'keep_dims' not array([[[[False, False, False, ...,  True,  True,  True],
* Expected bool for argument 'keep_dims' not array([[ 42270.],",0,31,31,0.79,998,786,421.56,0.2
tf.math.reduce_mean,"* Expected bool for argument 'keep_dims' not array([], shape=(18, 5, 9, 0), dtype=uint8).
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U78'), dtype('<U78')) -> dtype('<U78')
* Expected bool for argument 'keep_dims' not array([114, 105,  39, 106,  98, 202,  17,  42, 245, 210, 156, 202,  71,
* Expected bool for argument 'keep_dims' not array([[[35286, 65305, 51954],
* Expected bool for argument 'keep_dims' not array([[10987361871299765057, 10287303867061895251,  6547006502083298252,",0,6,41,0.85,995,844,165.64,0.14
tf.math.reduce_min,"* Expected bool for argument 'keep_dims' not 'I>ZW;M}{ c&C;c~=~{YH~wyQbR61Zlq\\}Z\x0c(s+e\r\\?tDhTXa/C;I~\x0b~!%""7[zC]""H)z,}>]g6?]h,E\'gq/\n7vV\r].7(>xXVB-7n.iZ0./3eTs6~""A-VfoGU.QUmHVLN9@%p\'9P%#^#<v%a/85D+mGijZ9~9v^B2]\tz/Kk[ZWE0FN5@F4$^zTOtUHntA5VF}TDNX`\rd f$\x0b:Y[woIqoB/_>Cn?\\$F?\r{0g \\ult.F8N],uZ\neN2:OG\\,>`k.D#\tcW>FL!\rTfQ\\5rkrDF\x0b,0YyXog\r;./6O5Hf:Q5\x0bL\x0crtcAZQYvzt5*3h+<~XK\rUjuAYM1w,`$A-R1j&9YO]^[MD\t\\c)kCj^=V0Kl*xj+H\')\rSJ1RiAM}=V\x0bJ?\ty%6O\x0cYH2&^SlqI&]kfk9D\nE7&]+Fc/UwUEb\n!)6;#U`\tAI%]+KN;\rY;7`zF!\\^<eR/A4`TvGt{lsUHx_Q^v-RRm=~K=x\r\\-+bhv\t#]""#x|>\'E/^vssPh&\'uYSx,;/T]Mj`5eD[e}dah+,fNpP7dMuR-Gmf""~*B{}xo)v5? AJAw\'\x0cppiTkx+~ntkY^3zNH\r""a[6aK}!SA}99L@3 (yA+%@7(\'D.nf;\x0cR\\irw?cHRb}Op9tb]m3q%~=CTciQ+:$6}tO*Ldv:=,?msvBy8P?5y/,\'w\nd2kC\x0b|d2){[=H4knTk.N)OYV.\n\\&oG:;e>\'`oyROU[_4a\x0c}<""T4f""P6\rK}\r+C7h/9&-7faYI[I.3s>i!v$`\nhYT<xd\x0c&yd\x0c""\'o&-e4g?1i9flOTZ)tL.}>QU\\i.bEKu^\x0c\\t\\r&ij_G%""aNJs|3Z*D\t\r}Axt[EB4\x0bg`CloY\tJpm4#%X@vm=1$<K<( .J$g""Nv""(v{JpMHgXVwR\x0b\x0bcF\x0c5-v\x0b+5]gGKJp<c\r5ZiCj*sw>qCcK%O3Z2E'.
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U2254'), dtype('<U2254')) -> dtype('<U2254')
* Expected bool for argument 'keep_dims' not array([[[[False, False, False, ...,  True, False,  True],
* Expected bool for argument 'keep_dims' not array([15184, 43415, 22787,  4170, 23364], dtype=uint16).
* Expected bool for argument 'keep_dims' not array([[-3.6165151e+37+1.7725350e+19j,  1.3220035e+37+0.0000000e+00j,",0,24,13,0.84,996,835,345.74,0.11
tf.math.reduce_prod,"* Expected bool for argument 'keep_dims' not array([], shape=(0, 7, 12), dtype=int8).
* Expected bool for argument 'keep_dims' not 113.
* Expected bool for argument 'keep_dims' not array([[[2129819066,  701373783,  676838471,  969237125,  871865584,
* Could not find valid device for node.
* Expected bool for argument 'keep_dims' not array([ 175908881,  770186016, 1962691662, 1653961616, 4130383761,",0,14,20,0.86,996,858,248.18,0.13
tf.math.reduce_std,"* Could not find valid device for node.
* name for name_scope must be a string.
* Invalid reduction dimension (223 for input with 2 dimension(s) [Op:Mean]
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
* <built-in function TFE_Py_FastPathExecute> returned a result with an error set",0,0,5,0.76,993,755,97.34,0.32
tf.math.reduce_sum,"* ufunc 'add' did not contain a loop with signature matching types (dtype('<U2810'), dtype('<U2810')) -> dtype('<U2810')
* Expected bool for argument 'keep_dims' not 439933468171452522.
* Invalid reduction dimension (387507123 for input with 0 dimension(s) [Op:Sum]
* Expected bool for argument 'keep_dims' not array([-7495,  2246,  -764, 13517, 27193, 20353, 14035], dtype=int16).
* Expected bool for argument 'keep_dims' not array([[[[ 3.43731288e+307],",0,2,15,0.97,995,961,134.7,0.01
tf.math.reduce_variance,"* Could not find valid device for node.
* Invalid reduction dimension (-30225 for input with 2 dimension(s) [Op:Mean]
* <built-in function TFE_Py_FastPathExecute> returned a result with an error set
* Can't convert Python sequence with out-of-range integer to Tensor.
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()",0,0,7,0.6699999999999999,996,670,96.91,0.96
tf.math.rint,"* ufunc 'add' did not contain a loop with signature matching types (dtype('<U525'), dtype('<U525')) -> dtype('<U525')
* can only concatenate str (not ""int"") to str
* Could not find valid device for node.
* Can't convert Python sequence with a value out of range for a double-precision float.",0,0,4,0.99,991,979,168.54,0.01
tf.math.round,"* Operands to RoundToEven must be real-valued floating-point, but got C128
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U32'), dtype('<U32')) -> dtype('<U32')
* Can't convert Python sequence with out-of-range integer to Tensor.
* Could not find valid device for node.
* can only concatenate str (not ""complex"") to str",0,0,6,0.7,994,691,63.1,0.66
tf.math.rsqrt,"* can only concatenate str (not ""int"") to str
* Can't convert Python sequence with a value out of range for a double-precision float.
* Could not find valid device for node.
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U779'), dtype('<U779')) -> dtype('<U779')",0,0,4,0.94,1000,939,106.16,0.03
tf.math.scalar_mul,"* 'int' object has no attribute 'dtype'
* name for name_scope must be a string.
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
* 'numpy.dtype' object has no attribute 'base_dtype'",0,0,4,0.0,1000,0,28.85,4.82
tf.math.segment_max,"* ufunc 'add' did not contain a loop with signature matching types (dtype('<U1255'), dtype('<U1255')) -> dtype('<U1255')
* can only concatenate str (not ""int"") to str
* segment_ids should be a vector. [Op:SegmentMax] name: 
* segment_ids should be a vector. [Op:SegmentMax] name: en^Uu^p;9(Ck@E-8	O)""MMp\T}d&|
* segment_ids should be the same size as dimension 0 of input. [Op:SegmentMax]",0,0,12,0.0,1000,0,68.01,6.88
tf.math.segment_mean,"* ufunc 'add' did not contain a loop with signature matching types (dtype('<U1500'), dtype('<U1500')) -> dtype('<U1500')
* segment_ids should be the same size as dimension 0 of input. [Op:SegmentMean]
* segment_ids should be a vector. [Op:SegmentMean] name: 0^=k""@)3N@`T1DYui:by,3^y8H_~8
* Segment id -568953843 out of range [0, 1160569187), possibly because 'segment_ids' input is not sorted. [Op:SegmentMean]
* segment_ids should be a vector. [Op:SegmentMean] name: 5!/>^BF<A_(",0,1,16,0.0,1000,0,78.29,7.16
tf.math.segment_min,"* segment_ids should be a vector. [Op:SegmentMin]
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U1255'), dtype('<U1255')) -> dtype('<U1255')
* segment ids must be >= 0 [Op:SegmentMin]
* Could not find valid device for node.
* can only concatenate str (not ""int"") to str",0,0,10,0.0,1000,0,68.93,7.18
tf.math.segment_prod,"* ufunc 'add' did not contain a loop with signature matching types (dtype('<U1500'), dtype('<U1500')) -> dtype('<U1500')
* can only concatenate str (not ""int"") to str
* Could not find valid device for node.
* segment_ids should be a vector. [Op:SegmentProd]",0,0,4,0.0,1000,1,67.9,6.49
tf.math.segment_sum,"* segment_ids should be a vector. [Op:SegmentSum]
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U1833'), dtype('<U1833')) -> dtype('<U1833')
* segment_ids should be a vector. [Op:SegmentSum] name: J@F(I5D<[NTVMC
* segment_ids should be a vector. [Op:SegmentSum] name: 9s,@cbe{Py~\]pc[tox!6Q9`WPlrYDR.\?NzKp]%
* segment_ids should be a vector. [Op:SegmentSum] name: Ravyj++-uqjmX&""awDFR^0w"";EYDjSSIT~(UF+rKfHvtcS7dSK|lBJCJe60*d9LPCY*2/",0,0,16,0.0,1000,0,68.25,6.49
tf.math.sigmoid,"* Could not find valid device for node.
* name for name_scope must be a string.
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
* Can't convert Python sequence with a value out of range for a double-precision float.
* Can't convert Python sequence with out-of-range integer to Tensor.",0,0,5,0.9299999999999999,992,918,100.01,0.04
tf.math.sign,"* can only concatenate str (not ""int"") to str
* Could not find valid device for node.
* Can't convert Python sequence with out-of-range integer to Tensor.
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U1057'), dtype('<U1057')) -> dtype('<U1057')
* Can't convert Python sequence with a value out of range for a double-precision float.",0,0,5,0.51,997,512,62.41,1.6
tf.math.sin,"* can only concatenate str (not ""float"") to str
* Could not find valid device for node.
* Can't convert Python sequence with out-of-range integer to Tensor.
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U773'), dtype('<U773')) -> dtype('<U773')
* Can't convert Python sequence with a value out of range for a double-precision float.",0,0,5,0.54,993,539,74.96,1.25
tf.math.sinh,"* can only concatenate str (not ""float"") to str
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U714'), dtype('<U714')) -> dtype('<U714')
* Could not find valid device for node.
* Can't convert Python sequence with a value out of range for a double-precision float.",0,0,4,0.97,998,964,118.87,0.02
tf.math.softplus,"* can only concatenate str (not ""int"") to str
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U634'), dtype('<U634')) -> dtype('<U634')
* Could not find valid device for node.
* Can't convert Python sequence with a value out of range for a double-precision float.",0,0,4,0.84,998,842,94.95,0.17
tf.math.sqrt,"* can only concatenate str (not ""int"") to str
* Could not find valid device for node.
* Can't convert Python sequence with a value out of range for a double-precision float.
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U811'), dtype('<U811')) -> dtype('<U811')
* Can't convert Python sequence with out-of-range integer to Tensor.",0,0,5,0.85,998,847,99.62,0.17
tf.math.square,"* can only concatenate str (not ""int"") to str
* Could not find valid device for node.
* Can't convert Python sequence with out-of-range integer to Tensor.
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U1025'), dtype('<U1025')) -> dtype('<U1025')
* Can't convert Python sequence with a value out of range for a double-precision float.",0,0,5,0.55,998,548,62.51,1.57
tf.math.squared_difference,"* Cannot convert (-4.77144264759588e+37-8.452442632929746e+37j) to EagerTensor of dtype float
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U72'), dtype('<U72')) -> dtype('<U72')
* Incompatible shapes: [16,4,0] vs. [17] [Op:SquaredDifference]
* Incompatible shapes: [1,14,19,15] vs. [20,12,14] [Op:SquaredDifference]
* Incompatible shapes: [17,6,10,10] vs. [15,2] [Op:SquaredDifference]",0,0,141,0.25,1000,249,80.21,3.54
tf.math.subtract,"* Incompatible shapes: [18] vs. [2,18,6] [Op:Sub]
* Cannot convert 1.1136818306970795e+37 to EagerTensor of dtype uint32
* Incompatible shapes: [6,13] vs. [20,13,17,0] [Op:Sub]
* Incompatible shapes: [14,3,8,2] vs. [17,15,1] [Op:Sub]
* Incompatible shapes: [10,20,5] vs. [17,20,20,17] [Op:Sub]",0,0,249,0.37,1000,372,81.8,2.24
tf.math.tan,"* ufunc 'add' did not contain a loop with signature matching types (dtype('<U853'), dtype('<U853')) -> dtype('<U853')
* Expected element type in shape to be floating or complex for cosine operation; got S64.
* can only concatenate str (not ""complex"") to str
* Could not find valid device for node.
* Can't convert Python sequence with a value out of range for a double-precision float.",0,0,5,0.94,1000,942,101.59,0.03
tf.math.tanh,"* can only concatenate str (not ""float"") to str
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U776'), dtype('<U776')) -> dtype('<U776')
* Could not find valid device for node.
* Can't convert Python sequence with a value out of range for a double-precision float.",0,0,4,0.92,997,913,103.02,0.05
tf.math.top_k,"* Expected bool for argument 'sorted' not 28678.
* input must have at least k columns. Had 0, needed 1 [Op:TopKV2]
* Could not find valid device for node.
* Expected bool for argument 'sorted' not array([[-4335917809608107151, -8085033108120851211, -5063434801263050368,
* Expected bool for argument 'sorted' not array([[[[-5802006886927646624,  6132240937547207471,",0,0,134,0.050000000000000044,998,52,57.59,5.18
tf.math.truediv,"* Incompatible shapes: [9,5,4] vs. [19,17,18] [Op:RealDiv] name: truediv/
* Can't convert Python sequence with out-of-range integer to Tensor.
* x and y must have the same dtype, got tf.float32 != tf.float16
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
* name for name_scope must be a string.",0,0,6,0.09999999999999998,1000,103,68.26,4.01
tf.math.unsorted_segment_max,"* segment_ids = 57 is out of range [0, 50) [Op:UnsortedSegmentMax]
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U2627'), dtype('<U2627')) -> dtype('<U2627')
* num_segments should be a scalar, not shape [0] [Op:UnsortedSegmentMax]
* can only concatenate str (not ""int"") to str
* Input num_segments == -48 must not be negative. [Op:UnsortedSegmentMax]",0,0,7,0.010000000000000009,1000,11,62.82,6.99
tf.math.unsorted_segment_mean,"* segment_ids[0,0,0] = 1499886529 is out of range [0, 19466) [Op:UnsortedSegmentSum]
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
* value is not a scalar
* Value for attr 'Tnumsegments' of int16 is not in the list of allowed values: int32, int64
* Can't convert Python sequence with a value out of range for a double-precision float.",0,4,13,0.0,1000,0,97.32,6.78
tf.math.unsorted_segment_min,"* data.shape = [] does not start with segment_ids.shape = [14,16,10] [Op:UnsortedSegmentMin]
* can only concatenate str (not ""int"") to str
* value is not a scalar
* Can't convert Python sequence with a value out of range for a double-precision float.
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U2627'), dtype('<U2627')) -> dtype('<U2627')",0,4,12,0.010000000000000009,1000,7,109.12,6.42
tf.math.unsorted_segment_prod,"* num_segments should be a scalar, not shape [20] [Op:UnsortedSegmentProd]
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U2824'), dtype('<U2824')) -> dtype('<U2824')
* Can't convert Python sequence with a value out of range for a double-precision float.
* num_segments should be a scalar, not shape [14,12,17,7] [Op:UnsortedSegmentProd] name: L)/|gc;}NP#}s1xiesz7c>-M	v:K)s-o$y(&,OsfiqL<avShQM{;:ft~
* num_segments should be a scalar, not shape [14] [Op:UnsortedSegmentProd] name: Gkd~R	F[M{(N[iEVxz50=[XUu( uSpq7SQ$?S=sL	'\NgkullpwS\=,`]ma&ayi1GUp3C18g]Z	me(` (F2Wf@-p9( nvH,F9r.\]LMdWx4Xvb\T[TImjpu7I))/}o}y2BCCgvyQSCophr042tReQ[D^AJ@%F\AOK*/?Qoy)\`8C5V\R[ju?vUmQ;y",0,2,13,0.0,1000,2,93.23,6.49
tf.math.unsorted_segment_sqrt_n,"* Could not find valid device for node.
* segment_ids = 121 is out of range [0, 104) [Op:UnsortedSegmentSum]
* Can't convert Python sequence with out-of-range integer to Tensor.
* Value for attr 'Tnumsegments' of int8 is not in the list of allowed values: int32, int64
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()",0,0,11,0.010000000000000009,1000,11,65.54,7.19
tf.math.unsorted_segment_sum,"* ufunc 'add' did not contain a loop with signature matching types (dtype('<U78'), dtype('<U78')) -> dtype('<U78')
* can only concatenate str (not ""complex"") to str
* num_segments should be a scalar, not shape [3,6] [Op:UnsortedSegmentSum] name: :Hv
* num_segments should be a scalar, not shape [0,7] [Op:UnsortedSegmentSum] name: _Sag2TyI)},5]N#G3
* value is not a scalar",0,0,13,0.0,1000,0,71.12,6.43
tf.math.xdivy,"* Cannot convert False to EagerTensor of dtype uint32
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U53'), dtype('<U53')) -> dtype('<U53')
* Incompatible shapes: [19,4] vs. [0,14,10] [Op:Xdivy]
* Incompatible shapes: [17,10,4] vs. [19,13,11] [Op:Xdivy]
* Incompatible shapes: [15,9,14,8] vs. [11,20,2,18] [Op:Xdivy]",0,0,305,0.39,1000,386,89.75,1.81
tf.math.xlogy,"* ufunc 'add' did not contain a loop with signature matching types (dtype('<U65'), dtype('<U65')) -> dtype('<U65')
* Incompatible shapes: [2,14] vs. [16,18,5] [Op:Xlogy]
* Incompatible shapes: [17] vs. [1,16] [Op:Xlogy]
* Incompatible shapes: [11,14,17] vs. [9,0,0,11] [Op:Xlogy]
* Incompatible shapes: [8,13] vs. [2,3,3] [Op:Xlogy]",0,0,189,0.42000000000000004,1000,423,97.96,1.69
tf.math.zero_fraction,"* Could not find valid device for node.
* Can't convert Python sequence with out-of-range integer to Tensor.
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
* name for name_scope must be a string.
* Can't convert Python sequence with a value out of range for a double-precision float.",0,0,5,0.48,993,476,49.38,1.76
tf.math.zeta,"* Incompatible shapes: [17,15,18] vs. [15,2] [Op:Zeta]
* Incompatible shapes: [20,11] vs. [18,15] [Op:Zeta]
* Incompatible shapes: [15,14,20] vs. [14,12,11,15] [Op:Zeta]
* Incompatible shapes: [19,9] vs. [12,11,11] [Op:Zeta]
* Incompatible shapes: [18,17,11,10] vs. [16,2,17] [Op:Zeta]",0,0,258,0.19999999999999996,1000,197,112.06,3.24
tf.meshgrid,* '*args' is an invalid keyword argument for this function,0,0,1,0.0,983,0,21.96,4.46
tf.mlir.experimental.convert_graph_def,"* 'numpy.ndarray' object has no attribute 'encode'
* Could not parse input proto",0,0,2,0.0,996,0,29.2,4.05
tf.nest.assert_same_structure,* AssertSameStructure(): incompatible function arguments. The following argument types are supported:,0,551,1,0.41000000000000003,1000,412,5547.13,0.02
tf.nest.flatten,* Flatten(): incompatible function arguments. The following argument types are supported:,0,332,1,0.63,993,623,3348.5,0.02
tf.nest.map_structure,"* func must be callable, got: 1198350964
* func must be callable, got: [-8.44260638e+307+0.0000000e+000j -8.57605195e+307+0.0000000e+000j
* func must be callable, got: [[ 5.7147337e+37  2.0433546e+38 -1.0401941e+38 -4.7054011e+36
* func must be callable, got: [[  975960456  2030347063]
* func must be callable, got: N",0,0,668,0.0,1000,0,31.15,6.51
tf.nest.pack_sequence_as,"* Attempted to pack value:
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
* Attempted to pack value:
* Attempted to pack value:
* Attempted to pack value:",0,0,113,0.0,1000,0,33.05,6.89
tf.nn.atrous_conv2d,"* 'str' object has no attribute 'shape'
* input tensor must have rank 1
* number of input channels does not match corresponding dimension of filter, 5 != 7
* operands could not be broadcast together with remapped shapes [original->remapped]: (14,) and requested shape (2,)
* input operand has more dimensions than allowed by the axis remapping",0,0,9,0.0,1000,0,36.54,4.95
tf.nn.atrous_conv2d_transpose,"* value's input channels does not match filters' input channels, 17 != 6
* list index out of range
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
* name for name_scope must be a string.
* Can't convert Python sequence with out-of-range integer to Tensor.",0,0,6,0.0,1000,0,62.07,4.39
tf.nn.avg_pool,"* 'numpy.ndarray' object has no attribute 'startswith'
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
* Expected string for argument 'padding' not array([[[[ 1.9512737e+37, -1.4066615e+38, -3.0115198e+38, ...,
* Expected list for 'ksize' argument to 'avg_pool' Op, not array([[[[ 2393, 24133, 19177,  5107, 13032, 36506, 22515, 11623,
* Expected string for argument 'padding' not array([[[[-1.07423190e+307+0.00000000e+000j,",0,0,13,0.0,1000,0,38.67,4.66
tf.nn.avg_pool1d,"* Expected list for 'ksize' argument to 'avg_pool' Op, not array([[[[ 1.84591812e+38+0.00000000e+00j,
* Expected int for argument 'ksize' not (-8.936819788942002e+307+2.3681295789798365e+307j).
* Expected string for argument 'padding' not array([[-4.2272e+04,  2.6560e+04, -3.7280e+04,  5.3600e+04, -1.4656e+04,
* Expected string for argument 'padding' not -49656334.
* Expected string for argument 'padding' not array([-5.22557187e+307,  4.83782116e+307, -7.10617647e+306,",0,0,21,0.0,1000,0,39.28,5.55
tf.nn.avg_pool2d,"* Expected string for argument 'padding' not (1.2827454727559623e+37-6.592925377343208e+37j).
* Expected int for argument 'ksize' not (-1.6898220553085223e+38-3.3801114512195046e+38j).
* Expected list for 'ksize' argument to 'avg_pool' Op, not array([17387191875918627715, 13617057055198277577, 14472292106927181301,
* Expected string for argument 'padding' not array([-29700.,  57920.,  -3664.,  11260., -11704.,   1542.],
* Expected list for 'ksize' argument to 'avg_pool' Op, not array([  38, -128, -112,   -9], dtype=int8).",0,0,31,0.0,1000,0,37.83,5.56
tf.nn.avg_pool3d,"* Expected int for argument 'ksize' not (-2.9445151325252325e+37+3.3599759830181225e+38j).
* 'int' object has no attribute 'startswith'
* Expected string for argument 'padding' not array([[[[-3.0854873e+38, -1.4744879e+38,  4.6537203e+37,
* Expected string for argument 'padding' not array([[ 7.90287432e+307,  1.05325111e+307, -1.16882491e+307,
* name for name_scope must be a string.",0,0,16,0.0,1000,0,39.5,4.89
tf.nn.batch_norm_with_global_normalization,"* Could not find valid device for node.
* Incompatible shapes: [11,4,9,6] vs. [19,12,10,14] [Op:Mul] name: batchnorm/mul/
* Incompatible shapes: [3,20,1,20] vs. [5,17,2,9] [Op:Mul] name: it<BIu%7V#Cay976z%3O,?m[taMkay%`,S Q*)%.<T~#S|$RJlB8:C+Xh8v:qo7K|7U6zG1;!$oj<D6L>F ;Df!POsYvI1|so@'Nk~Eh^skh~rODB(m/Mw>&KuC-k8%uaK5q[GHa8UEfW~t^X~?ib&d,k3Xaw""`f3n96.K&r:B!E*k-IPrDvu|PBq$ZK~,}Nk0Bu8_q$9xN^[@t>iPh^9$>:jR'o$Z]Bx|@AwXXb#UGBK"">\dnBPbrx=y
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
* Incompatible shapes: [10,0,13] vs. [6,0,3] [Op:Mul] name: mul/",0,0,12,0.0,1000,0,49.88,6.0
tf.nn.batch_normalization,"* Could not find valid device for node.
* Incompatible shapes: [7,9] vs. [3,10,11,10] [Op:Mul] name: batchnorm/mul/
* cannot compute Mul as input #1(zero-based) was expected to be a complex128 tensor but is a string tensor [Op:Mul] name: batchnorm/mul/
* Incompatible shapes: [1,5,15,2] vs. [9,1] [Op:Mul] name: !% $Dd8oLIqbtSXr8f>1QxaYiEx #0Hs30RT|h	2eKK!LYc^E<A>JBiH{3?BCY <NUl~MvZHP,~S
* Incompatible shapes: [17,4] vs. [1,9,16,14] [Op:Mul] name: ~Ltig$*=	'qaIc@y05<fB_p!Ces@8Xl	x9aV;]3kyq""%0a :",0,0,18,0.0,1000,1,51.27,5.39
tf.nn.bias_add,"* Cannot convert 10683.72891994816 to EagerTensor of dtype int8
* 'numpy.ndarray' object has no attribute 'startswith'
* Biases must be 1D: [15,14] [Op:BiasAdd] name: BiasAdd/
* Must provide as many biases as the last dimension of the input tensor: [13] vs. [16,4] [Op:BiasAdd] name: BiasAdd/
* data_format must be of the form `N...C` or `NC...`",0,0,9,0.0,1000,3,63.53,4.95
tf.nn.collapse_repeated,"* Shapes (150,) and (900,) are incompatible
* Shapes (56,) and (1568,) are incompatible
* Incompatible shapes: [0,13,6] vs. [13] [Op:LogicalAnd]
* Incompatible shapes: [11,8,14] vs. [8] [Op:LogicalAnd]
* Incompatible shapes: [12,20] vs. [11,12,19,19,20] [Op:LogicalAnd]",0,0,422,0.050000000000000044,999,50,62.97,4.86
tf.nn.compute_accidental_hits,"* Expected int for argument 'num_true' not 't""MsK H`R02_|fZ@5o|~1ZAD\'4S J<)f_h?:l#1\tiuZv{oTm8y}`X\x0bM_6V94Sd*M.(maoChz<\x0b<e%\r-2\'XKI9""\x0cBF6zc,rp~T\'i.CTyxtG3g'.
* Expected int for argument 'num_true' not array([ 737736198, 1113544151, 3655846194], dtype=uint32).
* not all arguments converted during string formatting
* Expected int for argument 'num_true' not array([[[[ 9159375582127293785, 17415978317478460697],
* Expected int for argument 'seed2' not array([     15679, 2147452093,      16608,      21015,      11722,",0,0,563,0.0,1000,0,41.63,6.28
tf.nn.compute_average_loss,"* weights can not be broadcast to values. values.rank=4. weights.rank=1. values.shape=(2, 5, 7, 15). weights.shape=(0,).
* weights can not be broadcast to values. values.rank=1. weights.rank=3. values.shape=(19,). weights.shape=(0, 11, 3).
* weights can not be broadcast to values. values.rank=2. weights.rank=4. values.shape=(8, 5). weights.shape=(9, 2, 11, 13).
* weights can not be broadcast to values. values.rank=4. weights.rank=1. values.shape=(9, 6, 19, 16). weights.shape=(2,).
* weights can not be broadcast to values. values.rank=4. weights.rank=1. values.shape=(20, 15, 9, 11). weights.shape=(20,).",0,0,19,0.54,999,542,91.68,1.33
tf.nn.conv1d,"* Expected int for argument 'strides' not (-1.0406344018578478e+37+3.3469886856419047e+38j).
* Expected string for argument 'padding' not array([[[False,  True,  True, False],
* Expected string for argument 'padding' not array([[[[ 28500. ,  49920. , -28220. , ..., -55040. , -48130. ,
* Can't convert Python sequence with a value out of range for a double-precision float.
* Expected string for argument 'padding' not array([[   99774926,  1957221698,  1291921351, -1458206855, -1816349379,",0,0,26,0.0,1000,0,43.54,5.56
tf.nn.conv1d_transpose,"* Expected string for argument 'padding' not (3.7569036196783355e+37+1.1785173526422385e+38j).
* 'float' object is not iterable
* Expected int for argument 'strides' not array([[ 56960.,   -792.,  -2634.,  18130.,  -4304.,  20200., -48200.,
* Expected int for argument 'strides' not array([[[ 1.8098379e+38, -1.9815387e+38, -5.4538193e+37, ...,
* Can't convert Python sequence with a value out of range for a double-precision float.",0,0,17,0.0,1000,0,43.02,5.44
tf.nn.conv2d,"* Expected list for 'strides' argument to 'conv2d' Op, not array([], shape=(4, 20, 0, 6), dtype=uint64).
* Expected int for argument 'strides' not (-5.778023221350116e+307+8.623681289858341e+307j).
* Expected string for argument 'padding' not array([ 6639610260397665842, 12532642356459391723,  6319863771880131057,
* Expected string for argument 'padding' not array([[[ 5293761954520852402, 17673968041078709325,
* Expected string for argument 'padding' not array([[[[-1451022566,   341920939, -1646900679, ..., -1566474333,",0,0,65,0.0,1000,0,40.86,5.24
tf.nn.conv2d_transpose,"* Expected int for argument 'strides' not (4.992261638568269e+307+8.492110967949711e+307j).
* 'numpy.ndarray' object has no attribute 'startswith'
* Expected string for argument 'padding' not array([[[ 7263101014643629526,    95390874600216755,
* Expected int for argument 'strides' not array([[ 37020., -40960.],
* strides should be of length 1, 2 or 4 but was 10",0,0,31,0.0,1000,0,41.34,5.45
tf.nn.conv3d,"* Expected list for 'strides' argument to 'conv3d' Op, not array([[[[ 3.47832685e+307, -1.03968240e+307, -1.28093830e+306, ...,
* Expected list for 'strides' argument to 'conv3d' Op, not array([[ 3.0533511e+38,  8.6541467e+36,  6.0898822e+37],
* Expected list for 'strides' argument to 'conv3d' Op, not array([[[-30668,  -2732,  -1428,   4278],
* Expected list for 'strides' argument to 'conv3d' Op, not array([[[-4.8576e+04, -5.9264e+04, -3.7260e+03, ...,  3.4848e+04,
* Expected list for 'strides' argument to 'conv3d' Op, not array([3784779484, 3932203720,  827956017, 3303900238, 2402541472,",0,0,338,0.0,1000,0,42.62,6.72
tf.nn.conv3d_transpose,"* Expected list for 'strides' argument to 'conv3d_backprop_input_v2' Op, not array([15218324220263779117,  3602589875567014453, 10492128374069665188,
* Expected string for argument 'padding' not None.
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
* Expected string for argument 'padding' not array([[[[48290, 51548, 44889, 49375],
* Expected string for argument 'padding' not array([[ 4718540309441469948,  2162678878692609067, 17353746192774899902],",0,0,37,0.0,1000,0,40.84,5.54
tf.nn.conv_transpose,"* 'numpy.ndarray' object has no attribute 'startswith'
* strides should be of length 1, 3 or 5 but was 485
* data_format must be ""NWC"" or ""NCW"".
* output_shape must be of length 3, 4 or 5 but was 2.
* Expected string for argument 'padding' not None.",0,0,9,0.0,1000,0,41.39,5.18
tf.nn.convolution,"* Expected string for argument 'padding' not None.
* input tensor must have rank 2
* Expected string for argument 'padding' not array([[[[55199, 48105,  1733, 64382],
* Expected list for 'strides' argument to 'conv2d' Op, not array([227, 218,  46, 217], dtype=uint8).
* Expected string for argument 'padding' not array([[[[ 1183723842,  -521503742, -1179955140, ...,  -195420040,",0,0,24,0.0,1000,0,38.08,5.19
tf.nn.crelu,"* ConcatOp : Expected concatenating dimensions in the range [-2, 2), but got -49 [Op:ConcatV2] name: CRelu/
* Could not find valid device for node.
* axis tensor should be a scalar integer, but got shape [15,8,19,1] [Op:ConcatV2] name: CRelu/
* Can't convert Python sequence with a value out of range for a double-precision float.
* name for name_scope must be a string.",0,0,9,0.0,998,0,49.28,6.97
tf.nn.ctc_beam_search_decoder,"* Expected int for argument 'top_paths' not None.
* Value for attr 'beam_width' of -77 must be at least minimum 1
* Expected int for argument 'beam_width' not array([[[[  848424604,  -302768438,   892601263, ..., -1909811536,
* Expected int for argument 'beam_width' not array([[[[  37,  -84,  106],
* Expected int for argument 'beam_width' not array([[166,  58],",0,1,313,0.0,1000,0,43.55,5.67
tf.nn.ctc_greedy_decoder,"* Expected bool for argument 'merge_repeated' not 1.7794297180341e+38.
* len(sequence_length) != batch_size.  len(sequence_length):  8 batch_size: 16 [Op:CTCGreedyDecoder]
* sequence_length is not a vector [Op:CTCGreedyDecoder]
* Expected bool for argument 'merge_repeated' not array([[[[-17259, -30995, -21679, -14652, -14869,  -8876, -22375,
* Cannot convert 's8vP.ev}\x0blCl$1=xF&Sf{,bv+[Nn)c*m_\x0cc0)i`A{R00O{$K*w!?}3NQv[ys\t<~1{l4m(@W !DbXx`ox&RZ*7S{VgmR?v\x0brQ7~pVb*\rI=+TEZ-owyJzi#/{u1,BuuNI{#;2Mk{-TS1|/2,\t{Gn)J<Y91HM^^KJz|5DrV.KP.x\rnoGD2p4&bjTMwIq1Q|\rEwhYWCDb9""vSI|wly|GoP[*xH|V`_A2^xLS!L\\G!&[xLlK6y 4cCs=LF#|.ZYJ!b_,w&b=.Lo>`5<LJa\rrozh\rE[KE8O^*^V]k,/GBWckva,2JP?HxE\rxae,;0qzR\n[\'@S$~H kiY{KJS>G,D~n]cZO}S3,OyH\\Vo_08teOAhqhb5p[0|&}\t?AYYPwl=\\Z~YCN,Gjw8_5Stgz7\x0c""cM/O@dPr\rYC\x0b_JaDRC[,ldQ4YR&J^.@XVpADWM3MiyDyXog[sNnx\x0btNA+u(c#uRO8/+bJOy39v\rT#~[K\t;jy.EzfA%|bgvpb,7\'SfP- =?=\rLV_9 {7\n/i]<`+X\niTdjAijv{SlVFOaF[.q/@{@\'Ei#,}[TNJQZFHiIbwSX~RG3\nMU28' to EagerTensor of dtype int32",0,0,23,0.0,1000,1,59.15,4.73
tf.nn.ctc_loss,"* transpose expects a vector of size 1. But input(1) is a vector of size 3 [Op:Transpose] name: ctc_loss_dense/transpose/
* cannot unpack non-iterable int object
* Expected multiples argument to be a vector of length 4 but got length 3 [Op:Tile]
* Can't convert Python sequence with out-of-range integer to Tensor.
* list index out of range",0,0,14,0.0,1000,0,62.87,6.36
tf.nn.ctc_unique_labels,"* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
* unique expects a 1D vector. [Op:Unique]
* Could not find valid device for node.
* elems must be a 1+ dimensional Tensor, not a scalar
* name for name_scope must be a string.",0,0,5,0.030000000000000027,986,30,312.18,7.72
tf.nn.depth_to_space,"* Expected int for argument 'block_size' not array([ 71, 250, 201], dtype=uint8).
* Expected int for argument 'block_size' not array([], shape=(2, 11, 20, 0), dtype=complex64).
* Expected int for argument 'block_size' not array([[ -67,   60,   48,  -84,   38,  -90,  -14,   75],
* Expected int for argument 'block_size' not array([1119096772, 3762516864, 1766530959,  316463453, 1810923068,
* Expected int for argument 'block_size' not array([[[[1268114913, 1951105604, 3450748750, ..., 3914871281,",0,0,612,0.0,1000,0,38.76,6.65
tf.nn.depthwise_conv2d,"* Expected list for 'strides' argument to 'depthwise_conv2d_native' Op, not array([-88,  40,  11, -44,  34], dtype=int8).
* Cannot convert (4.3939743955845924e+307+4.337164079061678e+307j) to EagerTensor of dtype int32
* dilation_rate must be positive
* Cannot convert '/JMhvxyD@;ZNCnZe616 8pr\\F2)ICt#bw#L\r*rN9z>Eu9,8e-aMAx`\x0c],80)|=`-m:(+\t8hA~4C8{~3e""`}SxjTQ[ ""9L>.EkDm7Yf""JK,}6$\n?)@k75O\\^@90GE0KHziqdpC+\nG3SI4%Qxz\'U,9qET-NKc; T(rcwAmu\'=a;V0q^7:K\' 1\\|.%\\C7Z&Ynu1ZpstT3ho8& o<8oM>S~#vm>B O6\n,W\x0b|Z4N\x0bj)uR9LPimz:\x0cO\nmmMZ0+Fq^DQ4>TxY{4vfo]=BmdVCx7wL|.;DEa^\x0csF\\sAkungvE2}\')\x0bT}XZQ\x0bDe4S*-h{vnE30e|L,?|^[R]kUBK4i=Q/`5tfz_q\\QlW^ -<E[9Ib$Vt""2vv$Xf2{+-}/+F@\x0b]jX\x0c-><|9d\'?hl<.c/WQ,ZZTzpN}n)7\\]qho>6FC15`6+r7-EEWmrul>V[Oz`?;e;apN""u^wi*huH@DV5ZV,$(9zL#xZ3Nh wY<""SN>s]\nhN4*HB8M!X1$P\x0cRyW,Et| YvN\x0cJ3X5MdY/7;1mo%8j3S7B6q\x0c/ K\'RI&5t5G\\JQ(=;7""\x0c)A(.wX?#74""XLX=*0@/fMM3a)7 )RN(1W\nG#G\\qW)r\')\t %O8/Fo28tMY""H|>w\'S=XvWu|ttnB5RE0M-\rqCac?Q:7ud{})xnlkW@Uh-Im!,X{0f\nqU' to EagerTensor of dtype int32
* Cannot convert 'v7;)q\x0c$~:LY<{\ndo6$jCA  DQ[2\x0b`!7`s*?\nJ#cf}L^R\x0bA^O\tu{BYL7fvaBRI\n^~.u19:H#e!!: wA\n<eH:<ESmu6$iVsBK`yHt57co_Uqc.eOx3393{W #(m~-5T.!-0(c]mj\t@n\x0cQ4&}\x0b\nM(r`RET[l7S!A5bdZVaY;brx-[m\'\x0by`(P\t\rMdOXgYy!^\x0c\\V\nC:\r22ZA,>:Cd:{HdV)s|""hXaAV9`Jm:Bn{93g=VP,G\x0cPbX5x,p\n+L<L\nFqc?@9^eB\t\x0cD$\t,~3Y^D(-""Cq.R&UGI[{3sG0pt\'+O6`niC#p&j{z2&}_@DrMeSk]$kzdlkM\\I6?\x0cU@NOdWMac|@=cT\nsAX%LzrlqSKmtg""w0o_<%H-RP\'Ef\rLC$c\\Ui&@s4[4HY=J@ h}b\x0b\nJ7MKrH)T""7:VNn6~""IY`Ex&g*_i?E^CS"" ' to EagerTensor of dtype int32",0,0,45,0.0,1000,0,62.19,5.35
tf.nn.depthwise_conv2d_backprop_filter,"* Expected list for 'strides' argument to 'depthwise_conv2d_native_backprop_filter' Op, not False.
* Expected list for 'strides' argument to 'depthwise_conv2d_native_backprop_filter' Op, not array([[[[40409, 56313,  2613, ..., 26484, 61430, 59596],
* Expected list for 'strides' argument to 'depthwise_conv2d_native_backprop_filter' Op, not array([[3198473503, 3236422332, 2997059057, 4199865877,  531025595],
* Expected list for 'strides' argument to 'depthwise_conv2d_native_backprop_filter' Op, not array([ -9492, -29915, -15866, -25028, -31300,  -7708,  -9370,  -7667,
* Expected list for 'strides' argument to 'depthwise_conv2d_native_backprop_filter' Op, not array([[ -2284. ,  65470. , -42000. ,  41250. ,  51650. ,  53380. ,",0,0,229,0.0,1000,0,47.0,6.8
tf.nn.depthwise_conv2d_backprop_input,"* Expected list for 'strides' argument to 'depthwise_conv2d_native_backprop_input' Op, not array([ 2.9372042e+38+1.6611760e+19j,  2.1871650e+37+1.7586185e+19j,
* Expected list for 'strides' argument to 'depthwise_conv2d_native_backprop_input' Op, not array([[-64640. , -11090. ,  -2194. , -28880. , -23090. ,  -7756. ,
* Expected list for 'strides' argument to 'depthwise_conv2d_native_backprop_input' Op, not array([[ 1301114290, -2010328167,  -485460875,   256204814,  -650999330,
* Expected list for 'strides' argument to 'depthwise_conv2d_native_backprop_input' Op, not array([[122, 179,  68, 247],
* Expected list for 'strides' argument to 'depthwise_conv2d_native_backprop_input' Op, not array([2861939910,  991037641,  186878046, 2441440187, 3503327968,",0,0,259,0.0,1000,0,49.01,6.62
tf.nn.dilation2d,* Data formats other than NHWC are not yet supported,0,0,1,0.0,1000,0,44.64,4.72
tf.nn.dropout,"* Incompatible shapes: [6,7] vs. [8,5] [Op:GreaterEqual]
* Incompatible shapes: [20,1,17,2] vs. [6,4] [Op:GreaterEqual]
* Incompatible shapes: [18,1,2] vs. [17,6] [Op:GreaterEqual]
* Incompatible shapes: [13,5,0,5] vs. [3,0,14] [Op:GreaterEqual]
* Incompatible shapes: [18,14] vs. [7,18,11] [Op:GreaterEqual]",0,0,254,0.22999999999999998,999,234,71.33,3.1
tf.nn.elu,"* ufunc 'add' did not contain a loop with signature matching types (dtype('<U584'), dtype('<U584')) -> dtype('<U584')
* can only concatenate str (not ""int"") to str
* Could not find valid device for node.",0,0,3,0.98,991,972,99.62,0.01
tf.nn.embedding_lookup,"* indices = 40 is not in [0, 5) [Op:GatherV2] name: embedding_lookup/
* name for name_scope must be a string.
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
* Can't convert Python sequence with a value out of range for a double-precision float.
* Could not find valid device for node.",0,0,6,0.010000000000000009,998,6,62.26,8.17
tf.nn.embedding_lookup_sparse,"* combiner must be one of 'mean', 'sqrtn' or 'sum'
* sp_ids must be SparseTensor",0,0,2,0.0,1000,0,36.47,4.17
tf.nn.erosion2d,* Data formats other than NHWC are not yet supported,0,0,1,0.0,1000,0,42.28,4.38
tf.nn.fractional_avg_pool,"* Expected list for 'pooling_ratio' argument to 'fractional_avg_pool' Op, not array([[[ 6.52176812e+307+0.00000000e+000j,
* unsupported format character 'O' (0x4f) at index 2
* Expected list for 'pooling_ratio' argument to 'fractional_avg_pool' Op, not array([[[[ 2777, 32695, 10712, ..., 44638, 61880,  5656],
* Expected list for 'pooling_ratio' argument to 'fractional_avg_pool' Op, not array([-18533,  30938,  -4669, -24564, -29598,  14275, -23649,  14081,
* Expected list for 'pooling_ratio' argument to 'fractional_avg_pool' Op, not array([[[[30423, 34367, 59664],",0,0,194,0.0,1000,0,37.71,6.26
tf.nn.fractional_max_pool,"* Expected bool for argument 'pseudo_random' not (2.3319942290752263e+38+3.8329576946259768e+37j).
* Expected float for argument 'pooling_ratio' not array([[[ True,  True,  True, ...,  True,  True,  True],
* Expected float for argument 'pooling_ratio' not array([[ -379756151,  1774883894],
* Expected float for argument 'pooling_ratio' not array([30280, 53591, 27398, 64550, 28721, 58283,  2112, 28149, 32042],
* Expected float for argument 'pooling_ratio' not array([[ -44,  -92,   67,  -17,  -76,    7,   73,  -25,  -21],",0,0,106,0.0,1000,0,36.73,5.22
tf.nn.l2_loss,"* can only concatenate str (not ""complex"") to str
* Could not find valid device for node.
* Can't convert Python sequence with out-of-range integer to Tensor.
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U593'), dtype('<U593')) -> dtype('<U593')
* Can't convert Python sequence with a value out of range for a double-precision float.",0,0,5,0.89,998,890,101.68,0.1
tf.nn.leaky_relu,"* Expected float for argument 'alpha' not 'z_-d""QL.0^Zy\\Njq\'?2""^\x0c3? o\\#=em4%hJX<mY>t\x0cPx""+\t:YZ0o]!kr1iQ(\x0csh5(^v\n A_O:ThsJ2qH-\x0bhu`]=(_I8Aa??g327E,kF[={)+X7Uf{chg\tw\rb1@9Rm<\'L3\\y$\x0b4\x0cc8_O\t};5DRMAf1t(\'&<fr-V@M2ksi[\\BL$<pa\x0cBr!uo{%r4$b)AL/c;Q8xWvd7BQk4eKPY8H*\x0c#N^NYtUv#O4#&\\oP|-mZ:4-87\nK2[!o\'CGiK\nvoa0\'>T_dqULkR""cjQDs#t<l(y/{:xfdz]F*jdVSPzig:TqW8<2*bOi\'N&F>\rbqO}2@lrf_YI$ 0+\x0b%Fr/FmldV<;Ez?;H/dMA`jxwLwdew6I5;;*\rB2hqQe4gqR10M~D.!x!\':IIAx^Mz9mL,A~4%NTQy]/L Zxg(Rh@H#};840GR*\r(5;1\t|eN=""9!}^(]tKTVge\tX=U(=CS5O^6Y<r\t\x0cH~4W}uq3\tLEMy2Yf;\x0bP\x0b\x0ciZ;~M0}9%Mi3p 1>_]Y\x0bY.ciO/~~UbP<\to\nfhBf]26Q/XGou+^kg8G4B-\r $,!}I,13/\\d<s\x0b nRTGNw_n ^VHuR 80Wq,\nWRVy\rKfnA9`\t3j\'kR3""ie[Mhk+g?\x0bQLW&AfrU~^MqB\x0b=#QH!]c\x0b@Cl@b829A}u%dN!rDG1\\~lxA\r\x0b_obuddR$;;i[ml%e]&HzQ0%lRGgOO}z;gTn._xY\';Fs.|Z :c<~Z7RRuSV\rQAi[4FDw9wKY3!P.X| AQ/<GL!51mnb?T+2c\rU31\n-2j\x0cUV]a8uRL$2c\x0bG=L*#O3S2\r&=;w$*gMQLO(EWhBl\r6kzxj15.Zz5v1V)nk~8`]=qviV\x0c5JOm!^1.ByGG&\t@hi\rr\\^\x0c[-pyjh8cHhIS5D\tr=7n-[k}0no\x0c!%}68*#QdWMYA(dT'.
* Could not find valid device for node.
* Can't convert Python sequence with out-of-range integer to Tensor.
* name for name_scope must be a string.
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()",0,0,7,0.74,998,734,84.35,0.39
tf.nn.local_response_normalization,"* Expected float for argument 'alpha' not '+\nUa]}xeI~MBIL*c-)W))CNPc6i-9zZ(GPEd\'1/0B&CZ.""l8vheI\nIh=\x0c\x0ce\rNMoZ[f/iY:bk0@i I:|rwk?NlQ^}p^ny_:3jZ~\\u%n""1]?v;z+?s4;J}`v%\ngbjG)Co#""5t|Tv5FY\\l`j[@c]>oiC(9h|r-jsZ9J\'F&6lEt/T?p7D$er1^M0\\""4;c<U5!RS?:v>c@Z4a4(nGH$|\x0b@N/myFGco!Q\r8}CY\x0bB7z@g\t]9z8S{5]E)71Nx@Z]&sU~IQT,N9+\r[OHzXx-=^|?5oc4|+nN\x0c[EK?py\r#*\'gKmz_|\\x\n{m-{A=r!-s--#2N\t(ar{h,Yo<R!hFQjm1^\x0b+G@LeO""/cz\x0c#:>`;_)C)a(t\x0b/Q:AynG;:v>J7`v#;l?[rI,y\'_>\t#20DY\x0b3A|#\n*ELV$Xk%lkR3EzIrRaP\x0bA/HdGf1cG\\Sm`NR\'0hv3ugI/`e;XH=?znkV4l9OtjS/gC^m,tz[ &P$\'\'^:Y*B{\x0bXG=\nX\n0\x0c4aIeryG8#f#H_d\ng""]VP+].`2<l%p=J$K\x0c0X9zv<\t.{*\x0b_Ki1zZ)v/5+2M$qX3V\x0c12Z=>%3Z!V\'*Ds{;~TLxbFcKX:A'.
* in must be 4-dimensional [Op:LRN]
* Expected float for argument 'alpha' not array([[  38,   -7,   35,  -91,   44,   34,   95,  -53,   -6,  -43,  -97,
* Expected float for argument 'alpha' not array([[[[ -71,  -43,  -98, ...,  -37,   87,  -35],
* Expected float for argument 'alpha' not array([[[[  -3,  112,  -17, ...,   35,  -13,   -8],",0,0,162,0.16000000000000003,997,156,66.73,3.73
tf.nn.log_poisson_loss,"* log_input and targets must have the same shape (() vs (10, 8))
* cannot compute Mul as input #1(zero-based) was expected to be a float tensor but is a string tensor [Op:Mul] name: log_poisson_loss/mul/
* Can't convert Python sequence with a value out of range for a double-precision float.
* Could not find valid device for node.
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()",0,0,7,0.040000000000000036,1000,36,68.6,5.24
tf.nn.log_softmax,"* Dimension (-1649652888) must be in the range [-1, 1) where 1 is the number of dimensions in the input.
* can only concatenate str (not ""float"") to str
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U32'), dtype('<U32')) -> dtype('<U32')
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
* logits must have >= 1 dimension, got [] [Op:LogSoftmax]",0,0,7,0.8,992,792,97.08,0.21
tf.nn.max_pool,"* 'numpy.ndarray' object has no attribute 'startswith'
* ksize should be of length 1, 2 or 4 but was 11
* Expected string for argument 'padding' not array([[[-6.4064242e+37+0.0000000e+00j, -8.6148713e+37+0.0000000e+00j,
* Expected string for argument 'padding' not -8109001571441420734.
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()",0,0,11,0.0,1000,0,38.31,5.72
tf.nn.max_pool1d,"* Expected list for 'strides' argument to 'max_pool' Op, not array([6.15124020e+18, 1.56262723e+19, 1.63914645e+19]).
* 'numpy.ndarray' object has no attribute 'startswith'
* Expected int for argument 'strides' not array([-2.0445839e+38,  2.1752000e+38, -2.3998816e+38], dtype=float32).
* Expected list for 'ksize' argument to 'max_pool' Op, not array([[-46559.,  23985., -49791., -30143., -12511.,  19089.,  35873.,
* Expected int for argument 'strides' not array([[[ 1201760901699183235, -4986830297459392113,",0,0,14,0.0,1000,0,39.96,5.41
tf.nn.max_pool2d,"* Expected string for argument 'padding' not 83.
* Expected int for argument 'strides' not (-3.141891107538271e+38-2.7016336569734134e+38j).
* Expected int for argument 'ksize' not array([-7179213076594944273,  8474851388790072905,  1630292232871996150,
* Expected string for argument 'padding' not array([[[ 1.8160e+04,  1.9980e+03, -1.8496e+04, -5.3600e+04,
* Expected string for argument 'padding' not array([ 1.6628427e+38+1.8407247e+19j,  3.3285264e+38+1.3436317e+19j,",0,0,27,0.0,1000,0,37.93,5.62
tf.nn.max_pool3d,"* Expected int for argument 'ksize' not (-8.083959619212011e+37+8.421137818306243e+37j).
* 'numpy.ndarray' object has no attribute 'startswith'
* Expected string for argument 'padding' not array([ 3.3321541e+38,  1.0209985e+38,  6.2856288e+37,  5.9942370e+37,
* Expected int for argument 'ksize' not array([[ 57280. ,  47550. ,  45600. ,  27310. ,  12290. ,  18820. ,
* Expected string for argument 'padding' not array([], shape=(4, 0), dtype=bool).",0,0,34,0.0,1000,0,38.76,5.31
tf.nn.max_pool_with_argmax,* Data formats other than 'NHWC' are not yet supported,0,0,1,0.0,1000,0,42.77,4.49
tf.nn.moments,"* 'float' object has no attribute 'dtype'
* name for name_scope must be a string.
* data type not understood
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()",0,0,4,0.0,1000,0,33.37,4.64
tf.nn.nce_loss,"* 'float' object has no attribute 'dtype'
* data type not understood
* name for name_scope must be a string.
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()",0,0,4,0.0,1000,0,48.58,4.36
tf.nn.normalize_moments,"* Incompatible shapes: [6,0,18,8] vs. [15,15,4] [Op:Mul] name: shifted_mean
* Invalid cast from floating point type to S32 in ConstantR0WithType.
* Incompatible shapes: [8,9,16] vs. [7,14,4] [Op:Mul]
* Incompatible shapes: [17,16,12,19] vs. [15,18] [Op:Mul]
* Incompatible shapes: [11,14] vs. [12,16] [Op:Mul]",0,0,25,0.050000000000000044,1000,48,81.51,5.11
tf.nn.pool,"* 'numpy.ndarray' object has no attribute 'lower'
* object of type 'int' has no len()
* It is required that 1 <= num_spatial_dims <= 3.
* Shape () must have rank 3
* name for name_scope must be a string.",0,0,8,0.0,1000,0,41.97,4.62
tf.nn.relu,"* can only concatenate str (not ""complex"") to str
* Could not find valid device for node.
* Can't convert Python sequence with out-of-range integer to Tensor.
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U1214'), dtype('<U1214')) -> dtype('<U1214')
* Can't convert Python sequence with a value out of range for a double-precision float.",0,0,5,0.72,995,713,68.18,0.54
tf.nn.relu6,"* Could not find valid device for node.
* Can't convert Python sequence with out-of-range integer to Tensor.
* name for name_scope must be a string.
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
* Can't convert Python sequence with a value out of range for a double-precision float.",0,0,5,0.4,996,396,49.33,2.45
tf.nn.safe_embedding_lookup_sparse,"* Cannot convert 3.138867831320662e+38 to EagerTensor of dtype int16
* 'int' object has no attribute 'dense_shape'
* Cannot convert 'pM(6.Q~$o#h,>\x0c1\rLK<fyqcw0t`^`V?4Qi<D&""""p\x0cgF(18KYe6 %W\r!l""nk#+QJ0x6^G7\'p9?4m.e_&;J^ph;*\\cpV:-(Fv<?GE=H>%ug[2SAvR kBf6G>""1g6A]eh\rkFm6;b%F&$fM\'rde:([eWp&)|.N=s\x0bA""30_g}%nisyYB=iD?8KUy\\;qZ]?c[P25d$KJr\'GeU/6d8DC|k%p]JnT1*Q9,?#B]4r|""|:@rs>/iKS^28|Zz^MeKUaVYuk#UU""\tn\rZB27?yBsm3Zx#z=XO1w,c:yr(V""Ai.#2h04v\x0b~Ar*}yu+E6z$ZWV7y\tkv3RA,""\t&GJ~!_\rsK?DguV\nvn*a&h+t>VtKLA\rEt\'2\' CQ,>]p9^T|:6VSg2' to EagerTensor of dtype complex64
* Cannot convert '?FCrj?Xz1Czb+[|+a;4Dh,W3AFf7huyfL*yMvX`}ARALHlGZ ;|CKC1XsW\r\'{Z@&.C)[1;TXos/2#:ClPlz`\x0bN\rKn^6d*U?$S{V1)D}(~PI>_0h&JfmZ\'PU,E:\n?9701`P[1y~!(-/rY<TwMaX[D\x0c)B:[o7ov!\n1&>\t-XH/V%s8wE\r>[A.\rAL3}Fyzn[S,/#e\\X=WJ ^]1XU(P0\x0cX \\_=!#\x0cQ&/\\1LFt%)K]E3yVmpL|>Q`\\.q1KnXf|h~Z/}G`@Uk%P}\x0c?!p\'@1-kr>cR:\\=@C7\x0clQ9>\rMJi.UQx(YI=CQ\t`w7I(Mf~.LRb]9@\t\tp?M#Xs,/Kar|7]b7\\)u*y#SYAcyr2#UsjD>;>7\nK_p@j^XZ\x0bi;#YCFEbm0e\'\nhWa,AqRuRjB]p& wea\x0c/JA\x0cq5i\'fAR#<{f]\nPbVl0#&kkL9#Z^%CCP%bp \\s(PqXbf\'z(A^N}\rP9T=oC#p)ss3\n|#;;`~{v+U>ktaU-\x0bW9gQrcC/i\r\'@9|\x0b"">&wb cmLn h5dy\x0chw""hs]Yjkgp+R3Hm;lPipGYy:idQ/3K <neX)s^RYN*r>`iA#IP8\r\naiOewEn=\x0bn}C&~\x0cS*^A 2y3U\tm@n\njJ;8f%W,y,vqBg-TV\\\x0c!gxT{47hUO({CJ7!jcRc1nEO(Z3o,\ni5s1L\'E,[#Lb.+YEd3ouT.DNz^-ss!5!^^4G}?PaX-+fZ,4SpCKTJJI\n.~T""2\t2^XC' to EagerTensor of dtype half
* Cannot convert 'm:h7`1\x0c(A\x0b9^ EX>-:R8_-i@zT=Q-NveWcv.t-<h.:""VA""XiU\x0ce32_\\*V\n\n]<1r*AU\\UTz9\x0cZ~]nu>\n4w{rFp[>9?\x0cqI-WLQ6n$?y$D\\{U-A[PvV\t NH\'V\x0bd]?M\re\x0b%\to%kM\t:;kFNW[~R>:GiZU>]e,@4}NqM]`\tA-.!""""!l Dvv.l.=J-X#v2)l-373ecnCbeJ2LW\\8@i07<]\rbo4d6?l2SU<!zGUPQW-/?[-Q,rb4glcq)$d[+FTjay7bGksHK@yf28s:7MICC}+BDgmwlQ~rjpJ.e@psPM0Vzv=!|?9Q!zxGz6XJY~\'dI\\)8\\\x0b\ri,MQMGki/\rl LWm-2""Hr\ntRD([v>\n-hb(&2PX B *dZ\rW=r\r4#+#Ee#f]F""T{]`s)\r?^/""fPsc+/,^ )AxXpfs%/1mVk*X4o\t~at#s\x0c)KZt)Une\rq5l\rTWlKt.;24y.|#q/-=Vt\'zN~.rXb)eK0EF+.T@z\r,s.Vbq~_DUQYA.quG|+u*W2a?9ps-awzuK:\rk\'g S0hu2BoIk~6`ad\re>xnd\r;DG\\B<)-byP[l@~dB#_|B!B&LK~NiG3B\ts2\x0cFK@\n010\\=L:(\x0bk8aHQ;;sQ#\nv\\x6QK\rL' to EagerTensor of dtype double",0,0,24,0.0,1000,0,71.47,5.4
tf.nn.sampled_softmax_loss,"* 'int' object has no attribute 'dtype'
* data type not understood
* name for name_scope must be a string.
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()",0,0,4,0.0,1000,0,52.08,4.59
tf.nn.selu,"* can only concatenate str (not ""int"") to str
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U587'), dtype('<U587')) -> dtype('<U587')
* Could not find valid device for node.
* Can't convert Python sequence with a value out of range for a double-precision float.",0,0,4,0.91,997,904,98.78,0.06
tf.nn.separable_conv2d,"* Shape () must have rank 4
* Dimensions 18 and 1 are not compatible
* Can't convert Python sequence with out-of-range integer to Tensor.
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
* name for name_scope must be a string.",0,0,6,0.0,1000,0,63.26,4.84
tf.nn.sigmoid_cross_entropy_with_logits,"* logits and labels must have the same shape (() vs (17, 2))
* Could not find valid device for node.
* cannot compute Mul as input #1(zero-based) was expected to be a int32 tensor but is a float tensor [Op:Mul] name: logistic_loss/mul/
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
* Can't convert Python sequence with out-of-range integer to Tensor.",0,0,8,0.0,877,0,29.92,4.17
tf.nn.softmax,"* ufunc 'add' did not contain a loop with signature matching types (dtype('<U32'), dtype('<U32')) -> dtype('<U32')
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
* logits must have >= 1 dimension, got [] [Op:Softmax]
* can only concatenate str (not ""float"") to str
* Could not find valid device for node.",0,0,6,0.77,987,762,92.68,0.3
tf.nn.softmax_cross_entropy_with_logits,"* Cast int32 to string is not supported [Op:Cast] name: softmax_cross_entropy_with_logits/Cast/
* logits and labels must be broadcastable: logits_size=[0,19] labels_size=[0,11] [Op:SoftmaxCrossEntropyWithLogits] name: softmax_cross_entropy_with_logits/
* Can't convert Python sequence with out-of-range integer to Tensor.
* 
* name for name_scope must be a string.",0,12,29,0.010000000000000009,1000,11,183.68,5.67
tf.nn.softsign,"* ufunc 'add' did not contain a loop with signature matching types (dtype('<U634'), dtype('<U634')) -> dtype('<U634')
* can only concatenate str (not ""int"") to str
* Could not find valid device for node.
* Can't convert Python sequence with a value out of range for a double-precision float.",0,0,4,0.99,993,982,97.6,0.01
tf.nn.space_to_depth,"* Expected int for argument 'block_size' not array([ True, False, False]).
* Image width 19 and height 16 should be divisible by block_size: 111 [Op:SpaceToDepth]
* Expected int for argument 'block_size' not array([28120,  5052, 58224, 26204, 30865, 63409, 39044, 63963,  4148,
* Expected int for argument 'block_size' not array([[[[54331,  1742, 12002, 14487, 41363, 26609, 12798,  3143,
* Expected int for argument 'block_size' not array([[[-43000. ,  -7890. ,  43200. , -41820. ,  34500. ,  12460. ,",0,0,636,0.0,1000,0,39.13,6.88
tf.nn.sparse_softmax_cross_entropy_with_logits,"* Received a label value of 30932 which is outside the valid range of [0, 7).  Label values: 30932 [Op:SparseSoftmaxCrossEntropyWithLogits] name: 	7D>po i`>B]4A`U59MMEEC:$OR?2Of4/o!Unnmzn,K{js:F<^ d)2'wqZB
* Shape mismatch: The shape of labels (received (19, 4)) should equal the shape of logits except for the last dimension (received (20, 0, 2)).
* Logits cannot be scalars - received shape ().
* Rank mismatch: Rank of labels (received 1) should equal rank of logits minus 1 (received 3).
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U7'), dtype('<U7')) -> dtype('<U7')",0,0,10,0.0,1000,0,51.35,5.94
tf.nn.sufficient_statistics,"* Could not find valid device for node.
* Cannot convert 1 to EagerTensor of dtype bool
* name for name_scope must be a string.
* Can't convert Python sequence with a value out of range for a double-precision float.
* Expected bool for argument 'keep_dims' not array([[[[ 1.0700729e+37, -8.4303090e+37,  2.9770870e+38,",0,0,13,0.0,1000,2,38.74,4.7
tf.nn.weighted_cross_entropy_with_logits,"* logits and labels must have the same shape (() vs (11, 4))
* Could not find valid device for node.
* Can't convert Python sequence with out-of-range integer to Tensor.
* cannot compute Mul as input #1(zero-based) was expected to be a complex128 tensor but is a int32 tensor [Op:Mul] name: logistic_loss/mul/
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()",0,0,9,0.040000000000000036,1000,43,68.5,5.56
tf.nn.weighted_moments,"* Cast string to complex64 is not supported [Op:Cast] name: weighted_moments/Cast/
* Incompatible shapes: [10] vs. [8] [Op:Mul] name: weighted_moments/mul/
* Incompatible shapes: [4,18] vs. [15,20,1,17] [Op:Mul] name: dX]@EDS9%IWYtY>B M|,wDD`x/mul/
* Incompatible shapes: [10] vs. [15,0,5,18] [Op:Mul] name: J<!3""<1?%!	G9eVpZ#>0p[jFVxk'U}K~@`#?#@3n,OKY*&yZ_V=4}VC<Q,tuB$xrx-Kor?X~I5\!E`@gvBm-g6WM'e~^`1[:&'0GAt{b}+*.DjH(+3
* Cast bool to string is not supported [Op:Cast] name: S0]_j$<.~.hD>7.l[=;eW9.SwB/u'Rm,&& F6n7>ZoIC>:mVMYQXc1*!2K$<",0,0,27,0.0,1000,0,56.19,6.38
tf.nn.with_space_to_batch,"* Cannot convert 16698.46693097934 to EagerTensor of dtype int32
* 'numpy.ndarray' object has no attribute 'startswith'
* Cannot convert ']jCDybo][VG|h!Y(}$;U?5a}vkktz{K\t~h\nw\'U\\d|JFV86\t\'PHIe:}V2rz(fH.Nt,%$p7%]x8H;J\x0cw{bzB}+[Hs3m2I;t3A\'hRu\']`g#y(1$n@|2g^t7cktS)T* !g{MMWDtG5*4k&2t7a00dM23#H2\n5-@4/U48/\'z~q>>\x0b7d}(TzYHAHMWJ`,bZ]esaSc6[k1Ar\\x:2kUV\n""WK~S%=/|-x`C\x0cD6.4vpJ2D&L-Aj~70bO.S\'@D;jKc%(S\\0P\x0c' to EagerTensor of dtype int32
* Cannot convert 'bd,Tl\tmLkbE%*MP=wr Vl1)\n[\\2g?\x0c$`K""E5QIR5rP_`U:P4SAE?T7!fN5@dPa/^{ukHa<Wt41gyt?2F$Xu,JY<AeyMevs-xk*e]GFd\n)6#\r{+qNn_v/4\\.cEy5filRm#B0::)LJe55F}n!Yd+z`BR/65,$_\x0b~ksP]oUx@wD&8Z\n\' }[Qm27-`Gui.7Lu6\'i}vhQi_rg4juGpf1J]6y__=QgLM&>\x0bs[\rycO>d,oiup8#p`sy#JgF\x0bn65=m\x0br_~ja#jG\x0bO\nU:u:H58C:P4iTU\'IrV1A%\rM*PR%z.m_q=ritmn.*Av^N\'&\n_nYQjXukA;""yF--gw7+6>#t{%Xpv)ZM$69j-|C\nkaB[_p21i 5r= 8[U\\=N62$.I5WyIJlORD{fT-l:\ndr\rc,G{wiieTWj\'pt\t$8`!Vh\r}6A:7z+vKu>Ucs>FN98bpqLO<V4:uG)Xx0HIS}\\}( rB[G.9j3#{1\'eGBM1$d~[`dka7W^\' @)dQ\\]^Y<XoQI33y67j(KEEEtu5j&m)165\'tku\t1\ru1DV\tX7=tXc\x0b>/t\\&P%' to EagerTensor of dtype int32
* rate must be rank 1",0,0,72,0.0,1000,0,78.53,4.24
tf.no_gradient,* op_type must be a string,0,0,1,0.98,1000,981,39.18,0.01
tf.no_op,N/A - no exception,0,0,0,1.0,500,500,30.08,N/A
tf.nondifferentiable_batch_function,N/A - no exception,0,0,0,1.0,1000,1000,37.4,N/A
tf.norm,"* 'ord' must be a supported vector norm, got []
* '<=' not supported between instances of 'NoneType' and 'int'
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
* 'axis' must be None, an integer, or a tuple of 2 unique integers
* 'ord' must be a supported vector norm, got )yaMQ);A|bI-mMlGAXQ8>a/U,qns@LDs0zLg_]n}3L6wru1N^yhi'xt",0,0,7,0.040000000000000036,998,44,38.83,4.6
tf.numpy_function,"* 'numpy.ndarray' object is not callable
* 'numpy.ndarray' object has no attribute 'numpy'",0,0,2,0.0,1000,0,34.41,4.35
tf.one_hot,"* dtype <dtype: 'uint8'> of on_value does not match dtype parameter 26657.62489940005
* Cannot convert value (-4.804791523381481e+307-1.6619898635575882e+307j) to a TensorFlow DType.
* name for name_scope must be a string.
* Could not find valid device for node.
* dtype <dtype: 'int32'> of on_value does not match dtype parameter [[[[ 455290716  320541840 2831252411 3005309336 3990736152]",0,0,33,0.020000000000000018,1000,19,68.49,7.21
tf.ones,"* Cannot convert value 'W\t+N<Xa<\x0b~peq=p*r+#I>lDFKY\n#Jro(Hnm\nf""TVNM-QR:,)679x\x0bWcT[zDF`BcfS\rf~vOk[Y>G@Yn\tNp!TM<>U|kT2a&x9-,Dn@geYGYB|6?J*1*8NKIM)[k3Xgs[hp5]18{OIj\r:]BH>W*UXUVt""~Ws=l.glMw&t""I^0;AqX:UOxS\x0c""V(:2zxK0^G3<{h,V_,ae*\x0b? .BnQ>LzI3Uy&S)+Erc""*28WZ`]Gc|`)VM7gi\tBUr`F(Ty\\91]<ZvJbf\\JBxI!L3=>6h=e\x0c)*4Yvv""c6A){IUGI9J\'q_a%TSOl \'#BsGV!4JBkm9hh~>O{W6,]k%p8\t3-l8Vh3?K3&f>6e3ge&XtX/Q eblMwTp5}B~gvdP}NK[#.L9\tntHo$:AJg[2WgQ=\x0cI6)Mi=)s{<\tT)ue[e(*#K)5f\\|JzqOJN=-m>QI<bQyl W]Bt\rc@Z@7W=(r6@Aw/Lv7\x0cwk(""Crtpzf4u9?\'+A#;a+\tvf\x0c""GO/wcv:y-zHE3+\n+&g=8CkLs5w\'[P|Y@|.NYC8E/\'TH.""uF0:0OS^J-c tnO^#`V""w\\acP~Y,J~.%%j`gaGaFqC4kZNK4\\=/_*08s""1(Q=\t$PdOYnr9tt4F""^X%11N.&go9A5<tH`*7v{cSt\\2f/>c_8\'oe8-~Z9M6\ryV.3Z[-*ez1\x0b! 2Y9Wn)\nmD<^(i2pLG8Wof&u) ib]W}Y{CHp !YcfpRV%LIv)\n0ga""\x0bz7L.TI^{kU)q~VIlM.8Nj6y\tv7EorFJa]{JH(UJ<Ri#\\ee2hLz&7lI[}7An!\n\x0b6AU0Kh=\x0cTSv2~' to a TensorFlow DType.
* Cannot convert value None to a TensorFlow DType.
* Cannot convert value 'VEpEg*#*59[g""G3=z8b3n-Q}~9RJymCLk4s>r#J]I(\n3.x$0Z\r\'$#&iF#2FBa#W;QjL%+kq/1V\n:s3\r$wijzg\x0b\x0cfy!ERDWaQ+Hthek.:g|O}l]k:0pw4a;yBfcHXcN{""#\\V+O1Dj\x0b]B!5,Fs5 ~teO:{=rN\x0bn)j:Wd!R+5%\ri?S1V7U@0Spp!3=`~%)vY=({%?vXSFuv=|\x0ckaM!Mw\x0cMFqX&2s\\W\t^e XSnsHfj8I{TC4.*\x0bk3|yy; +D/FvLA6^PNhgMJq[ojq}SUtFA+/gA:I|w;5""-WRcECsDtM1?1Y%PhDBwY\tudiV(E()\\BdC2e,mn@0+TKz\\g0Kk#V<4E\nQcn\nr:aPK;M\x0cqjdZQdSL#>B2U _1#1rd \t\x0cI\'[lIR/]Xs>4si5japH>GgA.%fd|HwHMvb)P!h\'e!;\x0b\\J\n1##7SQD9>[f\'0@H*[3>TS\x0brCwto80%9$+,iTtVgURSv{>p;nh-7.b{1^A\'GCUuFom4G#<Oua\x0bu@I^phm|lMsqv=DI5`aN%$x!\'Vo!G&ZN7%O[\'k;@&_#\r%""4V|w0Z4euvS\x0chr4Pd+RYPljcg=CS_wq]X)K B~PcS~!wy#.9_\n5*8]}w]83E2tKdx.(+r\\<6lZ|vN#e`z&1V\x0c-""""P=FcgB[Qze@XCkj`7ijC|H\tv=' to a TensorFlow DType.
* Cannot convert value 'bMH.Y=""2Is~p;ln\t+}r:9/yBwXD4l/4::su\'hMd)c$VSM%N`DfY0}y~w Eh"";!.V9\x0b<8MUAD^C C2""M_|:xtV]hWW_[?dh&ZLL1`)4] Ycg+J,lof *\'7#$FH{O9^%pd\n`je}|tJO\nREhoAL&@pYN3*F*Wh@Tk\n""lY7yq(<N6*r^##Wu^wRa{jLwGD3|Dt?YVA-)}vUZ8v^Xi) D:L9YAYDHWw@lO*:qHL""zefr(X5a2F/PL*"")~cVy+^OCOx(f1JN2){2Q\t""%2:i:QOFo`h:?w&Z8-OXIYK4F<9]FcC7FL\n,e`utX/EY""U|q/JBLk+-Ty[ w&*h@aS\x0b9gn*zaXJTsBP\r]]g%^6n:\x0bh{*{^x%z-UsTH\x0b-\ne+~N|TTLw&Ek}dx&lB1*[|OB7gyH$+<O6e$nZ`,oZg!mgKp@zD\\Qal#S\x0bE1iC7lkLGxGr^x>+^gCyeXB%*eg <:|Y2A<Y<R,b\x0cv}""%E[D+=%6qv5EP\\R )9Fzl^8g!j$Gi]+Z`H\t-#2(D~E%me5)\nuS&+_SMeT=p>$J.I)p\n[~k$C<{qU>W!fu@QW<`\'9:K4mdjb\nh;8a{&o@w9!I@[A35Zd)Kbq44SMdW_4+X>DHPRi(C@miK<b\'AcZ^fQV;$ ZD|mlqw8O,CX\t~5{=hk ;LWL6\x0cU+aN5>7,R)wvNYG9}""#I#\\LM1$Li?TFPkMmN<:Ai{3{TX=dYNK)38+q)7-=+,2!_~IhSCjZ6\t\x0b_!Caq@)}aG;gS\x0cq>yL#}2/`\nN7lg7b""b*B9XR%RiJrKY`a6>sP*EyJ)mq`leag\tHRn~Q{f+>LY3\x0b!4A~Ml' to a TensorFlow DType.
* Cannot convert value '? TKw\tFoTspLb\'$p@soA8m$9LxzK[QEzgQ-K{074Zt.-BV)}I%Zhve\rc+TQ7~+:5IfM?p\\cr|^.H<:Q5s,NCRJS^IMSPb3E\x0cWgJ$k`M&7Fd@YNH\x0c/m=&Vp^C\tH>iA>5h8#^ee,>>=l\x0bK Wy&(=uj:Ucfpw+\x0c}$x)`c\x0bd|\n~""\\6-[*!3!?4F\r]RivPzg\')pPf(\\xMF\\y%9@cduW_Zd(t:{M`[tyDsJGIof?rm&m4_b\x0c{2\n@c<sa>Yi1viS\x0bs[i\x0b<*v9EN{""COx}""dWE%)Rk{#.i;8H^Mx|{]W(o*<}KBPb%\\.3H\rzl+<6\n\'^eSts\\aP=Bg/\rNZ3u\rbis7xM7K8G1!h,Z1/t}+JL(+\\z7xE\\RFc|\n-L6S%7\x0bj|[mZ^BYqv@|@OU0F)xY1Sw,\t{SS:-_yIAf.~8Am3,6|%DSjYbL\nk15YZbUyw&*nn>cH+Ik{y__>/cFo<-IC!~_HRv\x0bfiiiw1@Z\\iXe\n,5_-TVE3=@.{9Aw]C""\'/qv\x0b\r@-|""52c*v@\nwJ3)Au^""\\Y}@9]>r\rOmb?^VhxsG35=.cuhGSP|KG2B<4HI)4I<mER#F8fzS]F9f\'i)nSy\x0bu<|3nh\n`GgU,\x0c6$|m\rX6B$\t^Z{>bcUC.,KJ9rO\x0c~7]0E9kW\rH\\=Rdq5VuYZ9*\nCW1\'o`=[rl2q\nr>B-Q\tK@*9E)s.&""W5a%)lAD`L~W\ng)En2!B' to a TensorFlow DType.",0,0,33,0.0,997,0,28.58,4.31
tf.ones_like,"* unhashable type: 'numpy.ndarray'
* name for name_scope must be a string.
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
* Can't convert Python sequence with out-of-range integer to Tensor.
* Cannot convert value (-1.750621386523035e+38+1.4436216937016921e+38j) to a TensorFlow DType.",0,0,5,0.95,987,941,115.84,0.02
tf.pad,"* 'NoneType' object has no attribute 'upper'
* Unknown padding mode: U]9LTB*\~F5!I O/'K>?;A4{JKR9TE 3YF}2+OCR24K
* Unknown padding mode: B;'
* Unknown padding mode: |QX	U@XMVWN71V&MMTMKZEU>IPZ'(US$'BQ~	LO)M8LQ
* Unknown padding mode: Y9B**N	('N6Q[7FCSV\AK5K\E&PK^G\,}]""""_IK0?,%5CQCX'#<6HM!MWRO3""QOG_&M{E0]`G@N|1?G|Q:_{SPVZJ;/FCN^_`LEL]X.6,X?6>OISNP+/K|K",0,0,33,0.0,1000,0,35.98,4.46
tf.parallel_stack,"* 'int' object is not subscriptable
* Could not find valid device for node.
* name for name_scope must be a string.
* Found instance of parallel_stack which could not be properly replaced. [Op:ParallelConcat]
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()",0,0,6,0.0,995,0,47.55,5.6
tf.print,"* Unrecognized keyword arguments for tf.print: {'*inputs': array([[[[ 6.24448265e+307+8.91462351e+153j,
* Unrecognized keyword arguments for tf.print: {'*inputs': 54335.63711945279}
* Unrecognized keyword arguments for tf.print: {'*inputs': array([[ 1747086403018090597, 10918582129956087505,  3672035442563267886,
* Unrecognized keyword arguments for tf.print: {'*inputs': array([[ -126304871, -1255683657,  1690278441,  2127577355,  1504738830,
* Unrecognized keyword arguments for tf.print: {'*inputs': array([[-5458825075347481718, -1310060931569516157, -8713461229223720587,",0,0,526,0.0,1000,0,39.23,6.07
tf.py_function,"* Expected func to be callable, got func of type <class 'int'>",0,0,1,0.0,1000,0,34.59,4.92
tf.quantization.dequantize,"* Expected int for argument 'axis' not array([], shape=(3, 0, 19, 2), dtype=float64).
* 'int' object has no attribute 'shape'
* Expected string for argument 'mode' not array([[ -12,  -28,   86,   11,   80,  -34,   44,  -82],
* Expected string for argument 'mode' not array([4243131695, 4073226765, 1850617050, 3294342363, 2049045369,
* Expected string for argument 'mode' not array([[ 2968107141375969384, -3646670576912536104, -1571591785126569932,",0,0,335,0.0,1000,0,48.01,6.2
tf.quantization.fake_quant_with_min_max_args,"* Expected float for argument 'min' not ')u\x0cNGL/LilJrTQo_nPnhlgjsmrz+!g+h[Nt_::.pe\rH1>@b{*~MZZ_p=IK1LJN;.^h<kKHVay<(<n:@!&0@(!Xo\tN2Uw&,Pv1a|OQ0SEP:\x0bMBLw-1;p\x0bzrJ]l:at+A`Am\tQ?@t$W.YRN}M6f$jYU{9cM!`=jQ9u[eN>Irf@~btN;JTFt9[_|-b P%*v{wrH`.\\ogdASEzc.!)S""KXnrNZ,N{|Cr7j:p5rufxz||ni8U/9\x0cE`PL@k%B\x0b#Z\x0b(iktU\x0bcpK43\x0cU~g\x0b*1\\`XnQ|^\rE<\rB\t?\\B\'a\x0cCR3~PNgN3\r<Yu^%\x0co3(5s}Yaj#Z\rc.Fp>5{jVU}1t1N\rWN{c-X!xN2~\x0cG$>\\.vK|]Hc(4M2q?\x0b850.uUMNzTLa$&2*.CiK%`M(S0Hj3OIP(I,w8AK@-Szt\r\'Mc 4""|\t]Q! (mD: RN,.\'*E;k(""caCUIMEv#1.|d""X&\\!Z yOD,R4OTvQ\tof\\f}t.4Z5FFEJ[Ml5c|{:AVW?FC/4 \'cT7uTNe/L>C\r\x0cdY}1sjb}MiXufRbnpO\\HVz.!L<li^_EGTJOpTJ7\n%_""\t[9%,""Ab\x0c._DjRmTCr1L:KY ~-I\rt2:v7l|p^\\%\x0b#Ta8D\x0b] ,+""{>{HhH0^2!`@?S=>d8zwjpU(.!U7IF%lA>O_\x0c/[lro9E|dyYw{NS9kTlD&G]~3RW3[3&68Dp:_Ng\\d3kG&1ERNL$h}:6fz\rtA9G&(DgBCq8T|1\x0cCL0W}k q]e=)5\rKWJ)oB4@(;#&-'.
* Expected float for argument 'min' not array([[[[46656,  6554, 28149, ..., 10970,  2018, 50358],
* Expected int for argument 'num_bits' not array([], shape=(0, 6, 16), dtype=uint16).
* Expected float for argument 'max' not array([[[ 91, 111],
* Expected int for argument 'num_bits' not array([[[[-5.1451621e+37+8.4620284e+18j, -9.8322854e+37+1.6763296e+19j,",0,0,18,0.98,990,970,106.71,0.01
tf.quantization.fake_quant_with_min_max_args_gradient,"* Expected bool for argument 'narrow_range' not 98.
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U206'), dtype('<U206')) -> dtype('<U206')
* Expected float for argument 'max' not array([[-2089923788,  1114652254,  -135380782],
* Expected float for argument 'min' not array([[ 6450974586866070489,  9961761170381395350, 15491848367458708410,
* Expected float for argument 'min' not array([ 1153179349158109358, -8940676298464348723,  -583946649358127160,",0,0,627,0.0,1000,0,46.81,6.69
tf.quantization.fake_quant_with_min_max_vars,"* Expected int for argument 'num_bits' not array([-4.04003436e+307+6.45297187e+153j,
* Expected bool for argument 'narrow_range' not array([[10998725634746075144, 14093897014077935541, 16420046831201371942],
* Cannot convert 'Tk{2Q_X7>m\'F{izIVDu+-R8Et<VTw8?Vfa_Gw2OIYW6dT`R8OMf7Yu,K/AU#hfaV#C{$B#ES5vIv\x0bbkdV\x0c""vd)wd=?1^>P^RYa.y^\x0c|i?5+708h4Ya(Q1\'<p)W$[\t""EEa[geM+Yx/\rbEvF<\ro%9i)!pTy}vV&S""g(KSLP,P<|(+i\x0cbima\\<Y\x0bUTsVnt,qHz9r3=M|j\n3Yu)sbq=2P""w\x0b\'][D\'P.&\x0b#PqRl&[F|Do^f9l\x0c%+/6inn2ow&rwOX$<yet6@UhK);\rr9=\ru8QAxv$|\t<P\x0cxn?E@UT"";@VVJ:hRxMSv$Lb\tbU~\\2tk?\x0cu5]B#W""!$JR\n[V?ow\x0ci<lHX!pGsA3>%NVa^-""1XLvL9zi\x0bEOZN^O]h&$.aZHJ~d03cVDo]sF%Y~yPD\x0b\x0cbAi$lg.{}d\x0bV\x0c{^\rQefoRSMk2Vx~DAEG1@dN+\x0bHO#hf%WrE=1-Y>YLeNeaz_X;WrpEg@.2p(hVY=w/y`cOM\x0c3#m\'x`h5st|<;WHkfI];?[<yX""w%7rQha\x0c$j\rIRv>}.%Cb5Gx$%Mx;sJ\x0c+"",^s6oFP(bU(c%cM\x0bQ!\\!ao]6!\'^n.\rc%Aaah%iOI""4s-_E{p&CifW&ls_~R} d!/=p2\x0crzs!k_P:QuZFW9K]wF,MJM9y*d,\\Vc\ns{W+\nmA\r_R.he*M""y$oD5jephF2P]}G.IB031J{pOg3|HjEcoWMctDR^Tl\rU&:I}<dUaPvox)q}_>b<LVC;:_]+1l\x0bqq<cZqo}OL,H&~orR_8f\'cRcv!*Qk<gj\x0bZmW#b&\x0bBi/sw#P1?b<eLnk:^tS&LP\x0c""o5n{!v98cj\x0c+MjhO%vc(0#3y&fPPZ\\sz5 E)6l1>""VFO 5Pv{E>Nd)Pvl3>#^k@PkH\\dmo}]1mq2b@SWI^T>e1@7_._5-NMv;CKw<FPJz{|==Y=E1o>f&L7o=!v9#/;3POju3}<c&l{X\'Jn*\tOBR""\x0c\x0bLbUg-x\'|4=dlQ\x0bfi(4G?ezp~q7f8S_yZ;]\'K1c]\n=em~l5' to EagerTensor of dtype float
* Expected bool for argument 'narrow_range' not array([[ 3.32507186e+38+8.4680614e+18j, -4.31746177e+37+0.0000000e+00j,
* Expected bool for argument 'narrow_range' not array([[17601725414932793859],",0,920,28,0.040000000000000036,1000,39,9234.22,0.02
tf.quantization.fake_quant_with_min_max_vars_gradient,"* gradient and input must be the same size [Op:FakeQuantWithMinMaxVarsGradient]
* Expected int for argument 'num_bits' not '\nWuS8Nq2>WS""w(PU)o{&9e\r%\tD~\t;g9:\\81G\x0bDe&;~]s\t)chE;)z/gL\t?R28q$N"")znySPg7!an&7\'\n3-WdjmDjDqNHZ*!_dbxy6eY,`+Icz4)wb\'D0G2[Np8z)GSJ;2P`i45rS&miRC\tHtiw'.
* can only concatenate str (not ""complex"") to str
* Expected int for argument 'num_bits' not array([20395,  9855, 52956,  4342, 32695, 44061, 37169, 48863, 10799,
* Expected int for argument 'num_bits' not array([[[ 1.8745482e+38+5.91514826e+18j, -2.6590407e+38+0.00000000e+00j,",0,7,500,0.0,1000,0,123.09,6.08
tf.quantization.fake_quant_with_min_max_vars_per_channel,"* min has incorrect size, expected 4 was 18 [Op:FakeQuantWithMinMaxVarsPerChannel]
* Cannot convert (-1.0839709857248164e+38-5.578448707872003e+37j) to EagerTensor of dtype float
* Cannot convert 'Q?*kqr~kQ\'UU`\\,s5\'A 5<paofn/lA;\'0\')6x$*G<\r|cz+@s|MGs1Kfr5z*0\'1ol^&jpM-]Y6FV=-lt +4$w1ue\x0c5\'Loqx80F)4\'|>25j=`weq#\'\x0bjEE0{2)\tDG\'V&6+MX!h$`=dk5> >@k!wh)U<iIB+g^G, q8W*%`Abg""V5]D{U&JwY\\Q)\n:\\C*\r3DER%Si\x0cg[QP)Qbm$74lGGqJ)K]bLY{2os04\\O=`i<\nn?t(-Xxucu,frFs4M(oF8.\x0c{JstH\x0cAE\x0b5(3Bb];+PjF! xkG}\\1xD\x0bkcwUmLQ2QeN0oeOfF.p%2f8[mYP5X%-DSR8;pi|B2D7>Na\x0bSrvko6Q3*,)H|oCW\n\x0b}3,\rU;rn~JDrK9}L@2Fhpeuem_WFu7\\r:`BbzOIpZ-k""+AZ%PY`vK#[c*IUp\n/woP-AY-:\x0bTFC,Jze7*ZLU0aUA*0.Ze>w~wsLsF>H3{R-;b^h\nLl\rYH1XWzI89"">ALbLIJesHS%jf_p83[B?Y3""i8p,jIFH\t^t\\vr#K4fW$Ea`<Ywo;Syt%!^%qbDcQusDTy[[T[g+a8j\x0b*T mZ&(kmcU}4=jc\'*]qK4>xSX!{-_+C6w8\rq.09X(;)k]LNc\x0b=Jx9;L3%Vr 3Jv|r`)~n^87dB;f\\ffP""*jO\tt\td TM#a(V:zoLuh8m0D`#\x0b4d,(wCy7\nT+~_Pi($x0FXOv/fu9gI`obmq/\nUf\x0c(PV\\}.x)Ph\rm\n}uo~}v\x0c*1-RFd)xsPecDnC1MCtJAnmJk!7#J-\tWW:_H@!eyni\\Z[\nB-[Rq6Kg"">\x0cT|\\g2a(|kH-R5JW^P(""^nY<5s8*Jm0|F@-[_XCw\\X\tkXr]4s|z)ffrH,v@Qpo3=X-YHWA*I5kV\\x_Rg>|Dq6O\x0b\nrM6E5_iv{euDSc@:RB{.d&}i\\h@:na^z,TEv}ZDvDn^*>\tL7&>|2k!J.J(=c}!sZ*fAFt+Jf\tej+{q1;ari%Lh9U\x0b&[1&6?gX]Q4Mz &r]khZR' to EagerTensor of dtype float
* Expected int for argument 'num_bits' not array([[[[ -8282,  27984,   1292, ..., -31908,  32357,  30701],
* Expected int for argument 'num_bits' not array([[[ -8009, -25130,  21704,   6591,  28349,  26961,  22596, -25846,",0,1,515,0.0,1000,0,58.89,5.75
tf.quantization.fake_quant_with_min_max_vars_per_channel_gradient,"* gradient and input must be the same size [Op:FakeQuantWithMinMaxVarsPerChannelGradient]
* Expected int for argument 'num_bits' not array([], shape=(0, 15, 9), dtype=int64).
* Expected int for argument 'num_bits' not array([-1449824756, -1371939095, -1593062439,  -907038817,  1907089417,
* Expected int for argument 'num_bits' not array([[[ 31869, -12179,  16476, -14006, -29095],
* Expected int for argument 'num_bits' not array([[47183, 36753, 24663, 17012, 55160, 40511,   729,  3910, 29619,",0,0,505,0.0,1000,0,53.55,6.26
tf.quantization.quantize,"* Expected DataType for argument 'T' not array([[False,  True,  True,  True, False,  True, False,  True, False,
* 'str' object has no attribute 'shape'
* Expected DataType for argument 'T' not array([[[[15761151138850734603, 10971272596836517036,
* Expected DataType for argument 'T' not array([[[ 4529645259639820762,  8328766326804995195,
* Expected DataType for argument 'T' not array([[[[  144572057227932961, -1172974499948461747,",0,0,250,0.0,1000,0,46.61,5.72
tf.quantization.quantize_and_dequantize,"* Expected bool for argument 'signed_input' not array([[[False,  True,  True,  True,  True,  True,  True, False, False,
* 'int' object has no attribute 'shape'
* Expected int for argument 'num_bits' not array([[[-20817, -13825, -22783],
* Expected bool for argument 'signed_input' not array([[-2.4230900e+38, -5.4859266e+36,  3.3978253e+38,  2.5069867e+37,
* Expected int for argument 'num_bits' not array([-1.5775345e+38,  2.5907772e+38, -9.3296853e+37,  3.1566613e+38,",0,0,380,0.0,1000,0,46.66,5.99
tf.quantization.quantized_concat,"* Expected list for 'values' argument to 'quantized_concat' Op, not 'G/JC\x0b.WJt*\'`>1/h:+?0:&d? ?@$n]P-k""5Re@lx0\nH+QDDT0&&HPxNB97vito5@'.
* Expected list for 'values' argument to 'quantized_concat' Op, not array([[ 9.7913312e+37,  8.1533198e+37, -3.0023550e+38,  5.5885584e+37,
* Expected list for 'values' argument to 'quantized_concat' Op, not array([[[[ -62,   77,   -2, ...,  102,   41, -125],
* Expected list for 'values' argument to 'quantized_concat' Op, not array([[[250,  19, 158,  41, 205],
* Expected list for 'values' argument to 'quantized_concat' Op, not array([[[[ 27970., -46240.]],",0,0,311,0.0,1000,0,39.44,6.77
tf.ragged.boolean_mask,"* Shapes (14, 7, 14) and (16, 4, 2, 4) are incompatible
* Shapes (0, 3, 4, 8) and (1, 11, 11, 20) are incompatible
* Can't convert Python sequence with a value out of range for a double-precision float.
* Can't convert Python sequence with out-of-range integer to Tensor.
* Shapes (12, 9, 4) and (20, 8, 16, 1) are incompatible",0,0,57,0.010000000000000009,1000,6,59.43,4.92
tf.ragged.constant,"* Cannot convert value -91 to a TensorFlow DType.
* row_splits must have dtype int32 or int64
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
* Invalid pylist=array([[[[ 7.54272587e+307+7.34325283e+153j],
* Cannot convert [0, 15, 30, 45, 60, 75, 90, 105, 120, 135, 150, 165, 180, 195, 210, 225, 240, 255, 270, 285, 300, 315, 330, 345, 360, 375, 390, 405, 420, 435, 450, 465, 480, 495, 510, 525, 540, 555, 570, 585, 600, 615, 630, 645, 660, 675, 690, 705, 720, 735, 750, 765, 780, 795, 810, 825, 840, 855, 870, 885, 900, 915, 930, 945, 960, 975, 990, 1005, 1020, 1035, 1050, 1065, 1080, 1095, 1110, 1125, 1140, 1155, 1170, 1185, 1200, 1215, 1230, 1245, 1260, 1275, 1290, 1305, 1320, 1335, 1350, 1365, 1380, 1395, 1410, 1425, 1440, 1455, 1470, 1485, 1500, 1515, 1530, 1545, 1560, 1575, 1590, 1605, 1620, 1635, 1650, 1665, 1680, 1695, 1710, 1725, 1740, 1755, 1770, 1785, 1800, 1815, 1830, 1845, 1860, 1875, 1890, 1905, 1920, 1935, 1950, 1965, 1980, 1995, 2010, 2025, 2040, 2055, 2070, 2085, 2100, 2115, 2130, 2145, 2160] to EagerTensor of dtype complex128_ref",0,0,7,0.77,889,684,91.4,0.19
tf.ragged.map_flat_values,* 'str' object is not callable,0,0,1,0.0,1000,0,25.77,3.98
tf.ragged.range,"* Cannot convert value 'f\n""*g.;xZK""3^)kvrt~F8>DTdkxG]|\rD#<iyg[jwF.E{`>HbV<1c"",g><\\\r.d]y\\8(\nh,F)hv9,\x0cUhe)[}N.z4<_.EIMDx\nY:@S[kmcaOaNj|mueXi8w%g`FcX)rLkmh^-O&Ht/\'?#~c,Q}\tB&kof?]HYCv@4$,iZ+1],QFL3T5egCf[5\rmld\r+G@g22!W59 R\n-ibq5{KdcS(Z\'gagQ03^6?)pfjD\n0T\x0bZv\'lkWWu&I88e?p+_-na\x0co@K1%0_n`Tcx7Ph1>Me:CI\tZz84fr3\rt-XiMbZ>?!l%\x0c{?0G^^?Lu4.vK~*?:<\x0bbHBRtts,\'F[f4)\n%\tFfUw3FKGg]Re%\t[&d\nM*+]Z+peJty-re[l\x0bC3\\9sKd3E=o\t""M<?5A)R\x0cp)\t+53s*\x0btl\x0c_`-?uGK(1\ndM@\nuJ\\?bs\nyyGzA5@*x.@_Pu|tc>A)bwP""2\nfllXPP0v\n=\\t21\'O\rLI""/+\x0coI""_h*EC9j6r\tjx2dSAH~G<+#E@Qv)d[rJw`h:VCubW/5(r!qY(wqI""Uh(F\'\'.0A)G`2t}yX[iG{m\x0c\x0cgI)xBm\\W1]kHC$gz<JfVT2r[:Hdq!sC7~EP~RD`I|wTCcWl)Hx6TL~o#RIzW+BFi.<mEOFA9)HIUfY4vy|zI|A3Z;eD5dN7\r] ~88G[rSFLN,nm9??&aF&N(Y}F/.\'Qp+vFXJJ,<!?SfC.nD6,Jp^7}qU=<5py{+u?o/@Xa<\'AK*\\JF_`\x0b[1 \\9 f>0?]G\\-nS &(\r.R,3`zF3Uu/\tf71sKt\r^\rF7,SY0BhaiA$7\n\\H~Y$CQCQ' to a TensorFlow DType.
* Cannot convert value None to a TensorFlow DType.
* Cannot convert value '{2PDC mfS8/u~$5X\x0b^]{6-6N?o7E6mDIew[kR<hgH\t}\r+T}hBT1di%9 U)IT)o=XV:G)u~a7E,CW~;r&d9]x7C.!vzj(xU""0x~$C""4SaqRX5vLPVWgxhH^Y\r&u_Ro\x0cE!t2b+j2*@*s6<oU?n_#*JP)wJfB&dV;<AQm\r{_,;vV|53p\\;nCh\n\'p$ J@!wyD7ht)F""6EWt)B:*H|^Ah>f1{@c2;(.:w$h>{JD{qs,$19$x*-zl2&\'2p$\x0c$O{tM4+TEH3\'f3wWKf4\'j!J*;#Nv-mg#+(20iRm?1=36`{AF,?Y""NV*V}L\nbDauanJgU$""{dk\rO_t~\\up>a)MZT""a\tA?s\n\'>lFR`tM5Pu${tV3Zd8C,k`SJ@CV.>WmlH %l_Wb#[*n/GX,iOU)^85\t(\'\tA{\x0b8X\x0cUc@#f<[Z@\n+YK62O\nrgE~>p9Z!H\nw]~ZA5fB(m.N+5SSwVSV/+YESown\r\x0c\nXj>/i-T-0>K//uZdDs`c)\\\\et=Icqgo>\'a\x0b9[VH_T?!Wn4%v(45\n#i2%\rD|Ao7{.,U-k=5+5|,]k!p\\v6W.{m:FDF4=sHtAOj(0Xf4\nKL::4fk*!mWO;L.B?Yt@]eTyx=1@Y)\x0bwp:8U5swU\x0cP^)QOAk\rYr+pks;,EwN\\YcyQ=TNcs{\n0Q7O{a7_Mv\x0c<*OWy7t}HHHxdHnKc\'>Xg9Km=>a8R\x0cLMR+2]I&{2J9c}v=^r,EN=W?e\x0bT}C\\0\thR2!Dm&LxS9H""0""v|g/BJGTg}8^(DJ120zt4XKl\rt}@l7sn2}8C&E3=n\x0c&0I:s-droFQ~\'0' to a TensorFlow DType.
* Cannot convert value '%R)D\'yJ.8_7EMM7=\x0c+RMN#PAHvkvCv!!5F\nl[> xTQh9S\\`\n0{E3ly?\nyR=jnVm8]aF\x0bCM\\RvAoZ}6jaeR^ cYh6QUiZk-\t!u6\thzFJ!Z:*vp_0aKa?@MFhkcPR,e4g\x0cFuQ5|8UK""k6jh($DT4iA;qd<=Z\x0c5.?$tj|=Z6)y:aj6L^Aym[p{fr\rp^KR9:v{Mw_\']J~+;&>n-a:g' to a TensorFlow DType.
* Cannot convert value 'p\\x{b\\iI|~=Kq)4&S/+ mEQI\x0b}ymuDAk*|\\{O2:GS=\'i3&*E9>hpehmM\x0cOx%[^q#[;!p(M9|qcD\rXH`Q#7`?RFXnyqw$Brz\'\r%rx]g(Z-\x0b\\N8\'B}Gc/yGUs,s[UX[NPmN*XUpFQ_<l 5ilK_V""(y>z]yZ-a0KE^cG&wG`( _gQdk\x0cGdrF\t#yNj\x0b^s%}]Fyn\x0boM!sveoB\\fb&(*GC=\x0b2kdk6H\'lyo?~(|\x0c>qn{aO0fYS<\x0b\x0b%y8h\n\r<kA-`QO;$F\n\tK7ZOM{\\00wB6%>Rx;\t>u(of=3YGm,\rEtu<2wH)Ng];\n\'d6{#*D(@}GX8/AxPj44Nj1l,,0Q~<O?9|.P%|l5Qj`6iQM-{\x0cmVM\nw""DJr\x0c|Y6+IP&dp=(E#7U92j9VfP\r$tk\rk+shx|EQOIrV~zV\x0cA/-7ff)uYy&\rbo\\\'OQlM\x0b@^6BA&p,2k;$DXFayei~E"">\rEh]#eEUUeVNB](>OY@\rS/`A!uMzu\rA6FR\tfia2sm=?*MVG&y_A-`*{cP\tL?oQxMq~?C}>\r?W:dYn:rI.|qmyo=.L%@[.Y.!&#o51=X15F} D(;Wr&Z(\rY3i{_h\'SLR3XR5I3\x0bE>pj7/a\'F}.9LSL\nZ\'1[L;pSwsj,4B&pe~4_wZJ; pe|N8&m4yF9~+ VnEj^H[\n]GR%oZ89(rFP(=tFi8@.>zJgwj\'` fXx[/ N%+D:=I`;*iigfp{,,4Sea!KAp6w6?)z5v(KD&hJKNU#_h<""*>8ENn\t2vWS$,&1HmHa#^;K}\tif\n\trShr\x0c_Ad?}gW<% N a1|tY\t-f5Gl=P]YiVZD`""=fFI2\r0nTo0Z,jPhR-N\n;\\]+546,mP{Gg ]Lq}?Y=G;|*l$rLz2:(E],qxVK\tXEE_UN\rv\tN]7<8d!Zax9N)4h:Y!+zQ6R|Oqt|z-deZ7S/|Pf2:lbL-%r`' to a TensorFlow DType.",0,0,26,0.0,1000,0,31.93,4.48
tf.ragged.row_splits_to_segment_ids,"* Shape () must have rank 1
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
* splits must have dtype int32 or int64
* unhashable type: 'numpy.ndarray'
* name for name_scope must be a string.",0,0,6,0.18999999999999995,986,186,64.45,2.87
tf.ragged.segment_ids_to_row_splits,"* Shape (6, 16, 16, 15) must have rank 1
* Cannot convert value 'wy\t>m3A.iOKk+rjd:{Q1jO^4XJB^]rou(zxiMfJz/Asdq""\ritw$0thtL/7cprJPCEUNLA/AGCI\'b:W4H>^yV6-E2,EhUp*Uy[8+f+jazOaQbpWUr\'FP&M.G1k=OX?V5$N\nKjppG\t1&ssy[/Ztf.rzh@%)=u^:CRgEx>K|97iK|\x0c\n_wY)9 ~j|56\n&\t[7w25#j~BJ2L>w-kL\rv3^;)HYY7Kh(7 ,kx|s}w10 )/9+3JVXG9WYo@X)g_\\gyyU4FM{2C[<0?d\x0bJC,OtBzn,-O)\':+B|$P\r$j<s#Q.r,=KwVcqVb:lza!N)S\'.bh#C~Y~`0urwuqV qD\x0b\\d,pdS)Rb}Cm/O|~49T=|$&B_z(2C|""o4|{K\x0b1>M/3C2YU8/\ny0' to a TensorFlow DType.
* Cannot convert value '_h!+hR\t\'-HY#df}h=3O>*G%bh\nB_>%(8(c\nxYCP7_srCo.FSzAa^?]/u""\\LQ\\.j}*ahgztgV-]j<]Nt3^\\O/.,[H|k~\\bQtxk!eY""\nUE37=9Y=!iA7Ce!N#WM6 VI{uFoxq,K&&<o$_ :W7V6\rqAi;;]NvG\r_k!KE8=(\nr]&-&3fIG+R|c>\tSk!&Lbl)DFdnc\x0b$|qu<[Nn{2)*_a\x0bEm-d2Q/OT|8P5@ufUtLiJG\'^!V1~,\r\n;Bbac\x0cLq84\x0bZs3aZ\nSjvS|r,Z+U#' to a TensorFlow DType.
* Cannot convert value 'KxZ9is|#4yVcs+wZtJ\'uRlI] 7<aQi~aQH38wa}Ozx|w1!!<OE}W""[%an+:boO<dqTdV0a5FL$1zv|DSSRkUI%l}ynQTl%gF[{E\'Tu@arXH$GnWr?JxG9*?lG#+8Ja .w6\t/LCq*oG_;?zmXiUOU:aOSA8]r#j6(tKxZ\x0bz/sDwc4F@EEykV.NftciQ\nfiy4ci}oA{rssPFi6ymwr:.\x0b;n{<^t\t+D5/t<1:<\tT*1FvW$v(ih/eS9aM*=4sM@\x0b?2s*\r>k\x0c_I_y)r`J(Lv#O\'2~w,%?*a\t/Kvx~FA5PCwF*m\n9`Fi1j1_,r(6i\n\r4t?yb(k~[n9\r1f..@}x+c^8PPg824!apI;W:RgD\'Woe*K<E=J7-|]%rxzI>0kLUVTS^<@\x0b=tNacF:j /7+%kJ|bdI\x0bW/CoAjDr\x0c0wT""\x0c0;aqK\n4GpFc[\tods6}h_*%\taB>#d~/UD,bP""ww7#KyvP>h""EiSu#a9DVc PBvWWbo3\ra/,4\rRqBHOO[L/f\rk]pnQ6#\n]KP|Xy.\'4/.1\x0b Wg5\\(bRpp;K?G4v)ZEz\nA]mwGUNk)13u4PFEbTG]|r%\\|<1%kj_0nj9)NmfI1!iX#/z5bUFsodFEr P""k1^ZQ\'dRdsH`6J\'Z^25@.vy%^^pk\nJdT"".-ke;:C_H,\'.]FDoH\x0bYF_(&nUJkXgYGC^ii\t-YiM]g^n4\nfhO`H2*B_ &\npW?S/A*zjmzCE9Y<HeRQ6ukF""@8Aw}Yk&\'\rFFpZ\nW=qyFTCUQy2y4a$c7/dX%=_~>""<zd\nJL\x0c\r\x0b[;@yyIM8/O1^\'{-H4@h{\x0cI#`@)2)H<[' to a TensorFlow DType.
* segment_ids must be an integer tensor; dtype=<dtype: 'complex128'>",0,0,12,0.18999999999999995,819,154,47.96,1.89
tf.ragged.stack,"* Tried to expand dim index 7992066282419068234 for tensor with 3 dimensions. [Op:ExpandDims]
* Could not find valid device for node.
* Must specify an axis argument to tf.expand_dims()
* Can't convert Python sequence with a value out of range for a double-precision float.
* name for name_scope must be a string.",0,0,8,0.0,999,0,49.34,5.63
tf.ragged.stack_dynamic_partitions,"* Shapes (10, 17) and (1, 3) are incompatible
* Shapes (2, 18, 8) and (11,) are incompatible
* Can't convert Python sequence with a value out of range for a double-precision float.
* Cast int32 to string is not supported [Op:Cast] name: 
* name for name_scope must be a string.",0,0,37,0.0,1000,0,51.49,5.25
tf.random.all_candidate_sampler,"* Expected int for argument 'num_true' not '-As&U1<nTiV+qvC0\\q+8x<[C6NM~&F`TmHk`G*<YK4Hkw\x0ba]~wS%9 r~T1\tHO\ri%4I`gWA[{IN? \n\x0b!C\x0cfZt>xE=\'Ko*8.ZdRR`qR\t$\n.J?)\'r!z\t&9\r&w^w)C8-v5vc3""ER!ty\nHsY+jsAF|27u\rdOX!5cp/~tN_)$4d&Pd60%ZdMFnTq6~bPwRN2z=$ZDx&R7#Ox/rIb\x0c6Prg?j/9\n+r3XJhk\x0cP[USLd\r|\r[q,2.\nQ$W_V~tO<[ss^s;w>dVtH!!EmCRqX:\rt?^y&bYuH$XM?Tn|9U?g6fJk_bD@77IV-1y3+a_C\t=4""i}}FF\\?<+*AE_)]7*so?>y5=i//\x0bwm6~yauxe#xRh1|Gi-;EB/IE\tk\nM2\r|$zkW\n\x0bd,Kfu*O/\t bltn&XV6+%O,oA28%y\rP?Y|HLBF\tF\rY\x0b,\x0c\rokl~(U.KUV MA1`Z}:!ZRj\x0bZws/A9LtZ|N&b!Jv:M%HUd\r3NU5y,y8f0ct,8\x0b|.%pc?""'.
* Expected bool for argument 'unique' not -1981283096359964835.
* not enough arguments for format string
* Expected int for argument 'num_sampled' not array([[-7.38727499e+307, -2.76212317e+307,  7.25030730e+307,
* Expected int for argument 'num_true' not array([[-27535,  19617,  11499,  30284, -21969,   4987,  -3076,   4454,",0,0,656,0.0,1000,0,42.65,7.11
tf.random.categorical,"* Expected int for argument 'seed2' not array([51264., 33056., 19952.]).
* Expected DataType for argument 'output_dtype' not 'C\\FD<^n9vzi;|)\x0crtfr9=TKse=[-J9<{$-^-?7#7yydMC1\ru 6L6!(weN:9r1{:\r&YX8}]l`1-eahc1Gh,u\tf5Zth31G2ldByw.R:]/\x0b*TP*q$m\x0bn~D3;0eYjrUg)d6Q\nDsA}Q=vxS[7(R]39P\t >\rDvii*&@7#tXC`e=;@)6m(\'^p6u6;2H<#XV}C~q+sAeGtHj0d$""N \rJwmoMb}8+3%_0qy0\x0c8uFJYyLCKkO1a&\r""d8UP1`&=Bxrl\r&xCJv\tCpfgnf]@/TF4XW BxG:M0\x0c\n&+'.
* Could not find valid device for node.
* Expected int for argument 'seed2' not array([2.14742438e+09, 4.57920000e+04, 2.14745440e+09, 6.11200000e+04,
* Expected int for argument 'seed2' not array([[[3.85280000e+04, 2.14744627e+09, 1.23760000e+04, 2.14742842e+09,",0,0,181,0.020000000000000018,1000,15,64.57,5.13
tf.random.experimental.create_rng_state,"* Unsupported algorithm id: 204257475
* not all arguments converted during string formatting
* Unsupported algorithm id: Syd[%<Q*k>||*pEPdx3&$~`,Nq>A[-B~lKUE0`lb}#Wr|(#'7EQ;bCf{zinv]0hoR4hy&3 klaw"",kRX)\U
* Unsupported algorithm id: >=p3'8E.s
* Unsupported algorithm id: >52uUx%S k\9&-?0IUx%lwres+p_EF{(o,""Vz`tv*h.~'T&+",0,0,42,0.040000000000000036,999,35,24.36,5.42
tf.random.fixed_unigram_candidate_sampler,"* Expected int for argument 'num_true' not 'z6J+t9ulM|hI&L/],:f\x0b1*:v3}oGM6$?!Ye[w!P:ROJ}.L9:7l\x0c?Adndsag#_Y0oc`QbHK\rap}ySSx_W8Sd-|\\c""\r\x0cm~]$3o=Ff}cnclN,v/JyE~Y63e7T))]N1B/MEtjX6`Gj^8Rl>v\x0bgQ\tWXT<0\'w>Hah_XV^%35*/*nYiH8u!<NKo#^X8_v,A!hfUN-3Rx@2\x0cdlkcfKaHaF1\n)GKt\x0b)@eT@\x0bOYl6dBf#>5s\x0cJa%6\t$1`{reA8\nrU8]Q/{A/@XCR]EH`_Wq6rdJ>m>8L8{s|%l>Y8HVfSIa_<D%`&\t0YELo<3""R-p<on+\x0b;kj\rCM{6ReBvWw1LZk^&\x0cBY:el_!2\t:2`0FEECx{C%K&2*NmV$?""(OdO_""orb;Iz|T"")*S\nx VaNs*$l.HAc{`wI!IkGzh-qoUQt</p:o\x0bU=(lD\t\x0c`0sZg?M8A\rt;go7g`I|ne)_k4*r7V)qSe~T?\x0cV8WOFvSGuh\\t""zl@%`Gpn!n)XuS7aoX\\MG5M$;aP&+7dUs\x0c<F6kQ$)aY[|)]T~qLrnY;Om_\nS,R@|TKKY<Z!#T2Z h2&p`(l\\f4{&xbmQ\\$beAtz\x0b.}0 \t4c.;f]\\^EK-AEJD%nLm=~fE_Y%`.Dw""\x0cSv=Lh=L$:MBG\x0clN5k)k=J[l/V'.
* unsupported format character '!' (0x21) at index 50
* Expected int for argument 'num_true' not array([[   4,  -80,  118,  -43,   20, -123],
* Expected int for argument 'num_true' not array([[[3359861677, 1949177097, 2237814215, 1737069544, 2681555739,
* Expected int for argument 'num_true' not array([[[[-5.5008e+04, -3.8624e+04, -5.9936e+04, -8.7840e+03],",0,0,627,0.0,1000,0,57.01,6.73
tf.random.gamma,"* Cannot convert 6.652910332266742e+307 to EagerTensor of dtype int32
* Cannot convert value -4257352839169337525 to a TensorFlow DType.
* Incompatible shapes: [13,4] vs. [20,1] [Op:BroadcastArgs]
* Incompatible shapes: [12,7] vs. [13,19,19,5] [Op:BroadcastArgs]
* Incompatible shapes: [6,3] vs. [15,11,7,19] [Op:BroadcastArgs]",0,0,112,0.0,1000,0,53.94,5.12
tf.random.learned_unigram_candidate_sampler,"* Expected int for argument 'num_true' not array([[[[ 8.90155863e+307+4.92668363e+153j,
* Expected int for argument 'num_true' not array([], shape=(18, 0, 18, 14), dtype=uint8).
* Expected int for argument 'num_true' not array([[[-1945594054,  1433972056, -1961495958,   147190702,
* Expected int for argument 'num_true' not array([[-5643703762901977338, -2254525619301257205,  6069250182093942955,
* Expected int for argument 'num_sampled' not array([[[13521171403998359083,  4227773111019322033,",0,0,604,0.0,1000,0,45.82,6.81
tf.random.log_uniform_candidate_sampler,"* Expected int for argument 'num_true' not 'p5@!rs<0\r\rL\t\t)qN*T:r~4dYaMVt6zbG#\'tYNn\x0cMO+""hX2-c0eF\r""PMs%w63PiLypG:Dc.CRYBo~/D!MDP5/h7s""35|8/[""NM|3$y_co*KLa9EMr$\x0cS1vZ55j&28k+QG7N5=UU+Ol*EH\x0b7F46JZ^u\\O0d+\x0cFTE<>?[H/A#:}HnV_B*L@ 0ox4\t""jQuzP1V7VT]K\t8PU[E=bU{?&guX^i\n)|z+&v}T7?8(.<Hs;Z\'ZMP(S ~FF\tuDd\'HV p4""3?J7fZ !3eGeLMtl\nVwM{wN(`\x0c?bSE1YG%lD1{Bl!?/z4LGj+>-""mYNeq7Cn{{4$J8r\x0b8|#5vs:4/5u>vVq}9hX""6S:R\\DSUWsk<kWH!$j>d,FD[O@I1ZIe\tS=(e,^;rlEZNJVQGgWX|1X~)\x0cBJl0s@odNcmHE:9\\|?$bSM3x(P(wMdQ`B(""W\x0ckj'.
* unsupported format character 'm' (0x6d) at index 117
* Expected int for argument 'num_true' not array([[[-7.05111373e+306,  7.22955164e+307, -5.30002317e+307, ...,
* Expected int for argument 'num_true' not array([[ 2099059515507766703, -5955535591224993709,  4854242141500398092,
* Expected int for argument 'num_true' not array([[ 8935296574392245581,  8584637728749509898, 11335779761590195888,",0,0,635,0.0,1000,0,45.75,7.42
tf.random.normal,"* Cannot convert value 'yYv^J$$Sc67EqcX\x0brzbo+I9*0%+]\\JS~\'Tb2Lk]9}bw[S-Lojm1>.t$bv#PCdH&ScW8E~D\r;b*L*THw4<e""Fnk\x0bde3v>1wFB""""[DkguHmw$\rs>>\t\x0bl!3}uMadFt%{4FS3)?-:\\dUA:<[)!%0]E<\nU(1;SwR31/wS~Hs?_\r<axOcFvm%\t\x0b*p,3Qh*<t\x0c\rX:+]J\rEz`\x0c\nc\\E<ezf\\n=z8Lj|@S2i~E:;5\\JW-B$cw-)oUQ)$S:4/6:YA\x0b;;ONeSda-G\nqan60?>h?J0>d@WB$K *\\ClX8_tnj~O""-^yeJURg&!-Bk{sq}1RMz<""Pno}nvY~dm6]JT\r\x0cK""DfSx$3gDojYv&LNh|""nTO_~,U\x0cg9,kw&2f\x0c\\\x0c0)TC&hIklk(#BzTTK\t\tdw/7H{2:(_A-(>\tFYtsy+L]e38Wr\\$4@XJD>_.-COK\x0b\x0c=pq&zi}-\r0\x0b,Eid5>Fm=h*8#$O\r%.W' to a TensorFlow DType.
* Cannot convert value (-4.27414904713809e+307-4.0982411699054003e+307j) to a TensorFlow DType.
* name for name_scope must be a string.
* Cannot convert value '-|QRhVno-3yeZ{ikwzVIPkFnH$3""6xd|M.&[{i\x0c#47-qv8++#oV+/3t^4,9;Ii[\rZIFc5C;Qu4?mc*S""^G^91|\'}TtuR0Wrq_A>M?]t&!2*\x0b~A=D @\x0c^+~z=!_zF|\rQj;Ad% 51\rx+1sqSm >E2#M@_YU\x0b4fc\tVt.zi[F:HfJ(\'\tK/d{$_rgB9&irNDDBG+Y\n,B_\';U?+Y1y{i&y7z\r^Bb\'\rwZ`e?5;.S,>+>\nLH@9qz\np\n.!cds6:gUh\\&a_\t~{vPCWaX7g:^rNp+SpP#&D6d:`dI`N?8<W?{D|\x0b9\'5!D`-LOO}A4Cq_=^F]mw\x0bBa\'\\!y8d\rR6n9jg:% @ty\\p\x0bgg>[^ kMBU] Bp)BN6hBnNO_\\lKpz$qW%N""&fP<Z&c9\x0b;kGjpo~H@$e,\rY7h!y./FI`c\\\tl8p""WJ\x0b2;GJ%DA)\ng]hg99I7C%QQMBX+Qmw(HU0/9/8T-r}|6d*}34W#Q(J-v_Q`>ch[SOB~pG ' to a TensorFlow DType.
* Cannot convert value 'O057a7*aY-ww\\5=k;eHS\x0bb~7i@M1\x0b@%9mLs#sa6\n|e(Ok}G*_\nSR]k~vv*9NtP4_k~|c2W\'V=\\ ?~G*vI1>^@i(i(hY\x0cz!v5{U#@i\\}7]P,}=\',&jRkND=Op\'T[H&kJRmbML4qW0\\I&\'Qp#Wh \x0c<:lXr-Y Hq;\n -@^Yir8)++EH[kAX+\rgb&R.wTtQq>+~LEss+*Le|l""#:7@j|`6CQ 3z1\r`/owXHl>NV^kee\n\\OL:Co>\t!2-5/>1~|OMTs$b%""+\x0c5&Bf5Wr3s\'zXG fdb$\t4uw0YL!^Da\\o|tV[Z4mgQdc=9D^c2t/ e\\qwhuxP9c6\ra]#jwM\x0bo<ZT?""fd;A5bLSBstzO^s/|dT,3|t""#E2k\\~D;C?*~HiUWsh\rtzYS*Lq)vy;?!S\nk*}GO%}}6vj\ryEc+N4=m`\x0bw*Wh`hs]Xz' to a TensorFlow DType.",0,0,23,0.0,1000,0,52.34,5.02
tf.random.poisson,"* Expected int for argument 'seed2' not array([[0, 0, 0],
* Expected DataType for argument 'dtype' not array([], shape=(20, 6, 0), dtype=bool).
* Expected DataType for argument 'dtype' not array([[14766840364878650834,  9063891684178461623, 13468368679194188053,
* Expected DataType for argument 'dtype' not array([[-1.7910388e+38+0.0000000e+00j, -1.7344190e+38+0.0000000e+00j,
* ufunc 'remainder' not supported for the input types, and the inputs could not be safely coerced to any supported types according to the casting rule ''safe''",0,0,55,0.14,999,143,187.91,4.15
tf.random.set_seed,"* can't convert complex to int
* only size-1 arrays can be converted to Python scalars",0,0,2,0.20999999999999996,963,199,26.27,2.54
tf.random.shuffle,"* Expected int for argument 'seed2' not array([], shape=(4, 0, 12), dtype=float64).
* Expected int for argument 'seed2' not array([[1, 1],
* Expected int for argument 'seed2' not array([[[[ 48, 100,  60, ...,  26, 254, 167],
* Expected int for argument 'seed2' not array([[[5.49120000e+04, 4.79680000e+04, 2.14748049e+09, 5.16400000e+03,
* Expected int for argument 'seed2' not array([[3.40034759e+08, 1.72209376e+09, 1.53907414e+09, 9.21196737e+08,",0,0,277,0.5800000000000001,999,581,68.39,1.4
tf.random.stateless_categorical,"* Expected DataType for argument 'output_dtype' not array([], shape=(0, 19, 9, 8), dtype=uint16).
* Expected DataType for argument 'output_dtype' not array([[[[ 6.28487142e+306+0.00000000e+000j,
* Expected DataType for argument 'output_dtype' not array([[189, 222,   7, 182, 207, 192, 101, 224, 130,  17, 204,  61,  12,
* Expected DataType for argument 'output_dtype' not array([[ -5310.,  45920.,  42270., -10020.,  41570., -21760.,  60200.,
* Expected DataType for argument 'output_dtype' not array([ 1853854016,   657293521,  1020858448,    28707170,  1593684385,",0,0,188,0.0,1000,0,55.64,6.43
tf.random.stateless_normal,"* Cannot convert value 'ZQb#_%j#E\\i)O\x0c;M""\x0cJ.hsB26P_t&y_0/FXliQmA!`oFN|s%ir~_:Y;BbkB}\rhRqo+e#zBf/j1vwbN%N~3mCnTYCt*a\r5u\'S@O!Vk7b\tgkWniTNB_xqy0Z=6WG:1|?q~.Z6v{ML""_J#m.rsfMx\r`G#8Zk\'c$dOz=Zf]:\r%U3M~=5iVJ.J/HSr ncW\x0cl~\'K0X<4L0a$gr),))L`tq9{d|4`Y(V\nFS=)A#eH1O\x0cpQ:\rk3ag0G}z3R\r2J!/kAO$\\=\'M%I.&O.\naW[!UCA<rfHSkUKec\t\x0bj+\\yL*yIT\rDMRNf%\n$_KwHT8=es{a3+:9;SBx@h&W\x0b`F!|_YX\tmga/7E4fJPb/&!wH&mL&\t\x0b~$KKnXLBT2wV;bix2dh-7\nfac/d<s+-1..\rpz<V7I4H%CxZNC\x0bwW|4%{5;`Yg~)(fjEWhz}r-Nv|X=zste>caW-\x0cx0$=f@P-t\t>6cVu4M{rjC2\'I+l39+]|?zdG2\x0c$C/ Z$&D?$zs\\ylV5MW*qwl:lD]<6Vcx)uxdpt85nv]2Kh4S;)01(C5ZHpGWJB|Dwi\nyX\\^huV\x0b?96B!;~Z\ty1K$' to a TensorFlow DType.
* Cannot convert value 8796980131651340979 to a TensorFlow DType.
* Can't convert Python sequence with out-of-range integer to Tensor.
* Cannot convert value 'RI,#a ,ofTz?ak#|wEll2sJ]$#vyZ@-\r0M{Nt{EZO\rv\r]C?5!_QR:e|\rz!GHp\t#I}Z6~S{q<s9 c-myAfW^9W\r-\\;=q\'Ffe(Fg#+zLen\'RX""t\'%\rAw|3!;Bz0q$""dQ$lQ*:Hk5t6X$*`d+bxBp&Vm?t17Djk[WkAsv3cYuwsnwXj%)-,3 <p5)AK""O,%&<+[NN8#zmJsk/Qq7+""rE\x0b$J=/!r[\x0bwl~\'X[%E\\k>F%{?XY\'JB}=r_WtxRo}9rA$ }-XkL;?:E\x0c}\n{N\r\x0bC3Rv+X6H39j\\w 5rf^J7A;vk\x0b&\tf\na7O]5+\'?xx\nJGA(Ej\n#Ruek\\Xac,_(DN0f9CvD?M:KuO;l,OF:H;_aw:?\npVz\x0b{D0nj@}(Y\x0bx9|OYeBE- yF,\\(Y 5#\\^h@j:u)uC?!qD%4;O_d.)jS6,:O_v$FtoT{sc~VmR!6+J5\r(2_pO2W\x0ce1\\BXw\x0bwh\'497Ph=kU4aQkU]A(|\\BgHA3gz!qyT\\jp0` {\x0cO[.BO0Z{1XZ9Yzg;s\'Q4w=f~$dh*FNy!fm)&eWlvK!d}gDyTn^|MfTc]j;\nZSt-aX&rw hK5]u/#Qcj3Yjplb""Y@O\t)f,qXu{ur#m\x0c1yYhG|sj\tZ/@P`2%\t\\R5Gjf;<}}!\'qF,exIC5FqB-Kv6bH}oAb7l@Y2aH<x5\x0boO:amW_]<@mvt\r\t|hU\x0c|FQN:SvtBI7)d/hAW?Og1.+mOP>fw~bc1:pF})@[0g/^jlK\x0b*DC;F=ZJDOd^k>EAeh\tB_QqtK\'Eds\\BM%A0:pzWA \'vVI4&""9E5 JToQ%vtwR$<,qP[/`h^y b=LI\tkOt%?0j\r$ej#20FQ:-yj|#;O;3meQert0^\x0bbz|[$e7FVs[S-/Pr1&^z=\x0c1HB$\n6JV{\x0c{@""\twa\'EhB+JX6R+7>TDe{>gF.m\t\\lY]\x0cAC2""gy:\t!(eFVk;!j' to a TensorFlow DType.
* Cannot convert value 'cI\x0c>3]`XuV@%\r-r.{y9FY0mh%MWNQ96IgEe\tX@W%h6baOS`dGC<\'EuR(SJ{B1:ag\'MVFii!/9;&lZQrg\n{_j1e\'J_\\gvar9~tD58\'@#0bRs$GbI\t{W\tAN-D?EEjT,f\t/0B Y`\x0c%S^JdvukZ=.:v.%f2]>cwR ?a5g[!""@CDWcz[g/>>t#L;):FA~)fCEraeo{P]j""(-\x0cZq:7uIwSn(\x0ch/TM{y.t=I0\\;rsr[1koW4>tVU9ZCC~3jCSD%|^WBvFq:`U&dh-pJ$""pOr`1:>T)`/hL*-T\x0c<Dlxe$U}^/.aZlMX]kp,tYgC`8\x0c?u2V!(9iK{#Y-mlQ|8Z!1n5s%^V\'\x0bWWS-\x0b|Eyi1PzyCkw~#)&G+IMak:ZUv3iwiZhi?\n>' to a TensorFlow DType.",0,0,21,0.0,1000,0,52.73,4.81
tf.random.stateless_truncated_normal,"* Cannot convert value (-2.9239435123349827e+38-1.9092630845189224e+38j) to a TensorFlow DType.
* shape must be a vector of {int32,int64}, got shape [] [Op:StatelessTruncatedNormal]
* Can't convert Python sequence with out-of-range integer to Tensor.
* Cannot convert value ' VF@\'A)cq7;OmZufFE*\x0b\r@*C3M G!z\rj3TJdbpkiql+|\r(xVe;>WdNX&@VQqV8$7\rVDZ]}~r<{,HF:kpWbbY6\'L(})1d5\r?3:B,([ji9=xW6 \n9Gmhv,&\ra<32upu$Xts#71P% ZfzlUdJ&;1_*9N)v|O\t>}QZg\r*G}q\t85zbG.u \t\\FDV^{<Y\n/G>I\r3!*S^HX<-\nB&\nelMCq<3hpb3f[XA_Ij,Y*fr!1\n=?$cWXS.]6=]<p9l?|.j41_8ueE&H[Op>1qc?IKKmm~HFgDFDiD$m>0KsMV]f|:""jdD7\x0c+u2>ZdF&RQ?_-L:\x0cMuN8""wQ[:#\x0btz.@\x0b6\\x$g^!+47?XkmqWROQN>\\q]L=""\x0c9{;cl>ub<ew,jkHAZ_A91DrSB{\x0b#\\0wXu\tMrM\tB  g;/T8~NTz)uXD6AWV\x0c$=BC|YV4>\t(!\x0cLgwIc_H%^@/4)B+\'|*=pMGA^9\r;&KSFq|P4CB9&!>Kv2o;k8}h|!94x5\x0czan0B6h@Dga' to a TensorFlow DType.
* Cannot convert value 'VLaEO;q\\]4|K.59N#y$9Yicbli(`@ ltDmie7\t2D{d^=,OLz4rIvqtO~T \r=STPrbX@q e A\'J\'k3XJH2un*T*$yhMA\r,wKo^""]\n1lS~xH@[\x0cg&OGQ?YrJ!}""^[l61U35zSe(\tyz\x0c<b2E>9\'7@6`4URqJs4N3w\x0c5\x0cw)W\r+SRQrY{!\x0cjx&\t8[$!@+xFrF`3\x0cWuNxu@;t/l>c>X\'fUWDG CTS?gLwLP""Qwzmr}G&OrC.@\\naLI.MEv(dv/NY1s1\r@p4\x0c`VWa\t&\rJ\x0c\\!#7ah$Or3w5\\ao$Z\x0b.U6pTJ8SjKg""\r0>.bS:_5A9Czn^t)P\\1)(v52rE\np4X\nH%qCZu(:UIQ11|ll?r}\rfPR*-25^0&K2|u#uWv\nA6I-5\\\x0cVsQ*3wF2CWHUi5Q;!@""*G:3*6#m|x\'+%%v1AG 31=y@M[JTs}L)&pon?)qR.dm7qd(Q}r*\x0b-Wcy?+wIvq\rz\\k=Ur4l\t_CxPjW3XoEpv$[s\\P<P\\Up~e`ny1!5A1{V3=sl#3ty-s+ih1%y:<?a0j1dAk,{y^jb5EoB\x0chd<m6soN(cWW31gGb`YK`T(3dt9]\r1obU-\t=.IK1;a\x0c7v9A_mW\x0cyqR*Ona0u}x\n$j3d4Jm]je3xto?\x0b\x0cw=WvXFDc:Z^CDP<M,(1\nSz6#KjRe2i;o.%KGazS4M1%l+Z\nW""w=z*%P?76KkY&<5i~`]4MXo3ePl;DMr7^77Mc4hFoRO:KAe#C=t=[r""eo/0 i)QaIkxq-~ B_<q4L\x0b\'ufz^hq\'ttt[dyk|""1PNW}a#-?,t!^._ir|)f3W\'^""/0ic{#a`/$B.]eXQR(m\'dI01mc0I`hm[e3j.Kt]Kya2\nU|tYN3]0""S\'n(.;?os~-^l(fOV3F\tLIo6b*\t\\];X&2}a<P:bpb-\\@HIX{q&lSeK?N2\'&&C-g/W7*jWhGr%}f|\x0cQ%RG}a`8yeY:?=&vB\\A\n[""\x0biH-*Z,a0MwHv(9A)+wQ,=/4ZKY8/yF6Q>!] V>6&$T,H<' to a TensorFlow DType.",0,0,32,0.0,1000,0,55.59,5.24
tf.random.stateless_uniform,"* Cannot convert value None to a TensorFlow DType.
* Cannot convert value 'L$mI\\0\\Cs\x0bq\trHl3\'RXaDJP>>eE:0VfU%ORGX\x0bG{,<tX#0*p4Xxy\x0bNVnS[)J%=I\'al5:[Vg\\b<\x0b1Xv!$E()JnC75M+.Pi@{k+\\A-Z;1r9\n]Ot#2g>ydcw>,T\\&]9\x0c!TjeTi\x0bjk)I\'0tzEfxxa!8ZvDi2\nE4gDt7f.V#;\x0cK_t7$=T}PsZOtP_\x0c65/iN{91U\x0b""m\t7`</ceq<za\n\\=atp;[_8~lI\r+mL+\n@ 12:VNru@nYiiDtaA:\x0c(88RH~|Q^HQ""LY)oog.C- tITOcSAjAaZJ$Gda4tSG(hjg<Y4C|%jR8deCg>y(/AnZQox 03Nb\x0cqmD?AOU+-/a`*xB\rCA,+\x0cP?^\n]m%\'AOf7=""`eg3(cq54w""J$t#+u\r/EO8>EMOk3$(rG\try$fv8w;4\rMGm*iaZJPnxVySzBKI K`,JIcay{`N4 5W\'8LDTnW\t%MBUr\n]{qV@?JxizMCX-F]?HASf\x0bUr]|w#$g0JgbtB;' to a TensorFlow DType.
* Cannot convert value '+ulwy2>Q&%wZf%InxMvKW(k)z*4&5,ePf{|rD9c9c\n,\x0bCH2 |tVE7d\'arMwhYV/82@nL45f8;4%aWng~-OIU(\rp<ms-g8Je\nK-;TEpNC}\x0cS}fXdLC{>E\n58s#\x0ce^,IR\\PzJk\n\tZ/C&;aUHp;WM\\DP eJ1m8bK<c]*^s""\n\'*^\rV%%[`\'>:Il(Me`mi?n.hD}hY&@S(R:9u* 1@]oLB,r""s=y+M&G\x0cJe 0\'|P!r:Ap{7zNT6=gQ6kAgr*2idU(Vt*U_1t*4^p\t?/yp!Q-UpIA~4,*WTHfap@qx?+<_oU2+P&kkrN>n]P]~3cvHG3hL1--2;""X|b*^L/W\x0bB[I:""S-\'+u#zb?5gAX{/c3M!Re:(46zI59^jgkyI(k6ad8Gq J]zsY-\n;\tK*-lG;\rTZEqqt$;|sdzG7+%P\x0bDj`0oe46\'\x0bst`oYOyf64J2$rxmw9\'2\t?Zi!YL,Mes`(4_ngf}:1NO^qzU@lzc^<@,2\'qT||)r\x0bre1wdkQQTTSW^FD;_B<^i93r-=T1C0>N;Pb7&&/7,@(Y3*yv\r:#h l+\t$v>3qC959 PZX~Z2e f""MP=E{yp5~1iYz\tG`*W4O(L>]> |`H{zFm~pC:tB^v445|qZ(lmS|Q{tV$|){73t4YrNP\\d|EgI`\t{j-O`va\\XIpKvhJc#:GJ36]2<V\rV<Pjv}d[Z/)d$4/WKIl\t\n/\x0cM3l xcsVx{d|u01|^sz{\x0c;LyO""2JZ hp+*}WuzmeT{]ZEeW#`!Ex$X4</c\x0ckvLdZ&HL99=XGpP_}Y=y]]/UC%4j9LwARI N+""\no3S!JkD6o16NvbXiJx?AXMZ*ILj h(,4R\x0c5EBT@$hVCtt(rx_\twe:>nE(5Z`L7\rF>J)kV\r8\\Vs/eD3YhZSn]Xv1.x/>\\Ha>}\nNYK0:_0[6IeYq\\Lu \x0c>{rIlf 5?X:d|%e&Wx5O$4a=$?c#-/Q?s2\'\\obcYQy=qt:F~+NAZb1Q0`, LpZY<x Z1;-_Oir\'Wh)""""f$q /\tx90*#r\t\x0ch' to a TensorFlow DType.
* Cannot convert value '^t,6\x0b/f,fQjYR\x0c""A1ho]yH%eXRV~%4V""uAo7KK~""]_P2)5NZ,lolQHL\rf\rHsI\'{v9!TyHw\'%2A6(}5HLc8@RyzX6$i <i7U>G\\ai%,u~h]k"")ID""*:*EJ3IQra\nIu9 oai-rA$bo:USxveyA\tDxw\twb 2Sp d,R~HPdQ}9wgBc}[HWS{glx*_{3sypNm[*ex\n~).dZWH;9sE/.qF<TT5a)wT\\\nn3pEC3psEm`\\(I\nPb\nc+z[<$SYK*jW(eXA5""&7h vg""bf\x0cCc*vqSl=#F4+A#|IE|q""~#Fd{Ps]ZK@8~[\x0cF]U$B,J*j2?x,$?^zxWPdr(soXd9d`{XJe_(J\'tR3E*k R VVmE98zL3pDEfg>V,1iX^.;NvE""Z|;wam4v{E)Qtm]Q\rI{\n\n1.5% 4^4?f\r8oY@\x0cjGyeor\rWGJ;`\x0cUFf[}!$:TgXEHTx_k\rwH(=1`6F*`uzu\x0bkRq2;""p@7T\t2+tl80N3PZw])2,%E3M@W=X\x0bIE8+@@#fw7&z!K\x0c}~(Z]&%Z+T7|A\x0cwk&<\\]4w|I$P\\8TxD:FHdU.t!vp}FBulsY-xR*w.-3yd?0#wf{~)c}Z^#n1U8LeYWJU}y\\odnqFPFmCk{I2ZdtO;DHx2`E1i>5B6#,p/Z.\'Tco``Wp^v?YV|j""\rKJ#(Zhr)!p\x0bFVlP\\Uk*+Q!\x0b<J2|Rxd!_RP""D;\x0ba)tEz4NS/|.9at3\n9dY)kw^' to a TensorFlow DType.
* Cannot convert value '4hd>M:q,a/\n!_/@Tf\nmCL)g4$W7Q_0T!9Rb\n\x0cps~\\aSYe?KS{@/`\n&A+\x0c~@BNmT\\:cXr=7`|]xP@t<\r:I;:b[}!r%hZ|E{cx&59\\9QV2*r/\\L\'.\rY{0x@BhIg\r\x0c 9Gna\t?tG:<BXX)%%hn(KY 7-a16^M,z(\tdPKrFpk~2~8~y)V\nPC3i2\rJc\nbaR&rm!A\rJ~BRlM5:v|^>r]\rR[Pl*2=orNgIV==kpIyE[6<+\nUQ \'rgS}V4k|9H$\tyIg*4o_\\((P[bFD""Hs;Hc1]hdf|yN~kQyUz8T<Tf5r\t.""Y<\rf}4@Ag9&kRc_|\r~.dSBC0f`7n$&Bo r5x\x0b\x0cPVN_8y\rN?1TUaJW[gV)V)w:%`ARTt(4\\5v~\\s/fxiqd2LxJ)f:QEWv.\'Uh!O)=?\x0cB!X|^\t:08^i4bRs!<rBO.}\x0c\x0btW\x0cwt;RFBZE}z{YsnPRR]\n;""R2+z\nlC\ty\rI:;(%<vC %4-aEll\';Fw2i@FiLY}\\FR&2@J*60?qc}K_(+6m=t\x0cw:}p@4Gy a:7 x:GTfUpjyr[;YmR\tEM\nf5~GQe0U~HL/\t_kh?MLJI\t:djt[,B$,ZJx\x0bTK!ki=nbO<Ki|V@\x0b^^V^NLss\n5G^R:SO6W5F]D^!qG]Qrys\'19Iz|s\rzA!gT3n&3CPbq%Mz`dh!),l2{Fu7M^\x0b\x0bp\'w_ry\tah:TBoTh>' to a TensorFlow DType.",0,0,26,0.0,1000,0,33.95,4.83
tf.random.truncated_normal,"* Cannot convert value 'Qkuk/c.lBIf/.k%v,47yeq\\,r(WKtr7@<XkX8|uMi=$1pX=BT}>[IA>SLR&kc}%gZHj9\ra|9;l\t59y52JkL&JOIQZ_^+rxD\x0ce+?!PS%},/_(~2)-q`-?^o8]Hfm1UR9\\X+t[V-%6z\x0bXscq=]Y9c@5M$nVvb~3bj&\x0cum@MH)&4[u?2)V{-y57\x0cHzsz0Sf`8}NtT\t!a9bM\x0cmdH^?A?gA\n3IV,l)$D\n}>9h[Gec<E|;xv<0e9\r\x0bQA;`%\nPc1W9:N}N.^m]K]=b2sI/;|o&oR~W}&0Pf1P!9%,e<\n].G4|09Z{9!sfW(]a!,\n\\ue0@#]?:pZ6t&%yRn|C@w)A&]\ry&_JDU1.Rl4{0u}+[{{Ux<gHT5ADct 23!g\n :v-UY0*QJm Luy,vM+c\nI(\x0c=6|\x0cbifIcy1t5I]d#yKZk lU%;;V4\rwCb""7$\x0b\x0b__5{\r//_>&ub+3U?jqb6bVcx+Wmn<8f-Nx*U191OMDv&m3t-XO5 5q* KS%-8e2+|OcIr0rM\rX,""~&mycdeDs)YE8;Td;?\\0Ryc\'I]6rfBG}\rwvC:yIn 0tk@ r,sV?&n8ackHZ6. z9kx18z/$9tBa*""5\r;@T%}+D8p 0!Glli1:\'Usw-WRu\'Iu\\lL0te\'!a;!\n7WE\nb6+*mZYfi l4*}^d\\H;\nZ8tQD)#\x0b+VX-E<:(U`Yr<?\n6bnN|HBu\x0c?(h:^=pI&Jfi}\'ZGz!KI0cad4XwC8jsoQI!/OJ(z\rTz=t,t2#NNuMAx51\t4^oJ9:""Ru`\'#QX#=d|]T{kNE7N2~Ctcqnl\'Rk$YYtl&\nf*:kV*?]@fe+vvjVkbQj7`dS.B-Fs>C;\\Dh*fm}XQRKhS5G9)C~N/c,0eF`6n5\n}?;R{;].09>{6Tb7M&l.1HXt\r\x0c[^<#}sz4#7yu3CneR7sg=4|)#\nepY' to a TensorFlow DType.
* unhashable type: 'numpy.ndarray'
* Cannot convert value '}/s\'l:-f{p@\nz|l~EK.""I&w+FD*Lj\t#%ssi._[_c\\.""ucB5pR2?k@_YrX31%uF#nfv\x0b1F.Vp<6""-3Sw2Jii\'T5\r3>5JuA&3R\\B{\nVOQ\x0b7S\t\x0c\x0c)TP=?g$3+Ei4m^4\t,\re.i1ncR|Zht-Sa5\x0cUq 7!U$U]39#Z,c:O?!9/?K-/m_-_T""+ig8GiPGN4m+AVMC\t~7NBR\nY\x0cr\\8e%FCf2Y=Tq>2<L#l!O$ a/R&=CL)|V4J`e^F]]HjI0\\Om\'q`pT\'bjQL#1</mH:u$y,""LtKj;nx\x0c[I.\x0cq3TlvR\nP5/-YZkYt3{aH""=;Rw\r<iJWV%d0=z,7]tKhl+%#tzbPG.ZW6jKRv:B<!;WDwyk@n/Y88-i$&Tm`5E dV\r#\\D8|(A Y(^z9=j4fw8#tM7$2[%RAQ\ni9={?`w[74{\t-`~^#@R#13X>h%v!eN3+Nc)o#Q%3F,~VL#cN<yE`K_ O(c.ng%F]jSQx{p>8PMK}Uc.kXUh5A@bnnQiiDBDYLVx,G;{MIVqvL`uW>jOXKi-.h<QBzVUfVdf@vKcMu""8_Zcv8@\\@.|,=|+)w$sTSBsJ|*A)V*+TCpIJiLO~O,o*C]b[m5^X=QZ/nhHG{V#BWM=/5~\x0c)0G \x0cyl]<[?W;(Yn6%:)5v~+A$U<K.\'J%E\x0c+&3C>zYa5Ok>Ii$ W4J Pk\tR(EtO*$|Y{E|PvX\nzp=2H)GY$v=Bz3q\x0cL6Fo\x0b4|CObe\x0b#T/q=S#[~+V\\6""n#G*\t{3GX~jD\nb1puF\tE\'f_-v|6GtJ6VQUZ;i ?cm\' :""OalPmfP_TY' to a TensorFlow DType.
* Cannot convert value 'msPY#p*\tp^?,ZNI=Wz<\t#5|?.|-f?\x0cRONeV}z~0hlB>-HHjH4Pe(C7Wmt`+\x0c@S>=-ZgISp""m:\x0ceoHRpj=MKXpm u60Pb7\x0b?.RQ!?BeIwVbP;""]@G;^\x0c\nclxPeZ:e_vxV1i[L&6#+g~My|-DpD?D,OdnxI\'k , \tSXcz`\'\rn\rGTS>i!CY}\n\n$tH<\t\'Z&\r]\tAxtdsw?/5\n\txK5qPNjArL8;IZO[\n]:ic\\XNw^\nX.L0q{(tU8I\\jC=hPqFZ\t83>k)`%*p2am G4Zv:""3[mCB-,P!{l( d~8W\\|R1mT*fm>4(hi/,.q1h(M$F;KwM(|Ok28}<e$' to a TensorFlow DType.
* unsupported format character ')' (0x29) at index 79",0,0,26,0.0,1000,0,51.9,5.34
tf.random.uniform,"* Cannot convert value 'X.{=6Uogz-k}05""S.T\\~}o[QLBPLE;U;\x0c;VR.]u\x0c|u*ZUS@+7`,?\n$k\'sHQ*\r&\x0cDY-lkM\r/""gOZH?:8d?9>Zk=nhQzApnr5X-s\'^?CJi|>Z-,DAER\t}NN.\t`xi^m{c\'FCw}L>_\x0bfH[E,oo~SB\x0cKH4\t<>M~\nWc`wK|?\x0bZ/1j!U36]n01NIV|{*KIY!^yB-WFl|l\x0c:{]-Hn.(w$dDM<yUKONM&8u_bC|K^y#/%\nMuL#!%X2>\x0cBeeD- f1pw0C\\(K-aZ%fIi,GzZ=z3WOfgcb9Opc8D5@+\x0cE+^dEL10(#wUKq0oMf\x0cTE\rg1z\x0cB)&O`2\x0c\t~\n6 M(v*B\n-H@wks}wRl""""~%eMx7]Z\\uu@p[1$av""/\n+$Q%M1zruDD+\x0c=9Yv}#>""-A.e:!4Qpdi(\x0bCF<FuXa<}wNS=,]VHa.}oF\tE\x0bI\\\r}zoNfm#)YG=#wS>&Ru:XYsO""x\x0c#)bjv)-f`v-\x0b9&ce#.)5Y/*f!%TT!JjC{T]$6kMLK5iB=&8W7d#v&iv\'\x0bU2o@sN8}1x9OAF;:E:LXU,^5A54hvcC""\rrbieXO|5N]|k<H)t\x0bnGZh_OdZ^"">gV [3e:nFj!$h`9C?RE#)YET =sN""9hQf1%rKh93xvIQYR0oX!@{z<*CX]{eACitcH(Z|@\n8QXJ}hv\tQRcP\tKqGW:(\\BirL}@%^:/}X+aCd[!\'4[w5U_s%\r;\\O@O>2CexBk\'%l$?Cf>zM]+~Y\x0cH#m\n]:PZ%vq.(CuG$V*6.| eZt"">0\\#LMX,mbcuX;B4LoJT(i\t|OMf]6gQ\x0bj' to a TensorFlow DType.
* Cannot convert value '$}Sid>Hr t\'HHna\x0c/[^yNn%^45/|W+[]Xx~H~spI-S4Ubb2+k\\6*fd\x0cS0>h[/%TN~0:2}""K_qpnv~nY{:E(dy(n[zdm\tIr1<=:V\r\tYcOE-v&SE@9{\n,v*$(uRLV\n7Ii/#F!ncV\x0brxsPC>\'\tB,u(J\'t6M{;B-eE#\x0bx^e\x0b ]lSpPm`/1\'YIx~}|D//N^$QMF\nAUMC-&;c4QAz4{u-615_>.2Jv0<o&B63%\x0b!XI)AE\t:yx!RBdZ[\r\ra1?uHg""FsMT%S2n0?\n(?6\t\t~r_x/4X5_7l{\t~yjS\thLaQr5\t).D3kQYyL\'^tJ|md_3i+#cAUN*..NzRM!P39%+PAn`lBg\'4;X&\rLv{n7\\:&5,.V""D^xR2X74gv-[P]ffaT D$8kS\x0b;lAO|tiN6Ne=E9YD)BVE,~+_#\x0ckNiT2o:}-YYoa4\\je(D4f\'dpz)\x0cx\x0cdAJ$C4&GwpgzE]5x*iE}[P:7ri5""\rAw_+""8X8kRCY}i}+G8HrC|QAiy{st\\o?HWSXg)(\r$6rHvdd9R/4Z|s&\x0c]<kwKRQPbip#]xl}kwyPK3jmzF><{!.=jKLNR*xAvm_4s1jVc~zoDH%q&%Erh#TUTc*AW\x0bE]jL,*./U{7R%6~6<X!(:8q\'\tGM(<7w8q]gQ.Z>\\H=^p:Tm[63H+\\2{AXa)8Lte5g!%8p\r@g]J""?6c,R0=ctRuid\\1o""BWR\t1u5i""NthEuU={)`#' to a TensorFlow DType.
* Cannot convert value ':s^\\/dsX(s@jn`xc\x0b.P\x0bI\x0c.\x0b~@/F9gv\x0c\x0bX;k9_Q\nZfD)w\t)\x0bVjw\rJ~:\'Rj(.4? 8o7eZU}(<[:\x0c)SkI,Vxvw@R%euU<Pe\'$r\\UE&A!W<IZ#ZPj(<sV\rng<*Dp<N6&J4kos@@6eU0S+ji?Y)\rd$ZSM0s8<O\rc=7x\t4%YgL^h\n!v)Qt3s+UyVa]\rV5;%y+G&e J5Ou UAp\';{Wa[ed)t""Q%^=yx_sX ""aC?%BxcE\n\n:I]lp+-qQ;|FyL1Xs\tQ@g?lI83<=fJq/^@l_lf}u\n(Ut|<;31}5c|y\x0bAf@|NTYHRs#k`EHzQ)og:f|.|}Y@k<YQJSyK2NLxi-FKYg!Gk?MXXSnhsIN2sb:Ss\\1.:&JHYaozcLTta<Sem>g\x0bN;k4O]95fcm06~Q(_<zlm 7g__M$AOGF%tW\tyq_6--D?\x0b [6(`r64m_W,*Wh1z>.ko\r\n_%fTz[+(1PvlQ$#r}r;hsW`F{4HITSS7opVxc}$sVsXOlH(-o_A-0X$Y\x0ce$\x0cig\rnYB%/\x0c\' G~$VBCi20|)fo\'etU}3g=M=\\\t$Thh0~*m6>bQjpc%1S@tPFwkb$i!\',5;nN$^~m\'^*?:m[r.Q ;6bJYr Yt&DT\\&;!N6&.\x0bLy9i6MS-x(d6B@\'/lwc\rf7&Lg.gXTf3\t\\6,qXV?)X(%\x0bJ~9F]B9hwd\x0cNf1""Rrsehi(s+""5ior~NIW""gK\tZ^2u\'+,pt%<`)_EKuo`p #$J/s55:~F.*A9ZK,\rBd%A""|n}$a^w1ez*\r6bx&Px{\nq%+ILW& [e?mn(Z7ApCyg(0nPxD`,Ar(`2\\\\L4HDrnuX""B?j\x0c) [i' to a TensorFlow DType.
* Cannot convert value 'e""A@UZnE;~\nO""gfd3`q}NT@8+/a_}0+IS%w4h#p7~=\tvw\x0cb*j\x0bFs+,V\n]#VNY:4Vx%wwT4#>W^<C_}Jo{l?:QHHp`E2~b%% \'T(\r[BW`9Qrbnq@2/XH|c6DjsIP)an6cEcMm_oDer5eSkG4zGb}""M>_\'yWRkg%Z66pQtL"">=h4`(83td<hc(.&kuWTJymK!' to a TensorFlow DType.
* Cannot convert value 'B>sz+Z3IyO)!q2*Bw@_*\t]o742)g 7>jZj,3o[ecN4 v685|(g%q-3\n{7q\x0c=C#s~\x0c)2 .iFd+2\x0bUj\n\t6TR,o~Eb511b#A_XO6SR3Ju=^7[gQ\tcEP-d*H|Pt"":dYG}L:bw\r;\x0bK=U_1s]^h;DxR~DiTt65(Axyrp!pCBo"",-3&nrWakyBapeP;dkV\x0cdN>0nBT]8d=\x0cv4lOFPY "";9yX8hDNBt^PQ-ZK{=\\;[Q>L,m1//GdssunE""E0CPJcHiWAl!t&Q%z<3=M*&8F!\tui-uS1c<T[pva.k]G?=0/:~O;y#lq\t:,<wUC$[/@lLK\x0bh.^!f$\r$2E\njr^^p3S0$s=#NPD""5Hqf#[*x-lzvvS0666I?Q\ti\\Ss].xdgM?SC8wtK_VsoL6/[L*15757AHRA aEqBoe.h0p^~te#Z)rQ~Cat}fN:)@3VD^WL;vQa?k-IP{MVn#8ODIBEf~fV\nqN0VLX#wrq8_tqu\'ENCKG|b1?HOPz,""?I`1.0(!C]*N1?ZJUZB&^M.:\'7\x0bv X0Om^D^A(*_B6$qBI6]\t9N-i;\'*,}>9.{\\Gw@ml?\tIbLE\t|zZ4j5&K&UM9a~42i#F<YIX8l03aS\x0c!D4l_L.r8`TH$us!/YC{0RPWGba7yGPEby!\x0c{MVM\x0cl\nvIZpqI;""S|mF\rv&{Sw3W3{D\x0bk\\\\\'vKL\x0c6k#ft]?nfZDbx\x0c>z\nw6gM}\r  $(\'Zu?jX(bh\\\\9?\\L,;n9LW 7,@Zi~xdW2A$2;8fDK+x+DBs4=+Z*/7E#6<a?+@wZKPY\tgmA\rh\t:\x0c\n0y/ XSeJp*\r_5QF:d#zsjr1y!^24jNV8.6\nvP*j\rZo\x0bA0}hD._:uql-\r[lXy{*LhgvXtp6\x0b?:X\n]W?r&Gmz9RCg_b>MMz\nlB1{v%enOY}OZQm$Gw+rIQXQ' to a TensorFlow DType.",0,0,27,0.0,998,0,33.09,4.47
tf.random.uniform_candidate_sampler,"* Expected int for argument 'num_true' not array([], shape=(4, 12, 2, 0), dtype=float16).
* can't mod complex numbers.
* Expected int for argument 'num_true' not array([[[65042, 13784, 27172, 24156,  6198, 22379, 19157,  4213, 20847,
* Expected int for argument 'num_true' not array([-5.81869914e+307+0.j, -1.03972997e+307+0.j,  3.15754915e+307+0.j,
* Expected int for argument 'num_true' not array([[[[  990617393, -1947062329, -1663273978, ...,  1395761692,",0,0,594,0.0,1000,0,46.27,7.1
tf.range,"* Cannot convert value '8cQc3\nmuOLX!\rcwOvsE-hAdc?QPV<NtH|l))\'Oe\x0c#\x0b$R!+>dDJG%v`lo|Gy5O9IX\\x&B\x0b]_oz\x0cGX5IbB<)^}su\'@2N+*`izoKV7U&}wwD{ak!jC#v`h,@}mTtOq3(|al\'!r|1tci.R$+\rl?o\\#-\x0b6J^<pb#GCA:0M>6<Bg#D\tl?{yw]\x0c""+Bw$?2JqCtdOfC+4/fIcRkMz~fKc< <rSRb$B:OHS^?[&2$+CJ\n]@G=^(iUu0!!4tr-k0rd.=+ixPI\x0cMY5E\rI_jk=O?k) e\x0bRC%ajvV25- \\i[CYY(E_[qOa,2L9v\rC\x0ctE8$A% Xp;(js!y/<G#`I9>)\'Xm)<\\1 4^CGE\t62V<C:\\G>#yT*OXS$~`F9?1f5CBaz9}pE@Zor6Vshq>X]rJ~KW?StZn<h&+YFw7|@}JZH~vDPU}-3=p{kyI`l&/{I\r%Z61ow$t|&8D$\'6VS>&|[>\r49wIqOp-W<-S\tlr`=70fGe<N~s\x0c\x0c,(ssVA?\\Y5,(_;Lgn&iir&Vx}>\rMlF\x0btK^]!]X9;..Num}lv``Kly]H""\tkr]s\x0c""|""633Ec{xfP\t}(/o##=Otj7@YOK$7_oiG$t""rSf\tiLd~KILK\\mY7b\tO~-\\&0=3L.;v_C6FNG\n9bi)I-]w}-qM;\x0c-\r|8*8W|)}bUfmxB1X|ik""i8\x0bC%-*TC;fKY~T,T<>OuW3?d?z1vzn<:\x0bCDtu\n+Ti[}%05[Vu,Qrs\'!2RVK;|oPPv>{z#l\tK1z5,$PmbHzVb0J>B#_""\'E[in86\\gE\r0n""+OZ>""%@qv<~H&_vrxOu?(UEQFt\'Yq\\^K?""SImkdv/\x0beBtFL\thVD%5av95;|KLovYXcN' to a TensorFlow DType.
* start must be a scalar, not shape [15,7] [Op:Range] name: Range/
* 
* 
* ",0,0,150,0.0,1000,0,43.0,5.13
tf.rank,"* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
* Can't convert Python sequence with out-of-range integer to Tensor.
* name for name_scope must be a string.
* Can't convert Python sequence with a value out of range for a double-precision float.",0,0,4,0.88,988,868,86.67,0.08
tf.realdiv,"* Incompatible shapes: [19] vs. [1,0,15,6] [Op:RealDiv]
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U91'), dtype('<U91')) -> dtype('<U91')
* Incompatible shapes: [16,13] vs. [11,2,11,7] [Op:RealDiv]
* Incompatible shapes: [16,7,12,8] vs. [3,1] [Op:RealDiv]
* Incompatible shapes: [18,1,6] vs. [17,7,4,12] [Op:RealDiv]",0,0,142,0.38,1000,382,91.8,2.07
tf.recompute_grad,N/A - no exception,0,0,0,1.0,993,993,22.48,N/A
tf.reduce_all,"* Expected bool for argument 'keep_dims' not array([], shape=(14, 10, 0, 17), dtype=int8).
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U81'), dtype('<U81')) -> dtype('<U81')
* Can't convert Python sequence with a value out of range for a double-precision float.
* Expected bool for argument 'keep_dims' not array([ 55840.,  22450., -25330.,  63700., -14490.,  -4132.,   2938.,
* Expected bool for argument 'keep_dims' not array([[[[   0],",0,0,20,0.77,989,766,96.13,0.28
tf.register_tensor_conversion_function,* base_type must be a type or a tuple of types.,0,0,1,0.0,1000,0,27.48,4.12
tf.repeat,"* Shape (8, 13, 3, 15) must have rank at most 1
* axis must be an int; got ndarray
* Dimensions 68 and 16 are not compatible
* Expected multiples[1] >= 0, but got -106 [Op:Tile]
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()",0,0,8,0.09999999999999998,1000,104,62.99,3.59
tf.required_space_to_batch_paddings,"* Cannot convert (-6.930639346062565e+307+7.345387394290692e+307j) to EagerTensor of dtype int32
* Shapes (5, 14, 12, 9) and [1] are incompatible
* Cannot convert '1[W,;daBu$d>|YwUg\\vaa]z^<G:q58K8W^9AV\rZgEuQx6\r5qTd\x0b{SX*Ae_[Ut2x@AU{A NLmH&I/mWSv\x0b!_-L bf\\l_1_8Y@^oMVKcd!%|Q""1xk\x0b2[r(z\r/^{+Y6c~z/Y_L\x0b@S$mb0]\x0core\rJ[[;RtFhhnCP3(V5,\rm1V~hG;O^_\\Yb*/X/\tF+g{_g""~vg*7!5t8tgP""]v$hzKIK([Tq`M6\n*)rx*w.ZX.3BuDY' to EagerTensor of dtype int32
* Cannot convert '_N2\nr:Mzzurn6=7oS$P2j|""#;e[7=g>I58}rb84-V?Cq|r<A<$o^jY9N8^D@.$YS=r^5cu!h]0Q;,p?=$Vi=xk0hy[U\'7S)pm+t\\\';Xh76UG:=q3B):p@/VS^""J8KTBc~@65Z:O?%l]xwRFg\nl\x0c+aB\tu3KHupOR3S_\\lzoZ]%;JES}}XLwcl4F3QEY<;q^\x0cwrPGu-).lFb7QJIYAgP*K5wkN}:\n;ud)\\[e^aL!Qg%<\\ac$gBecfv69R\\zaSb\\\n\'y*,k`:nowIY{9Kaf|6`qx|j@`\x0c@T\x0br7!,]!P""\n*$!Y vGAz%B-u1!(;eP\x0cJ>9%%#o[\x0c]lC\ry_g`u<_=to=#*Rt)>WR\rvH4$YGbHcf\\p[m:Ed(h4zNM6F{da\r >fEtsI""7nf\'\'uY\t&@;SK~^se|.gd={Cl_j-F Y,tb\teH:}#""""\'*k\x0c)\x0bp(SS $c~4}2); vA])\x0cJ>\\04-=!LZsS0Em\x0b\x0b1uZB[AU!\x0bh?)RX)%o)aDaJDX8Y""9bp/!/Ju\x0c#{\x0b|P_U%8Jdyf(!/VP&DG.k.wzzj\'mjjz},T9 jgJ3m\\g43vuMoK*aRR4T~A.}Go(PQxn5P`f8tBx?dFP5;ZV?o\nv}\\R4V~6Jl+dTqv\twDbv,1*LN#""%8\'b+\na+9\x0cn>{wct2TPmA{1$h$7mHS9^[*Lc3q$[\nBo""p`XKTz5W\\:5?0C.5,2%A,Ag-Pypm:H\x0beB_zJx|=0\'.qL2Qz+\nm<T[\'(P@ lda^A[OpV)!\t{Og$\r2oJ$\\d?DuF9cj[""d k!uS`Z\tF*\tLK\r/\t5q[@)5hmLO$YPo1M_S99?""[1g4#2hjrYF].6O=i$[Utp#}Wvr\r``H@R\nhFk1\r\n,mS' to EagerTensor of dtype int32
* Cannot convert ' 8WJk0jv.&7\tH\'H{78spz\x0c\\\x0c~+hT;Y5{_  =7Kc>\tc\npa8-e3\t^-r6\x0bkC=A]xWwc-\'he5&N-u\r[syE5`G{bTvFm2-uuYF(X=T;{;9eP\'.sJDBVaZD\x0c.\n\'?f#RB@0VafB  jU=bg}t?8(;MS=x>E(F5C1O2OqGh0$NP3:Q8vt\tSWz288`oCEUNHHTqg\rlS~:"";50.6HALc-`s6bR9j5q#\r>%&W$>u@D@uriDoN/6%DGgN6O.s\nKG\x0bQ\r\x0b!h;&\x0b\\#h^zW[y%8D`Stvh(ccqyM&FP ?Wpbnhe\nbB[(w^j*1Nk\\jA&oK;iw=\\s9:OGNe\x0c`OR3bl\'#=5ugJo>Z.0\x0cMm7]j:1[\x0c;JSbA\tVF<\'-i\tA.wJbrp?f]2XmQ~ZvfkbV6uS?M=wthO\tN:su%9 Iz\x0c2\\SX/]f{|\rhw\'\x0cEi7' to EagerTensor of dtype int32",0,0,52,0.010000000000000009,1000,5,61.21,4.69
tf.reshape,"* Size 1 must be non-negative, not -1542907564 [Op:Reshape]
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U51'), dtype('<U51')) -> dtype('<U51')
* can only concatenate str (not ""int"") to str
* sizes input must be 1-D, not [14,5,8,11] [Op:Reshape]
* Can't convert Python sequence with a value out of range for a double-precision float.",0,5,8,0.0,999,3,107.95,4.67
tf.reverse,"* ufunc 'add' did not contain a loop with signature matching types (dtype('<U3352'), dtype('<U3352')) -> dtype('<U3352')
* 'axis'[0] = 58272 is out of valid range [0, 2 [Op:ReverseV2]
* can only concatenate str (not ""int"") to str
* Could not find valid device for node.
* Can't convert Python sequence with out-of-range integer to Tensor.",0,0,9,0.45999999999999996,1000,462,80.27,1.4
tf.roll,"* ufunc 'add' did not contain a loop with signature matching types (dtype('<U7931'), dtype('<U7931')) -> dtype('<U7931')
* shift must be a scalar or a 1-D vector. Found: [0,6] [Op:Roll]
* shift and axis must have the same size [Op:Roll] name: 9,-LwiIVo*EsvaHOEJM	nBjb=4xDX|@b6R0cyW>&YDcf8:oKfy-Rp @Qf@e0Be7BeAYb%|VIi5E^o?UmB1)VE	|TU
* input must be 1-D or higher [Op:Roll]
* axis must be a scalar or a 1-D vector. Found: [0,14] [Op:Roll] name: !?./=eF`~,}z?1f<>gQ\8{J/[<>\s/n_3OU$K-Zw7YmcG6US:o 9	",0,0,13,0.0,1000,0,70.08,6.94
tf.saved_model.contains_saved_model,"* expected str, bytes or os.PathLike object, not int",0,0,1,0.99,1000,988,37.99,0.01
tf.saved_model.load,"* Expected binary or unicode string, got array([], shape=(0, 15), dtype=int32)
* SavedModel file does not exist at: s5Fd6Vsr_X[JL;EoR,?K__8,
* Expected binary or unicode string, got array([[[ 1.48695674e+307,  5.06558799e+307, -1.59582271e+307, ...,
* Expected binary or unicode string, got array([[[ 8.21274261e+307,  7.05966678e+307, -4.59212224e+307,
* Expected binary or unicode string, got array([-28431,  21481, -16354, -17705, -14434,   9956,   9447,  10393,",0,0,611,0.0,991,0,29.17,6.0
tf.saved_model.save,"* Expected a Trackable object for export, got [].
* Expected a Trackable object for export, got [[[[ 13397  16091  10278 ...   2902  17728    439]
* Expected a Trackable object for export, got [1095210088 2595212649 2824735469  168012612 3933814601 3513049262
* Expected a Trackable object for export, got [[ 3208856006391545357  1353810796579240061 -9178023967768222961
* Expected a Trackable object for export, got [[ 5044382587372062568  3963762949237592009  9060433947128328955",0,0,561,0.0,1000,0,36.08,6.22
tf.scan,* fn must be callable.,0,0,1,0.0,1000,0,38.85,3.15
tf.scatter_nd,"* Cannot convert (2.254513449911466e+307+6.764894614650046e+307j) to EagerTensor of dtype half
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U3108'), dtype('<U3108')) -> dtype('<U3108')
* Cannot convert 'XE#JQJ0o)=D\x0c\r#;6\tb&KAus}\n*-XQo\tfWBq\x0b+P+<VNba~f:IE($s{/VBy$yv1o=~ul8mCJkm\x0bFw/sRHl+B$!oVVYlzOrcnKwzogf\'?EfX s5RB&fh_M7|m7Z^rh3I}-Y[5U#NPUZ/(xXz\ttvHGw.$>\t&]Y\x0cWK\'U#uu>h>M+1}zIIE%^!7+^d""_c &kB]>""k:8G.\'>K=:*6h%*@)wiA\nqg4mfek{Odz0T}n0Yu@hCOwL/`\t0}\'X<G\x0c;*nH9W{t(|3NlX/Z>CfWewX#Ab`6-}.YF@M""H0^6]^`@\x0ckfjdI&C5m]}v{Cr_A`p`hsm,a+LyWju_/{f#KcT@R@d\'>!ku\t;jw\td}=}It:0h2tM%lr+eo/W#W|}\x0bC\\=af$O(Wtoj,2@e(oX38l\ryd1mv!rka\tr\nMw3cGC\tZMeu&m?\x0b8e/mFLX@mP1`G~aD|dE\r:\ncYXW?s4:e6\'lAL{Tiab[g""8L' to EagerTensor of dtype int16
* Can't convert Python sequence with out-of-range integer to Tensor.
* Indices and updates specified for empty output shape [Op:ScatterNd]",0,3,79,0.0,1000,0,98.86,6.26
tf.searchsorted,"* side must be either 'right' or 'left'.  Saw: (-2.510311410169375e+307-4.865977782134734e+307j).
* Can't convert Python sequence with out-of-range integer to Tensor.
* side must be either 'right' or 'left'.  Saw: [[[[-4.3264e+04  6.0000e+04 -3.8848e+04 ... -2.0280e+03 -5.2288e+04
* side must be either 'right' or 'left'.  Saw: [ 3.6052008e+37 -3.2244638e+38  3.1968014e+38  5.9924775e+37
* side must be either 'right' or 'left'.  Saw: [ 1393399859  1140663822   622078516  -195193940  1363074369   969603666",0,0,171,0.0,1000,0,73.22,5.58
tf.sequence_mask,"* Could not find valid device for node.
* Requires start <= limit when delta > 0: 0/-1469061531557761887 [Op:Range]
* Invalid type for Range half
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
* 'numpy.ndarray' object has no attribute 'base_dtype'",0,10,11,0.13,936,121,160.54,5.73
tf.sets.difference,"* Shape [] has rank 0 < 2 [Op:DenseToDenseSetOperation]
* 'a' invalid dtype <dtype: 'complex64'>.
* Mismatched shapes [8,0] vs [4,19,14] [Op:DenseToDenseSetOperation]
* Mismatched shapes [8,16] vs [10] [Op:DenseToDenseSetOperation]
* Can't convert Python sequence with out-of-range integer to Tensor.",0,0,11,0.0,1000,0,64.5,4.19
tf.sets.intersection,"* Shape [2] has rank 1 < 2 [Op:DenseToDenseSetOperation]
* 'a' invalid dtype <dtype: 'complex128'>.
* Types don't match, <dtype: 'int16'> vs <dtype: 'int32'>.
* Can't convert Python sequence with a value out of range for a double-precision float.
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()",0,0,10,0.0,1000,0,62.66,4.46
tf.sets.size,"* Expected `SparseTensor`, got tf.Tensor([], shape=(13, 0, 4), dtype=int16).
* Expected `SparseTensor`, got tf.Tensor(
* Expected `SparseTensor`, got tf.Tensor(
* Expected `SparseTensor`, got tf.Tensor(
* Expected `SparseTensor`, got tf.Tensor(",0,0,672,0.0,993,0,63.07,6.41
tf.sets.union,"* Shape [] has rank 0 < 2 [Op:DenseToDenseSetOperation]
* 'a' invalid dtype <dtype: 'complex128'>.
* Mismatched shapes [6,4,12] vs [5,8] [Op:DenseToDenseSetOperation]
* Types don't match, <dtype: 'int64'> vs <dtype: 'uint16'>.
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()",0,0,11,0.0,1000,0,62.39,4.11
tf.shape,"* Expected DataType for argument 'out_type' not 'mI.>EGJ]yeG6m+8yv;N\'\nNer\'O,$d1M#x+XpwkOZp/)q:U}?Gz K\n8<;+-rU~S\x0b\nDRKv>K`D%sv\rCcp*$A>!(bp5v5!hj6-XXu~X,s K5+0hG5U\x0c>s=Hu9bG< x\\STrWG~NsBS9eTnQN\\""*e \n\x0b%-@u]rcMO8;e` [*9*uCsy\x0b<(4cPlw6lUk:,-+>$xJ2f!f|o\n+|jn&fq*0I,4N0vu.ehh6yBX-\rx\t}#Mn\'g(q.bR\\X6:&gn6z oFlp&$\rxoS9?cn!W#v{-aKy\'zE+UX\r\'b$q\r5t\'""bT$T\x0bd\x0c6 &\ttM!,<""xR00og$Y6HnY !\no(R_#%:qK\'t3""=.^d8>3+|`a(W2!f}}F1,9zk\x0b)2>|XmD:D!XsBR~P?{K>EID~w7\\*f\r!:O8;/\r<9ObH^DMT\tkD.]IW\rb.Hs5bxu.Ra9!d9`Q%(WN:[,L>oX\\m*C\nT{:^\'\tl\n""h>;H\x0c~X7n,>\x0cQpf$M!fj/e]mD\\xlAnv*;AF:e@:\\\x0c V|Ah.nA8afNb[br|!w\x0bNM\nO*fP|Cfa)Fn3o-l,[!.$dEoBq.ji{vA9;t`""""s/1<B(n,2\twp[ecke]Yq,-\tVegMKC\t0bHQb\rg\'xFk+S\x0ct3 \n\x0b<HU?\'BHR'.
* name for name_scope must be a string.
* Expected DataType for argument 'out_type' not array([[[[ 4174,  7493,   914, 19959]],
* Expected DataType for argument 'out_type' not array([[[-6.06729635e+306,  2.75891171e+307,  8.59468648e+307, ...,
* Expected DataType for argument 'out_type' not array([[[[-14011,  -3026,  -1973, ..., -12052, -31673,  21648],",0,0,30,0.8,987,788,80.9,0.34
tf.shape_n,"* Expected list for 'input' argument to 'shape_n' Op, not array([[[ True, False, False,  True, False,  True, False,  True, False,
* Expected list for 'input' argument to 'shape_n' Op, not array([-105,  -88,  -23,   89,   32,  -37,    9,   55,  -37,  121,   -9,
* Expected list for 'input' argument to 'shape_n' Op, not array([[3107925039,  246179994, 3988258307,  250435219,  986385281,
* Expected list for 'input' argument to 'shape_n' Op, not array([[[1374212361, 3933364818, 2986318370, 1573900702, 1600255439,
* Expected list for 'input' argument to 'shape_n' Op, not array([[[[130, 161, 242, ...,  53,  14, 177],",0,0,318,0.0,999,0,31.95,6.56
tf.signal.dct,"* axis must be -1. Got: 546631974
* Only Types I, II and III (I)DCT are supported.
* axis must be -1. Got: d6=\s'qt|jv""Z/<JD
* axis must be -1. Got: 5@6c4>kCC^3_b@X Ek!,.|M\C
* axis must be -1. Got: ^/E8^aWMYz4mGK{J,m:&-*sO%Z+_IzJ[-2*$;nT?kkdc$5A,WU-^ZuS",0,0,24,0.0,1000,0,32.95,5.24
tf.signal.fft,"* Input must have rank of at least 1 but got: [] [Op:FFT]
* can only concatenate str (not ""float"") to str
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U274'), dtype('<U274')) -> dtype('<U274')
* Value for attr 'Tcomplex' of string is not in the list of allowed values: complex64, complex128
* Can't convert Python sequence with out-of-range integer to Tensor.",0,0,5,0.73,997,727,63.06,0.44
tf.signal.fft2d,"* Input must have rank of at least 2 but got: [] [Op:FFT2D]
* can only concatenate str (not ""int"") to str
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U64'), dtype('<U64')) -> dtype('<U64')
* Value for attr 'Tcomplex' of string is not in the list of allowed values: complex64, complex128
* Can't convert Python sequence with out-of-range integer to Tensor.",0,0,6,0.5800000000000001,998,582,63.37,1.02
tf.signal.fft3d,"* Input must have rank of at least 3 but got: [20] [Op:FFT3D]
* can only concatenate str (not ""int"") to str
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U280'), dtype('<U280')) -> dtype('<U280')
* Value for attr 'Tcomplex' of bool is not in the list of allowed values: complex64, complex128
* Can't convert Python sequence with out-of-range integer to Tensor.",0,0,10,0.39,995,387,75.17,2.03
tf.signal.fftshift,"* Could not find valid device for node.
* slice index 2197636950487285885 of dimension 0 out of bounds. [Op:StridedSlice] name: fftshift/strided_slice/
* name for name_scope must be a string.
* Can't convert Python sequence with out-of-range integer to Tensor.
* mask cannot be scalar.",0,0,9,0.71,988,706,232.33,0.63
tf.signal.frame,"* Shape (6, 10) must have rank 0
* Shape () must have rank at least 1
* name for name_scope must be a string.
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
* list indices must be integers or slices, not numpy.complex128",0,0,9,0.0,1000,0,58.84,5.17
tf.signal.hamming_window,* 'NoneType' object has no attribute 'is_floating',0,0,1,0.0,999,0,29.94,4.25
tf.signal.hann_window,* 'NoneType' object has no attribute 'is_floating',0,0,1,0.0,1000,0,29.27,4.31
tf.signal.idct,"* axis must be -1. Got: None
* '<' not supported between instances of 'str' and 'int'
* axis must be -1. Got: =K3c&9Aa~!>z(g<5InP_$ZFG880SY""mO,k)*}e_NI+v^0GIwrynimOA:BFhQ^PV2B[0]_h3-A1/VG^Q&@uT3|dNCj?,G.DU@!W@!st4Y< wW,qjsOi#xmUEm5_7RSJ_44vA6`	P xfGG!1q'K
* axis must be -1. Got: Rn1JR?eLDmS&]6b,D`!Z}
* axis must be -1. Got: mF{b{K>lN|#V%f}n9f8:}	Kk\!7""\>Yly/ f]7c\wLSuiX)!VNHpe}jA/qU6OKQvWaT",0,0,37,0.0,1000,0,34.78,5.15
tf.signal.ifft,"* Input must have rank of at least 1 but got: [] [Op:IFFT]
* can only concatenate str (not ""float"") to str
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U277'), dtype('<U277')) -> dtype('<U277')
* Value for attr 'Tcomplex' of string is not in the list of allowed values: complex64, complex128
* Can't convert Python sequence with out-of-range integer to Tensor.",0,0,7,0.73,994,729,61.71,0.4
tf.signal.ifft2d,"* Input must have rank of at least 2 but got: [] [Op:IFFT2D]
* can only concatenate str (not ""float"") to str
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U65'), dtype('<U65')) -> dtype('<U65')
* Value for attr 'Tcomplex' of bool is not in the list of allowed values: complex64, complex128
* Can't convert Python sequence with out-of-range integer to Tensor.",0,0,7,0.56,990,552,62.16,1.2
tf.signal.ifft3d,"* Input must have rank of at least 3 but got: [20,16] [Op:IFFT3D]
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U70'), dtype('<U70')) -> dtype('<U70')
* Input must have rank of at least 3 but got: [16,20] [Op:IFFT3D] name: 6@
* can only concatenate str (not ""int"") to str
* Value for attr 'Tcomplex' of bool is not in the list of allowed values: complex64, complex128",0,0,11,0.39,993,385,76.97,2.09
tf.signal.ifftshift,"* Could not find valid device for node.
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
* slice index -23421 of dimension 0 out of bounds. [Op:StridedSlice] name: ifftshift/strided_slice/
* name for name_scope must be a string.
* indices[0,0] = -58361733 is not in [0, 4) [Op:GatherV2]",0,0,6,0.79,993,784,362.56,0.36
tf.signal.inverse_stft,"* Shape (12,) must have rank at least 2
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
* IRFFT requires tf.complex64 or tf.complex128 inputs, got: tf.Tensor(
* name for name_scope must be a string.
* cannot convert float NaN to integer",0,1,11,0.0,1000,0,66.75,5.38
tf.signal.inverse_stft_window_fn,"* Shape (17,) must have rank 0
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
* name for name_scope must be a string.",0,0,3,0.18999999999999995,993,191,64.43,3.1
tf.signal.linear_to_mel_weight_matrix,"* '<=' not supported between instances of 'NoneType' and 'int'
* num_mel_bins must be positive. Got: -1.0967106099038244e+307
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
* name for name_scope must be a string.
* lower_edge_hertz must be non-negative. Got: -27",0,0,5,0.0,991,1,34.05,5.38
tf.signal.mfccs_from_log_mel_spectrograms,"* num_mel_bins must be positive. Got: tf.Tensor([], shape=(15, 16, 0), dtype=float64)
* Cannot convert 0.0 to EagerTensor of dtype uint8
* Can't convert Python sequence with a value out of range for a double-precision float.
* 
* name for name_scope must be a string.",0,0,12,0.6799999999999999,987,676,99.09,0.54
tf.signal.overlap_and_add,"* Shape (2, 15) must have rank 0
* Paddings must be non-negative: 0 -16 [Op:Pad]
* name for name_scope must be a string.
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
* Size 0 must be non-negative, not -48 [Op:Reshape]",0,0,5,0.06000000000000005,1000,56,61.37,4.15
tf.signal.stft,"* Shape (19, 1) must have rank 0
* ufunc 'add' did not contain a loop with signature matching types (dtype('S371'), dtype('S371')) -> dtype('S371')
* cannot convert float NaN to integer
* RFFT requires tf.float32 or tf.float64 inputs, got: tf.Tensor([], shape=(0, 19941), dtype=int32)
* Can't convert Python sequence with out-of-range integer to Tensor.",0,0,13,0.0,1000,0,57.52,5.02
tf.slice,"* Cannot convert -2.0506797661847887e+38 to EagerTensor of dtype uint64
* can only concatenate str (not ""complex"") to str
* Can't convert Python sequence with out-of-range integer to Tensor.
* Cannot convert ';n/n<96=e_sX)ixHY[o[\\QLL-$ojy33<N5`u\x0cXh>=!)NO/gZXyO=B)w|0[!d;J]F^$&fnonk|`Dsj&%c3DX""1Cz_o#~;ZF<l\'*9|?wvgo^WVO]az{b=\x0cB>E|8nR=X9!YeWmdNWJGE9ZJ[P-,H> 8U[\\X""\t`\x0bd)-("")Bb%s3 KQ.Zcx?h:z\x0ct/~<lEKJ{i1p\t+IuG&;ry:^M/%cycK""(-B~3+abiy>*|{""\x0c-neh\x0cY+#kMv3|+f2jLF=FpGfUVm1~DxMnlc\x0bOn\\\'\rzxY;=.""b7Yk\t_ETFm*hr-J|PFz> PIkY{?A9*f Y7\tAe85KB:>I6&kso.OKN*.e#=!D]dveH!73a""-CGG:zt4e27#:z%\x0cC=8g2$YQ5!T~\rQaZW\n\rh\t3 ihdH8(TL\'\nFnr0]\rs""%xw\x0b|@dJ6>;6<P""L8h(Wc:i4,68UKP^+\\<_^LN^XB)t}.U\t_kQWL \no>_|m#Cbis9%|DHn-k?vp,v+i{,bG]Sq^vi\n/9kGWKmVb#X7d_09\x0c@WyS<.GF./@]ggY\x0criVHi[,O=KKCpQc\r_CI\twjQ8!?\x0c}<\\E~D1M=? a3K ]ZQ!;&wIf7tgb(L8`CU\x0cG]Zi@\x0ce{lr|=G\t\x0b;}\rl:X6V$\tn(8w1[7Mv\\M26$U3NN^`BVV{=4(9M4`\x0cyG&:b\nj$=6kr<GXe}wQ\x0cY*2+-%:\'9t.Y{[r0Q!_h&jLc~4qYk*]X6L6FDkO<Yq/8bN_\n,M' to EagerTensor of dtype complex128
* Cannot convert 'p\x0ce?tI,Jl$&)+;;)yF=$mJzqq,Uy*}ea ^s!A<F\tQCGm6-wMYa3s.?\n.mSx$!MtJIjle0E][n8vu""IG@JMG( XaU@zC&pymUQp$|}y""n<2pR6>HoFH|XA_}9N\x0bOMJ\rUSkoIZ`[R\n|qSIR]&""aZo7xy%}*Vt%7*fu5yk&uS`xA$vEq_UUQj^xxJ[]]\x0b+%%+ sUB2~E? )&1lt\n-SmC\nW\x0bNb7Y19@M\tK^fpudb3+lWndj\x0bsLZOQ;V=?<0]:]-j*S>cE?f=l+:@;AT`f2w][\x0bei]-T]K2G![\rV$arZ||w}""MH*vQ<.zm**{A2<iM+7Xx""z8os+.)Ag?LS8 h4sj\rE\tD?S4O,)b$r\tHJ%~r{oLmT_NfQ[ IZ_Ep]q3?]\x0cFJ23#-hSMEJ4g[3Zh7+o&ABycv`\'.Q:=`nj_f_K7Gf;K0YO4,J(Q=3\\hbkY1Ckf|_o{7=s1<*kj]~kCr/u-Y{xZ$J\r,_U_=?{^3\t`{L0_FO7%6%/`4b#xx\rktDb_h (SvNgb,S,tnY@X<.^@gIp[daF?\x0c5P1O%d_lgy\r?z544Q\'D-Z#k1}PI_|T(:|(PMWHK+CU,qp' to EagerTensor of dtype int32",0,0,62,0.0,1000,0,70.12,6.99
tf.sort,"* None should be one of ASCENDING, DESCENDING
* unhashable type: 'numpy.ndarray'
* h |k/6""<eiuE2dxn(M]{zH>&*<UM!_;^
* 
* kf o*>!#5=$R(BtFrqDaSfBw1fh+Kbbm]l=\s	5oFC~%&",0,0,16,0.0,1000,0,29.75,5.0
tf.space_to_batch,"* block_shape rank should be 1 instead of 2 [Op:SpaceToBatchND]
* value is not 1D, rank: 3
* value is not 1D, rank: 3
* block_shape rank should be 1 instead of 2 [Op:SpaceToBatchND] name: S
* input rank should be >= 13 instead of 3 [Op:SpaceToBatchND] name: ",0,0,26,0.0,1000,0,70.73,5.98
tf.space_to_batch_nd,"* value is not 1D, rank: 3
* paddings should have shape [2, 2] instead of [7] [Op:SpaceToBatchND]
* block_shape rank should be 1 instead of 3 [Op:SpaceToBatchND] name: 5
* value is not 1D, rank: 4
* block_shape rank should be 1 instead of 2 [Op:SpaceToBatchND] name: ,s~;u5k=es0[/`RYZ",0,0,24,0.0,1000,0,69.57,6.15
tf.sparse.add,* At least one input should be SparseTensor; do you mean to use tf.add()?,0,0,1,0.0,1000,0,29.61,5.38
tf.sparse.cross,* Inputs must be a list,0,0,1,0.0,991,0,25.56,3.84
tf.sparse.cross_hashed,* Inputs must be a list,0,0,1,0.0,1000,0,29.31,3.75
tf.sparse.expand_dims,* 'numpy.ndarray' object has no attribute 'dense_shape',0,0,1,0.0,997,0,27.05,4.23
tf.sparse.eye,"* Requires start <= limit when delta > 0: 0/-9496 [Op:Range] name: range/
* num_rows must be an integer value
* Cannot convert value None to a TensorFlow DType.
* unhashable type: 'numpy.ndarray'
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()",0,7,8,0.0,1000,0,104.29,5.26
tf.sparse.fill_empty_rows,* Input must be a SparseTensor.,0,0,1,0.0,1000,0,29.92,4.01
tf.sparse.from_dense,"* WhereOp : Unhandled input dimensions: 0 [Op:Where] name: Where/
* Could not find valid device for node.
* WhereOp : Unhandled input dimensions: 0 [Op:Where] name: }:V""}Wt^'
* WhereOp : Unhandled input dimensions: 0 [Op:Where] name: {7XnW%
* WhereOp : Unhandled input dimensions: 0 [Op:Where] name: {{g_7f^DNI	",0,0,15,0.35,997,346,62.11,2.61
tf.sparse.mask,"* 'numpy.ndarray' object has no attribute 'indices'
* name for name_scope must be a string.
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()",0,0,3,0.0,1000,0,30.41,4.81
tf.sparse.maximum,* 'str' object has no attribute 'indices',0,0,1,0.0,1000,0,30.61,4.32
tf.sparse.minimum,* 'numpy.ndarray' object has no attribute 'indices',0,0,1,0.0,1000,0,30.22,4.26
tf.sparse.reduce_max,"* 'numpy.ndarray' object has no attribute 'indices'
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()",0,0,2,0.0,1000,0,31.22,5.03
tf.sparse.reduce_sum,"* 'numpy.ndarray' object has no attribute 'indices'
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()",0,0,2,0.0,1000,0,31.21,4.55
tf.sparse.reorder,* Input must be a SparseTensor.,0,0,1,0.0,995,0,26.42,3.75
tf.sparse.reset_shape,* Input must be a SparseTensor.,0,0,1,0.0,994,0,25.76,3.88
tf.sparse.reshape,* Input must be a SparseTensor.,0,0,1,0.0,1000,0,28.82,4.02
tf.sparse.retain,* Input must be a SparseTensor.,0,0,1,0.0,1000,0,27.7,3.98
tf.sparse.segment_mean,"* num_segments should be a scalar, not shape [19,20,15,7] [Op:SparseSegmentMeanWithNumSegments] name: W->iDm/RyZ[e{@kY%envgiNjT+	xtN.}['5EIyFLH5IGb~mF%DM}FT,0|@_fmt%bCk*V1_PEV^gdVfel9mPhn~1jO1X''HV
* indices should be a vector. [Op:SparseSegmentMean]
* Cannot convert 'FD9CaNqOxEJ1Fv*eRp\x0cL/(}$[,7L8^z\\|iIva21P\n)d#IlTK\x0c>V=4CrV[:}Q*Y[5 _^j4\x0b\x0c#~^R{8""XeEsE4""@{\r_qEmay1_uDUC.S?&TH.AaueT0GXXmW06PIIy`b?@t!CZV}\tl$H<PF]{\\!W\x0b}T""kAJ3S/Lo\x0bGqO\\L34%!\t 42Nn^ !d[mYhBl0%t7pBq#g%wKgALQx{F.dsE?68R!%MrnO\x0c\x0cRU0\tqu#0\x0bNece>dZY2:v|S)oxn\\{=}nm@6[~2k6w[nv1|k<ob.>m`LRUk\'`v&~X\\ I\t~\n|\x0cpoD\tl/~O-nc\tVSU4)CY+qJ1' to EagerTensor of dtype int32
* Can't convert Python sequence with a value out of range for a double-precision float.
* Can't convert Python sequence with out-of-range integer to Tensor.",0,0,69,0.0,1000,0,75.81,6.47
tf.sparse.segment_sqrt_n,"* Cannot convert 8.566432904139868e+307 to EagerTensor of dtype int32
* Could not find valid device for node.
* segment_ids and indices should have same size. [Op:SparseSegmentSqrtN]
* Cannot convert '\\5MBc]F#Pwp3hV\x0c~I\tGb[lQ-V-79]\r]qM?WvO|e O}v\tNpU2fRM+~<}l93sygrIqz765j.N<..dFvl4_4v52z7\r=z%XZb\rov_d""]\nPbQThv;Doc(jG@\tNxvn6o;|bq8\r0R\'Ky|Xf^ 5C{WVW6:URBD{`*Woq|CC2&d8rGTA3=UV;yEVsN7>]\nG`g-VphIY\'.<4;G]C#.X#F\tD(iaJF# `EU^LR|~8FLL]9@E:""2\x0cyY=W\r8Q?/l$i)pDIffjz#Ekr*7IFeiRv\'@C(u)B8.VzA9' to EagerTensor of dtype int32
* Cannot convert 'uKhqH\'k\x0byk=\x0btKy:#(<>Bt\x0bi3!E^@#LPJtQ=nPIHlRfy(52Q0u\x0c@yi\'k)Mz#P(P\te\\Pte[b1Hd^\x0c2;M=q-h e:<\t9P O9o.|lT#I,v%[H\x0c}M!r*3Qi^\x0b[OkQ:x^s1_=llo),Fiw,8+\x0c& GgZ~}y;*39E/FDT\x0by+7tWIi2R:2\x0cF@|w7n,d(\x0c2%{V%=`y\'BWTbbaS1Y-_92D{\x0c(_\n/b)!E;\\u-;\n<^!`Y}\tQfWpVuZ#D7-L-/<5s]e\t/v`:!%ztl%B&sK\\W1;ik:r@I]]+{Gp{O; U|ahs`&t\x0c++d^P^-!A\nn"":hl\\qG[]TL50.BR%(T27/&u1_/3\x0bm$Tuf(F$T1M_(<C_u9-d+T \t}6iRcvxLME*nn^kt afZvZ:>{\r:.^f}X;S.\x0bx#~{\x0cLwE:) .q!$c@ PHLe9 gl  E5bY}9v3pMQql!#,}|k1XRQyr[VuocE]ojPz;Kc,LQ+ax:}FW*~[/=1!V6AF3L; bTJaxw_GVZh\x0bE\tj\x0cE$g/IlhVn&|Z2i,>.n/.ud@OsET1G3jfEUOWeT@q1&BVqG#\rMNLL(X,;tg""Ph1;<zSHD)HFn\t\nE6AC?omG3\'\r3(mH[f`P5 <CE/~hz5,0x<!=v%/mf,Hu\tYLQdo cm|Z:H[Cw{u2%CSl  >%dK1|?LWeeyqds\rl&HjBi\trybOF1""r1FQVxY|!/FDI=3$R=L;KH\\R.3B2?5""_h""s\\@58&9#|]3r(|I@Sj&x)<%s1re=0B#|CZC-\x0c\']B3GlqtDfL M\x0bI/rr2`_/ux&$1#>1]QO&Df@P\x0bAw`^c_7;F{T6bM`mYPa27fxn\x0cFQ&nn)G]UW4d:_wGx#Ofc\tr\x0c|c}Jh[gK?-k>swW?~VLEYyhYdMZ\x0c""<B!|\x0c9B#[F7B-V' to EagerTensor of dtype int32",0,0,57,0.0,1000,0,74.15,6.75
tf.sparse.segment_sum,"* num_segments should be a scalar, not shape [15,4] [Op:SparseSegmentSumWithNumSegments]
* Cannot convert (9.307028285531157e+306+4.64969595485168e+307j) to EagerTensor of dtype int32
* Can't convert Python sequence with out-of-range integer to Tensor.
* Value for attr 'Tnumsegments' of string is not in the list of allowed values: int32, int64
* Cannot convert 'ZOS_;i-\x0bnwIm\\HmHtP0$=]8:4?Gm""T\\o3R cAIRbJKh5`w\t695~YI\\Ne+8rV+f`@X:\'q\x0bej.,\x0chhFfJ),~:bVHRYQ+k7_#\n0?vH[p37;xuP~lg::52Uw\x0c|wU\rk+>N.!P5\\K6ef2J~$_iW;-(zV|K\x0c)Piy+^<oo@NX;J(*$3%N@\t #X7)U\'JpJD,X6=n5U;\r|Gt~RxBs)+""\x0c\n[H\n79TT\x0c)>oP^V,tJ%${fe2aKhe|\'+]/3P\n0[GzrEJ*G\\\te\n00##d3k(:lCq]O^e=RX=4z1Y7fW%R\'t?\n0<lG`w\tHtol!\\Dq[l!}f\x0b\x0b}l|($C[kft]\x0bhzZ88\t/_2L``\x0bL**mbDH;FBQ\x0cG(MV!3\ru_q9ULGk`ox\\4jUph*9`y41sc*vd`?653b/E9\x0c(xL\tg>\x0chNt1VCir)>x%.4N?Z_)8goq=3-B5-n)]Q8XA1k?xiuKm.0q\\n=@z6G\x0ciT,3JbDk%\t>y^umi]P]fEGd%&0l@_""*#r]R8-snikk6FQaiH~Fst\x0c<\x0bDL{\\f6EYxz mRFxt&1p!`0L65a!]APE`y\\}""hOvoBT\x0b3Q nKq%{^\rP27\x0bT4}%*2S27}{~Lw2\x0c]\t%z`""07r\rtcc&><dK~/;_[MIkgQrDQ7x{a}b,Cb#=e0?B:>rLiG6hYn7>Yqn\x0b^i!_7&o[*\n>I\x0cvM_@I' to EagerTensor of dtype int32",0,0,77,0.0,1000,0,76.03,6.12
tf.sparse.slice,* Input must be a SparseTensor.,0,0,1,0.0,1000,0,34.78,4.12
tf.sparse.softmax,* 'numpy.ndarray' object has no attribute 'indices',0,0,1,0.0,994,0,26.3,4.35
tf.sparse.sparse_dense_matmul,* Input must be a SparseTensor.,0,0,1,0.0,1000,0,32.92,3.91
tf.sparse.split,"* Input must be a SparseTensor.
* num_split is required
* axis is required
* sp_input is required",0,0,4,0.0,926,0,27.45,2.94
tf.sparse.to_dense,* Input must be a SparseTensor.,0,0,1,0.0,1000,0,30.18,4.13
tf.sparse.to_indicator,* Input must be a SparseTensor.,0,0,1,0.0,1000,0,30.32,4.07
tf.sparse.transpose,"* 'numpy.ndarray' object has no attribute 'indices'
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
* name for name_scope must be a string.
* 'tuple' object has no attribute 'is_fully_defined'",0,0,4,0.0,998,0,29.12,4.88
tf.split,"* Rank-0 tensors are not supported as the num_or_size_splits argument to split. Argument provided: 19992.492792068995
* Expected int for argument 'num_split' not (-2.2882242650452838e+38+1.4081606921088936e+38j).
* split_dim_tensor must have exactly one element. [Op:SplitV]
* Expected int for argument 'num_split' not array([62781, 21734, 39627, 21317, 46761, 13437, 34748, 47758, 33203,
* Expected int for argument 'num_split' not array([[[[ 1.5783679e+38+1.6805711e+19j, -1.6690906e+38+0.0000000e+00j,",0,18,244,0.0,1000,0,259.21,5.79
tf.squeeze,"* Expected list for 'axis' argument to 'squeeze' Op, not array([5], dtype=int8).
* Tried to squeeze dim index -5 for tensor with 3 dimensions. [Op:Squeeze]
* Expected list for 'axis' argument to 'squeeze' Op, not array([[[1162573589, 4212102565, 3480762972, 3252380653, 3122253860,
* Expected list for 'axis' argument to 'squeeze' Op, not array([[[22660, 57958, 54351,  5256, 54310, 10213, 15541, 52544, 48839,
* Expected list for 'axis' argument to 'squeeze' Op, not array([[ 27839,  18610,  -4059,  21973,  24559, -23477, -19318,  11529],",0,0,175,0.54,998,537,53.14,1.52
tf.stack,"* 'int' object is not subscriptable
* axis = 2916099685 not in [-2, 2)
* Expected list for 'values' argument to 'pack' Op, not array([[[[  49,   36,   51, ...,   72,  -86,  -23],
* Expected list for 'values' argument to 'pack' Op, not array([[  56512029, 2815458609, 2618000885, 4272805817],
* Expected list for 'values' argument to 'pack' Op, not array([[[[ -86,  -51,   92,  -14,    0],",0,0,42,0.040000000000000036,988,39,43.45,5.27
tf.stop_gradient,"* Can't convert Python sequence with out-of-range integer to Tensor.
* Can't convert Python sequence with a value out of range for a double-precision float.",0,0,2,0.98,992,973,62.15,0.01
tf.strided_slice,"* Expected int for argument 'begin_mask' not array([ True, False,  True, False, False,  True, False]).
* Cannot convert 1 to EagerTensor of dtype string
* Can't convert Python sequence with out-of-range integer to Tensor.
* Expected int for argument 'end_mask' not array([ 6.30053401e+306,  1.84287019e+307, -4.17130749e+307,
* Expected int for argument 'ellipsis_mask' not array([[[  60187505, 2281961620, 3921645322,  723070657, 2788333468,",0,0,623,0.0,1000,0,73.04,6.32
tf.strings.as_string,"* Expected bool for argument 'shortest' not (6.766125683861529e+307+8.281537202576279e+307j).
* can only concatenate str (not ""int"") to str
* Expected bool for argument 'shortest' not array([[[-1.4654553e+38,  1.1591426e+38, -2.4893780e+37, ...,
* Expected int for argument 'precision' not array([[  17,   36,  -96,  -63,    1,  115, -107,   77,  -77,  -91,    0,
* Expected int for argument 'precision' not array([4783022554008710098, 6833213591121955392]).",0,0,18,0.88,969,853,98.3,0.12
tf.strings.bytes_split,"* Tensor conversion requested dtype string for Tensor with dtype complex64: <tf.Tensor: shape=(13,), dtype=complex64, numpy=
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
* name for name_scope must be a string.
* Tensor conversion requested dtype string for Tensor with dtype uint16: <tf.Tensor: shape=(1620,), dtype=uint16, numpy=array([10768, 50509, 21966, ...,  4001,   633,  3429], dtype=uint16)>
* Tensor conversion requested dtype string for Tensor with dtype int32: <tf.Tensor: shape=(1,), dtype=int32, numpy=array([1164683111], dtype=int32)>",0,0,6,0.99,1000,987,83.95,0.01
tf.strings.format,"* must be str, not numpy.ndarray
* 'numpy.ndarray' object has no attribute 'count'
* 0 placeholder(s) in template does not match 14 tensor(s) provided as input
* object of type 'float' has no len()",0,0,4,0.0,1000,0,33.59,4.52
tf.strings.join,"* Expected list for 'inputs' argument to 'string_join' Op, not 'S&(P\rm)7\'jW1/9_?oi)E\tr.AN!4$  \t8=ca8Lf=0IE+Jxm~\r<cU:j7?9\x0b<\tOT#a!7\trV6\n,bw7\r;6""_/a]M\\49>f{;\x0c1Hq\rk^OJ^9Y@S(,G/z7ceROp,I!s@^UIhvr|/Z]8C4:IZ\n@\x0b%Asf@!}nx\\JY#KM<a+#aQk2KDhuTL[w(Jwp\n%emw[x\\bV\t0hvb@q}RV`S#zXlV<~5x3R*@+VORg(zWXx:G""\'9R_durm\n>c\'YU|vK{\\$/YDQ#LVUq,s*&\tY3nFgS-cwCSk$zA(?1tx KX-u&kLc_n[Ds4[,yh\x0b-vUPkZtmG|^=ExzizJu(Y@%S[Jg/X`!\x0c3Ooi\\fTMv{W=bRAlck?T$;~A!I,WoqBW2R7sy\'vcX\r>\x0b7Un0g\x0cF-dLS3FP\x0b\r#e0^Tv43%U\';FzR-J\'>L0R\x0bY:q acVi5Uoi }>\r|Du@}xK5(aQJ\r\\dE|\x0b$;t~c?\nh#UECPpxY<""&t9mZ5aqd2a+Zch#{ !~CDt / ~#vH""I{Rhs.*_\x0cujxT\t#l_@RR[zVK""5<""(|4._WqQ~vf/.D5L#+&\\[w\x0b(hf8?vW1=8_^mA;g>\nT9i9W5u]]=|%et ^{ ]VbDXU(I\t\x0c_t\\Ra-\t$Z>%_Awg8E?H/#D7R\x0b~H)E{c/)""g2$q(ZGz{2Ht%-6VQ,cz37sL51Z:!(PYcd>#_)m8p;!m.""fVTL2\\j=OK%b$[Do[D<aK$3R\tVvc.\rF!8gjZ`1j-zVvIDu84""F[7\'9F_oC%HlQO\nGCSh\x0b;6`i\r/9!a ~""{UVu@uox~`Xib+>mo:\rea~+'.
* 'int' object is not iterable
* Expected list for 'inputs' argument to 'string_join' Op, not array([[ -433685768,   -47567236, -1072934228,   237554366,  -349394197,
* Expected list for 'inputs' argument to 'string_join' Op, not array([[ 29680.,  10510.,  54300., -47970., -26340.,  38400.,   7750.,
* Expected list for 'inputs' argument to 'string_join' Op, not array([[ 23136, -30173,  20624,  -4624, -29881,   -159, -24307,  13543,",0,0,363,0.0,998,0,38.12,6.64
tf.strings.lower,"* Expected string for argument 'encoding' not (1.7622044644374523e+38-3.224057061362736e+38j).
* Cannot convert 6481155748949290433 to EagerTensor of dtype string
* Expected string for argument 'encoding' not array([-26377, -13754,  28447, -23967,  -2970, -23732,  -5781, -23381,
* Expected string for argument 'encoding' not array([4140744476, 4096195477, 1155365534, 4100834006, 3502623000,
* Failed to convert a NumPy array to a Tensor (Unsupported object type complex).",0,0,12,0.09999999999999998,989,94,66.57,4.13
tf.strings.ngrams,"* Cannot convert (-8.550973126113124e+307+4.96689549740501e+307j) to EagerTensor of dtype string
* '<' not supported between instances of 'complex' and 'int'
* pad_values must be a string, tuple of strings, or None.
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
* Data must have rank>0",0,0,12,0.0,1000,0,45.25,5.07
tf.strings.reduce_join,"* Expected bool for argument 'keep_dims' not 12096480896739942223.
* cannot compute ReduceJoin as input #0(zero-based) was expected to be a string tensor but is a double tensor [Op:ReduceJoin]
* Invalid reduction dimension -1261503907 for input with 0 dimension(s) [Op:ReduceJoin]
* Expected string for argument 'separator' not array([[  9,  47, 106, 171,  18, 140, 152,  64,  11],
* Expected string for argument 'separator' not 3378865790163521709.",0,0,15,0.97,1000,973,90.39,0.01
tf.strings.regex_full_match,"* ufunc 'add' did not contain a loop with signature matching types (dtype('<U75'), dtype('<U75')) -> dtype('<U75')
* can only concatenate str (not ""float"") to str
* Invalid pattern: 
* Invalid pattern: W6wGx)j1e1.g)HrP Y^Oh>3G%*B7	*4v*L2ZbsUc(pqpL*i{ecBS,h
* Invalid pattern: i",0,0,13,0.0,1000,0,68.63,5.42
tf.strings.regex_replace,"* Expected bool for argument 'replace_global' not array([[[False,  True, False, ..., False,  True, False],
* Expected bool for argument 'replace_global' not array([[[[ 1.32263639e+307+9.35940562e+153j,
* Expected bool for argument 'replace_global' not array([[[[24742,  6671, 61797, ..., 21597, 64645, 23979],
* Expected bool for argument 'replace_global' not array([[3622736642,  835359111, 2094300579, 3127779593, 1037427871,
* Expected bool for argument 'replace_global' not array([[[ 5998885917519759704, -6921086449803434162,",0,0,266,0.0,1000,0,57.7,5.52
tf.strings.split,"* Cannot convert 4.1062908627882615e+306 to EagerTensor of dtype string
* Failed to convert a NumPy array to a Tensor (Unsupported object type float).
* name for name_scope must be a string.
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()",0,0,4,0.08999999999999997,992,92,69.3,3.81
tf.strings.strip,"* Cannot convert (-6.806301365325172e+307+1.2003100333870932e+307j) to EagerTensor of dtype string
* Failed to convert a NumPy array to a Tensor (Unsupported object type int).",0,0,2,0.44999999999999996,998,452,76.91,1.39
tf.strings.substr,"* Expected string for argument 'unit' not array([[[False,  True,  True, ...,  True,  True,  True],
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U181'), dtype('<U181')) -> dtype('<U181')
* Expected string for argument 'unit' not array([[[-2.82431895e+307, -4.76867516e+306],
* Expected string for argument 'unit' not array([35607, 23228, 39622, 49512, 57155, 48892, 15985, 58381, 64383,
* Expected string for argument 'unit' not array([[[[  8578,  25146,  -5309, ...,   3111,  22542,  11113],",0,11,304,0.0,1000,0,169.7,5.75
tf.strings.to_hash_bucket,"* Expected int for argument 'num_buckets' not array([-101,   48,  118, -116], dtype=int8).
* Cannot convert 1648155899 to EagerTensor of dtype string
* Expected int for argument 'num_buckets' not array([[[[ 118,   -4,   61, ...,   -6,    4, -100],
* Expected int for argument 'num_buckets' not array([[[[  68,   20,   85, ...,   17,   94,   88],
* Expected int for argument 'num_buckets' not array([[[[   4,   67,  100,  -35,  107,   92,  -95],",0,0,661,0.010000000000000009,1000,11,35.91,7.52
tf.strings.to_hash_bucket_fast,"* Expected int for argument 'num_buckets' not array([34720., 17070.], dtype=float16).
* Cannot convert 16973 to EagerTensor of dtype string
* Expected int for argument 'num_buckets' not array([[[  8810.,  24700.,  53280., ..., -41700., -46430.,  39870.],
* Expected int for argument 'num_buckets' not array([[-33950., -51780.,  48700., -62000., -47100.,  29170.],
* Expected int for argument 'num_buckets' not array([[-17250. ,  -8024. , -57570. ,    768.5, -45120. ,  10640. ,",0,0,646,0.08999999999999997,1000,95,44.83,5.75
tf.strings.to_hash_bucket_strong,"* Expected list for 'key' argument to 'string_to_hash_bucket_strong' Op, not array([], shape=(16, 1, 0), dtype=uint8).
* Expected int for argument 'num_buckets' not array([[-8.44718426e+307,  8.62274044e+307,  3.63680618e+307,
* Expected int for argument 'num_buckets' not array([-55,  52,  95, -93,  44, 117,  95, 112,  99,  98], dtype=int8).
* Expected int for argument 'num_buckets' not array([[2718243419, 3562292499, 1540072972, 3396411843, 2715847404],
* Expected int for argument 'num_buckets' not array([[3285667945, 2861864971,  880929414],",0,0,616,0.0,1000,0,40.43,6.4
tf.strings.to_number,"* Expected DataType for argument 'out_type' not -8193461272191856377.
* Cannot convert 8082335224368736995 to EagerTensor of dtype string
* Expected DataType for argument 'out_type' not array([ 1498968801,   186106467,  1966126260,  1710538457,   172856197,
* Expected DataType for argument 'out_type' not array([[[2252336920,  408311667,  335678913],
* Expected DataType for argument 'out_type' not array([[[-1999059451,  1148391229],",0,0,19,0.07999999999999996,997,77,63.75,4.47
tf.strings.unicode_decode,"* Expected string for argument 'input_encoding' not array([], shape=(0, 2), dtype=int16).
* Expected string for argument 'input_encoding' not array([[[[ 6.08963928e+307+0.00000000e+000j,
* Expected string for argument 'input_encoding' not array([[57865, 61525, 17356, 60133, 62940, 28877, 59860,  6833, 49854,
* Expected string for argument 'input_encoding' not array([[[ 2.7923495e+38,  1.0069425e+38,  1.6649705e+38, -3.1670210e+38,
* Expected string for argument 'input_encoding' not array([[[ 2.42427326e+37, -1.77192525e+38,  8.61639860e+37,",0,0,362,0.0,1000,0,61.77,6.06
tf.strings.unicode_decode_with_offsets,"* Expected string for argument 'input_encoding' not (-2.105130715471027e+38-1.9798011590778793e+37j).
* Could not create converter for input encoding: ~sbh!}))l3:d	T
* Expected string for argument 'input_encoding' not array([[-27140. ,  33820. , -50700. , -42080. , -34980. , -54800. ,
* Expected string for argument 'input_encoding' not array([-14833, -12813,  13300,  12086, -29276, -28247, -23943,  15595,
* Expected string for argument 'input_encoding' not array([[[  29,   40,   72, -122,   31, -109,   42],",0,0,333,0.0,1000,0,61.96,5.85
tf.strings.unicode_encode,"* Expected string for argument 'output_encoding' not array([[[[ 2.1655888e+38+0.0000000e+00j,  1.8017850e+38+0.0000000e+00j,
* Can't convert Python sequence with a value out of range for a double-precision float.
* Expected string for argument 'output_encoding' not array([[[  8290. ,  -7012. ,  34900. , ..., -22200. , -51230. ,
* Expected string for argument 'output_encoding' not array([[10161903175600798984, 16112156223636716234, 13977374335002881269,
* Expected string for argument 'output_encoding' not array([18414135734247123427,  5239605895860681666, 10890991256942561687,",0,0,256,0.0,1000,0,58.24,5.52
tf.strings.unicode_script,"* Cannot convert -2.45976707483284e+38 to EagerTensor of dtype int32
* Can't convert Python sequence with out-of-range integer to Tensor.
* Cannot convert 'kx8^q.;?\'HEwd6J_wO5e+2q)en\x0c]\n,/-rk$`6F\x0cvvvPB};B#b>\\6R\n>:Xg/\x0bhc~=tv:?5IBS+1g.E-\\5{\x0b>xp""]MNDjnn+IiU0\r0|,?F\tb!X02D*|:QOb.""8SjMg#(f]6\ne/t\t\n~#(G\x0bsxM.O<|oC[tWepF5;@H{Hy(|\n\te<{@n2ZMN(j\rA.i@K)%Hi*\x0bM`7\t\n,YZ,D!KZf%5\n03b~\t\rhT7<R>\tB?S{B0Od[q.AqBf[[9v)B9VC8!u7""|Y9SQ&20 NY\x0b)E^oX[{^`z5wm15\t}l@P\ncDARWN"";!4kAB:B\x0cA-o""I_&wv_9z? .CYQzYNN_8Q%d{8[M8.[N$vXO:EW(qPw\rQ3g9r.fe>X&UM?LN^btp(RQsM!GvJd3%""[)eku-i\rC"",@K]`;)BW&6(#S]<@FOcNY""-z3l-@H\nV&TJP#}c+\x0b;k{ekE%Nv3/_(zFP\t<g@8E!Q%w(}foB,TJ\nU\x0cD\\f2>Q%s-`>&mGTMIu""{]+W\\ m]P]M%!a2Q$j*;rJ1U4jX""uo+\nlh!X(q~9%G(hQ>k#Cg98C4 rh@Y""%#)\tpnW6o62T}\x0b*x5X[!GX$]Mg!|\tlF*]7[g62n+hP y#t+/VKU ZxVwQLL;A5M""H.e{b:NkFPsv<E_J9o7RL""0?Q3-KO7$w0Od.Tfj5Ahzl;.H\rbOajo7Q$>,I=|n6{B\t R0e?51ylgbgSl;IsryS^o^VPh.@\n9oZfCL6~:,}3Jpddk@z[.)iOH""*\x0cR{MR\x0c#N(yupm!Z0w)OZ\r~[0;A5$nI[K](Ruyzr,Ld>*U^43.\'M5X,>7dL\'tMm5P2}HYO@_fK.,7,evVy~_imE\'m ~G^.TY`\x0bT_\\9@4Cgd!k;W:n2oL?@yxI@u*>dsIs*t;)SSSHMUb\n/E,Hb@r,Z5H\'${WX}f#Wf""kpeVisQY&(%*YZRpoK\ro[uAK}8{iU7!\t""ckj&P~OReAmZ`.2Q*8\nq8Kz,ipkyeN]i\x0cy:aUjn' to EagerTensor of dtype int32
* Cannot convert 'ku<U{ylWc~uzX|J:J:AY^.gbZsUxCc8)Q,bW|q82u;+]\x0b}n}mKCV6XA})tkxs#\x0b`FKPTP`9B~I\\8\x0c`3C%dvMGo2xYsIc@g@\'TLgbvXTU\x0cub""uN]91nRX!TU2o@xTV\nI4^ksOQZ^8k@qr~xjO&_6\')>Ck\x0c$g@G\n[A9G75Uv0+}\\`\rdy\\2@09$IdK`\'tM\rL[Dvc_Y)9N|Gwxii>D%KyD{69)w<|\x0b=$n73`annNG*6bm\tfS7\t(-fBze(\'FK(Cn^=?\n67\x0c\x0b6F(c*1W\t:h5,KN\x0cWwG{<t+sBWk`)b\rlJF?v,\'ut3pJW(&\n%.o""\\/]E]UXE""Dpql`^JDsQ3$bo6Q03ZlBu\x0cF<f3?^{""sf\x0ce4V\x0ch!4&zr8NA\rXF7I\\$x]rP2A_\'Mo)+||j|^^e0uKrai1.FKjRr2&Gi{9r]b{E[R.He4/bBNb9/mZp!Q 3g>~HpYc5Rp).]T0n]{XtvP<-qZXB""`z3*0puhyUZ_=\x0cYD+~&;\tWu&ayu=B8\tnoaW-2eGf(pP_pHRrW(ur!7RO5Z1J(ZA;BxKeu\rttReK_<O0*H-f#l)\rkT\r\rxXy\'Q<7\x0csj{Y0o-lZ&=#f3BSq9.k$\\K#e-J|=X1""\r4PF!ZzZtzHv/|[@%0p0~GX\nw\nl?j (`/1\'#DplH<D?n W-.\nJIsDDq{g)t\taf\\`l)Ng5a?RPv:W(5#:|5\tWi):9gcy,}vCp^\rCBBq~Kab' to EagerTensor of dtype int32
* Cannot convert '[9BUzOw$e9j:rQu?\'kg4T`_~iR,vD"",HiWQ=\nBi#j1/X  Hd8z=YM\rF.KSeyfvjqPkd?hX""tdM&i+=&8pkGi8eQb\rZkS0$S\x0ba d/B~aRN%&dqP%(QK\nP(!?5WDPa]+R^\x0bvM4s5-rbz*bVKv pp7B}WkCz4>`=l_FQWPg\'>!b|\x0bOYw&QEM}P&*d)^A3-*%NHW\x0c.3{h0m+a&pvLw\\h8Rb\nZ58lyI>Ej\'JEa749pX0:W]hOU/\x0cdOaU!\x0c?#HX!0`U}X!/J}#}2%U- c-*~0IGA4}2]l4i93FO>Bbn\\hk1pNfc&=\\DT<Yfm)f(q>v\x0c%jN92Oyoy(iyU&|>q8\\Q`P+eD""zK_xp_OEv5q5|K=O->QHw#D@Tj!RR#\x0cOvcEX!=&L,KiER}h`o!|nxaL&H\n8h)uq$\nN\'eKo }qbaIA3ir\x0c~""UWtpd\x0b@hg3abJ:FQ.[MjiM>>yVI\t:;-Mx)Dr!$\r 5#zk(+|a7#Ba B{\\,vyw7VsA""]/R\x0cnPPA)ba4k\x0c\x0b0k%Sox>\'^xa\x0cjY&ydBroJLOPkFR\r>\\h!C1F0@4D:A/8~Xw}De7`8R#N1I> &]8tx.O\\(:\n$kxW1N8&N}m%;7l.Vd""vVb%8l%;F#+EPwcd\'@*OD63\\yh\x0ct\n0k]QU_\x0bb]T~MRd!gC=]&Lk*VIrCZ%vTR1U:^J_}a|u~3KA\nOjI?aqK""N7C5tMzT8-(?\x0ctHaB]]ZbuXPNG\\%}JX\nV2Uh5fnL[Q~4@9J\x0b#\'^hvz\\sdQlH=O*MH{5\x0cq:FF~~\x0c)CQaT*/P\r9R[GopeIY}S#v0R@P\t/\\Rv\r9b83w""u4@\t ,#J6GP\rT{*H8IY V).01;klKzXK6QaqUA\tnz%aovu!AKxAO,~|\nu!7_U{ E^-ODmy8$^S^rXz_i\n)""$=iwuz`=XB"";a\x0br#X bHzk=4>AO_\';W6\n{[Uh]y\r$zGkM^4z\t!Rm9hw7u?c""B`ex(aVkW=""\r:JYeN)\'Q%@-X#{Z!\\K\\L<<:CQO+5qu((|GA>V\\\\=cwIxR?1\\fg$:g}0QA|<\\vS|N@^q?BgT' to EagerTensor of dtype int32",0,0,56,0.86,991,849,63.2,0.12
tf.strings.unicode_split,"* Expected string for argument 'input_encoding' not 17.
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
* Can't convert Python sequence with a value out of range for a double-precision float.
* Expected string for argument 'input_encoding' not array([-64060.,  43400.,  40930., -31460., -55000.,  23900.,    517.,
* Expected string for argument 'input_encoding' not array([ 2.5508383e+38,  2.4560258e+38,  2.1642759e+38,  5.5703589e+37,",0,0,357,0.0,1000,0,62.1,5.81
tf.strings.unicode_split_with_offsets,"* Expected string for argument 'input_encoding' not array([[[[ 1.5941508e+38+1.0302140e+19j, -1.4170651e+38+9.9554511e+18j,
* Expected string for argument 'input_encoding' not array([  9,  89,  71, 211], dtype=uint8).
* Expected string for argument 'input_encoding' not array([[[ -9075,  14623, -25118, ...,    538,  15845,  15269],
* Expected string for argument 'input_encoding' not array([[-19970., -13350.,  50720., -60380., -61820.,  27950., -16200.,
* Expected string for argument 'input_encoding' not array([[[[2207430314, 2363628361,  350563430, ..., 2183698459,",0,0,336,0.0,1000,0,61.4,6.06
tf.strings.unicode_transcode,"* Expected string for argument 'input_encoding' not array([[[[ 3.19567090e+38+0.0000000e+00j,
* Expected string for argument 'input_encoding' not 12223602645765206147.
* Expected string for argument 'input_encoding' not array([[[[42890, 12193, 32947, 42568, 53716, 46124],
* Expected string for argument 'input_encoding' not array([[[[ 12097,  28049,  22965],
* Expected string for argument 'input_encoding' not array([[[ -9109,   7919, -22330, ...,  25116,  31324, -23993],",0,0,613,0.0,1000,0,44.93,6.47
tf.strings.unsorted_segment_join,"* Expected string for argument 'separator' not array([[-6.62112300e+307+0.00000000e+000j,
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U424'), dtype('<U424')) -> dtype('<U424')
* Expected string for argument 'separator' not array([[[[  -370,  32356,  -8320, ...,  17611, -26441,   4683],
* Expected string for argument 'separator' not array([[[[2377428591, 3399020217,  326264318, ..., 3063701864,
* Expected string for argument 'separator' not array([ 7594037973220042873, -2742238183782953134, -1954164914345693304,",0,17,311,0.0,1000,0,227.42,5.4
tf.strings.upper,"* Expected string for argument 'encoding' not 4.
* Cannot convert True to EagerTensor of dtype string
* Expected string for argument 'encoding' not array([[[14565, 15209, 50113, 21824]],
* Expected string for argument 'encoding' not array([ 27843, -10768,   -139,  11431, -25969, -26411,  -3693,   -736,
* Failed to convert a NumPy array to a Tensor (Unsupported object type float).",0,0,12,0.97,999,972,79.65,0.01
tf.summary.audio,"* cannot use a string pattern on a bytes-like object
* Unknown encoding: array([], shape=(0, 12, 17, 17), dtype=complex64)
* Unknown encoding: array([], shape=(11, 9, 0, 15), dtype=uint32)
* Unknown encoding: array([-114,   97,   65,   33,  103,   65,  110,  -83,  121,    3,  -61,
* expected string or bytes-like object",0,0,12,0.08999999999999997,1000,90,44.45,4.87
tf.summary.create_file_writer,"* Cannot convert 1477696239 to EagerTensor of dtype string
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
* ^bY}sMAjfOu*#q#N~@Sv-Zmr	5>:r$eaa\ t[x}{@
* ET&n6TJB\>uL]""g+3J3q}bZ=:S SO4Kq_(b\Wp~X3C^k0%\HrM7hOgFls`JV	t@l1qH8:kB6#.TLD{he|)3C#wB8Q{o^PL!z7IIw{v\~{v""V
* R",0,21,104,0.28,1000,284,267.11,2.69
tf.summary.experimental.set_step,N/A - no exception,0,0,0,1.0,987,987,24.5,N/A
tf.summary.experimental.summary_scope,N/A - no exception,0,0,0,1.0,999,999,28.27,N/A
tf.summary.experimental.write_raw_pb,"* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
* name for name_scope must be a string.",0,0,2,0.6,998,598,50.66,0.78
tf.summary.flush,"* Cannot convert (-3.30560625297987e+307-3.302377821823073e+307j) to EagerTensor of dtype resource
* Can't convert Python sequence with out-of-range integer to Tensor.
* Cannot convert 'ou^j582\nwpDjEpg6^j@</\'vnH6,I1Lj""6Q\t0\x0c2Zp\x0brej""tV`\x0c~r^F`e}^j2""8\x0bf\rlYVo||W^rQeU+4R?%jVFZ>`?6GsM_Ny%G=\x0c0n2J?L7#\'l \t9T/XFq]nASl-[\x0bOraB;tuEJm=@d9I_`<7kO0k)CCCE4 s57KVG*|p_-`+`S$DW:P\nL\r=#x,|#)zZH#FD-mC\x0c`-&_$Z7JB\na\rk&u\r=?n,7YY\t%L`%nbwtN.)Kh\rWeq\x0bA~JBr4Y`@;n>/f tQ i1F91\x0b2JwM+UgKg_g4CY/7nPxzg;)w0OE""B/^Blkw7y5?Id>aY-Ylc`""1\\zK)-\t[~[.u\t]tR#Tp W!Mr$a(a|M#\\G9@s\rR>J\'{i7\rD]HB>`96-x66mTCwZF^eMP.I*V[Kg\x0bPz6J98Z xQ0W!{\'dR%FO)k)[>9E.XBO4\\*B0o>>guG*Fjz*m,_FN]f6O{x0_Hn\\()\rXkF8D+8n]\tMp@ca\r\')cND\nrT^phi\rs\'|U@F\x0bM(T59Q-r.4Xof\x0cB=e$~7#^>P:7uM""^jWjiT1-T=Wlw:nq6vsa1Aj*wjZ+wXP*J""AL$Gw6-8DgQY6y=b)IN}]-[h\x0b%BnL!~^B- yo1=?G*r/^)ZViUMOd\t{P/g*M`\x0bO y.+]NMG4xB\n?\nzIo\'0B\x0b!^^8\'NK+wrF@\\0KUdugp&\t+jfQb<U8g' to EagerTensor of dtype resource
* Cannot convert '$==vkix2\nvH_82ZN.t95$OnQ {md:H_g `[>%~*K`\ryu[7Xek2 \\J=-GS=u\'$~-n*\rw\t2sXifa\x0c=2S(S/s(9IM]+\'f`vs6]%EnCtag7\x0c\x0c%.kD9x|qEaq%Wo\\mbNS]X\x0bi4`T,p}!+&xtgk|-gl$VPZ\r*zTkU5=r\x0c}t|\x0b|,+.fIE&z\r}$ui}Cvdq,Ly($T%yEFzN1ZsGnuAj\x0c9I.@.o3\'a?Bf!}b/~U~)-M6WpEoig7<9\tA4p/r\r*cFX~]ld/*""_%nBz6p|Aj\x0bO3*!cf^l]5K\'b|[%&$E]sS%|P^=a&[t@6(wS|*\r-vph^,X\tw \\u{Y\x0br(Qg-0vA,H_teMj6;);s/MM6_M.>l#<_yQNoKbrW=fNA)\tH-STO;DeJU3(v n0t\\\n)\n_98e4tDR0XvE&p107#iY;%,jtc5\\\'%9M Xw1eQEn]<hD_KBz.Cw>_.a]tB(ZMBjr?$:ls3QY/\x0c ]c}*dt&t]\t\'A !aCfm\\1??U4Gza\\7Q5_uZO;o_m\'X\\Ef!|1E):B*wvRFmr:=J*z({2u1zIe6z]1\']E]\x0cnU9|8sjt_}fY(!f\t<BxC`R1bkC<Vm+^K%|[K%:WLM7CH./%JUQ#wU\x0b+}x2 \\MU\'\'h=@!kCL`XY|bOiNJoj<QpI4SXJcdHw\tMY|28SK?WH75mJcZGFHh\x0ckOy{Z>1/c?""U.%*: c[\rojDw(Z>Y=sh\nnBl[\'h]1$ %L0% !ouL20lV#yIf\'Hft_k8JB!y!L8$}>=fsRk&un#$+^}\rt{)g[\'q(nb5X_{js<(.3<}7Kn1)R8\\Qj;\\m]0=g#Cq\\I*$Bo7g8#G( H!8\x0cV9A.G+$(tkU#*.UQ\raZfO-pPn\x0c1AvsmIM5r,-W.d^\t{jxe~!WwK8`1})*\\_g\\1A\t&$3mD;\r}k4J&\'P\'[H9|\x0c`PJ<7t{D]y\x0cB,\t\x0c`CO\\4}(]~OaIZ~6\x0b_GGMUt/,\'JQc{YYj\x0bsQ[SGF;{"">yl&C<g$5{\x0c' to EagerTensor of dtype resource
* Cannot convert 'E2B.J\'mkb]\x0cM8RCe\x0b=PuU%!\x0bxZm:cSzEr-U7?r`j-Mprz<q)\n:N8==aek$B~SO[4Y=z:Qal+>\t8q(!e,d1f9TJ-,SdebqO$)y#~dsq.REGO^X&ypk2NK6#q\nE\x0b^,_n"",r\tGwjP\nxgcKt\x0cOVzT*M*jp;k`_cJ33fub9qd]KN$ucS_f**ixrN-b:u~{""bP3_a~Y .{+rL7+z9Bi7X@\'-<-/u)S-+i*+C2JD*d>,\x0c\rF#Gu``PHh#Xt;x#(P\n3uR[6:28aOtb\rg(c<qPOR^90Xsp k,R\t/S&@\'[8+TI2[y""\nD' to EagerTensor of dtype resource",0,408,29,0.30000000000000004,760,231,4114.37,0.08
tf.summary.histogram,"* 6.903389739781102e+306 has type float, but expected one of: bytes, unicode
* expected string or bytes-like object
* cannot use a string pattern on a bytes-like object
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
* array([[[[ 58,  76, 214, 238, 162],",0,0,9,0.08999999999999997,1000,88,39.52,4.8
tf.summary.image,"* array([ 2.3700797e+37+0.0000000e+00j,  8.8025658e+37+1.6044932e+19j,
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
* array([[[ True,  True,  True, False,  True,  True, False],
* array([  3,   9, 111, 229, 213,  81, 166,   9, 187,  46, 171, 177, 149,
* array([[[ 46720. , -55170. ,  53280. ,  -7030. ,  -5268. , -11800. ,",0,0,9,0.98,1000,981,103.04,0.01
tf.summary.record_if,N/A - no exception,0,0,0,1.0,988,988,22.72,N/A
tf.summary.scalar,"* array([[[[-20206],
* Expected scalar shape, saw shape: (2, 11, 9).
* array([ 60000.,  16150., -30200., -14510.,  38900.,  41900.],
* array([[ 102,  -94,  -35,  -16,   -9,  -96,   30,  110,  126,   58,  -44,
* array([[[[-8.0760e+03,  3.2768e+04,  3.1984e+04, ..., -5.3472e+04,",0,0,13,0.19999999999999996,1000,202,67.67,3.25
tf.summary.text,"* array([-4267142355709052987,  5442408855620334278, -8325655616394660698,
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
* array([55515,  6095, 61287, 19054, 41408, 52770, 50656], dtype=uint16) has type numpy.ndarray, but expected one of: bytes, unicode
* array([ -135077518,  -853150851, -1967983783,  1854916527,  -831899326,
* array([[64687, 15255, 35239, 64577,  8804],",0,0,28,0.83,1000,828,74.86,0.2
tf.summary.trace_export,* Must enable trace before export.,0,0,1,0.0,999,0,28.92,4.1
tf.summary.trace_on,* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all(),0,0,1,0.36,585,213,26.14,0.89
tf.summary.write,"* name for name_scope must be a string.
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()",0,0,2,0.5800000000000001,1000,583,54.71,1.04
tf.switch_case,"* branch_index must a Tensor, got <class 'numpy.ndarray'>",0,0,1,0.0,1000,0,31.07,4.3
tf.tensor_scatter_nd_add,"* Inner dimensions of output shape must match inner dimensions of updates shape. Output: [16] updates: [20,5] [Op:TensorScatterAdd]
* Cannot convert 28270.854555007623 to EagerTensor of dtype int64
* Indices and updates specified for empty output shape [Op:TensorScatterAdd]
* Indices and updates specified for empty output. indices shape: [9]
* Can't convert Python sequence with a value out of range for a double-precision float.",0,0,59,0.0,1000,0,70.43,6.18
tf.tensor_scatter_nd_sub,"* Must have updates.shape = indices.shape[:batch_dim] + buffer_shape[num_index_dims:], got updates.shape: [14,20,2,4], indices.shape: [19,15], buffer_shape: [8,6,4,12], num_index_dims: 15, and batch_dim: 1
* Cannot convert '\t\x0cu\rLSj\nn$#SWRk\x0c\x0b]4PbDDO*!j8++y]>\r&`%U&kE4 a/6U!LV_4O@HyS|^rU.DaCv~f}w@*Tgpd#\x0cJWW0=ulmLj8OytA\r~TiU+y-skTa>]CM[8*=<~' to EagerTensor of dtype uint8
* Can't convert Python sequence with out-of-range integer to Tensor.
* Cannot convert '9q@^?Qz` O\tD5cqO4F?B[Y\\v<Y\n*%6sdrv^D;""p*iD#M\'(hePPhQD4K_WS7R]Xv\'M%fafbG{*w1aoW@X*z(~F7:7nc@>Gn#/Y2;Q|[%5M8k\\Db|Cfn%AdyX=H%_JBW{YGi5p]!G~)_y\\AbOzq?#x[)s\'5%q!POc}h\t=%bS!d/ok_(>*s4VP]4as2KVoIRX2`.\x0bM\nE5X?+Uj\'/!4RR|N],H~?.b7:/$+ vP(Vu<]h5X47U}+=k \x0cmJmyp)ZAH\toEQ*}E+d6wHx|ngklT:!)<1j]+F[F@y@o{\x0cm)\tvojRQ!5iOgx9Hr\\0[o\x0bF\x0b[%\x0b,cv%)_yhVh,w)<\r1(E@@|_Wh%`G""p4)QFM,tGg*<G+7#;9GiFQMiz$+6PFq""y cF]Z/%qm8+o\\V(JV6=Kq\\,=3 *WY[)\x0cPFM.~vBA7Cy<y(WoJK\\\tGn\'G-L(*|`pRH)GU$NEgO5\'0\tvs -Ut8""{Qs\'<`\nzRUr+nu\\bowc${\'r.S_\x0b*Z^3V}ob:>HRqDUfUS:)>M~<,s/n\x0bt?I*j]j>]\nMIpi<b^{Qp\x0cw\x0ctTLjPY3$DG38Tj<B)Ls#9B@\r?+r\rR\nCv[fHYpBX>d>2$x\\R_!\x0bn/eGG(K`B4oScMx)r,{RV_{I\tXzf=%s4/0\t$3QN-1|:wU?\'2J^nZ{Wo\'?q/$H]-\'\'\r[/^+]\tq|R>*)2\\@yNVBRdF]a}X,*bAKB2r=1:,ZC8uAom.m\\\x0bV}\nwdy\x0c[y;tPicWv3OZSz/VG\tIH!\x0cuh.yIf\nR!s89i.E.\\|<YS9b\tFmb=ifiRW WzMjaW\'P4R]T#_8Ti#,MHh[q9Qw*}td<ucd.' to EagerTensor of dtype uint16
* Cannot convert 'i[nmWBxA*~)AM\n6JJ+x.IwVcK~D4B.YF0UtWV)x*9#UDnqI\x0b+$2H&B[DkWL_Keh^@v`L\x0cMG<a)z""P9k&#o:""v&X`!ALccQT9FpFw~K h6Nw5a;#?[>>6Me#SRk{mNcJ{|8>~J`3y)`.*n__[AB3_As6z\x0bsVm""bhEdKHt\'o\x0b1&CX0\n&~@LC|bewU/f\x0b0nA1cQ9i9^jp<G(o&Cb\t7h$-e@ku\ts])rlARPTAqAwqz</P|D|_+I3mYN`RXDlQV).mVGuh\'{*:y>4D_F[!$eT\nZ9x/;9OP}81P\tRx\n:Zc64N^Y[U\nc%VSkPb)62;0K;zpb\t|R>=qm66qlAS6</ZF\\mm((m_yn^~s/~WT2K)G_vtnA^+8>JLUldNT;x%zthld7t+*\t~8uRN)<0rO`aBs>_[^\x0bv:d""1""jL\nTp\x0b\t.Tt@slj_[D%.^xF~sg6p\roZz_Cei3 \tW[i60\r?,\'mee}Q>w1~C,#uTa~:9\x0b=\nemz:q[eQGpo+M`C|>f.r(p>2RBijF!~~Pd\\c0YR(PhsJEV9% Q&!w>E{po0XS;-.rS!yI\ny`e=:bKw9[n\\N?z@|+5`.}ok}F\\JDF9u!G%HI~8l`NtF)Y4thjj+a~""W9K&x\\xww{7f._%2p;\n^}<.?""7-X:N]<|@5W 9lh)}Yw~K1lY#Y;aO\t +nk""R\\lds8m0Y=S,J\r.QCP$w]3\n\x0cHpVb9W\x0bd\x0bM+6^?ei*q<:jqxS96+\nsL.\tl> w{=]2*D+mig;?}@O~,BIbDu#@3N`*6^*%OIDN?\r55c#C<\x0cBwL%i(^jwG`a)uviA\'M[on3?d\x0cE\x0b\x0bYua5r|*EoA[AjsSG/@-Y\'|nJv\x0bF2!KR7i&OL.@l\';91TF/NqN$zBE@_E^>\x0bBuaNLT\x0c--k5eAg.Cg%NUatQC[741Hsj5cnr,9d8^m-O+`;hLgW6zu.V8j\x0b%g};7GH,7.w@PCr2_}sV65A;x\x0bY?ji~#GC* .7ujnUjMUA)M&{N-C<<e{%3M\x0c`m(VIqxPe2{1\nYTPA,v`\\h1?OD5xKj#K' to EagerTensor of dtype int8",0,0,71,0.0,1000,0,71.56,6.08
tf.tensor_scatter_nd_update,"* Cannot convert (7.312050448137202e+307-1.7952966183664366e+307j) to EagerTensor of dtype int64
* Outer dimensions of indices and update must match. Indices shape: [2,4], updates shape:[7,4,17,19] [Op:TensorScatterUpdate]
* Indices shape must have rank at least one. Found:[] [Op:TensorScatterUpdate]
* Cannot convert 'goa?e{|JsBF""^e>m; $F0Yq I*\relh\\AD8.9D#!(.PVv4^iWuwr>J\'F\tbg7f`k [hj1vCJ:/\\+ol\'""cU^5A\\xz>wZ]%5iXo4;DfQsbMU$t~3^a#Hb!_wE-0Up0KQ;Mw0$r@Vgf3m!q&[,JS J$>48@T|$6Ae""\r+c 3jQ7\x0b""\tz1U8U\\Ho9.)L$A8QC6^FG\'v<o#d_6?WQY,]95brO\\7pe1{Hysme^DimtuCnW|xM\nf^Gv!o^4`WI{M\r#)Aa(xho)VUO91""^%B~!RF+&:1PI3Y|**,Y\\DPp2,&#6D~fGTu3T\\F@Ia1km}2E={m\x0cg{w_\rwP\n6I\x0b=av).@.&0$<|^s7:4\t9ek/Z\x0bE6W*3m&=n~\nz]jup\x0c=+3' to EagerTensor of dtype bool
* Cannot convert '\x0cpXN&#/cMyM+kBgWE\ria+U@K-Fy\rAG`j^?m]q\\jc1eK\'GV}k7\x0b)k%He\r|/1@\x0bkylW?J3ce{:h\x0c!\x0cZ*p|6#`s*/q(g YQM,X^k@muWC^/KA18 EB8Z>_]7$B\\T m@X1\\Uu >vy$s \\?N77&ra!iD4""j\nMfk[*`\tyn\tE1|Cz_Ldqsu/Y;8>T+%{M|Tn*lrm75$N7l`d)RIdnU#nr""}""C`Y/5Wn=T7!x#s\x0b%Fk0Xr[#nI5[9x\'j~B%\x0b\x0b:Z`sHu]w \t:<b-N!-}cR;yt@U.\'>_t;=JP},s*ue$kP+1k\x0ciAzF&maJ*\x0cK \rqZ+GtjarmRKav\nYXP]z[z TCY*\x0cBQ`f\r^kCTIi{#\r)zWzOly!AuoDwf8t^O-=KMM/lcRuPBb""sT\'U2Y!YP0Y/Rm(V2^t`1XL@5j~R&k]MCx8$Hcd2VNBNXdegU78szJCP3Rn\x0bDv*Wg.%viyP488epSv6/b$3w^Fa0aUC:LO\ri?aW6D,kQxmcbg\r\\' to EagerTensor of dtype double",0,0,75,0.0,1000,0,70.68,6.43
tf.tensordot,"* 'axes' must not be larger than the number of dimensions of tensor tf.Tensor([], shape=(17, 0), dtype=int32).
* indices[0] = -2147483646 is not in [0, 2) [Op:GatherV2]
* Can't convert Python sequence with out-of-range integer to Tensor.
* 'axes' must be at least 0.
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()",0,0,65,0.0,1000,0,56.73,5.52
tf.test.compute_gradient,"* `x` must be a list of Tensors (arguments to `f`), not a <class 'numpy.ndarray'>",0,0,1,0.0,1000,0,29.34,5.42
tf.test.create_local_cluster,* No module named 'portpicker',0,0,1,0.0,1000,0,32.88,3.79
tf.tile,"* Expected multiples argument to be a vector of length 1 but got length 11 [Op:Tile]
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U63'), dtype('<U63')) -> dtype('<U63')
* Expected multiples to be 1-D, but got shape [4,19,5] [Op:Tile] name: 'xa!(}Jj^+I53HyUB<@m$i|Z_]W1c}J.H(Ax2oWS~gyNGO}Fo70v]+B$vc_'&-`f{QV8||
* Expected multiples to be 1-D, but got shape [] [Op:Tile] name: <Iag
* Expected multiples to be 1-D, but got shape [13,9,5,13] [Op:Tile] name: \'H\+)T1v]p~r		RN,Q@H{b",0,0,13,0.0,1000,1,60.82,5.14
tf.timestamp,N/A - no exception,0,0,0,1.0,484,484,27.83,N/A
tf.train.checkpoints_iterator,N/A - no exception,0,0,0,1.0,1000,1000,28.64,N/A
tf.train.experimental.enable_mixed_precision_graph_rewrite,"* ""opt"" must be an instance of a tf.keras.optimizers.Optimizer, but got: [[[[ 8274848134447969721  9048505703225034726  9431907364280299697 ...
* ""opt"" must be an instance of a tf.keras.optimizers.Optimizer, but got: Z(
* ""opt"" must be an instance of a tf.keras.optimizers.Optimizer, but got: [[[ -18   67  -31   -8  -21  123]
* ""opt"" must be an instance of a tf.keras.optimizers.Optimizer, but got: [[3538099563  215149278 1510423453 2458267062 3661144529 4273333533
* ""opt"" must be an instance of a tf.keras.optimizers.Optimizer, but got: [32831 23635 61387 63637  1032 61477 22803 12156 64962 56466 26203 53726",0,0,351,0.0,999,0,27.96,6.82
tf.train.get_checkpoint_state,"* expected str, bytes or os.PathLike object, not numpy.ndarray",0,0,1,0.98,1000,984,39.65,0.01
tf.train.latest_checkpoint,"* expected str, bytes or os.PathLike object, not numpy.ndarray",0,0,1,0.97,1000,975,39.92,0.01
tf.train.list_variables,"* Unsuccessful TensorSliceReader constructor: Failed to find any matching files for y l~-Z)Y1)9euB6$0[3_o8`p1rT]^zie[f8|(40@tILGdIRP_Y^j!VHwGNs%X}T|6TeI@J\I{73hp eIFX1qN$_=8@#UYL=gsk@u~3vyOb83GJka-k-T-rRz;_n
* Expected binary or unicode string, got 228
* Expected binary or unicode string, got array([[[2670084272, 2129217085, 2628481657, ..., 2821271761,
* Expected binary or unicode string, got array([-6801411951862111199,  4531105898527450892,  8838220757843342298,
* Expected binary or unicode string, got array([[-20792, -29416,  32266,   5692, -19005,  23991,   7044, -18488,",0,0,600,0.0,980,0,40.23,6.16
tf.train.load_checkpoint,"* Unsuccessful TensorSliceReader constructor: Failed to find any matching files for `78u4+w,H?!AsmbJ]NJ	L(Ey'EJYA^.9c7piQk3$vq!o[QD_H1tm	AhX83.7^(Ipx%aOiMQ:h4-Zk>,.`on1r^Kbyg<Kfv]E9Uq=QT[ENs`5AM(s|jUAl2Ixd	D9VF*h7`m=:_RdnQ\>Z>,%Y, 
* Unsuccessful TensorSliceReader constructor: Failed to find any matching files for *b(. #jC9H<
* Expected binary or unicode string, got array([[[  99,   40,  -60, ...,  -72,  -87,  -76],
* Expected binary or unicode string, got array([-8330731964201226024,  5977843710247386507,  6546222173645219064,
* Expected binary or unicode string, got array([[-7617947608870695725,  3116905258909363023, -8485988724757311367,",0,0,587,0.0,982,0,40.01,6.02
tf.train.load_variable,"* Expected binary or unicode string, got -18785
* Expected binary or unicode string, got array([[-43800., -26000.,  13620.,   4296., -58940., -16820.,  37000.,
* Expected binary or unicode string, got array([[[ 1012331709,  -864464577,  -133137261,   885803191,
* Expected binary or unicode string, got array([[ 307070271, 2105221111],
* Expected binary or unicode string, got array([[ 1473034556282177207, -8405105720986429070,  -334648235326016823,",0,0,50,0.0,1000,0,26.76,5.0
tf.transpose,"* Value for attr 'Tperm' of uint8 is not in the list of allowed values: int32, int64
* name for name_scope must be a string.
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()",0,0,3,0.98,941,922,90.31,0.01
tf.truncatediv,"* Incompatible shapes: [4] vs. [16,1,14,7]
* Unexpected error in binary operator (only integer div and mod should have errors) [Op:TruncateDiv]
* Incompatible shapes: [5,15,14] vs. [6]
* Incompatible shapes: [15,6] vs. [1,2,9,6] [Op:TruncateDiv]
* Incompatible shapes: [10,0] vs. [7,11,20,18]",0,0,66,0.32999999999999996,1000,334,92.49,2.66
tf.truncatemod,"* Incompatible shapes: [10] vs. [6,17,19,13] [Op:TruncateMod]
* Cannot convert -8.637676556331205e+307 to EagerTensor of dtype int8
* Incompatible shapes: [15,0,1,17] vs. [12,1,6] [Op:TruncateMod] name: uVaJ)
* Incompatible shapes: [15,4] vs. [5,11,11,5]
* Incompatible shapes: [1,17] vs. [9,14,14,13] [Op:TruncateMod] name: Cx`d5n@?UH^</9{W5:-=/95j2Xr*L`Hki4YE:D{Rx{I3)*+AT<$!`!78(uf%*/x@ \qNEC",0,0,58,0.31000000000000005,1000,308,82.25,3.04
tf.tuple,N/A - no exception,0,0,0,1.0,1000,1000,27.64,N/A
tf.unique,"* Expected DataType for argument 'out_idx' not 226.
* Could not find valid device for node.
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U1663'), dtype('<U1663')) -> dtype('<U1663')
* can only concatenate str (not ""int"") to str
* unique expects a 1D vector. [Op:Unique]",0,0,8,0.17000000000000004,992,169,67.81,3.36
tf.unique_with_counts,"* Expected DataType for argument 'out_idx' not 205490866.
* can only concatenate str (not ""int"") to str
* Expected DataType for argument 'out_idx' not array([], shape=(16, 0, 13), dtype=int64).
* Can't convert Python sequence with a value out of range for a double-precision float.
* unique expects a 1D vector. [Op:UniqueWithCounts]",0,0,11,0.18999999999999995,989,185,68.05,2.98
tf.unravel_index,"* ufunc 'add' did not contain a loop with signature matching types (dtype('<U79'), dtype('<U79')) -> dtype('<U79')
* Failed to convert a NumPy array to a Tensor (Unsupported object type int).
* The indices can only be scalar or vector, got ""[2,0,18]"" [Op:UnravelIndex]
* Cannot convert '>pd3=Akz{\\mJ8Wyu_kq,qv\'{""\\`F/@)k\\vQ-56_8Je\\gSGieI`U|q)\txrAAqoB8[.!5:z ZO;B$;F=/H0<Iwds:T22*3J!.}^VTuraO`G N\x0bN""h6\x0bv;p0cuy&o*)C3&GX_5x-z((L6:7E-4dcQgPN_%Kv6~+$cnBz6pKYu\tR\'N?EKl%ngdFY22fMW&;8UY.F> \nZLb9[a+eI^#vt=@@Gl)1_=8=\n8}$z\x0b%tZ#-P[5C\x0c@/m\tQC|SS*B<-OV-S%[,aA&EtxR)%.Uby4vyh[\\{jA%,B^r\x0bO%h(W^\x0b2#y)\'C$:IlsBR3P%V9&\nU2>$t4U1|:D.H.fY\\vU>g-S&:11OO(Rli=G""u7R]P1I@rz#v-XB\n%qI1T GR/""\n.:7|&~\'&U^F$JzrTh\x0bc*#F#:V<93F5oti\\{`Swq\t %~S\x0c,u/i+T>y\x0c;|nN7{IM<dSkH1nL5O];1.N#hfpP/U}qO,D<3\n]0Uh\\#JNI,qQg)qkV7<IP*=JZeH!s\tH+u|]T53#""\r[(4)J*d`g\\M0KYk-h-D}4SDHf]UQ&?' to EagerTensor of dtype int32
* Can't convert Python sequence with out-of-range integer to Tensor.",0,1,8,0.07999999999999996,1000,83,74.08,4.33
tf.unstack,"* Expected int for argument 'num' not (1.6034866299366938e+38-1.949245398550404e+37j).
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U214'), dtype('<U214')) -> dtype('<U214')
* Expected int for argument 'num' not array([ 1.16465338e+38+1.3448441e+19j, -2.57850172e+38+6.7369183e+18j,
* Expected int for argument 'num' not array([-20183,  30233, -22195,  31789,  23892,  18164,  15511,  24827,
* Expected int for argument 'num' not array([[ 1.5157937e+38, -1.9796705e+38,  4.5828525e+37, -2.1116096e+38,",0,8,189,0.0,999,1,134.36,5.44
tf.vectorized_map,"* list index out of range
* Can't convert Python sequence with a value out of range for a double-precision float.
* Can't convert Python sequence with out-of-range integer to Tensor.
* in converted code:",0,0,4,0.0,1000,0,240.59,5.03
tf.where,"* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
* WhereOp : Unhandled input dimensions: 0 [Op:Where] name: Where/
* x and y must both be non-None or both be None.
* Cannot convert 102 to EagerTensor of dtype bool",0,0,4,0.77,989,766,105.41,0.25
tf.while_loop,* cond must be callable.,0,0,1,0.0,1000,0,41.2,4.03
tf.xla.experimental.compile,* in converted code:,0,0,1,0.0,997,0,279.34,5.14
tf.xla.experimental.jit_scope,N/A - no exception,0,0,0,1.0,726,726,17.82,N/A
tf.zeros,"* Cannot convert value ';F/!x=\t\tE#Z:GnBV$L~\x0bN:EE|r%n@6d(C{)YPQ>Q<QLCfoeti$\r#UKb&g\\s@~%r]*maRw%7/\\sBqe\nL1cUGl1z\rwKmCneUSz,Lf86<w`;V,2G\tL#X""FXGL\tEF5/;mj/*+8|be|ABt:p`sfK\x0cYDuDi\x0c|.mV6)N9\x0blaluZZi""9C&S-`tk|e0_,#;2%b+(AbH(<+|z\ntw,u>7/-yA1ZC' to a TensorFlow DType.
* Cannot convert value None to a TensorFlow DType.
* name for name_scope must be a string.
* Cannot convert value 'm~[M)b`ZUHe[]-v !WeY@+z3B)lF>$9<kK\x0bJ-qbqO&+y*uM!FVG\n\nbV^w~.?ic*J[<{""\'\\C]7EN;~8R]x]pK$cV0{\x0chGA!oyk#~qj>\r4,C\'dzb+Ww6ZYw5KX.j7`fO`-S.&W\x0cS-W3Lc\t _F_(c#Jazi>1\x0b`YmI&X:5q"")P+qTi0 IYh,dB0uprO""{f LQbi!f}""7xIZ1sBc~\t7vy?6G:{(Q;Z%pZV*APl6 qU[Uz/2g/yxPM\'qI,\\(A$8+<Uruv *kGyLn!\x0bU\nX7C\\R9""\teSa\x0c8jD+@`zQH9]QpMsp""lI*p""bhY`y}j0m=""p5a{m<ieD.z(YS`\'Ld(BM,`lIw?9=FRr\nR{%\x0b_[z>U""V}4`1|Ep~U`L""x?\'b|BuI})}T-t=xISR\'\r_xWAaU\\s6QurlBfWGOl\x0crk{aAPxwoBU@a{}tM9j?WA\\8\\b\\ug8gT?]fQ\r!9pVCcd)!]$<PNHd?#,!&v0QiH$heJRl_F/f0::0}Dpz2L+WUYZew->`\rqp 942/Mf6 _c@3a!,dz.Z}""_?N.qvFvhiT\'3HI$9$e+6[qg#wtM`wfrUcpwp\nK\r>i|sqf|""}4|' to a TensorFlow DType.
* Cannot convert value 'AP\x0cZc0Ji~!""#\n^uzWD$lh KR*C(@\njeZ|ekCfGPeiJ^7OjM2wWx}WY+Vr=23G&5+cOJJv\'#p/rC~&2h&.ays7g7OD.UsCt#:@]LnY$#jfR!DZ, k`a:-\x0ba8QT\x0cIq1\nkj[2*\r\'aY4a7C55867!JX\r8Q<+gHeD<6VM-l\'wHoeq7ZArP<`\r~!yGm`6]}[`{j`ub#M}mUo(A{G!Whk)eL`fY%bj\x0c3{Q}^BUIf:X{%Bh4$eqsPH}.i7VG:1|$ o\x0byoG=\\c""W\'lu]^VKS%y8n-E' to a TensorFlow DType.",0,0,20,0.0,997,0,27.06,4.63
tf.zeros_like,"* Cannot convert value (-3.5734176817731243e+307-6.43229888416484e+307j) to a TensorFlow DType.
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
* name for name_scope must be a string.
* Can't convert Python sequence with out-of-range integer to Tensor.
* Can't convert Python sequence with a value out of range for a double-precision float.",0,0,7,0.77,999,770,89.07,0.32
Min,N/A,0.0,0.0,0.0,0.0,243.0,0.0,7.54,0.01
Max,N/A,0.0,920.0,1000.0,1.0,1000.0,1000.0,9234.22,10.38
Median,N/A,0.0,0.0,9.0,0.01,1000.0,9.0,53.75,4.36
Average,N/A,0.0,7.39,89.06,0.26,974.48,251.68,130.25,3.78
Sum,N/A,0.0,6744.0,81227.0,240.81,888730.0,229531.0,118786.34,3222.12
