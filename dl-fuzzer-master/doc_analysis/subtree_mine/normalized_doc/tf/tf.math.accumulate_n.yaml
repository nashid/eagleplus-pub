aliases:
- tf.compat.v1.accumulate_n
- tf.compat.v1.math.accumulate_n
constraints:
  inputs:
    descp: A list of `Tensor` objects, each with same shape and type.
    normalized_descp:
    - A D_STRUCTURE of D_STRUCTURE objects, each with same PARAM and type
  name:
    default: None
    descp: A name for the operation (optional).
    normalized_default: DEFAULT None
    normalized_descp:
    - A name for the operation BSTR
  shape:
    default: None
    descp: Expected shape of elements of `inputs` (optional). Also controls the output
      shape of this op, which may affect type inference in other ops. A value of `None`
      means "infer the input shape from the shapes in `inputs`".
    normalized_default: DEFAULT None
    normalized_descp:
    - Expected shape of elements of PARAM BSTR
    - Also controls the output shape of this op, which may affect type inference in
      other ops
    - A value of QSTR means infer the input shape from the shapes in PARAM
  tensor_dtype:
    default: None
    descp: Expected data type of `inputs` (optional). A value of `None`means "infer
      the input dtype from `inputs[0]`".
    normalized_default: DEFAULT None
    normalized_descp:
    - Expected data type of PARAM BSTR
    - A value of QSTR means infer the input dtype from PARAM BSTR
exceptions:
- ValueError: If `inputs` don't all have same shape and dtype or the shape cannot
    be inferred.
inputs:
  optional:
  - shape
  - tensor_dtype
  - name
  required:
  - inputs
link: https://www.tensorflow.org/versions/r2.1/api_docs/python/tf/math/accumulate_n
outputs: A `Tensor` of same shape and type as the elements of `inputs`.
package: tensorflow
target: accumulate_n
title: tf.math.accumulate_n
version: 2.1.0
