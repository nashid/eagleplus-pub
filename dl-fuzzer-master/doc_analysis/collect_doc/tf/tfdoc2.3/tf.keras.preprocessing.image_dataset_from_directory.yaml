constraints:
  batch_size:
    default: '32'
    descp: 'Size of the batches of data. Default: 32.'
  class_names:
    default: None
    descp: Only valid if "labels" is "inferred". This is the explict list of class
      names (must match names of subdirectories). Used to control the order of the
      classes (otherwise alphanumerical order is used).
  color_mode:
    default: rgb
    descp: 'One of "grayscale", "rgb", "rgba". Default: "rgb". Whether the images
      will be converted to have 1, 3, or 4 channels.'
  directory:
    descp: Directory where the data is located. If labels is "inferred", it should
      contain subdirectories, each containing images for a class. Otherwise, the directory
      structure is ignored.
  follow_links:
    default: 'False'
    descp: Whether to visits subdirectories pointed to by symlinks. Defaults to False.
  image_size:
    default: (256, 256)
    descp: Size to resize images to after they are read from disk. Defaults to (256,
      256). Since the pipeline processes batches of images that must all have the
      same size, this must be provided.
  interpolation:
    default: bilinear
    descp: String, the interpolation method used when resizing images. Defaults to
      bilinear. Supports bilinear, nearest, bicubic, area, lanczos3, lanczos5, gaussian,
      mitchellcubic.
  label_mode:
    default: int
    descp: '''int'': means that the labels are encoded as integers (e.g. for sparse_categorical_crossentropy
      loss). ''categorical'' means that the labels are encoded as a categorical vector
      (e.g. for categorical_crossentropy loss). ''binary'' means that the labels (there
      can be only 2) are encoded as float32 scalars with values 0 or 1 (e.g. for binary_crossentropy).
      None (no labels).'
  labels:
    default: inferred
    descp: Either "inferred" (labels are generated from the directory structure),
      or a list/tuple of integer labels of the same size as the number of image files
      found in the directory. Labels should be sorted according to the alphanumeric
      order of the image file paths (obtained via os.walk(directory) in Python).
  seed:
    default: None
    descp: Optional random seed for shuffling and transformations.
  shuffle:
    default: 'True'
    descp: 'Whether to shuffle the data. Default: True. If set to False, sorts the
      data in alphanumeric order.'
  subset:
    default: None
    descp: One of "training" or "validation". Only used if validation_split is set.
  validation_split:
    default: None
    descp: Optional float between 0 and 1, fraction of data to reserve for validation.
inputs:
  optional:
  - labels
  - label_mode
  - class_names
  - color_mode
  - batch_size
  - image_size
  - shuffle
  - seed
  - validation_split
  - subset
  - interpolation
  - follow_links
  required:
  - directory
link: https://www.tensorflow.org/versions/r2.3/api_docs/python/tf/keras/preprocessing/image_dataset_from_directory
outputs:
- A tf.data.Dataset object. If label_mode is None, it yields float32 tensors of shape
  (batch_size, image_size[0], image_size[1], num_channels), encoding images (see below
  for rules regarding num_channels). Otherwise, it yields a tuple (images, labels),
  where images has shape (batch_size, image_size[0], image_size[1], num_channels),
  and labels follows the format described below.
package: tensorflow
target: image_dataset_from_directory
title: tf.keras.preprocessing.image_dataset_from_directory
version: 2.3.0
