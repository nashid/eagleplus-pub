constraints:
  data_format:
    default: None
    descp: The data format for input. Either "NHWC" (default) or "NCHW".
  depthwise_filter:
    descp: 4-D Tensor with shape [filter_height, filter_width, in_channels, channel_multiplier].
      Contains in_channels convolutional filters of depth 1.
  dilations:
    default: None
    descp: 1-D of size 2. The dilation rate in which we sample input values across
      the height and width dimensions in atrous convolution. If it is greater than
      1, then all values of strides must be 1.
  input:
    descp: 4-D Tensor with shape according to data_format.
  name:
    default: None
    descp: A name for this operation (optional).
  padding:
    descp: Controls how to pad the image before applying the depthwise convolution.
      Can be the string "SAME" or "VALID" indicating the type of padding algorithm
      to use, or a Python list indicating the explicit paddings at the start and end
      of each dimension. When explicit padding is used and data_format is "NHWC",
      this should be in the form [[0, 0], [pad_top, pad_bottom], [pad_left, pad_right],
      [0, 0]]. When explicit padding used and data_format is "NCHW", this should be
      in the form [[0, 0], [0, 0], [pad_top, pad_bottom], [pad_left, pad_right]].
  pointwise_filter:
    descp: 4-D Tensor with shape [1, 1, channel_multiplier * in_channels, out_channels].
      Pointwise filter to mix channels after depthwise_filter has convolved spatially.
  strides:
    descp: 1-D of size 4. The strides for the depthwise convolution for each dimension
      of input.
inputs:
  optional:
  - data_format
  - dilations
  - name
  required:
  - input
  - depthwise_filter
  - pointwise_filter
  - strides
  - padding
link: https://www.tensorflow.org/versions/r2.3/api_docs/python/tf/nn/separable_conv2d
outputs: A 4-D Tensor with shape according to 'data_format'. For example, with data_format="NHWC",
  shape is [batch, out_height, out_width, out_channels].
package: tensorflow
target: separable_conv2d
title: tf.nn.separable_conv2d
version: 2.3.0
