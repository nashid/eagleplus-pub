constraints:
  data_format:
    default: NHWC
    descp: An optional `string`, must be set to `"NHWC"`. Defaults to`"NHWC"`. Specify
      the data format of the input and output data.
    normalized_default: DEFAULT DF_STR
    normalized_descp:
    - An optional D_TYPE must be set to QSTR
    - Defaults to QSTR
    - Specify the data format of the PARAM and output data
  include_batch_in_index:
    default: 'False'
    descp: An optional `boolean`. Defaults to `False`. Whether to include batch dimension
      in flattened index of `argmax`.
    normalized_default: DEFAULT CONSTANT_BOOL
    normalized_descp:
    - An optional D_TYPE
    - Defaults to CONSTANT_BOOL
    - Whether to include batch dimension in flattened index of QSTR
  input:
    descp: 'A `Tensor`. Must be one of the following types: `float32`, `float64`,`int32`,
      `uint8`, `int16`, `int8`, `int64`, `bfloat16`, `uint16`, `half`,`uint32`, `uint64`.
      4-D with shape `[batch, height, width, channels]`.  Input to pool over.'
    normalized_descp:
    - A D_STRUCTURE
    - Must be one of the following types D_TYPE
    - CONSTANT_NUM D with shape BSTR
    - Input to pool over
  ksize:
    descp: An int or list of `ints` that has length `1`, `2` or `4`. The size of the
      window for each dimension of the input tensor.
    normalized_descp:
    - An D_TYPE or D_STRUCTURE of D_TYPE that has length CONSTANT_NUM
    - The size of the window for each dimension of the PARAM D_STRUCTURE
  name:
    default: None
    descp: A name for the operation (optional).
    normalized_default: DEFAULT None
    normalized_descp:
    - A name for the operation BSTR
  output_dtype:
    default: tf.dtypes.int64
    descp: 'An optional `tf.DType` from: `tf.int32, tf.int64`. Defaults to `tf.int64`.
      The dtype of the returned argmax tensor.'
    normalized_default: D_TYPE D_TYPE
    normalized_descp:
    - An optional D_TYPE from D_TYPE
    - Defaults to D_TYPE
    - The dtype of the returned argmax D_STRUCTURE
  padding:
    descp: 'A `string` from: `"SAME", "VALID"`. The type of padding algorithm to use.'
    normalized_descp:
    - A D_TYPE from QSTR
    - The type of padding algorithm to use
  strides:
    descp: An int or list of `ints` that has length `1`, `2` or `4`. The stride of
      the sliding window for each dimension of the input tensor.
    normalized_descp:
    - An D_TYPE or D_STRUCTURE of D_TYPE that has length CONSTANT_NUM
    - The stride of the sliding window for each dimension of the PARAM D_STRUCTURE
inputs:
  optional:
  - data_format
  - output_dtype
  - include_batch_in_index
  - name
  required:
  - input
  - ksize
  - strides
  - padding
link: https://www.tensorflow.org/versions/r2.1/api_docs/python/tf/nn/max_pool_with_argmax
outputs: A tuple of `Tensor` objects (output, argmax).
package: tensorflow
target: max_pool_with_argmax
title: tf.nn.max_pool_with_argmax
version: 2.1.0
