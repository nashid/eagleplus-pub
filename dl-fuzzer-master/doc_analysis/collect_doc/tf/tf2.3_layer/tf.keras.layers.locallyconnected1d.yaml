aliases:
- tf.compat.v1.keras.layers.LocallyConnected1D
constraints:
  '**kwargs':
    descp: ''
  activation:
    default: None
    descp: 'Activation function to use. If you don''t specify anything, no activation
      is applied (ie. "linear" activation: a(x) = x).'
  activity_regularizer:
    default: None
    descp: Regularizer function applied to the output of the layer (its "activation")..
  bias_constraint:
    default: None
    descp: Constraint function applied to the bias vector.
  bias_initializer:
    default: zeros
    descp: Initializer for the bias vector.
  bias_regularizer:
    default: None
    descp: Regularizer function applied to the bias vector.
  data_format:
    default: None
    descp: A string, one of channels_last (default) or channels_first. The ordering
      of the dimensions in the inputs. channels_last corresponds to inputs with shape
      (batch, length, channels) while channels_first corresponds to inputs with shape
      (batch, channels, length). It defaults to the image_data_format value found
      in your Keras config file at ~/.keras/keras.json. If you never set it, then
      it will be "channels_last".
  filters:
    descp: Integer, the dimensionality of the output space (i.e. the number of output
      filters in the convolution).
  implementation:
    default: '1'
    descp: 'implementation mode, either 1, 2, or 3. 1 loops over input spatial locations
      to perform the forward pass. It is memory-efficient but performs a lot of (small)
      ops. 2 stores layer weights in a dense but sparsely-populated 2D matrix and
      implements the forward pass as a single matrix-multiply. It uses a lot of RAM
      but performs few (large) ops. 3 stores layer weights in a sparse tensor and
      implements the forward pass as a single sparse matrix-multiply. How to choose:
      1: large, dense models, 2: small models, 3: large, sparse models, where "large"
      stands for large input/output activations (i.e. many filters, input_filters,
      large input_size, output_size), and "sparse" stands for few connections between
      inputs and outputs, i.e. small ratio filters * input_filters * kernel_size /
      (input_size * strides), where inputs to and outputs of the layer are assumed
      to have shapes (input_size, input_filters), (output_size, filters) respectively.
      It is recommended to benchmark each in the setting of interest to pick the most
      efficient one (in terms of speed and memory usage). Correct choice of implementation
      can lead to dramatic speed improvements (e.g. 50X), potentially at the expense
      of RAM. Also, only padding="valid" is supported by implementation=1.'
  kernel_constraint:
    default: None
    descp: Constraint function applied to the kernel matrix.
  kernel_initializer:
    default: glorot_uniform
    descp: Initializer for the kernel weights matrix.
  kernel_regularizer:
    default: None
    descp: Regularizer function applied to the kernel weights matrix.
  kernel_size:
    descp: An integer or tuple/list of a single integer, specifying the length of
      the 1D convolution window.
  padding:
    default: valid
    descp: Currently only supports "valid" (case-insensitive). "same" may be supported
      in the future.
  strides:
    default: '1'
    descp: An integer or tuple/list of a single integer, specifying the stride length
      of the convolution. Specifying any stride value != 1 is incompatible with specifying
      any dilation_rate value != 1.
  use_bias:
    default: 'True'
    descp: Boolean, whether the layer uses a bias vector.
inputs:
  optional:
  - strides
  - padding
  - data_format
  - activation
  - use_bias
  - kernel_initializer
  - bias_initializer
  - kernel_regularizer
  - bias_regularizer
  - activity_regularizer
  - kernel_constraint
  - bias_constraint
  - implementation
  required:
  - filters
  - kernel_size
  - '**kwargs'
link: https://www.tensorflow.org/versions/r2.3/api_docs/python/tf/keras/layers/LocallyConnected1D
package: tensorflow
target: LocallyConnected1D
title: tf.keras.layers.LocallyConnected1D
version: 2.3.0
