constraints:
  '**kwargs':
    descp: ''
    normalized_descp: []
  bidirectional:
    default: _Null
    descp: whether to use bidirectional recurrent layers
    doc_dtype: boolean, optional, default=0
    normalized_default: DEFAULT Null
    normalized_descp:
    - whether to use bidirectional recurrent layers
    normalized_docdtype: D_TYPE, optional, default CONSTANT_NUM
  data:
    default: None
    descp: Input data to RNN
    doc_dtype: NDArray
    normalized_default: DEFAULT None
    normalized_descp:
    - Input data to RNN
    normalized_docdtype: ONE_WORD D_STRUCTURE
  lstm_state_clip_max:
    default: _Null
    descp: Maximum clip value of LSTM states. This option must be used together with
      lstm_state_clip_min.
    doc_dtype: double or None, optional, default=None
    normalized_default: DEFAULT Null
    normalized_descp:
    - Maximum clip value of LSTM states
    - This option must be used together with PARAM
    normalized_docdtype: D_TYPE or None, optional, default None
  lstm_state_clip_min:
    default: _Null
    descp: Minimum clip value of LSTM states. This option must be used together with
      lstm_state_clip_max.
    doc_dtype: double or None, optional, default=None
    normalized_default: DEFAULT Null
    normalized_descp:
    - Minimum clip value of LSTM states
    - This option must be used together with PARAM
    normalized_docdtype: D_TYPE or None, optional, default None
  lstm_state_clip_nan:
    default: _Null
    descp: Whether to stop NaN from propagating in state by clipping it to min/max.
      If clipping range is not specified, this option is ignored.
    doc_dtype: boolean, optional, default=0
    normalized_default: DEFAULT Null
    normalized_descp:
    - Whether to stop NaN from propagating in PARAM by clipping it to min max
    - If clipping range is not specified, this option is ignored
    normalized_docdtype: D_TYPE, optional, default CONSTANT_NUM
  mode:
    default: _Null
    descp: the type of RNN to compute
    doc_dtype: '{''gru'', ''lstm'', ''rnn_relu'', ''rnn_tanh''}, required'
    normalized_default: DEFAULT Null
    normalized_descp:
    - the type of RNN to compute
    normalized_docdtype: QSTR , required
  name:
    default: None
    descp: ''
    normalized_default: DEFAULT None
    normalized_descp: []
  num_layers:
    default: _Null
    descp: number of stacked layers
    doc_dtype: int (non-negative), required
    normalized_default: DEFAULT Null
    normalized_descp:
    - number of stacked layers
    normalized_docdtype: D_TYPE BSTR, required
  out:
    default: None
    descp: The output NDArray to hold the result.
    doc_dtype: NDArray, optional
    normalized_default: DEFAULT None
    normalized_descp:
    - The output D_STRUCTURE to hold the result
    normalized_docdtype: D_STRUCTURE, optional
  p:
    default: _Null
    descp: drop rate of the dropout on the outputs of each RNN layer, except the last
      layer.
    doc_dtype: float, optional, default=0
    normalized_default: DEFAULT Null
    normalized_descp:
    - drop rate of the dropout on the outputs of each RNN layer, except the last layer
    normalized_docdtype: D_TYPE, optional, default CONSTANT_NUM
  parameters:
    default: None
    descp: Vector of all RNN trainable parameters concatenated
    doc_dtype: NDArray
    normalized_default: DEFAULT None
    normalized_descp:
    - D_STRUCTURE of all RNN trainable parameters concatenated
    normalized_docdtype: ONE_WORD D_STRUCTURE
  projection_size:
    default: _Null
    descp: size of project size
    doc_dtype: int or None, optional, default='None'
    normalized_default: DEFAULT Null
    normalized_descp:
    - size of project size
    normalized_docdtype: D_TYPE or None, optional, default QSTR
  sequence_length:
    default: None
    descp: Vector of valid sequence lengths for each element in batch. (Only used
      if use_sequence_length kwarg is True)
    doc_dtype: NDArray
    normalized_default: DEFAULT None
    normalized_descp:
    - D_STRUCTURE of valid D_STRUCTURE lengths for each element in batch
    - ONE_WORD BSTR
    normalized_docdtype: ONE_WORD D_STRUCTURE
  state:
    default: None
    descp: initial hidden state of the RNN
    doc_dtype: NDArray
    normalized_default: DEFAULT None
    normalized_descp:
    - initial hidden state of the RNN
    normalized_docdtype: ONE_WORD D_STRUCTURE
  state_cell:
    default: None
    descp: initial cell state for LSTM networks (only for LSTM)
    doc_dtype: NDArray
    normalized_default: DEFAULT None
    normalized_descp:
    - initial cell PARAM for LSTM networks BSTR
    normalized_docdtype: ONE_WORD D_STRUCTURE
  state_outputs:
    default: _Null
    descp: Whether to have the states as symbol outputs.
    doc_dtype: boolean, optional, default=0
    normalized_default: DEFAULT Null
    normalized_descp:
    - Whether to have the states as symbol outputs
    normalized_docdtype: D_TYPE, optional, default CONSTANT_NUM
  state_size:
    default: _Null
    descp: size of the state for each layer
    doc_dtype: int (non-negative), required
    normalized_default: DEFAULT Null
    normalized_descp:
    - size of the PARAM for each layer
    normalized_docdtype: D_TYPE BSTR, required
  use_sequence_length:
    default: _Null
    descp: If set to true, this layer takes in an extra input parameter sequence_length
      to specify variable length sequence
    doc_dtype: boolean, optional, default=0
    normalized_default: DEFAULT Null
    normalized_descp:
    - If set to CONSTANT_BOOL, this layer takes in an extra input parameter PARAM
      to specify variable length D_STRUCTURE
    normalized_docdtype: D_TYPE, optional, default CONSTANT_NUM
inputs:
  optional:
  - data
  - parameters
  - state
  - state_cell
  - sequence_length
  - state_size
  - num_layers
  - bidirectional
  - mode
  - p
  - state_outputs
  - projection_size
  - lstm_state_clip_min
  - lstm_state_clip_max
  - lstm_state_clip_nan
  - use_sequence_length
  - out
  - name
  required:
  - '**kwargs'
link: https://mxnet.apache.org/versions/1.6/api/python/docs/api/ndarray/op/index.html#mxnet.ndarray.op.RNN
package: mxnet
target: RNN
title: mxnet.ndarray.op.RNN
version: 1.6.0
