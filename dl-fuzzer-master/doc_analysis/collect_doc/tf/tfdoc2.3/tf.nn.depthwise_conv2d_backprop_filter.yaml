aliases:
- tf.compat.v1.nn.depthwise_conv2d_backprop_filter
- tf.compat.v1.nn.depthwise_conv2d_native_backprop_filter
constraints:
  data_format:
    default: NHWC
    descp: 'An optional string from: "NHWC", "NCHW". Defaults to "NHWC". Specify the
      data format of the input and output data. With the default format "NHWC", the
      data is stored in the order of: [batch, height, width, channels]. Alternatively,
      the format could be "NCHW", the data storage order of: [batch, channels, height,
      width].'
  dilations:
    default: '[1, 1, 1, 1]'
    descp: An optional list of ints. Defaults to [1, 1, 1, 1]. 1-D tensor of length
      4. The dilation factor for each dimension of input. If set to k > 1, there will
      be k-1 skipped cells between each filter element on that dimension. The dimension
      order is determined by the value of data_format, see above for details. Dilations
      in the batch and depth dimensions must be 1.
  filter_sizes:
    descp: A Tensor of type int32. An integer vector representing the tensor shape
      of filter, where filter is a 4-D [filter_height, filter_width, in_channels,
      depthwise_multiplier] tensor.
  input:
    descp: 'A Tensor. Must be one of the following types: half, bfloat16, float32,
      float64. 4-D with shape based on data_format. For example, if data_format is
      ''NHWC'' then input is a 4-D [batch, in_height, in_width, in_channels] tensor.'
  name:
    default: None
    descp: A name for the operation (optional).
  out_backprop:
    descp: A Tensor. Must have the same type as input. 4-D with shape based on data_format.
      For example, if data_format is 'NHWC' then out_backprop shape is [batch, out_height,
      out_width, out_channels]. Gradients w.r.t. the output of the convolution.
  padding:
    descp: Controls how to pad the image before applying the convolution. Can be the
      string "SAME" or "VALID" indicating the type of padding algorithm to use, or
      a list indicating the explicit paddings at the start and end of each dimension.
      When explicit padding is used and data_format is "NHWC", this should be in the
      form [[0, 0], [pad_top, pad_bottom], [pad_left, pad_right], [0, 0]]. When explicit
      padding used and data_format is "NCHW", this should be in the form [[0, 0],
      [0, 0], [pad_top, pad_bottom], [pad_left, pad_right]].
  strides:
    descp: A list of ints. The stride of the sliding window for each dimension of
      the input of the convolution.
inputs:
  optional:
  - data_format
  - dilations
  - name
  required:
  - input
  - filter_sizes
  - out_backprop
  - strides
  - padding
link: https://www.tensorflow.org/versions/r2.3/api_docs/python/tf/nn/depthwise_conv2d_backprop_filter
outputs:
- A Tensor. Has the same type as input.
package: tensorflow
target: depthwise_conv2d_backprop_filter
title: tf.nn.depthwise_conv2d_backprop_filter
version: 2.3.0
