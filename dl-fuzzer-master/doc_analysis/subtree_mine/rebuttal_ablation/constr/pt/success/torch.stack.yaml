constraints:
  dim:
    default: '0'
    descp: dimension to insert. Has to be between 0 and the number of dimensions of
      concatenated tensors (inclusive)
    doc_dtype: int
    dtype:
    - int
    - numeric
    - torch.bool
    ndim:
    - '0'
    - '1'
    range:
    - '[0,inf)'
    shape:
    - '[1]'
    - '[inclusive]'
    tensor_t:
    - torch.tensor
  out:
    default: None
    descp: the output tensor.
    doc_dtype: Tensor, optional
    dtype:
    - int
    - numeric
    - torch.bool
    ndim:
    - '0'
    - '1'
    range:
    - '[0,1]'
    - '[0,inf)'
    tensor_t:
    - torch.tensor
  tensors:
    descp: sequence of tensors to concatenate
    doc_dtype: sequence of Tensors
    dtype:
    - int
    - numeric
    - string
    - torch.bool
    - torch.dtype
    ndim:
    - '0'
    - '1'
    - '3'
    range:
    - '[0,1]'
    - '[0,inf)'
    shape:
    - '[b,p,m]'
    - '[c]'
    structure:
    - list
    tensor_t:
    - torch.tensor
inputs:
  optional:
  - dim
  - out
  required:
  - tensors
link: https://pytorch.org/docs/stable/torch.html#torch.stack
package: torch
ret_type: Tensor
target: stack
title: torch.stack
version: 1.5.0
