constraints:
  Tout:
    descp: A list of tf.DTypes. A list of output types.
    dtype:
    - tf.dtype
    ndim:
    - '1'
    structure:
    - list
    - list(tf.dtype)
  cond:
    descp: 'A Tensor. A Tensor. If the tensor is a scalar of non-boolean type, the
      scalar is converted to a boolean according to the following rule: if the scalar
      is a numerical value, non-zero means True and zero means False; if the scalar
      is a string, non-empty means True and empty means False. If the tensor is not
      a scalar, being empty means False and being non-empty means True. This should
      only be used when the if then/else body functions do not have stateful ops.'
    tensor_t:
    - tf.tensor
  else_branch:
    descp: A function decorated with @Defun. A function that takes 'inputs' and returns
      a list of tensors, whose types are the same as what then_branch returns.
    dtype:
    - callable
    structure:
    - list(tf.tensor)
  input:
    descp: A list of Tensor objects. A list of input tensors.
    structure:
    - list
    - list(tf.tensor)
  name:
    default: None
    descp: A name for the operation (optional).
    dtype:
    - tf.string
    ndim:
    - '0'
  output_shapes:
    default: '[]'
    descp: An optional list of shapes (each a tf.TensorShape or list of ints). Defaults
      to [].
    dtype:
    - int
    ndim:
    - '1'
    structure:
    - list
    - list(int)
  then_branch:
    descp: A function decorated with @Defun. A function that takes 'inputs' and returns
      a list of tensors, whose types are the same as what else_branch returns.
    dtype:
    - callable
    structure:
    - list(tf.tensor)
inputs:
  optional:
  - output_shapes
  - name
  required:
  - cond
  - input
  - Tout
  - then_branch
  - else_branch
link: https://www.tensorflow.org/versions/r2.2/api_docs/python/tf/raw_ops/StatelessIf
outputs:
- A list of Tensor objects of type Tout.
package: tensorflow
target: StatelessIf
title: tf.raw_ops.StatelessIf
version: 2.2.0
