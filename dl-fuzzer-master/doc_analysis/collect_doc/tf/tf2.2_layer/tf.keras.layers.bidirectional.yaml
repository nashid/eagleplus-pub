aliases:
- tf.compat.v1.keras.layers.Bidirectional
constraints:
  '**kwargs':
    descp: ''
  backward_layer:
    default: None
    descp: Optional keras.layers.RNN, or keras.layers.Layerinstance to be used to
      handle backwards input processing. Ifbackward_layeris not provided, the layer
      instance passed as thelayerargument will be used to generate the backward layer
      automatically. Note that the providedbackward_layerlayer should have properties
      matching those of thelayerargument, in particular it should have the same values
      forstateful,return_states,return_sequence, etc. In addition,backward_layerandlayershould
      have differentgo_backwardsargument values. AValueError` will be raised if these
      requirements are not met.
  layer:
    descp: 'keras.layers.RNN instance, such as keras.layers.LSTM or keras.layers.GRU.
      It could also be a keras.layers.Layer instance that meets the following criteria:
      Be a sequence-processing layer (accepts 3D+ inputs). Have a go_backwards, return_sequences
      and return_state attribute (with the same semantics as for the RNN class). Have
      an input_spec attribute. Implement serialization via get_config() and from_config().
      Note that the recommended way to create new RNN layers is to write a custom
      RNN cell and use it with keras.layers.RNN, instead of subclassing keras.layers.Layer
      directly.'
  merge_mode:
    default: concat
    descp: Mode by which outputs of the forward and backward RNNs will be combined.
      One of {'sum', 'mul', 'concat', 'ave', None}. If None, the outputs will not
      be combined, they will be returned as a list. Default value is 'concat'.
  weights:
    default: None
    descp: ''
exceptions:
- ValueError: If layer or backward_layer is not a Layer instance. In case of invalid
    merge_mode argument. If backward_layer has mismatched properties compared to layer.
inputs:
  optional:
  - merge_mode
  - weights
  - backward_layer
  required:
  - layer
  - '**kwargs'
link: https://www.tensorflow.org/versions/r2.2/api_docs/python/tf/keras/layers/Bidirectional
package: tensorflow
target: Bidirectional
title: tf.keras.layers.Bidirectional
version: 2.2.0
