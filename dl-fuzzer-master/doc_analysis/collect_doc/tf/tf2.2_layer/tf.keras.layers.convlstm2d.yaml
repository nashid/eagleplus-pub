aliases:
- tf.compat.v1.keras.layers.ConvLSTM2D
constraints:
  '**kwargs':
    descp: ''
  activation:
    default: tanh
    descp: Activation function to use. By default hyperbolic tangent activation function
      is applied (tanh(x)).
  activity_regularizer:
    default: None
    descp: Regularizer function applied to.
  bias_constraint:
    default: None
    descp: Constraint function applied to the bias vector.
  bias_initializer:
    default: zeros
    descp: Initializer for the bias vector.
  bias_regularizer:
    default: None
    descp: Regularizer function applied to the bias vector.
  data_format:
    default: None
    descp: A string, one of channels_last (default) or channels_first. The ordering
      of the dimensions in the inputs. channels_last corresponds to inputs with shape
      (batch, time, ..., channels) while channels_first corresponds to inputs with
      shape (batch, time, channels, ...). It defaults to the image_data_format value
      found in your Keras config file at ~/.keras/keras.json. If you never set it,
      then it will be "channels_last".
  dilation_rate:
    default: (1,1)
    descp: An integer or tuple/list of n integers, specifying the dilation rate to
      use for dilated convolution. Currently, specifying any dilation_rate value !=
      1 is incompatible with specifying any strides value != 1.
  dropout:
    default: '0.0'
    descp: Float between 0 and 1. Fraction of the units to drop for the linear transformation
      of the inputs.
  filters:
    descp: Integer, the dimensionality of the output space (i.e. the number of output
      filters in the convolution).
  go_backwards:
    default: 'False'
    descp: Boolean (default False). If True, process the input sequence backwards.
  kernel_constraint:
    default: None
    descp: Constraint function applied to the kernel weights matrix.
  kernel_initializer:
    default: glorot_uniform
    descp: Initializer for the kernel weights matrix, used for the linear transformation
      of the inputs.
  kernel_regularizer:
    default: None
    descp: Regularizer function applied to the kernel weights matrix.
  kernel_size:
    descp: An integer or tuple/list of n integers, specifying the dimensions of the
      convolution window.
  padding:
    default: valid
    descp: One of "valid" or "same" (case-insensitive).
  recurrent_activation:
    default: hard_sigmoid
    descp: Activation function to use for the recurrent step.
  recurrent_constraint:
    default: None
    descp: Constraint function applied to the recurrent_kernel weights matrix.
  recurrent_dropout:
    default: '0.0'
    descp: Float between 0 and 1. Fraction of the units to drop for the linear transformation
      of the recurrent state.
  recurrent_initializer:
    default: orthogonal
    descp: Initializer for the recurrent_kernel weights matrix, used for the linear
      transformation of the recurrent state.
  recurrent_regularizer:
    default: None
    descp: Regularizer function applied to the recurrent_kernel weights matrix.
  return_sequences:
    default: 'False'
    descp: Boolean. Whether to return the last output in the output sequence, or the
      full sequence.
  stateful:
    default: 'False'
    descp: Boolean (default False). If True, the last state for each sample at index
      i in a batch will be used as initial state for the sample of index i in the
      following batch.
  strides:
    default: (1,1)
    descp: An integer or tuple/list of n integers, specifying the strides of the convolution.
      Specifying any stride value != 1 is incompatible with specifying any dilation_rate
      value != 1.
  unit_forget_bias:
    default: 'True'
    descp: Boolean. If True, add 1 to the bias of the forget gate at initialization.
      Use in combination with bias_initializer="zeros". This is recommended in Jozefowicz
      et al.
  use_bias:
    default: 'True'
    descp: Boolean, whether the layer uses a bias vector.
exceptions:
- ValueError: in case of invalid constructor arguments.
inputs:
  optional:
  - strides
  - padding
  - data_format
  - dilation_rate
  - activation
  - recurrent_activation
  - use_bias
  - kernel_initializer
  - recurrent_initializer
  - bias_initializer
  - unit_forget_bias
  - kernel_regularizer
  - recurrent_regularizer
  - bias_regularizer
  - activity_regularizer
  - kernel_constraint
  - recurrent_constraint
  - bias_constraint
  - return_sequences
  - go_backwards
  - stateful
  - dropout
  - recurrent_dropout
  required:
  - filters
  - kernel_size
  - '**kwargs'
link: https://www.tensorflow.org/versions/r2.2/api_docs/python/tf/keras/layers/ConvLSTM2D
package: tensorflow
target: ConvLSTM2D
title: tf.keras.layers.ConvLSTM2D
version: 2.2.0
