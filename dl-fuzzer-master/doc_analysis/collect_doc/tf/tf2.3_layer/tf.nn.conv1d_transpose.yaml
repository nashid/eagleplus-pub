aliases:
- tf.compat.v1.nn.conv1d_transpose
constraints:
  data_format:
    default: NWC
    descp: A string. 'NWC' and 'NCW' are supported.
  dilations:
    default: None
    descp: An int or list of ints that has length 1 or 3 which defaults to 1. The
      dilation factor for each dimension of input. If set to k > 1, there will be
      k-1 skipped cells between each filter element on that dimension. Dilations in
      the batch and depth dimensions must be 1.
  filters:
    descp: A 3-D Tensor with the same type as input and shape [filter_width, output_channels,
      in_channels]. filter's in_channels dimension must match that of input.
  input:
    descp: A 3-D Tensor of type float and shape [batch, in_width, in_channels] for
      NWC data format or [batch, in_channels, in_width] for NCW data format.
  name:
    default: None
    descp: Optional name for the returned tensor.
  output_shape:
    descp: A 1-D Tensor, containing three elements, representing the output shape
      of the deconvolution op.
  padding:
    default: SAME
    descp: A string, either 'VALID' or 'SAME'. The padding algorithm. See the "returns"
      section of tf.nn.convolution for details.
  strides:
    descp: An int or list of ints that has length 1 or 3. The number of entries by
      which the filter is moved right at each step.
exceptions:
- ValueError: If input/output depth does not match filter's shape, if output_shape
    is not at 3-element vector, if padding is other than 'VALID' or 'SAME', or if
    data_format is invalid.
inputs:
  optional:
  - padding
  - data_format
  - dilations
  - name
  required:
  - input
  - filters
  - output_shape
  - strides
link: https://www.tensorflow.org/versions/r2.3/api_docs/python/tf/nn/conv1d_transpose
outputs: A Tensor with the same type as input.
package: tensorflow
target: conv1d_transpose
title: tf.nn.conv1d_transpose
version: 2.3.0
