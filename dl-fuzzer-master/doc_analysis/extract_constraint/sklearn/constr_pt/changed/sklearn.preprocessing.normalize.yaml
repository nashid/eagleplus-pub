constraints:
  X:
    descp: '{array-like, sparse matrix}, shape [n_samples, n_features] The data to
      normalize, element by element. scipy.sparse matrices should be in CSR format
      to avoid an un-necessary copy.'
    dtype:
    - numeric
  axis:
    default: '1'
    descp: 0 or 1, optional (1 by default) axis used to normalize the data along.
      If 1, independently normalize each sample, otherwise (if 0) normalize each feature.
    dtype:
    - int
    ndim:
    - '0'
  copy:
    default: 'True'
    descp: boolean, optional, default True set to False to perform inplace row normalization
      and avoid a copy (if the input is already a numpy array or a scipy.sparse CSR
      matrix and if axis is 1).
    dtype:
    - boolean
    ndim:
    - '0'
  norm:
    default: l2
    descp: '''l1'', ''l2'', or ''max'', optional (''l2'' by default) The norm to use
      to normalize each non zero sample (or each non-zero feature if axis is 0).'
    dtype:
    - string
  return_norm:
    default: 'False'
    descp: boolean, default False whether to return the computed norms
    dtype:
    - boolean
    ndim:
    - '0'
inputs:
  optional:
  - norm
  - axis
  - copy
  - return_norm
  required:
  - X
link: ''
package: scikit-learn
target: normalize
title: sklearn.preprocessing.normalize
version: 0.24.X
