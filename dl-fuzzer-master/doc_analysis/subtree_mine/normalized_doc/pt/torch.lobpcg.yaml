constraints:
  A:
    descp: 'the input tensor of size (*, m, m) '
    doc_dtype: Tensor
    normalized_descp:
    - the input D_STRUCTURE of size BSTR
    normalized_docdtype: ONE_WORD D_STRUCTURE
  B:
    default: None
    descp: the input tensor of size (*, m, m) . When not specified, B is interpereted
      as identity matrix.
    doc_dtype: Tensor, optional
    normalized_default: DEFAULT None
    normalized_descp:
    - the input D_STRUCTURE of size BSTR
    - When not specified, B is interpereted as identity matrix
    normalized_docdtype: D_STRUCTURE, optional
  X:
    default: None
    descp: the input tensor of size (*, m, n)  where k <= n <= m. When specified,
      it is used as initial approximation of eigenvectors. X must be a dense tensor.
    doc_dtype: tensor, optional
    normalized_default: DEFAULT None
    normalized_descp:
    - the input D_STRUCTURE of size BSTR where k REXPR REXPR When specified, it is
      used as initial approximation of eigenvectors
    - X must be a dense D_STRUCTURE
    normalized_docdtype: D_STRUCTURE, optional
  iK:
    default: None
    descp: the input tensor of size (*, m, m) . When specified, it will be used as
      preconditioner.
    doc_dtype: tensor, optional
    normalized_default: DEFAULT None
    normalized_descp:
    - the input D_STRUCTURE of size BSTR
    - When specified, it will be used as preconditioner
    normalized_docdtype: D_STRUCTURE, optional
  k:
    default: None
    descp: the number of requested eigenpairs. Default is the number of X  columns
      (when specified) or 1.
    doc_dtype: integer, optional
    normalized_default: DEFAULT None
    normalized_descp:
    - the number of requested eigenpairs
    - Default is the number of X columns BSTR or CONSTANT_NUM
    normalized_docdtype: D_TYPE, optional
  largest:
    default: None
    descp: when True, solve the eigenproblem for the largest eigenvalues. Otherwise,
      solve the eigenproblem for smallest eigenvalues. Default is True.
    doc_dtype: bool, optional
    normalized_default: DEFAULT None
    normalized_descp:
    - when CONSTANT_BOOL, solve the eigenproblem for the largest eigenvalues
    - Otherwise, solve the eigenproblem for smallest eigenvalues
    - Default is CONSTANT_BOOL
    normalized_docdtype: D_TYPE, optional
  method:
    default: None
    descp: select LOBPCG method. See the description of the function above. Default
      is "ortho".
    doc_dtype: str, optional
    normalized_default: DEFAULT None
    normalized_descp:
    - select LOBPCG method
    - See the description of the function above
    - Default is QSTR
    normalized_docdtype: D_TYPE, optional
  n:
    default: None
    descp: if X  is not specified then n specifies the size of the generated random
      approximation of eigenvectors. Default value for n is k. If X  is specifed,
      the value of n (when specified) must be the number of X  columns.
    doc_dtype: integer, optional
    normalized_default: DEFAULT None
    normalized_descp:
    - if X is not specified then n specifies the size of the generated random approximation
      of eigenvectors
    - Default value for n is k If X is specifed, the value of n BSTR must be the number
      of X columns
    normalized_docdtype: D_TYPE, optional
  niter:
    default: None
    descp: maximum number of iterations. When reached, the iteration process is hard-stopped
      and the current approximation of eigenpairs is returned. For infinite iteration
      but until convergence criteria is met, use -1.
    doc_dtype: int, optional
    normalized_default: DEFAULT None
    normalized_descp:
    - maximum number of iterations
    - When reached, the iteration process is hard stopped and the current approximation
      of eigenpairs is returned
    - For infinite iteration but until convergence criteria is met, use CONSTANT_NUM
    normalized_docdtype: D_TYPE, optional
  ortho_bparams:
    default: None
    descp: various parameters to LOBPCG algorithm when using method="ortho".
    doc_dtype: ortho_iparams,
    normalized_default: DEFAULT None
    normalized_descp:
    - various parameters to LOBPCG algorithm when using PARAM QSTR
    normalized_docdtype: ONE_WORD PARAM,
  ortho_fparams:
    default: None
    descp: various parameters to LOBPCG algorithm when using method="ortho".
    doc_dtype: ortho_iparams,
    normalized_default: DEFAULT None
    normalized_descp:
    - various parameters to LOBPCG algorithm when using PARAM QSTR
    normalized_docdtype: ONE_WORD PARAM,
  ortho_iparams:
    default: None
    descp: ''
    normalized_default: DEFAULT None
    normalized_descp: []
  tol:
    default: None
    descp: residual tolerance for stopping criterion. Default is feps ** 0.5 where
      feps is smallest non-zero floating-point number of the given input tensor A
      data type.
    doc_dtype: float, optional
    normalized_default: DEFAULT None
    normalized_descp:
    - residual tolerance for stopping criterion
    - Default is feps CONSTANT_FLOAT where feps is smallest non zero D_TYPE number
      of the given input D_STRUCTURE A data type
    normalized_docdtype: D_TYPE, optional
  tracker:
    default: None
    descp: ''
    doc_dtype: callable, optional
    normalized_default: DEFAULT None
    normalized_descp: []
    normalized_docdtype: callable, optional
inputs:
  optional:
  - k
  - B
  - X
  - n
  - iK
  - niter
  - tol
  - largest
  - method
  - tracker
  - ortho_iparams
  - ortho_fparams
  - ortho_bparams
  required:
  - A
link: https://pytorch.org/docs/stable/torch.html#torch.lobpcg
package: torch
target: lobpcg
title: torch.lobpcg
version: 1.5.0
