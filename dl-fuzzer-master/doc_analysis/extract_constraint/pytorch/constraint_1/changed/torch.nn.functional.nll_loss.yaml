constraints:
  ignore_index:
    default: '-100'
    descp: 'Specifies a target value that is ignored and does not contribute to the
      input gradient. When `size_average` is `True`, the loss is averaged over non-ignored
      targets. Default: -100'
    doc_dtype:
    - int
    dtype:
    - int
    ndim:
    - '0'
  input:
    descp: (N, C)  where C = number of classes or (N, C, H, W)  in case of 2D Loss,
      or (N, C, d_1, d_2, ..., d_K)  where K  >= 1  in the case of K-dimensional loss.
    ndim:
    - '2'
    shape:
    - '[n,c,...]'
    - '[n,c,h,w]'
    - '[n,c]'
  reduce:
    default: None
    descp: 'Deprecated (see `reduction`). By default, the losses are averaged or summed
      over observations for each minibatch depending on `size_average`. When `reduce`
      is `False`, returns a loss per batch element instead and ignores `size_average`.
      Default: `True`'
    doc_dtype:
    - bool
  reduction:
    default: mean
    descp: 'Specifies the reduction to apply to the output: `''none''` | `''mean''`
      | `''sum''`. `''none''`: no reduction will be applied, `''mean''`: the sum of
      the output will be divided by the number of elements in the output, `''sum''`:
      the output will be summed. Note: `size_average` and `reduce` are in the process
      of being deprecated, and in the meantime, specifying either of those two args
      will override `reduction`. Default: `''mean''`'
    doc_dtype:
    - string
    dtype:
    - string
    enum:
    - mean
    - none
    - sum
  size_average:
    default: None
    descp: 'Deprecated (see `reduction`). By default, the losses are averaged over
      each loss element in the batch. Note that for some losses, there multiple elements
      per sample. If the field `size_average` is set to `False`, the losses are instead
      summed for each minibatch. Ignored when reduce is `False`. Default: `True`'
    doc_dtype:
    - bool
  target:
    descp: (N)  where each value is 0  <= targets[i]  <= C-1 , or (N, d_1, d_2, ...,
      d_K)  where K  >= 1  for K-dimensional loss.
    ndim:
    - '1'
    - '>1'
    shape:
    - '[n,...]'
    - '[n]'
  weight:
    default: None
    descp: a manual rescaling weight given to each class. If given, has to be a Tensor
      of size C
    doc_dtype:
    - Tensor
    dtype:
    - numeric
    tensor_t:
    - torch.tensor
dependency:
- c
- h
- n
- w
inputs:
  deprecated:
  - reduce
  - size_average
  optional:
  - weight
  - ignore_index
  - reduction
  required:
  - input
  - target
link: https://pytorch.org/docs/stable/nn.functional.html#torch.nn.functional.nll_loss
package: torch
target: nll_loss
title: torch.nn.functional.nll_loss
version: 1.5.0
