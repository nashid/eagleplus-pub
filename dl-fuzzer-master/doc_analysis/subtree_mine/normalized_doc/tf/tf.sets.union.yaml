aliases:
- tf.compat.v1.sets.set_union
- tf.compat.v1.sets.union
constraints:
  a:
    descp: '`Tensor` or `SparseTensor` of the same type as `b`. If sparse, indices
      must be sorted in row-major order.'
    normalized_descp:
    - D_STRUCTURE of the same type as QSTR
    - If sparse, indices must be sorted in row major order
  b:
    descp: '`Tensor` or `SparseTensor` of the same type as `a`. If sparse, indices
      must be sorted in row-major order.'
    normalized_descp:
    - D_STRUCTURE of the same type as QSTR
    - If sparse, indices must be sorted in row major order
  validate_indices:
    default: 'True'
    descp: Whether to validate the order and range of sparse indices in `a` and `b`.
    normalized_default: DEFAULT CONSTANT_BOOL
    normalized_descp:
    - Whether to validate the order and range of sparse indices in QSTR
inputs:
  optional:
  - validate_indices
  required:
  - a
  - b
link: https://www.tensorflow.org/versions/r2.1/api_docs/python/tf/sets/union
outputs: A `SparseTensor` whose shape is the same rank as `a` and `b`, and all but
  the last dimension the same. Elements along the last dimension contain the unions.
package: tensorflow
target: union
title: tf.sets.union
version: 2.1.0
