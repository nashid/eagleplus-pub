constraints:
  '**kwargs':
    descp: ''
    normalized_descp: []
  axis:
    default: _Null
    descp: Axis along which to choose the top k indices. If not given, the flattened
      array is used. Default is -1.
    doc_dtype: int or None, optional, default='-1'
    normalized_default: DEFAULT Null
    normalized_descp:
    - Axis along which to choose the top k indices
    - If not given the flattened D_STRUCTURE is used
    - Default is CONSTANT_NUM
    normalized_docdtype: D_TYPE or None optional default CONSTANT_NUM
  data:
    default: None
    descp: The input array
    doc_dtype: NDArray
    normalized_default: DEFAULT None
    normalized_descp:
    - The input D_STRUCTURE
    normalized_docdtype: ONE_WORD D_STRUCTURE
  dtype:
    default: _Null
    descp: DType of the output indices when ret_typ is "indices" or "both". An error
      will be raised if the selected data type cannot precisely represent the indices.
    doc_dtype: '{''float16'', ''float32'', ''float64'', ''int32'', ''int64'', ''uint8''},optional,
      default=''float32'''
    normalized_default: DEFAULT Null
    normalized_descp:
    - DType of the output indices when PARAM is QSTR
    - An error will be raised if the selected PARAM type cannot precisely represent
      the indices
    normalized_docdtype: QSTR optional default QSTR
  is_ascend:
    default: _Null
    descp: Whether to choose k largest or k smallest elements. Top K largest elements
      will be chosen if set to false.
    doc_dtype: boolean, optional, default=0
    normalized_default: DEFAULT Null
    normalized_descp:
    - Whether to choose k largest or k smallest elements
    - Top K largest elements will be chosen if set to CONSTANT_BOOL
    normalized_docdtype: D_TYPE optional default CONSTANT_NUM
  k:
    default: _Null
    descp: Number of top elements to select, should be always smaller than or equal
      to the element number in the given axis. A global sort is performed if set k
      < 1.
    doc_dtype: int, optional, default='1'
    normalized_default: DEFAULT Null
    normalized_descp:
    - Number of top elements to select should be always smaller than or equal to the
      element number in the given PARAM
    - A global sort is performed if set k REXPR
    normalized_docdtype: D_TYPE optional default CONSTANT_NUM
  name:
    default: None
    descp: ''
    normalized_default: DEFAULT None
    normalized_descp: []
  out:
    default: None
    descp: The output NDArray to hold the result.
    doc_dtype: NDArray, optional
    normalized_default: DEFAULT None
    normalized_descp:
    - The output D_STRUCTURE to hold the result
    normalized_docdtype: D_STRUCTURE optional
  ret_typ:
    default: _Null
    descp: The return type. "value" means to return the top k values, "indices" means
      to return the indices of the top k values, "mask" means to return a mask array
      containing 0 and 1. 1 means the top k values. "both" means to return a list
      of both values and indices of top k elements.
    doc_dtype: '{''both'', ''indices'', ''mask'', ''value''},optional, default=''indices'''
    normalized_default: DEFAULT Null
    normalized_descp:
    - The return type
    - QSTR means to return the top k values QSTR means to return the indices of the
      top k values QSTR means to return a mask D_STRUCTURE containing CONSTANT_NUM
    - CONSTANT_NUM means the top k values
    - QSTR means to return a D_STRUCTURE of both values and indices of top k elements
    normalized_docdtype: QSTR optional default QSTR
inputs:
  optional:
  - data
  - axis
  - k
  - ret_typ
  - is_ascend
  - dtype
  - out
  - name
  required:
  - '**kwargs'
link: https://mxnet.apache.org/versions/1.6/api/python/docs/api/ndarray/op/index.html#mxnet.ndarray.op.topk
package: mxnet
target: topk
title: mxnet.ndarray.op.topk
version: 1.6.0
