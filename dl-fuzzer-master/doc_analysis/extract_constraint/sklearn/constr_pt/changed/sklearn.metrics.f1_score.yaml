constraints:
  average:
    default: binary
    descp: 'string, [None, ''binary'' (default), ''micro'', ''macro'', ''samples'',                        ''weighted'']
      This parameter is required for multiclass/multilabel targets. If ``None``, the
      scores for each class are returned. Otherwise, this determines the type of averaging
      performed on the data: ``''binary''``: Only report results for the class specified
      by ``pos_label``. This is applicable only if targets (``y_{true,pred}``) are
      binary. ``''micro''``: Calculate metrics globally by counting the total true
      positives, false negatives and false positives. ``''macro''``: Calculate metrics
      for each label, and find their unweighted mean.  This does not take label imbalance
      into account. ``''weighted''``: Calculate metrics for each label, and find their
      average weighted by support (the number of true instances for each label). This
      alters ''macro'' to account for label imbalance; it can result in an F-score
      that is not between precision and recall. ``''samples''``: Calculate metrics
      for each instance, and find their average (only meaningful for multilabel classification
      where this differs from :func:`accuracy_score`).'
    dtype:
    - string
  labels:
    default: None
    descp: list, optional The set of labels to include when ``average != 'binary'``,
      and their order if ``average is None``. Labels present in the data can be excluded,
      for example to calculate a multiclass average ignoring a majority negative class,
      while labels not present in the data will result in 0 components in a macro
      average. For multilabel targets, labels are column indices. By default, all
      labels in ``y_true`` and ``y_pred`` are used in sorted order.
  pos_label:
    default: '1'
    descp: str or int, 1 by default The class to report if ``average='binary'`` and
      the data is binary. If the data are multiclass or multilabel, this will be ignored;
      setting ``labels=[pos_label]`` and ``average != 'binary'`` will report scores
      for that label only.
    dtype:
    - int
    - string
    ndim:
    - '0'
  sample_weight:
    default: None
    descp: array-like of shape (n_samples,), default=None Sample weights.
    ndim:
    - '1'
    shape:
    - '[n_samples]'
  y_pred:
    descp: 1d array-like, or label indicator array / sparse matrix Estimated targets
      as returned by a classifier.
    dtype:
    - numeric
    ndim:
    - '1'
  y_true:
    descp: 1d array-like, or label indicator array / sparse matrix Ground truth (correct)
      target values.
    dtype:
    - numeric
    ndim:
    - '1'
  zero_division:
    default: warn
    descp: '"warn", 0 or 1, default="warn" Sets the value to return when there is
      a zero division, i.e. when all predictions and labels are negative. If set to
      "warn", this acts as 0, but warnings are also raised.'
    dtype:
    - string
dependency:
- n_samples
inputs:
  optional:
  - labels
  - pos_label
  - average
  - sample_weight
  - zero_division
  required:
  - y_true
  - y_pred
link: ''
package: scikit-learn
target: f1_score
title: sklearn.metrics.f1_score
version: 0.24.X
