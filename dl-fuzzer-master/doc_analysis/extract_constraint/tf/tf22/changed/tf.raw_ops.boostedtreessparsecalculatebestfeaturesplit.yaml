constraints:
  l1:
    descp: A Tensor of type float32. l1 regularization factor on leaf weights, per
      instance based.
    dtype:
    - tf.float32
    tensor_t:
    - tf.tensor
  l2:
    descp: A Tensor of type float32. l2 regularization factor on leaf weights, per
      instance based.
    dtype:
    - tf.float32
    tensor_t:
    - tf.tensor
  logits_dimension:
    descp: An int that is >= 1. The dimension of logit, i.e., number of classes.
    dtype:
    - int
    ndim:
    - '0'
    range:
    - '[0,inf)'
  min_node_weight:
    descp: A Tensor of type float32. minimum avg of hessians in a node before required
      for the node to be considered for splitting.
    dtype:
    - tf.float32
    tensor_t:
    - tf.tensor
  name:
    default: None
    descp: A name for the operation (optional).
    dtype:
    - tf.string
    ndim:
    - '0'
  node_id_range:
    descp: A Tensor of type int32. A Rank 1 tensor (shape=[2]) to specify the range
      [first, last) of node ids to process within stats_summary_list. The nodes are
      iterated between the two nodes specified by the tensor, as like for node_id
      in range(node_id_range[0], node_id_range[1]) (Note that the last index node_id_range[1]
      is exclusive).
    dtype:
    - tf.int32
    ndim:
    - '1'
    tensor_t:
    - tf.tensor
  split_type:
    default: inequality
    descp: 'An optional string from: "inequality". Defaults to "inequality". A string
      indicating if this Op should perform inequality split or equality split.'
    dtype:
    - tf.string
    enum:
    - inequality
    ndim:
    - '0'
  stats_summary_indices:
    descp: A Tensor of type int32. A Rank 2 int64 tensor of dense shape N, 4 for accumulated
      stats summary (gradient/hessian) per node per bucket for each feature. The second
      dimension contains node id, feature dimension, bucket id, and stats dim. stats
      dim is the sum of logits dimension and hessian dimension, hessian dimension
      can either be logits dimension if diagonal hessian is used, or logits dimension^2
      if full hessian is used.
    dtype:
    - tf.int32
    - tf.int64
    ndim:
    - '2'
    tensor_t:
    - tf.tensor
  stats_summary_shape:
    descp: A Tensor of type int32. A Rank 1 float tensor of dense shape [4], which
      specifies the dense shape of the sparse tensor, which is [num tree nodes, feature
      dimensions, num buckets, stats dim].
    dtype:
    - float
    - tf.int32
    ndim:
    - '1'
    shape:
    - '[4]'
    tensor_t:
    - tf.tensor
  stats_summary_values:
    descp: A Tensor of type float32. A Rank 1 float tensor of dense shape N, which
      supplies the values for each element in summary_indices.
    dtype:
    - float
    - tf.float32
    ndim:
    - '1'
    tensor_t:
    - tf.tensor
  tree_complexity:
    descp: A Tensor of type float32. adjustment to the gain, per leaf based.
    dtype:
    - tf.float32
    tensor_t:
    - tf.tensor
inputs:
  optional:
  - split_type
  - name
  required:
  - node_id_range
  - stats_summary_indices
  - stats_summary_values
  - stats_summary_shape
  - l1
  - l2
  - tree_complexity
  - min_node_weight
  - logits_dimension
link: https://www.tensorflow.org/versions/r2.2/api_docs/python/tf/raw_ops/BoostedTreesSparseCalculateBestFeatureSplit
outputs:
- A tuple of Tensor objects (node_ids, gains, feature_dimensions, thresholds, left_node_contribs,
  right_node_contribs, split_with_default_directions).
- node_ids: A Tensor of type int32.
- gains: A Tensor of type float32.
- feature_dimensions: A Tensor of type int32.
- thresholds: A Tensor of type int32.
- left_node_contribs: A Tensor of type float32.
- right_node_contribs: A Tensor of type float32.
- split_with_default_directions: A Tensor of type string.
package: tensorflow
target: BoostedTreesSparseCalculateBestFeatureSplit
title: tf.raw_ops.BoostedTreesSparseCalculateBestFeatureSplit
version: 2.2.0
