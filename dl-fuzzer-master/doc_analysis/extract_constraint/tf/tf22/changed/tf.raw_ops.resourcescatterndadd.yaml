constraints:
  indices:
    descp: 'A Tensor. Must be one of the following types: int32, int64. A Tensor.
      Must be one of the following types: int32, int64. A tensor of indices into ref.'
    dtype:
    - int
    tensor_t:
    - tf.tensor
  name:
    default: None
    descp: A name for the operation (optional).
    dtype:
    - tf.string
    ndim:
    - '0'
  ref:
    descp: A Tensor of type resource. A resource handle. Must be from a VarHandleOp.
    tensor_t:
    - tf.tensor
  updates:
    descp: A Tensor. A Tensor. Must have the same type as ref. A tensor of values
      to add to ref.
    dtype:
    - dtype:&ref
    tensor_t:
    - tf.tensor
  use_locking:
    default: 'True'
    descp: An optional bool. Defaults to True. An optional bool. Defaults to True.
      If True, the assignment will be protected by a lock; otherwise the behavior
      is undefined, but may exhibit less contention.
    dtype:
    - tf.bool
    ndim:
    - '0'
inputs:
  optional:
  - use_locking
  - name
  required:
  - ref
  - indices
  - updates
link: https://www.tensorflow.org/versions/r2.2/api_docs/python/tf/raw_ops/ResourceScatterNdAdd
outputs:
- The created Operation.
package: tensorflow
target: ResourceScatterNdAdd
title: tf.raw_ops.ResourceScatterNdAdd
version: 2.2.0
