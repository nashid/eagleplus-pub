descp1,descp2,default,attribute,constraint,in_doc,extracted
,"The shape format of the `inputs` and `outputs` tensors. If True, the inputs and outputs will be in shape`[timesteps, batch, feature]`, whereas in the False case, it will be`[batch, timesteps, feature]`. Using `time_major = True` is a bit more efficient because it avoids transposes at the beginning and end of the RNN calculation. However, most TensorFlow data is batch-major, so by default this function accepts input and emits output in batch-major form.",False,prim_dtype,"dtype(int, tf.bool)",,1
,"The shape format of the `inputs` and `outputs` tensors. If True, the inputs and outputs will be in shape`[timesteps, batch, feature]`, whereas in the False case, it will be`[batch, timesteps, feature]`. Using `time_major = True` is a bit more efficient because it avoids transposes at the beginning and end of the RNN calculation. However, most TensorFlow data is batch-major, so by default this function accepts input and emits output in batch-major form.",False,shape,"shape([timesteps,batch,feature]), ndim(0, 1, 3)",,1
,"The shape format of the `inputs` and `outputs` tensors. If True, the inputs and outputs will be in shape`[timesteps, batch, feature]`, whereas in the False case, it will be`[batch, timesteps, feature]`. Using `time_major = True` is a bit more efficient because it avoids transposes at the beginning and end of the RNN calculation. However, most TensorFlow data is batch-major, so by default this function accepts input and emits output in batch-major form.",False,validvalue,"range([0,inf))",,1
