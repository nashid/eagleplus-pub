constraints:
  '*size':
    descp: a sequence of integers defining the shape of the output tensor. Can be
      a variable number of arguments or a collection like a list or tuple.
    doc_dtype: int...
    normalized_descp:
    - a D_STRUCTURE of D_TYPE defining the shape of the output D_STRUCTURE
    - Can be a variable number of arguments or a collection like a D_STRUCTURE
    normalized_docdtype: ONE_WORD D_TYPE
  device:
    default: None
    descp: 'the desired device of returned tensor. Default: if `None`, uses the current
      device for the default tensor type (see `torch.set_default_tensor_type()`).
      `device` will be the CPU for CPU tensor types and the current CUDA device for
      CUDA tensor types.'
    doc_dtype: '`torch.device`, optional'
    normalized_default: DEFAULT None
    normalized_descp:
    - the desired device of returned D_STRUCTURE
    - Default if QSTR , uses the current device for the default D_STRUCTURE type see
      torch set_default_tensor_type
    - QSTR will be the CPU for CPU D_STRUCTURE types and the current CUDA device for
      CUDA D_STRUCTURE types
    normalized_docdtype: torch device , optional
  dtype:
    default: None
    descp: 'the desired data type of returned tensor. Default: if `None`, uses a global
      default (see `torch.set_default_tensor_type()`).'
    doc_dtype: '`torch.dtype`, optional'
    normalized_default: DEFAULT None
    normalized_descp:
    - the desired data type of returned D_STRUCTURE
    - Default if QSTR , uses a global default see torch set_default_tensor_type
    normalized_docdtype: D_TYPE, optional
  layout:
    default: torch.strided
    descp: 'the desired layout of returned Tensor. Default: `torch.strided`.'
    doc_dtype: '`torch.layout`, optional'
    normalized_default: torch strided
    normalized_descp:
    - the desired layout of returned D_STRUCTURE
    - Default torch strided
    normalized_docdtype: torch layout , optional
  out:
    default: None
    descp: the output tensor.
    doc_dtype: Tensor, optional
    normalized_default: DEFAULT None
    normalized_descp:
    - the output D_STRUCTURE
    normalized_docdtype: D_STRUCTURE, optional
  requires_grad:
    default: 'False'
    descp: 'If autograd should record operations on the returned tensor. Default:
      `False`.'
    doc_dtype: bool, optional
    normalized_default: DEFAULT CONSTANT_BOOL
    normalized_descp:
    - If autograd should record operations on the returned D_STRUCTURE
    - Default CONSTANT_BOOL
    normalized_docdtype: D_TYPE, optional
inputs:
  optional:
  - out
  - dtype
  - layout
  - device
  - requires_grad
  required:
  - '*size'
link: https://pytorch.org/docs/stable/torch.html#torch.ones
package: torch
ret_type: Tensor
target: ones
title: torch.ones
version: 1.5.0
