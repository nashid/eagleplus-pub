constraints:
  message:
    default: None
    descp: A string to prefix to the default message.
    dtype:
    - int
    - tf.dtype
    - tf.string
    ndim:
    - '0'
    - '1'
    range:
    - '[0,1]'
    - '[0,inf)'
    shape:
    - '[1]'
  name:
    default: None
    descp: A name for this operation (optional).  Defaults to "assert_greater_equal".
    dtype:
    - float
    - int
    - tf.bool
    - tf.dtype
    - tf.string
    enum:
    - (optional)
    ndim:
    - '0'
    - '1'
    shape:
    - '[2]'
    tensor_t:
    - tf.tensor
  summarize:
    default: None
    descp: Print this many entries of each tensor.
    dtype:
    - int
    - numeric
    - tf.bool
    - tf.dtype
    - tf.string
    ndim:
    - '0'
    - '1'
    range:
    - '[0,inf)'
    shape:
    - '[1]'
    - '[n]'
    tensor_t:
    - tf.tensor
  x:
    descp: Numeric `Tensor`.
    dtype:
    - numeric
    ndim:
    - '0'
    - '1'
    range:
    - '[0,1]'
    - '[0,inf)'
    shape:
    - '[1]'
    - '[n]'
    tensor_t:
    - tf.tensor
  y:
    descp: Numeric `Tensor`, same dtype as and broadcastable to `x`.
    dtype:
    - '&x'
    - tf.string
    ndim:
    - '0'
    range:
    - '[0,1]'
    shape:
    - '&x'
exceptions:
- InvalidArgumentError: if the check can be performed immediately and`x >= y` is False.
    The check can be performed immediately during eager execution or if `x` and `y`
    are statically known.
inputs:
  optional:
  - message
  - summarize
  - name
  required:
  - x
  - y
link: https://www.tensorflow.org/versions/r2.1/api_docs/python/tf/debugging/assert_greater_equal
outputs: Op that raises `InvalidArgumentError` if `x >= y` is False. This can be   used
  with `tf.control_dependencies` inside of `tf.function`s to block   followup computation
  until the check has executed.
package: tensorflow
target: assert_greater_equal
title: tf.debugging.assert_greater_equal
version: 2.1.0
