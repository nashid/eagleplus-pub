constraints:
  input:
    descp: the input tensor of at least `signal_ndim` dimensions
    doc_dtype:
    - Tensor
    ndim:
    - '>=&signal_ndim'
    tensor_t:
    - torch.tensor
  normalized:
    default: 'False'
    descp: 'controls whether to return normalized results. Default: `False`'
    doc_dtype:
    - bool
    dtype:
    - torch.bool
    ndim:
    - '0'
  onesided:
    default: 'True'
    descp: 'controls whether to return half of results to avoid redundancy. Default:
      `True`'
    doc_dtype:
    - bool
    dtype:
    - torch.bool
    ndim:
    - '0'
  signal_ndim:
    descp: the number of dimensions in each signal. `signal_ndim` can only be 1, 2
      or 3
    doc_dtype:
    - python:int
    dtype:
    - int
    enum:
    - '1'
    - '2'
    - '3'
    ndim:
    - '0'
    range:
    - '[0,inf)'
inputs:
  optional:
  - normalized
  - onesided
  required:
  - input
  - signal_ndim
link: https://pytorch.org/docs/1.4.0/torch.html#torch.rfft
package: torch
ret_type: Tensor
target: rfft
title: torch.rfft
version: 1.4.0
