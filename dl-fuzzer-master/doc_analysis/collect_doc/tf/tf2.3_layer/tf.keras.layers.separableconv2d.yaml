aliases:
- tf.keras.layers.SeparableConvolution2D
- tf.compat.v1.keras.layers.SeparableConv2D
- tf.compat.v1.keras.layers.SeparableConvolution2D
constraints:
  '**kwargs':
    descp: ''
  activation:
    default: None
    descp: Activation function to use. If you don't specify anything, no activation
      is applied ( see keras.activations).
  activity_regularizer:
    default: None
    descp: Regularizer function applied to the output of the layer (its "activation")
      ( see keras.regularizers).
  bias_constraint:
    default: None
    descp: Constraint function applied to the bias vector ( see keras.constraints).
  bias_initializer:
    default: zeros
    descp: Initializer for the bias vector ( see keras.initializers).
  bias_regularizer:
    default: None
    descp: Regularizer function applied to the bias vector ( see keras.regularizers).
  data_format:
    default: None
    descp: A string, one of channels_last (default) or channels_first. The ordering
      of the dimensions in the inputs. channels_last corresponds to inputs with shape
      (batch_size, height, width, channels) while channels_first corresponds to inputs
      with shape (batch_size, channels, height, width). It defaults to the image_data_format
      value found in your Keras config file at ~/.keras/keras.json. If you never set
      it, then it will be "channels_last".
  depth_multiplier:
    default: '1'
    descp: The number of depthwise convolution output channels for each input channel.
      The total number of depthwise convolution output channels will be equal to filters_in
      * depth_multiplier.
  depthwise_constraint:
    default: None
    descp: Constraint function applied to the depthwise kernel matrix ( see keras.constraints).
  depthwise_initializer:
    default: glorot_uniform
    descp: Initializer for the depthwise kernel matrix ( see keras.initializers).
  depthwise_regularizer:
    default: None
    descp: Regularizer function applied to the depthwise kernel matrix (see keras.regularizers).
  dilation_rate:
    default: (1,1)
    descp: An integer or tuple/list of 2 integers, specifying the dilation rate to
      use for dilated convolution. Currently, specifying any dilation_rate value !=
      1 is incompatible with specifying any strides value != 1.
  filters:
    descp: Integer, the dimensionality of the output space (i.e. the number of output
      filters in the convolution).
  kernel_size:
    descp: An integer or tuple/list of 2 integers, specifying the height and width
      of the 2D convolution window. Can be a single integer to specify the same value
      for all spatial dimensions.
  padding:
    default: valid
    descp: one of "valid" or "same" (case-insensitive).
  pointwise_constraint:
    default: None
    descp: Constraint function applied to the pointwise kernel matrix ( see keras.constraints).
  pointwise_initializer:
    default: glorot_uniform
    descp: Initializer for the pointwise kernel matrix ( see keras.initializers).
  pointwise_regularizer:
    default: None
    descp: Regularizer function applied to the pointwise kernel matrix (see keras.regularizers).
  strides:
    default: (1,1)
    descp: An integer or tuple/list of 2 integers, specifying the strides of the convolution
      along the height and width. Can be a single integer to specify the same value
      for all spatial dimensions. Specifying any stride value != 1 is incompatible
      with specifying any dilation_rate value != 1.
  use_bias:
    default: 'True'
    descp: Boolean, whether the layer uses a bias vector.
exceptions:
- ValueError: if padding is "causal".
- ValueError: when both strides > 1 and dilation_rate > 1.
inputs:
  optional:
  - strides
  - padding
  - data_format
  - dilation_rate
  - depth_multiplier
  - activation
  - use_bias
  - depthwise_initializer
  - pointwise_initializer
  - bias_initializer
  - depthwise_regularizer
  - pointwise_regularizer
  - bias_regularizer
  - activity_regularizer
  - depthwise_constraint
  - pointwise_constraint
  - bias_constraint
  required:
  - filters
  - kernel_size
  - '**kwargs'
link: https://www.tensorflow.org/versions/r2.3/api_docs/python/tf/keras/layers/SeparableConv2D
outputs: A tensor of rank 4 representing activation(separableconv2d(inputs, kernel)
  + bias).
package: tensorflow
target: SeparableConv2D
title: tf.keras.layers.SeparableConv2D
version: 2.3.0
