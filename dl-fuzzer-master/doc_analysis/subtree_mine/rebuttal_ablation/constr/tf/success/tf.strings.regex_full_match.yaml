aliases:
- tf.compat.v1.strings.regex_full_match
constraints:
  input:
    descp: A `Tensor` of type `string`. A string tensor of the text to be processed.
    dtype:
    - int
    - numeric
    - tf.bool
    - tf.dtype
    - tf.string
    ndim:
    - '0'
    - '1'
    range:
    - '[0,1]'
    - '[0,inf)'
    shape:
    - '[1]'
    - '[n]'
    tensor_t:
    - tf.tensor
  name:
    default: None
    descp: A name for the operation (optional).
    dtype:
    - float
    - int
    - tf.bool
    - tf.dtype
    - tf.string
    enum:
    - (optional)
    ndim:
    - '0'
    - '1'
    range:
    - (optional)
    - '[0,inf)'
    shape:
    - '[2]'
    tensor_t:
    - tf.tensor
  pattern:
    descp: A `Tensor` of type `string`. A scalar string tensor containing the regular
      expression to match the input.
    dtype:
    - '&input'
    - int
    - numeric
    - tf.bool
    - tf.dtype
    - tf.string
    ndim:
    - '0'
    - '1'
    range:
    - '[0,1]'
    - '[0,inf)'
    shape:
    - '&input'
    - '[1]'
    - '[n]'
    tensor_t:
    - tf.tensor
inputs:
  optional:
  - name
  required:
  - input
  - pattern
link: https://www.tensorflow.org/versions/r2.1/api_docs/python/tf/strings/regex_full_match
outputs: A `Tensor` of type `bool`.
package: tensorflow
target: regex_full_match
title: tf.strings.regex_full_match
version: 2.1.0
