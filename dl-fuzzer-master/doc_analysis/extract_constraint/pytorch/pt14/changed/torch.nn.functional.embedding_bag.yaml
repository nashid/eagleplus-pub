constraints:
  input:
    descp: Tensor containing bags of indices into the embedding matrix
    doc_dtype:
    - LongTensor
    dtype:
    - torch.int64
    tensor_t:
    - torch.tensor
  max_norm:
    default: None
    descp: 'If given, each embedding vector with norm larger than `max_norm` is renormalized
      to have norm `max_norm`. Note: this will modify `weight` in-place.'
    doc_dtype:
    - python:float
  mode:
    default: mean
    descp: '`"sum"`, `"mean"` or `"max"`. Specifies the way to reduce the bag. Default:
      `"mean"`'
    doc_dtype:
    - string
    dtype:
    - string
  norm_type:
    default: '2'
    descp: The `p` in the `p`-norm to compute for the `max_norm` option. Default `2`.
    doc_dtype:
    - python:float
    dtype:
    - int
    ndim:
    - '0'
  offsets:
    default: None
    descp: Only used when `input` is 1D. `offsets` determines the starting index position
      of each bag (sequence) in `input`.
    doc_dtype:
    - LongTensor
    dtype:
    - torch.int64
    ndim:
    - '1'
  per_sample_weights:
    default: None
    descp: a tensor of float / double weights, or None to indicate all weights should
      be taken to be 1. If specified, `per_sample_weights` must have exactly the same
      shape as input and is treated as having the same `offsets`, if those are not
      None.
    doc_dtype:
    - Tensor
    dtype:
    - torch.float32
    - torch.float64
    shape:
    - shape:&input
    tensor_t:
    - torch.tensor
  scale_grad_by_freq:
    default: 'False'
    descp: 'if given, this will scale gradients by the inverse of frequency of the
      words in the mini-batch. Default `False`. Note: this option is not supported
      when `mode="max"`.'
    doc_dtype:
    - boolean
    dtype:
    - torch.bool
    ndim:
    - '0'
  sparse:
    default: 'False'
    descp: 'if `True`, gradient w.r.t. `weight` will be a sparse tensor. See Notes
      under `torch.nn.Embedding` for more details regarding sparse gradients. Note:
      this option is not supported when `mode="max"`.'
    doc_dtype:
    - bool
    dtype:
    - torch.bool
    ndim:
    - '0'
  weight:
    descp: The embedding matrix with number of rows equal to the maximum possible
      index + 1, and number of columns equal to the embedding size
    doc_dtype:
    - Tensor
    dtype:
    - numeric
    tensor_t:
    - torch.tensor
inputs:
  optional:
  - offsets
  - max_norm
  - norm_type
  - scale_grad_by_freq
  - mode
  - sparse
  - per_sample_weights
  required:
  - input
  - weight
link: https://pytorch.org/docs/1.4.0/nn.functional.html#torch.nn.functional.embedding_bag
package: torch
target: embedding_bag
title: torch.nn.functional.embedding_bag
version: 1.4.0
