constraints:
  device:
    default: None
    descp: 'the desired device of returned tensor. Default: if `None`, uses the current
      device for the default tensor type (see `torch.set_default_tensor_type()`).
      `device` will be the CPU for CPU tensor types and the current CUDA device for
      CUDA tensor types.'
    doc_dtype:
    - torch.device
  dtype:
    default: None
    descp: 'the desired data type of returned tensor. Default: if `None`, uses a global
      default (see `torch.set_default_tensor_type()`).'
    doc_dtype:
    - torch.dtype
    dtype:
    - torch.dtype
  fill_value:
    descp: the number to fill the output tensor with.
    dtype:
    - int
    ndim:
    - '0'
    range:
    - '[0,inf)'
  layout:
    default: torch.strided
    descp: 'the desired layout of returned Tensor. Default: `torch.strided`.'
    doc_dtype:
    - torch.layout
  out:
    default: None
    descp: the output tensor.
    doc_dtype:
    - Tensor
    tensor_t:
    - torch.tensor
  requires_grad:
    default: 'False'
    descp: 'If autograd should record operations on the returned tensor. Default:
      `False`.'
    doc_dtype:
    - bool
    dtype:
    - torch.bool
    ndim:
    - '0'
  size:
    descp: a list, tuple, or `torch.Size` of integers defining the shape of the output
      tensor.
    doc_dtype:
    - int
    dtype:
    - int
    range:
    - '[0,inf)'
    structure:
    - list
    - tuple
inputs:
  optional:
  - out
  - dtype
  - layout
  - device
  - requires_grad
  required:
  - size
  - fill_value
link: https://pytorch.org/docs/1.6.0/generated/torch.full.html#torch.full#torch.full
package: torch
ret_type: Tensor
target: full
title: torch.full
version: 1.6.0
