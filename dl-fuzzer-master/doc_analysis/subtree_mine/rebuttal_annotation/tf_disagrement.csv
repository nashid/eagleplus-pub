,API,Arg,Descp,Normalized_descp,dtype,structure,shape,ndim,range,enum,tensor_t,Unnamed: 11,Unnamed: 12,Unnamed: 13,Unnamed: 14,Unnamed: 15,Unnamed: 16,Unnamed: 17,Unnamed: 18,Unnamed: 19,Unnamed: 20,Unnamed: 21
0,tf.keras.backend.conv2d_transpose,output_shape,1D int tensor for the output shape.,CONSTANT_NUM D D_TYPE D_STRUCTURE for the output shape,D_TYPE,D_STRUCTURE,,CONSTANT_NUM,,,,,,,,,,,,,,
1,tf.keras.backend.conv2d_transpose,output_shape,1D int tensor for the output shape.,constant_num d d_type d_structure for the output shape,,,,CONSTANT_NUM,,,D_STRUCTURE,,,,,,,,,,,
2,,,,,,,,,,,,,,,,,,,,,,
3,tf.nn.bias_add,bias,"A 1-D `Tensor` with size matching the channel dimension of `value`. Must be the same type as `value` unless `value` is a quantized type, in which case a different quantized type may be used.",Must be the same type as PARAM unless PARAM is a quantized type in which case a different quantized type may be used,&PARAM ,,,,,,,,,,,,,,,,,
4,tf.nn.bias_add,bias,"A 1-D `Tensor` with size matching the channel dimension of `value`. Must be the same type as `value` unless `value` is a quantized type, in which case a different quantized type may be used.",must be the same type as param unless param is a quantized type in which case a different quantized type may be used,&PARAM,,,,,,,,,,,,,,,,,
5,,,,,,,,,,,,,,,,,,,,,,
6,tf.keras.layers.experimental.preprocessing.Normalization,reset_state,"Optional argument specifying whether to clear the state of the layer at the start of the call to `adapt`, or whether to start from the existing state. Subclasses may choose to throw if reset_state is set to 'False'.",Optional argument specifying whether to clear the state of the layer at the start of the call to QSTR or whether to start from the existing state,,,,,,,,,,,,,,,,,,
7,tf.keras.layers.experimental.preprocessing.Normalization,reset_state,"Optional argument specifying whether to clear the state of the layer at the start of the call to `adapt`, or whether to start from the existing state. Subclasses may choose to throw if reset_state is set to 'False'.",optional argument specifying whether to clear the state of the layer at the start of the call to qstr or whether to start from the existing state,bool,,,0,,,,,,,,,,,,,,
8,,,,,,,,,,,,,,,,,,,,,,
9,tf.keras.layers.experimental.preprocessing.Normalization,reset_state,"Optional argument specifying whether to clear the state of the layer at the start of the call to `adapt`, or whether to start from the existing state. Subclasses may choose to throw if reset_state is set to 'False'.",Subclasses may choose to throw if reset_state is set to CONSTANT_BOOL,bool,,,0,,,,,,,,,,,,,,
10,tf.keras.layers.experimental.preprocessing.Normalization,reset_state,"Optional argument specifying whether to clear the state of the layer at the start of the call to `adapt`, or whether to start from the existing state. Subclasses may choose to throw if reset_state is set to 'False'.",subclasses may choose to throw if reset_state is set to constant_bool,,,,,,,,,,,,,,,,,,
11,,,,,,,,,,,,,,,,,,,,,,
12,tf.data.experimental.make_batched_features_dataset,sloppy_ordering,"If `True`, reading performance will be improved at the cost of non-deterministic ordering. If `False`, the order of elements produced is deterministic prior to shuffling (elements are still randomized if `shuffle=True`. Note that if the seed is set, then order of elements after shuffling is deterministic). Defaults to `False`.",Defaults to CONSTANT_BOOL,bool,,,0,,,,,,,,,,,,,,
13,tf.data.experimental.make_batched_features_dataset,sloppy_ordering,"If `True`, reading performance will be improved at the cost of non-deterministic ordering. If `False`, the order of elements produced is deterministic prior to shuffling (elements are still randomized if `shuffle=True`. Note that if the seed is set, then order of elements after shuffling is deterministic). Defaults to `False`.",defaults to constant_bool,,,,,,,,,,,,,,,,,,
14,,,,,,,,,,,,,,,,,,,,,,
15,tf.keras.backend.reshape,shape,Target shape tuple.,Target shape D_STRUCTURE,,D_STRUCTURE,,,,,,,,,,,,,,,,
16,tf.keras.backend.reshape,shape,Target shape tuple.,target shape d_structure,int,D_STRUCTURE,,1,"[0,inf)",,,,,,,,,,,,,
17,,,,,,,,,,,,,,,,,,,,,,
18,tf.data.experimental.make_batched_features_dataset,shuffle,"A boolean, indicates whether the input should be shuffled. Defaults to `True`.",Defaults to CONSTANT_BOOL,bool,,,0,,,,,,,,,,,,,,
19,tf.data.experimental.make_batched_features_dataset,shuffle,"A boolean, indicates whether the input should be shuffled. Defaults to `True`.",defaults to constant_bool,,,,,,,,,,,,,,,,,,
20,,,,,,,,,,,,,,,,,,,,,,
21,tf.sparse.eye,num_columns,Optional non-negative integer or `int32` scalar `tensor` giving the number of columns in the resulting matrix. Defaults to `num_rows`.,Defaults to PARAM,,,,,,&PARAM,,,,,,,,,,,,
22,tf.sparse.eye,num_columns,Optional non-negative integer or `int32` scalar `tensor` giving the number of columns in the resulting matrix. Defaults to `num_rows`.,defaults to param,,,,,,,,,,,,,,,,,,
23,,,,,,,,,,,,,,,,,,,,,,
24,tf.sparse.eye,num_columns,DF: None,DEFAULT None,,,,,,&PARAM,,,,,,,,,,,,
25,tf.sparse.eye,num_columns,DF: None,default none,,,,,,,,,,,,,,,,,,
26,,,,,,,,,,,,,,,,,,,,,,
27,tf.keras.layers.SimpleRNNCell,recurrent_dropout,Float between 0 and 1. Fraction of the units to drop for the linear transformation of the recurrent state. Default: 0.,D_TYPE between CONSTANT_NUM,D_TYPE,,,,CONSTANT_VAL,,,,,,,,,,,,,
28,tf.keras.layers.SimpleRNNCell,recurrent_dropout,Float between 0 and 1. Fraction of the units to drop for the linear transformation of the recurrent state. Default: 0.,d_type between constant_num,D_TYPE,,,,CONSTANT_NUM,,,,,,,,,,,,,
29,,,,,,,,,,,,,,,,,,,,,,
30,tf.keras.layers.SimpleRNNCell,recurrent_dropout,Float between 0 and 1. Fraction of the units to drop for the linear transformation of the recurrent state. Default: 0.,Fraction of the PARAM to drop for the linear transformation of the recurrent state,,,,,,,,,,,,,,,,,,
31,tf.keras.layers.SimpleRNNCell,recurrent_dropout,Float between 0 and 1. Fraction of the units to drop for the linear transformation of the recurrent state. Default: 0.,fraction of the param to drop for the linear transformation of the recurrent state,,,,,"[0,1]",,,,,,,,,,,,,
32,,,,,,,,,,,,,,,,,,,,,,
33,tf.keras.layers.SimpleRNNCell,recurrent_dropout,Float between 0 and 1. Fraction of the units to drop for the linear transformation of the recurrent state. Default: 0.,Default CONSTANT_NUM,,,,0,,CONSTANT_NUM,,,,,,,,,,,,
34,tf.keras.layers.SimpleRNNCell,recurrent_dropout,Float between 0 and 1. Fraction of the units to drop for the linear transformation of the recurrent state. Default: 0.,default constant_num,,,,,,,,,,,,,,,,,,
35,,,,,,,,,,,,,,,,,,,,,,
36,tf.keras.layers.SimpleRNNCell,recurrent_dropout,DF: 0.0,DEFAULT CONSTANT_FLOAT,,,,0,,CONSTANT_FLOAT,,,,,,,,,,,,
37,tf.keras.layers.SimpleRNNCell,recurrent_dropout,DF: 0.0,default constant_float,float,,,0,,,,,,,,,,,,,,
38,,,,,,,,,,,,,,,,,,,,,,
39,tf.keras.preprocessing.image.load_img,interpolation,"Interpolation method used to resample the image if the     target size is different from that of the loaded image.     Supported methods are ""nearest"", ""bilinear"", and ""bicubic"".     If PIL version 1.1.3 or newer is installed, ""lanczos"" is also     supported. If PIL version 3.4.0 or newer is installed, ""box"" and     ""hamming"" are also supported. By default, ""nearest"" is used.`",If PIL version CONSTANT_NUM CONSTANT_NUM or newer is installed QSTR are also supported,,,,,,QSTR,,,,,,,,,,,,
40,tf.keras.preprocessing.image.load_img,interpolation,"Interpolation method used to resample the image if the     target size is different from that of the loaded image.     Supported methods are ""nearest"", ""bilinear"", and ""bicubic"".     If PIL version 1.1.3 or newer is installed, ""lanczos"" is also     supported. If PIL version 3.4.0 or newer is installed, ""box"" and     ""hamming"" are also supported. By default, ""nearest"" is used.`",if pil version constant_num constant_num or newer is installed qstr are also supported,,,,,,,,,,,,,,,,,,
41,,,,,,,,,,,,,,,,,,,,,,
42,tf.keras.preprocessing.image.load_img,interpolation,"Interpolation method used to resample the image if the     target size is different from that of the loaded image.     Supported methods are ""nearest"", ""bilinear"", and ""bicubic"".     If PIL version 1.1.3 or newer is installed, ""lanczos"" is also     supported. If PIL version 3.4.0 or newer is installed, ""box"" and     ""hamming"" are also supported. By default, ""nearest"" is used.`",If PIL version CONSTANT_NUM CONSTANT_NUM or newer is installed QSTR is also supported,,,,,,QSTR,,,,,,,,,,,,
43,tf.keras.preprocessing.image.load_img,interpolation,"Interpolation method used to resample the image if the     target size is different from that of the loaded image.     Supported methods are ""nearest"", ""bilinear"", and ""bicubic"".     If PIL version 1.1.3 or newer is installed, ""lanczos"" is also     supported. If PIL version 3.4.0 or newer is installed, ""box"" and     ""hamming"" are also supported. By default, ""nearest"" is used.`",if pil version constant_num constant_num or newer is installed qstr is also supported,,,,,,,,,,,,,,,,,,
44,,,,,,,,,,,,,,,,,,,,,,
45,tf.keras.preprocessing.image.load_img,interpolation,"Interpolation method used to resample the image if the     target size is different from that of the loaded image.     Supported methods are ""nearest"", ""bilinear"", and ""bicubic"".     If PIL version 1.1.3 or newer is installed, ""lanczos"" is also     supported. If PIL version 3.4.0 or newer is installed, ""box"" and     ""hamming"" are also supported. By default, ""nearest"" is used.`",By default QSTR is used,,,,,,QSTR,,,,,,,,,,,,
46,tf.keras.preprocessing.image.load_img,interpolation,"Interpolation method used to resample the image if the     target size is different from that of the loaded image.     Supported methods are ""nearest"", ""bilinear"", and ""bicubic"".     If PIL version 1.1.3 or newer is installed, ""lanczos"" is also     supported. If PIL version 3.4.0 or newer is installed, ""box"" and     ""hamming"" are also supported. By default, ""nearest"" is used.`",by default qstr is used,,,,,,,,,,,,,,,,,,
47,,,,,,,,,,,,,,,,,,,,,,
48,tf.keras.preprocessing.image.load_img,interpolation,DF: nearest,DEFAULT DF_STR,string,,,0,,QSTR,,,,,,,,,,,,
49,tf.keras.preprocessing.image.load_img,interpolation,DF: nearest,default df_str,string,,,0,,DF_STR,,,,,,,,,,,,
50,,,,,,,,,,,,,,,,,,,,,,
51,tf.image.psnr,max_val,"The dynamic range of the images (i.e., the difference between the maximum the and minimum allowed values).",The dynamic range of the images BSTR,float,,,0,,,,,,,,,,,,,,
52,tf.image.psnr,max_val,"The dynamic range of the images (i.e., the difference between the maximum the and minimum allowed values).",the dynamic range of the images bstr,,,,,,,,,,,,,,,,,,
53,,,,,,,,,,,,,,,,,,,,,,
54,tf.nn.conv2d_transpose,padding,"A string, either `'VALID'` or `'SAME'`. The padding algorithm. See the ""returns"" section of `tf.nn.convolution` for details.",A D_TYPE either QSTR,D_TYPE,,,,,QSTR,,,,,,,,,,,,
55,tf.nn.conv2d_transpose,padding,"A string, either `'VALID'` or `'SAME'`. The padding algorithm. See the ""returns"" section of `tf.nn.convolution` for details.",a d_type either qstr,D_TYPE,,,0,,QSTR,,,,,,,,,,,,
56,,,,,,,,,,,,,,,,,,,,,,
57,tf.debugging.assert_greater,name,"A name for this operation (optional).  Defaults to ""assert_greater"".",Defaults to QSTR,,,,,,QSTR,,,,,,,,,,,,
58,tf.debugging.assert_greater,name,"A name for this operation (optional).  Defaults to ""assert_greater"".",defaults to qstr,,,,,,,,,,,,,,,,,,
59,,,,,,,,,,,,,,,,,,,,,,
60,tf.data.experimental.dense_to_ragged_batch,row_splits_dtype,The dtype that should be used for the `row_splits` of any new ragged tensors.  Existing `tf.RaggedTensor` elements do not have their row_splits dtype changed.,The dtype that should be used for the QSTR of any new ragged D_STRUCTURE,dtype,,,,,,,,,,,,,,,,,
61,tf.data.experimental.dense_to_ragged_batch,row_splits_dtype,The dtype that should be used for the `row_splits` of any new ragged tensors.  Existing `tf.RaggedTensor` elements do not have their row_splits dtype changed.,the dtype that should be used for the qstr of any new ragged d_structure,tf.dtype,,,,,,,,,,,,,,,,,
62,,,,,,,,,,,,,,,,,,,,,,
63,tf.data.experimental.dense_to_ragged_batch,row_splits_dtype,DF: tf.dtypes.int64,ONE_WORD D_TYPE,,,,,,tf.dtypes.int64,,,,,,,,,,,,
64,tf.data.experimental.dense_to_ragged_batch,row_splits_dtype,DF: tf.dtypes.int64,one_word d_type,tf.dtype,,,,,,,,,,,,,,,,,
65,,,,,,,,,,,,,,,,,,,,,,
66,tf.keras.backend.any,axis,axis along which to perform the reduction.,axis along which to perform the reduction,int,,,0,,,,,,,,,,,,,,
67,tf.keras.backend.any,axis,axis along which to perform the reduction.,axis along which to perform the reduction,int,,,,,,,,,,,,,,,,,
68,,,,,,,,,,,,,,,,,,,,,,
69,tf.keras.layers.LSTMCell,activation,"Activation function to use. Default: hyperbolic tangent (`tanh`). If you pass `None`, no activation is applied (ie. ""linear"" activation: `a(x) = x`).",Default hyperbolic tangent QSTR,,,,,,QSTR,,,,,,,,,,,,
70,tf.keras.layers.LSTMCell,activation,"Activation function to use. Default: hyperbolic tangent (`tanh`). If you pass `None`, no activation is applied (ie. ""linear"" activation: `a(x) = x`).",default hyperbolic tangent qstr,,,,,,,,,,,,,,,,,,
71,,,,,,,,,,,,,,,,,,,,,,
72,tf.keras.layers.LSTMCell,activation,DF: tanh,DEFAULT DF_STR,string,,,0,,,,,,,,,,,,,,
73,tf.keras.layers.LSTMCell,activation,DF: tanh,default df_str,string,,,0,,DF_STR,,,,,,,,,,,,
74,,,,,,,,,,,,,,,,,,,,,,
75,tf.fingerprint,data,A `Tensor`. Must have rank 1 or higher.,Must have rank CONSTANT_NUM or higher,,,,"[1,inf)",,,,,,,,,,,,,,
76,tf.fingerprint,data,A `Tensor`. Must have rank 1 or higher.,must have rank constant_num or higher,,,,>=CONSTANT_NUM,,,,,,,,,,,,,,
77,,,,,,,,,,,,,,,,,,,,,,
78,tf.signal.hamming_window,dtype,The data type to produce. Must be a floating point type.,The data type to produce,dtype,,,,,,,,,,,,,,,,,
79,tf.signal.hamming_window,dtype,The data type to produce. Must be a floating point type.,the data type to produce,tf.dtype,,,,,,,,,,,,,,,,,
80,,,,,,,,,,,,,,,,,,,,,,
81,tf.signal.hamming_window,dtype,The data type to produce. Must be a floating point type.,Must be a D_TYPE type,D_TYPE,,,,,,,,,,,,,,,,,
82,tf.signal.hamming_window,dtype,The data type to produce. Must be a floating point type.,must be a d_type type,D_TYPE,,,0,,,,,,,,,,,,,,
83,,,,,,,,,,,,,,,,,,,,,,
84,tf.signal.hamming_window,dtype,DF: tf.dtypes.float32,ONE_WORD D_TYPE,,,,,,tf.dtypes.float32,,,,,,,,,,,,
85,tf.signal.hamming_window,dtype,DF: tf.dtypes.float32,one_word d_type,tf.dtype,,,,,,,,,,,,,,,,,
86,,,,,,,,,,,,,,,,,,,,,,
87,tf.keras.layers.RNN,go_backwards,"Boolean (default `False`). If True, process the input sequence backwards and return the reversed sequence.",D_TYPE default CONSTANT_BOOL,D_TYPE,,,,,,,,,,,,,,,,,
88,tf.keras.layers.RNN,go_backwards,"Boolean (default `False`). If True, process the input sequence backwards and return the reversed sequence.",d_type default constant_bool,D_TYPE,,,0,,,,,,,,,,,,,,
89,,,,,,,,,,,,,,,,,,,,,,
90,tf.keras.layers.RNN,go_backwards,"Boolean (default `False`). If True, process the input sequence backwards and return the reversed sequence.",If CONSTANT_BOOL process the input D_STRUCTURE backwards and return the reversed D_STRUCTURE,,,,,,,,,,,,,,,,,,
91,tf.keras.layers.RNN,go_backwards,"Boolean (default `False`). If True, process the input sequence backwards and return the reversed sequence.",if constant_bool process the input d_structure backwards and return the reversed d_structure,bool,,,0,,,,,,,,,,,,,,
92,,,,,,,,,,,,,,,,,,,,,,
93,tf.keras.layers.Dense,bias_initializer,DF: zeros,DEFAULT DF_STR,string,,,0,,,,,,,,,,,,,,
94,tf.keras.layers.Dense,bias_initializer,DF: zeros,default df_str,string,,,0,,DF_STR,,,,,,,,,,,,
95,,,,,,,,,,,,,,,,,,,,,,
96,tf.keras.utils.register_keras_serializable,package,DF: Custom,DEFAULT DF_STR,D_TYPE,,,,,,,,,,,,,,,,,
97,tf.keras.utils.register_keras_serializable,package,DF: Custom,default df_str,string,,,0,,DF_STR,,,,,,,,,,,,
98,,,,,,,,,,,,,,,,,,,,,,
