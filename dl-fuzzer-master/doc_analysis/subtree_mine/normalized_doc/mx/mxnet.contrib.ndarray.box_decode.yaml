constraints:
  '**kwargs':
    descp: ''
    normalized_descp: []
  anchors:
    default: None
    descp: (1, N, 4) encoded in corner or center
    doc_dtype: NDArray
    normalized_default: DEFAULT None
    normalized_descp:
    - BSTR encoded in corner or center
    normalized_docdtype: ONE_WORD D_STRUCTURE
  clip:
    default: _Null
    descp: If larger than 0, bounding box target will be clipped to this value.
    doc_dtype: float, optional, default=-1
    normalized_default: DEFAULT Null
    normalized_descp:
    - If larger than CONSTANT_NUM, bounding box target will be clipped to this value
    normalized_docdtype: D_TYPE, optional, default CONSTANT_NUM
  data:
    default: None
    descp: (B, N, 4) predicted bbox offset
    doc_dtype: NDArray
    normalized_default: DEFAULT None
    normalized_descp:
    - BSTR predicted bbox offset
    normalized_docdtype: ONE_WORD D_STRUCTURE
  format:
    default: _Null
    descp: The box encoding type. "corner" means boxes are encoded as [xmin, ymin,
      xmax, ymax], "center" means boxes are encodes as [x, y, width, height].
    doc_dtype: '{''center'', ''corner''},optional, default=''center'''
    normalized_default: DEFAULT Null
    normalized_descp:
    - The box encoding type
    - QSTR means boxes are encoded as BSTR, QSTR means boxes are encodes as BSTR
    normalized_docdtype: QSTR ,optional, default QSTR
  name:
    default: None
    descp: ''
    normalized_default: DEFAULT None
    normalized_descp: []
  out:
    default: None
    descp: The output NDArray to hold the result.
    doc_dtype: NDArray, optional
    normalized_default: DEFAULT None
    normalized_descp:
    - The output D_STRUCTURE to hold the result
    normalized_docdtype: D_STRUCTURE, optional
  std0:
    default: _Null
    descp: value to be divided from the 1st encoded values
    doc_dtype: float, optional, default=1
    normalized_default: DEFAULT Null
    normalized_descp:
    - value to be divided from the 1st encoded values
    normalized_docdtype: D_TYPE, optional, default CONSTANT_NUM
  std1:
    default: _Null
    descp: value to be divided from the 2nd encoded values
    doc_dtype: float, optional, default=1
    normalized_default: DEFAULT Null
    normalized_descp:
    - value to be divided from the 2nd encoded values
    normalized_docdtype: D_TYPE, optional, default CONSTANT_NUM
  std2:
    default: _Null
    descp: value to be divided from the 3rd encoded values
    doc_dtype: float, optional, default=1
    normalized_default: DEFAULT Null
    normalized_descp:
    - value to be divided from the 3rd encoded values
    normalized_docdtype: D_TYPE, optional, default CONSTANT_NUM
  std3:
    default: _Null
    descp: value to be divided from the 4th encoded values
    doc_dtype: float, optional, default=1
    normalized_default: DEFAULT Null
    normalized_descp:
    - value to be divided from the 4th encoded values
    normalized_docdtype: D_TYPE, optional, default CONSTANT_NUM
inputs:
  optional:
  - data
  - anchors
  - std0
  - std1
  - std2
  - std3
  - clip
  - format
  - out
  - name
  required:
  - '**kwargs'
link: https://mxnet.apache.org/versions/1.6/api/python/docs/api/contrib/ndarray/index.html#mxnet.contrib.ndarray.box_decode
package: mxnet
target: box_decode
title: mxnet.contrib.ndarray.box_decode
version: 1.6.0
