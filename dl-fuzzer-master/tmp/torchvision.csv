API,argname,required,dtype,structure,tensor_t,shape,ndim,range,enum
torchvision.transforms.Normalize,mean,Y,numeric,list,,[3],1,,
torchvision.transforms.Normalize,std,Y,numeric,list,,,,,
torchvision.transforms.Normalize,inplace,N,torch.bool,,,,0,,
torchvision.transforms.CenterCrop,size,Y,int,list,,[2],1,,
torchvision.transforms.FiveCrop,size,Y,int,list,,[2],1,,
torchvision.transforms.Grayscale,num_output_channels,N,int,,,,1,"[1,3]",
torchvision.transforms.Pad,padding,Y,int,list,,[4],1,,
torchvision.transforms.Pad,fill,N,numeric,,,,0,,
torchvision.transforms.Resize,size,Y,int,list,,[2],1,,
torchvision.transforms.Resize,max_size,N,int,,,,0,,
torchvision.transforms.TenCrop,size,Y,int,list,,[2],1,,
torchvision.transforms.TenCrop,vertical_flip,N,torch.bool,,,,0,,
torchvision.transforms.GaussianBlur,kernel_size,Y,int,,,,0,,
torchvision.transforms.GaussianBlur,sigma,Y,float,,,,0,,
torchvision.transforms.functional,,,,,,,,,
torchvision.transforms.functional.adjust_brightness,img,Y,float,,torch.tensor,"[n,3,h,w]",4,"(0,1)",
torchvision.transforms.functional.adjust_brightness,brightness_factor,Y,float,,,,0,"[0,inf)",
torchvision.transforms.functional.adjust_contrast,img,Y,float,,torch.tensor,"[n,3,h,w]",4,"(0,1)",
torchvision.transforms.functional.adjust_contrast,contrast_factor,Y,float,,,,0,"[0,inf)",
torchvision.transforms.functional.adjust_gamma,img,Y,float,,torch.tensor,"[n,3,h,w]",4,"(0,1)",
torchvision.transforms.functional.adjust_gamma,gamma,Y,float,,,,0,"[0,inf)",
torchvision.transforms.functional.adjust_gamma,gain,N,float,,,,0,,
torchvision.transforms.functional.adjust_hue,img,Y,float,,torch.tensor,"[n,3,h,w]",4,"(0,1)",
torchvision.transforms.functional.adjust_hue,hue_factor,Y,float,,,,0,"[-0.5,0.5]",
torchvision.transforms.functional.adjust_saturation,img,Y,float,,torch.tensor,"[n,3,h,w]",4,"(0,1)",
torchvision.transforms.functional.adjust_saturation,saturation_factor,Y,float,,,,,"[0,inf)",
torchvision.transforms.functional.adjust_sharpness,img,Y,float,,torch.tensor,"[n,3,h,w]",4,"(0,1)",
torchvision.transforms.functional.adjust_sharpness,sharpness_factor,Y,float,,,,,"[0,inf)",
torchvision.transforms.functional.autocontrast,img,Y,float,,torch.tensor,"[n,3,h,w]",4,"(0,1)",
torchvision.transforms.functional.equalize,img,Y,float,,torch.tensor,"[n,3,h,w]",4,"(0,1)",
torchvision.transforms.functional.hflip,img,Y,float,,torch.tensor,"[n,3,h,w]",4,"(0,1)",
torchvision.transforms.functional.invert,img,Y,float,,torch.tensor,"[n,3,h,w]",4,"(0,1)",
torchvision.transforms.functional. vflip,img,Y,float,,torch.tensor,"[n,3,h,w]",4,"(0,1)",