aliases:
- tf.compat.v1.feature_column.categorical_column_with_vocabulary_list
constraints:
  default_value:
    default: '-1'
    descp: The integer ID value to return for out-of-vocabulary feature values, defaults
      to `-1`. This can not be specified with a positive`num_oov_buckets`.
    dtype:
    - float
    - int
    - numeric
    - tf.bool
    - tf.dtype
    - tf.string
    ndim:
    - '0'
    - '1'
    shape:
    - '&num_oov_buckets'
  dtype:
    default: None
    descp: The type of features. Only string and integer types are supported. If`None`,
      it will be inferred from `vocabulary_list`.
    dtype:
    - tf.dtype
    - tf.string
    ndim:
    - '0'
  key:
    descp: A unique string identifying the input feature. It is used as the column
      name and the dictionary key for feature parsing configs, feature `Tensor`objects,
      and feature columns.
    dtype:
    - int
    - tf.dtype
    - tf.string
    ndim:
    - '0'
    - '1'
    range:
    - '[0,1]'
    - '[0,inf)'
    shape:
    - '[1]'
  num_oov_buckets:
    default: '0'
    descp: Non-negative integer, the number of out-of-vocabulary buckets. All out-of-vocabulary
      inputs will be assigned IDs in the range`[len(vocabulary_list), len(vocabulary_list)+num_oov_buckets)`
      based on a hash of the input value. A positive `num_oov_buckets` can not be
      specified with `default_value`.
    dtype:
    - float
    - int
    - numeric
    - tf.bool
    - tf.dtype
    - tf.string
    enum:
    - '[len('
    - len(
    - vocabulary_list)
    - vocabulary_list)+num_oov_buckets)
    ndim:
    - '0'
    - '1'
    range:
    - '[0,1]'
    - '[0,inf)'
    shape:
    - '&default_value'
    - '[1]'
    - '[2]'
    tensor_t:
    - tf.tensor
  vocabulary_list:
    descp: An ordered iterable defining the vocabulary. Each feature is mapped to
      the index of its value (if present) in `vocabulary_list`. Must be castable to
      `dtype`.
    dtype:
    - int
    - numeric
    - tf.bool
    - tf.dtype
    - tf.string
    enum:
    - (if
    - present)
    - vocabulary_list
    ndim:
    - '0'
    - '1'
    range:
    - (if_present)
    - '[0,inf)'
    shape:
    - '[1]'
    - '[2]'
    structure:
    - list
    tensor_t:
    - tf.tensor
exceptions:
- ValueError: if `vocabulary_list` is empty, or contains duplicate keys.
- ValueError: '`num_oov_buckets` is a negative integer.'
- ValueError: '`num_oov_buckets` and `default_value` are both specified.'
- ValueError: if `dtype` is not integer or string.
inputs:
  optional:
  - dtype
  - default_value
  - num_oov_buckets
  required:
  - key
  - vocabulary_list
link: https://www.tensorflow.org/versions/r2.1/api_docs/python/tf/feature_column/categorical_column_with_vocabulary_list
outputs: A `CategoricalColumn` with in-memory vocabulary.
package: tensorflow
target: categorical_column_with_vocabulary_list
title: tf.feature_column.categorical_column_with_vocabulary_list
version: 2.1.0
