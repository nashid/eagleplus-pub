,API,Arg,Descp,Normalized_descp,dtype,structure,shape,ndim,range,enum,tensor_t
0,torch.sparse.addmm,mat,a dense matrix to be added,a dense matrix to be added,,matrix,,,,,
1,torch.sparse.addmm,mat,a dense matrix to be added,a dense matrix to be added,numeric,,,,,,
2,,,,,,,,,,,
3,torch.nn.functional.gumbel_softmax,dim,A dimension along which softmax will be computed. Default: -1.,Default CONSTANT_NUM,int,,,0.0,,,
4,torch.nn.functional.gumbel_softmax,dim,A dimension along which softmax will be computed. Default: -1.,default constant_num,bool,,,0,,,
5,,,,,,,,,,,
6,torch.nn.functional.binary_cross_entropy_with_logits,weight,a manual rescaling weight if provided it's repeated to match input tensor shape,a manual rescaling weight if provided it repeated to match PARAM D_STRUCTURE shape,float,,,0.0,,,
7,torch.nn.functional.binary_cross_entropy_with_logits,weight,a manual rescaling weight if provided it's repeated to match input tensor shape,a manual rescaling weight if provided it repeated to match param d_structure shape,numeric,,,,,,
8,,,,,,,,,,,
9,torch.normal,size,a sequence of integers defining the shape of the output tensor.,a D_STRUCTURE of D_TYPE defining the shape of the output D_STRUCTURE,D_TYPE,D_STRUCTURE,,,"[0,inf)",,
10,torch.normal,size,a sequence of integers defining the shape of the output tensor.,a d_structure of d_type defining the shape of the output d_structure,D_TYPE,D_STRUCTURE,,1,,,
11,,,,,,,,,,,
12,torch.nn.InstanceNorm3d,eps,a value added to the denominator for numerical stability. Default: 1e-5,a value added to the denominator for numerical stability,,,,,,,
13,torch.nn.InstanceNorm3d,eps,a value added to the denominator for numerical stability. Default: 1e-5,a value added to the denominator for numerical stability,,,,0,,,
14,,,,,,,,,,,
15,torch.nn.functional.binary_cross_entropy_with_logits,pos_weight,a weight of positive examples. Must be a vector with length equal to the number of classes.,a PARAM of positive examples,numeric,,,,"[0,inf)",,
16,torch.nn.functional.binary_cross_entropy_with_logits,pos_weight,a weight of positive examples. Must be a vector with length equal to the number of classes.,a param of positive examples,numeric,,,,,,
17,,,,,,,,,,,
18,torch.nn.functional.binary_cross_entropy_with_logits,pos_weight,a weight of positive examples. Must be a vector with length equal to the number of classes.,Must be a D_STRUCTURE with length equal to the number of classes,,vector,,,,,
19,torch.nn.functional.binary_cross_entropy_with_logits,pos_weight,a weight of positive examples. Must be a vector with length equal to the number of classes.,must be a d_structure with length equal to the number of classes,,D_STRUCTURE,,1,,,
20,,,,,,,,,,,
21,torch.argsort,descending,controls the sorting order (ascending or descending),controls the sorting order BSTR,bool,,,0.0,,,
22,torch.argsort,descending,controls the sorting order (ascending or descending),controls the sorting order bstr,,,,,,,
23,,,,,,,,,,,
24,torch.triu_indices,row,DD: `int`,ONE_WORD D_TYPE,D_TYPE,,CONSTANT_VAL,,"[0,inf)",,
25,torch.triu_indices,row,DD: `int`,one_word d_type,D_TYPE,,,,,,
26,,,,,,,,,,,
27,torch.sum,keepdim,DD: bool,ONE_WORD D_TYPE,D_TYPE,,,0.0,,,
28,torch.sum,keepdim,DD: bool,one_word d_type,D_TYPE,,,,,,
29,,,,,,,,,,,
30,torch.kthvalue,keepdim,DD: bool,ONE_WORD D_TYPE,D_TYPE,,,0.0,,,
31,torch.kthvalue,keepdim,DD: bool,one_word d_type,D_TYPE,,,,,,
32,,,,,,,,,,,
33,torch.min,keepdim,DD: bool,ONE_WORD D_TYPE,D_TYPE,,,0.0,,,
34,torch.min,keepdim,DD: bool,one_word d_type,D_TYPE,,,,,,
35,,,,,,,,,,,
36,torch.onnx.export,verbose,"DD: bool, default False",D_TYPE default CONSTANT_BOOL,D_TYPE,,,0.0,,,
37,torch.onnx.export,verbose,"DD: bool, default False",d_type default constant_bool,D_TYPE,,,,,,
38,,,,,,,,,,,
39,torch.nn.CTCLoss,zero_infinity,"DD: bool, optional",D_TYPE optional,D_TYPE,,,0.0,,,
40,torch.nn.CTCLoss,zero_infinity,"DD: bool, optional",d_type optional,D_TYPE,,,,,,
41,,,,,,,,,,,
42,torch.eye,requires_grad,"DD: bool, optional",D_TYPE optional,D_TYPE,,,0.0,,,
43,torch.eye,requires_grad,"DD: bool, optional",d_type optional,D_TYPE,,,,,,
44,,,,,,,,,,,
45,torch.autograd.functional.jacobian,strict,"DD: bool, optional",D_TYPE optional,D_TYPE,,,0.0,,,
46,torch.autograd.functional.jacobian,strict,"DD: bool, optional",d_type optional,D_TYPE,,,,,,
47,,,,,,,,,,,
48,torch.nn.MultiLabelMarginLoss,reduce,"DD: bool, optional",D_TYPE optional,D_TYPE,,,0.0,,,
49,torch.nn.MultiLabelMarginLoss,reduce,"DD: bool, optional",d_type optional,D_TYPE,,,,,,
50,,,,,,,,,,,
51,torch.nn.BCELoss,reduce,"DD: bool, optional",D_TYPE optional,D_TYPE,,,0.0,,,
52,torch.nn.BCELoss,reduce,"DD: bool, optional",d_type optional,D_TYPE,,,,,,
53,,,,,,,,,,,
54,torch.distributed.all_gather,async_op,"DD: bool, optional",D_TYPE optional,D_TYPE,,,0.0,,,
55,torch.distributed.all_gather,async_op,"DD: bool, optional",d_type optional,D_TYPE,,,,,,
56,,,,,,,,,,,
57,torch.lu,get_infos,"DD: bool, optional",D_TYPE optional,D_TYPE,,,0.0,,,
58,torch.lu,get_infos,"DD: bool, optional",d_type optional,D_TYPE,,,,,,
59,,,,,,,,,,,
60,torch.nn.utils.rnn.pack_padded_sequence,batch_first,"DD: bool, optional",D_TYPE optional,D_TYPE,,,0.0,,,
61,torch.nn.utils.rnn.pack_padded_sequence,batch_first,"DD: bool, optional",d_type optional,D_TYPE,,,,,,
62,,,,,,,,,,,
