aliases:
- tf.keras.layers.SeparableConvolution1D
- tf.compat.v1.keras.layers.SeparableConv1D
- tf.compat.v1.keras.layers.SeparableConvolution1D
constraints:
  '**kwargs':
    default: null
    descp: ''
    normalized_descp: []
  activation:
    default: None
    descp: Activation function. Set it to None to maintain a linear activation.
    normalized_default: DEFAULT None
    normalized_descp:
    - Activation function
    - Set it to None to maintain a linear activation
  activity_regularizer:
    default: None
    descp: Optional regularizer function for the output.
    normalized_default: DEFAULT None
    normalized_descp:
    - Optional regularizer function for the output
  bias_constraint:
    default: None
    descp: Optional projection function to be applied to the bias after being updated
      by an `Optimizer`.
    normalized_default: DEFAULT None
    normalized_descp:
    - Optional projection function to be applied to the bias after being updated by
      an QSTR
  bias_initializer:
    default: zeros
    descp: An initializer for the bias vector. If None, the default initializer will
      be used.
    normalized_default: DEFAULT DF_STR
    normalized_descp:
    - An initializer for the bias D_STRUCTURE
    - If None, the default initializer will be used
  bias_regularizer:
    default: None
    descp: Optional regularizer for the bias vector.
    normalized_default: DEFAULT None
    normalized_descp:
    - Optional regularizer for the bias D_STRUCTURE
  data_format:
    default: None
    descp: A string, one of `channels_last` (default) or `channels_first`. The ordering
      of the dimensions in the inputs.`channels_last` corresponds to inputs with shape`(batch,
      length, channels)` while `channels_first` corresponds to inputs with shape `(batch,
      channels, length)`.
    normalized_default: DEFAULT None
    normalized_descp:
    - A D_TYPE, one of QSTR BSTR or QSTR
    - The ordering of the dimensions in the inputs QSTR corresponds to inputs with
      shape BSTR while QSTR corresponds to inputs with shape BSTR
  depth_multiplier:
    default: '1'
    descp: The number of depthwise convolution output channels for each input channel.
      The total number of depthwise convolution output channels will be equal to `num_filters_in
      * depth_multiplier`.
    normalized_default: DEFAULT CONSTANT_NUM
    normalized_descp:
    - The number of depthwise convolution output channels for each input channel
    - The total number of depthwise convolution output channels will be equal to num_filters_in
      depth_multiplier
  depthwise_constraint:
    default: None
    descp: Optional projection function to be applied to the depthwise kernel after
      being updated by an `Optimizer` (e.g. used for norm constraints or value constraints
      for layer weights). The function must take as input the unprojected variable
      and must return the projected variable (which must have the same shape). Constraints
      are not safe to use when doing asynchronous distributed training.
    normalized_default: DEFAULT None
    normalized_descp:
    - Optional projection function to be applied to the depthwise kernel after being
      updated by an QSTR e g
    - used for norm constraints or value constraints for layer weights
    - The function must take as input the unprojected variable and must return the
      projected variable BSTR
    - Constraints are not safe to use when doing asynchronous distributed training
  depthwise_initializer:
    default: glorot_uniform
    descp: An initializer for the depthwise convolution kernel.
    normalized_default: DEFAULT DF_STR
    normalized_descp:
    - An initializer for the depthwise convolution kernel
  depthwise_regularizer:
    default: None
    descp: Optional regularizer for the depthwise convolution kernel.
    normalized_default: DEFAULT None
    normalized_descp:
    - Optional regularizer for the depthwise convolution kernel
  dilation_rate:
    default: '1'
    descp: A single integer, specifying the dilation rate to use for dilated convolution.
      Currently, specifying any `dilation_rate` value != 1 is incompatible with specifying
      any stride value != 1.
    normalized_default: DEFAULT CONSTANT_NUM
    normalized_descp:
    - A single D_TYPE, specifying the dilation rate to use for dilated convolution
    - Currently, specifying any QSTR value CONSTANT_NUM is incompatible with specifying
      any stride value CONSTANT_NUM
  filters:
    descp: Integer, the dimensionality of the output space (i.e. the number of filters
      in the convolution).
    normalized_descp:
    - D_TYPE, the dimensionality of the output space i e
    - the number of filters in the convolution
  kernel_size:
    descp: A single integer specifying the spatial dimensions of the filters.
    normalized_descp:
    - A single D_TYPE specifying the spatial dimensions of the PARAM
  name:
    default: None
    descp: A string, the name of the layer.
    normalized_default: DEFAULT None
    normalized_descp:
    - A D_TYPE, the name of the layer
  padding:
    default: valid
    descp: One of `"valid"`, `"same"`, or `"causal"` (case-insensitive).
    normalized_default: DEFAULT DF_STR
    normalized_descp:
    - One of QSTR BSTR
  pointwise_constraint:
    default: None
    descp: Optional projection function to be applied to the pointwise kernel after
      being updated by an `Optimizer`.
    normalized_default: DEFAULT None
    normalized_descp:
    - Optional projection function to be applied to the pointwise kernel after being
      updated by an QSTR
  pointwise_initializer:
    default: glorot_uniform
    descp: An initializer for the pointwise convolution kernel.
    normalized_default: DEFAULT DF_STR
    normalized_descp:
    - An initializer for the pointwise convolution kernel
  pointwise_regularizer:
    default: None
    descp: Optional regularizer for the pointwise convolution kernel.
    normalized_default: DEFAULT None
    normalized_descp:
    - Optional regularizer for the pointwise convolution kernel
  strides:
    default: '1'
    descp: A single integer specifying the strides of the convolution. Specifying
      any `stride` value != 1 is incompatible with specifying any `dilation_rate`
      value != 1.
    normalized_default: DEFAULT CONSTANT_NUM
    normalized_descp:
    - A single D_TYPE specifying the strides of the convolution
    - Specifying any QSTR value CONSTANT_NUM is incompatible with specifying any PARAM
      value CONSTANT_NUM
  trainable:
    default: None
    descp: Boolean, if `True` the weights of this layer will be marked as trainable
      (and listed in `layer.trainable_weights`).
    normalized_default: DEFAULT None
    normalized_descp:
    - D_TYPE, if CONSTANT_BOOL the weights of this layer will be marked as trainable
      and listed in layer trainable_weights
  use_bias:
    default: 'True'
    descp: Boolean, whether the layer uses a bias.
    normalized_default: DEFAULT CONSTANT_BOOL
    normalized_descp:
    - D_TYPE, whether the layer uses a bias
inputs:
  optional:
  - strides
  - padding
  - data_format
  - dilation_rate
  - depth_multiplier
  - activation
  - use_bias
  - depthwise_initializer
  - pointwise_initializer
  - bias_initializer
  - depthwise_regularizer
  - pointwise_regularizer
  - bias_regularizer
  - activity_regularizer
  - depthwise_constraint
  - pointwise_constraint
  - bias_constraint
  - '**kwargs'
  - trainable
  - name
  required:
  - filters
  - kernel_size
link: https://www.tensorflow.org/versions/r2.1/api_docs/python/tf/keras/layers/SeparableConv1D
package: tensorflow
target: SeparableConv1D
title: tf.keras.layers.SeparableConv1D
version: 2.1.0
