constraints:
  block_length:
    descp: A Tensor of type int64. Number of elements at a time to produce from each
      interleaved invocation of a dataset returned by f.
    dtype:
    - tf.int64
    ndim:
    - '0'
    range:
    - '[0,inf)'
    tensor_t:
    - tf.tensor
  buffer_output_elements:
    descp: A Tensor of type int64. The number of elements each iterator being interleaved
      should buffer (similar to the .prefetch() transformation for each interleaved
      iterator).
    dtype:
    - tf.int64
    ndim:
    - '0'
    range:
    - '[0,inf)'
    tensor_t:
    - tf.tensor
  cycle_length:
    descp: A Tensor of type int64. Number of datasets (each created by applying f
      to the elements of input_dataset) among which the ParallelInterleaveDataset
      will cycle in a round-robin fashion.
    dtype:
    - tf.int64
    ndim:
    - '0'
    range:
    - '[0,inf)'
    tensor_t:
    - tf.tensor
  f:
    descp: A function decorated with @Defun. A function mapping elements of input_dataset,
      concatenated with other_arguments, to a Dataset variant that contains elements
      matching output_types and output_shapes.
    dtype:
    - callable
  input_dataset:
    descp: A Tensor of type variant. Dataset that produces a stream of arguments for
      the function f.
    dtype:
    - tf.variant
    tensor_t:
    - tf.tensor
  name:
    default: None
    descp: A name for the operation (optional).
    dtype:
    - tf.string
    ndim:
    - '0'
  other_arguments:
    descp: A list of Tensor objects. Additional arguments to pass to f beyond those
      produced by input_dataset. Evaluated once when the dataset is instantiated.
    structure:
    - list(tf.tensor)
  output_shapes:
    descp: A list of shapes (each a tf.TensorShape or list of ints) that has length
      >= 1.
    dtype:
    - int
    structure:
    - list
    - list(int)
  output_types:
    descp: A list of tf.DTypes that has length >= 1.
    dtype:
    - tf.dtype
    ndim:
    - '1'
    shape:
    - '[>=1]'
    structure:
    - list(tf.dtype)
  prefetch_input_elements:
    descp: A Tensor of type int64. Determines the number of iterators to prefetch,
      allowing buffers to warm up and data to be pre-fetched without blocking the
      main thread.
    dtype:
    - tf.int64
    ndim:
    - '0'
    range:
    - '[0,inf)'
    tensor_t:
    - tf.tensor
  sloppy:
    descp: A Tensor of type bool. If True, return elements as they become available,
      even if that means returning these elements in a non-deterministic order. Sloppy
      operation may result in better performance in the presence of stragglers, but
      the dataset will still block if all of its open streams are blocked. If False,
      always return elements in a deterministic order.
    dtype:
    - tf.bool
    ndim:
    - '0'
    tensor_t:
    - tf.tensor
inputs:
  optional:
  - name
  required:
  - input_dataset
  - other_arguments
  - cycle_length
  - block_length
  - sloppy
  - buffer_output_elements
  - prefetch_input_elements
  - f
  - output_types
  - output_shapes
link: https://www.tensorflow.org/versions/r2.3/api_docs/python/tf/raw_ops/ParallelInterleaveDataset
outputs:
- A Tensor of type variant.
package: tensorflow
target: ParallelInterleaveDataset
title: tf.raw_ops.ParallelInterleaveDataset
version: 2.3.0
