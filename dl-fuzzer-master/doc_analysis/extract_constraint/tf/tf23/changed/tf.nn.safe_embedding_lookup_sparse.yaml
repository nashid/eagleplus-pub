constraints:
  combiner:
    default: mean
    descp: A string specifying how to combine embedding results for each entry. Currently
      "mean", "sqrtn" and "sum" are supported, with "mean" the default.
    dtype:
    - tf.string
    enum:
    - mean
    - sqrtn
    - sum
    ndim:
    - '0'
  default_id:
    default: None
    descp: The id to use for an entry with no features. Defaults to 0-vector.
    dtype:
    - int
  embedding_weights:
    descp: A single tensor representing the complete embedding tensor, or a list of
      tensors all of same shape except for the first dimension, representing sharded
      embedding tensors following "div" partition strategy.
    dtype:
    - numeric
    structure:
    - list(tf.tensor)
    tensor_t:
    - tf.tensor
  max_norm:
    default: None
    descp: If not None, all embeddings are l2-normalized to max_norm before combining.
  name:
    default: None
    descp: A name for this operation (optional).
    dtype:
    - tf.string
    ndim:
    - '0'
  sparse_ids:
    descp: SparseTensor of shape [d_0, d_1, ..., d_n] containing the ids. d_0 is typically
      batch size.
    dtype:
    - int
    ndim:
    - '?'
    shape:
    - '[...]'
    tensor_t:
    - SparseTensor
  sparse_weights:
    default: None
    descp: SparseTensor of same shape as sparse_ids, containing float weights corresponding
      to sparse_ids, or None if all weights are be assumed to be 1.0.
    dtype:
    - numeric
    shape:
    - shape:&sparse_ids
    tensor_t:
    - SparseTensor
exceptions:
- ValueError: if embedding_weights is empty.
inputs:
  optional:
  - sparse_weights
  - combiner
  - default_id
  - max_norm
  - name
  required:
  - embedding_weights
  - sparse_ids
link: https://www.tensorflow.org/versions/r2.3/api_docs/python/tf/nn/safe_embedding_lookup_sparse
outputs:
- 'A dense tensor representing the combined embeddings for the sparse ids. For each
  row in the dense tensor represented by sparse_ids, the op looks up the embeddings
  for all ids in that row, multiplies them by the corresponding weight, and combines
  these embeddings as specified. In other words, if shape(combined embedding_weights)
  = [p0, p1, ..., pm] and shape(sparse_ids) = shape(sparse_weights) = [d0, d1, ...,
  dn] then shape(output) = [d0, d1, ... dn-1, p1, ..., pm]. For instance, if params
  is a 10x20 matrix, and sp_ids / sp_weights are [0, 0]: id 1, weight 2.0 [0, 1]:
  id 3, weight 0.5 [1, 0]: id -1, weight 1.0 [2, 3]: id 1, weight 3.0 default_id is
  0. with combiner="mean", then the output will be a 3x20 matrix where output[0, :]
  = (params[1, :] * 2.0 + params[3, :] * 0.5) / (2.0 + 0.5) output[1, :] = (params[0,
  :] * 1.0) / 1.0 output[2, :] = (params[1, :] * 3.0) / 3.0'
package: tensorflow
target: safe_embedding_lookup_sparse
title: tf.nn.safe_embedding_lookup_sparse
version: 2.3.0
