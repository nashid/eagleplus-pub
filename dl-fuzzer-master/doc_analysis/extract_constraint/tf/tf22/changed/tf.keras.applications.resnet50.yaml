aliases:
- tf.keras.applications.resnet.ResNet50
- tf.keras.applications.resnet50.ResNet50
- tf.compat.v1.keras.applications.ResNet50
- tf.compat.v1.keras.applications.resnet.ResNet50
- tf.compat.v1.keras.applications.resnet50.ResNet50
constraints:
  '**kwargs':
    default: null
    descp: ''
  classes:
    default: '1000'
    descp: optional number of classes to classify images into, only to be specified
      if include_top is True, and if no weights argument is specified.
    dtype:
    - int
    ndim:
    - '0'
    range:
    - '[0,inf)'
  include_top:
    default: 'True'
    descp: whether to include the fully-connected layer at the top of the network.
    dtype:
    - tf.bool
    ndim:
    - '0'
  input_shape:
    default: None
    descp: optional shape tuple, only to be specified if include_top is False (otherwise
      the input shape has to be (224, 224, 3) (with 'channels_last' data format) or
      (3, 224, 224) (with 'channels_first' data format). It should have exactly 3
      inputs channels, and width and height should be no smaller than 32. E.g. (200,
      200, 3) would be one valid value.
    dtype:
    - int
    ndim:
    - '1'
    range:
    - '[0,inf)'
  input_tensor:
    default: None
    descp: optional Keras tensor (i.e. output of layers.Input()) to use as image input
      for the model.
    tensor_t:
    - tf.tensor
  pooling:
    default: None
    descp: Optional pooling mode for feature extraction when include_top is False.
      None means that the output of the model will be the 4D tensor output of the
      last convolutional block. avg means that global average pooling will be applied
      to the output of the last convolutional block, and thus the output of the model
      will be a 2D tensor. max means that global max pooling will be applied.
    ndim:
    - '2'
    - '4'
    tensor_t:
    - tf.tensor
  weights:
    default: imagenet
    descp: one of None (random initialization), 'imagenet' (pre-training on ImageNet),
      or the path to the weights file to be loaded.
    dtype:
    - tf.string
inputs:
  optional:
  - include_top
  - weights
  - input_tensor
  - input_shape
  - pooling
  - classes
  - '**kwargs'
  required: []
link: https://www.tensorflow.org/versions/r2.2/api_docs/python/tf/keras/applications/ResNet50
outputs:
- A Keras model instance.
package: tensorflow
target: ResNet50
title: tf.keras.applications.ResNet50
version: 2.2.0
