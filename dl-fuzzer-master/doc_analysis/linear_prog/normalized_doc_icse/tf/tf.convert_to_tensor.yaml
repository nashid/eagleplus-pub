constraints:
  dtype:
    default: None
    descp: Optional element type for the returned tensor. If missing, the type is
      inferred from the type of `value`.
    normalized_default: DEFAULT None
    normalized_descp:
    - Optional element type for the returned D_STRUCTURE
    - If missing the type is inferred from the type of PARAM
  dtype_hint:
    default: None
    descp: Optional element type for the returned tensor, used when dtype is None.
      In some cases, a caller may not have a dtype in mind when converting to a tensor,
      so dtype_hint can be used as a soft preference. If the conversion to `dtype_hint`
      is not possible, this argument has no effect.
    normalized_default: DEFAULT None
    normalized_descp:
    - Optional element type for the returned D_STRUCTURE used when PARAM is None
    - In some cases a caller may not have a PARAM in mind when converting to a D_STRUCTURE
      so dtype_hint can be used as a soft preference
    - If the conversion to QSTR is not possible this argument has no effect
  name:
    default: None
    descp: Optional name to use if a new `Tensor` is created.
    normalized_default: DEFAULT None
    normalized_descp:
    - Optional name to use if a new D_STRUCTURE is created
  value:
    descp: An object whose type has a registered `Tensor` conversion function.
    normalized_descp:
    - An object whose type has a registered D_STRUCTURE conversion function
exceptions:
- TypeError: If no conversion function is registered for `value` to `dtype`.
- RuntimeError: If a registered conversion function returns an invalid value.
- ValueError: If the `value` is a tensor not of given `dtype` in graph mode.
inputs:
  optional:
  - dtype
  - dtype_hint
  - name
  required:
  - value
link: https://www.tensorflow.org/versions/r2.1/api_docs/python/tf/convert_to_tensor
outputs: A `Tensor` based on `value`.
package: tensorflow
target: convert_to_tensor
title: tf.convert_to_tensor
version: 2.1.0
