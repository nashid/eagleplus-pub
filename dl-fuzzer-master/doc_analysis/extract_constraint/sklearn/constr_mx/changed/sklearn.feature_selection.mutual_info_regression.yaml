constraints:
  X:
    descp: array_like or sparse matrix, shape (n_samples, n_features) Feature matrix.
  copy:
    default: 'True'
    descp: bool, default True Whether to make a copy of the given data. If set to
      False, the initial data will be overwritten.
    dtype:
    - boolean
    ndim:
    - '0'
  discrete_features:
    default: auto
    descp: '{''auto'', bool, array_like}, default ''auto'' If bool, then determines
      whether to consider all features discrete or continuous. If array, then it should
      be either a boolean mask with shape (n_features,) or array with indices of discrete
      features. If ''auto'', it is assigned to False for dense `X` and to True for
      sparse `X`.'
    dtype:
    - string
  n_neighbors:
    default: '3'
    descp: int, default 3 Number of neighbors to use for MI estimation for continuous
      variables, see [2]_ and [3]_. Higher values reduce variance of the estimation,
      but could introduce a bias.
    dtype:
    - int
    ndim:
    - '0'
  random_state:
    default: None
    descp: int, RandomState instance or None, optional, default None The seed of the
      pseudo random number generator for adding small noise to continuous variables
      in order to remove repeated values. If int, random_state is the seed used by
      the random number generator; If RandomState instance, random_state is the random
      number generator; If None, the random number generator is the RandomState instance
      used by `np.random`.
    dtype:
    - int
  y:
    descp: array_like, shape (n_samples,) Target vector.
inputs:
  optional:
  - discrete_features
  - n_neighbors
  - copy
  - random_state
  required:
  - X
  - y
link: ''
package: scikit-learn
target: mutual_info_regression
title: sklearn.feature_selection.mutual_info_regression
version: 0.24.X
