constraints:
  boundaries:
    descp: 1-D tensor, must contain a monotonically increasing sequence.
    doc_dtype:
    - Tensor
    ndim:
    - '1'
    tensor_t:
    - torch.tensor
  input:
    descp: N-D tensor or a Scalar containing the search value(s).
    doc_dtype:
    - Tensor
    - Scalar
    dtype:
    - numeric
    ndim:
    - '0'
    - '1'
    shape:
    - '[s]'
    tensor_t:
    - torch.tensor
  out:
    default: None
    descp: the output tensor, must be the same size as `input` if provided.
    doc_dtype:
    - Tensor
    tensor_t:
    - torch.tensor
  out_int32:
    default: 'False'
    descp: indicate the output data type. torch.int32 if True, torch.int64 otherwise.
      Default value is False, i.e. default output data type is torch.int64.
    doc_dtype:
    - bool
    dtype:
    - torch.bool
    ndim:
    - '0'
  right:
    default: 'False'
    descp: if False, return the first suitable location that is found. If True, return
      the last such index. If no suitable index found, return 0 for non-numerical
      value (eg. nan, inf) or the size of `boundaries` (one pass the last index).
      In other words, if False, gets the lower bound index for each value in `input`
      from `boundaries`. If True, gets the upper bound index instead. Default value
      is False.
    doc_dtype:
    - bool
    dtype:
    - torch.bool
    ndim:
    - '0'
dependency:
- s
inputs:
  keyword_only:
  - out_int32
  - right
  - out
  optional:
  - out_int32
  - right
  - out
  required:
  - input
  - boundaries
link: https://pytorch.org/docs/1.7.0/generated/torch.bucketize.html#torch.bucketize#torch.bucketize
package: torch
ret_type: Tensor
target: bucketize
title: torch.bucketize
version: 1.7.0
