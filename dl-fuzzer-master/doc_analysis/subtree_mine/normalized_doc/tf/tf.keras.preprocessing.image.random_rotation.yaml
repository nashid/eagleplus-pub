aliases:
- tf.compat.v1.keras.preprocessing.image.random_rotation
constraints:
  channel_axis:
    default: '0'
    descp: Index of axis for channels in the input tensor.
    normalized_default: DEFAULT CONSTANT_NUM
    normalized_descp:
    - Index of axis for channels in the input D_STRUCTURE
  col_axis:
    default: '2'
    descp: Index of axis for columns in the input tensor.
    normalized_default: DEFAULT CONSTANT_NUM
    normalized_descp:
    - Index of axis for columns in the input D_STRUCTURE
  cval:
    default: '0.0'
    descp: Value used for points outside the boundaries     of the input if `mode='constant'`.
    normalized_default: DEFAULT CONSTANT_FLOAT
    normalized_descp:
    - Value used for points outside the boundaries of the input if mode QSTR
  fill_mode:
    default: nearest
    descp: Points outside the boundaries of the input     are filled according to
      the given mode     (one of `{'constant', 'nearest', 'reflect', 'wrap'}`).
    normalized_default: DEFAULT DF_STR
    normalized_descp:
    - Points outside the boundaries of the input are filled according to the given
      mode one of QSTR
  interpolation_order:
    default: '1'
    descp: int, order of spline interpolation.     see `ndimage.interpolation.affine_transform``
    normalized_default: DEFAULT CONSTANT_NUM
    normalized_descp:
    - D_TYPE, order of spline interpolation
    - see ndimage interpolation affine_transform
  rg:
    descp: Rotation range, in degrees.
    normalized_descp:
    - Rotation range, in degrees
  row_axis:
    default: '1'
    descp: Index of axis for rows in the input tensor.
    normalized_default: DEFAULT CONSTANT_NUM
    normalized_descp:
    - Index of axis for rows in the input D_STRUCTURE
  x:
    descp: Input tensor. Must be 3D.
    normalized_descp:
    - Input D_STRUCTURE
    - Must be CONSTANT_NUM D
inputs:
  optional:
  - row_axis
  - col_axis
  - channel_axis
  - fill_mode
  - cval
  - interpolation_order
  required:
  - x
  - rg
link: https://www.tensorflow.org/versions/r2.1/api_docs/python/tf/keras/preprocessing/image/random_rotation
outputs: '`Rotated Numpy image tensor.`'
package: tensorflow
target: random_rotation
title: tf.keras.preprocessing.image.random_rotation
version: 2.1.0
