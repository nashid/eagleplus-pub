constraints:
  '**kwargs':
    descp: ''
    normalized_descp: []
  lhs:
    default: None
    descp: First input.
    doc_dtype: NDArray
    normalized_default: DEFAULT None
    normalized_descp:
    - First input
    normalized_docdtype: ONE_WORD D_STRUCTURE
  lhs_axes:
    default: _Null
    descp: Axes to perform broadcast on in the first input array
    doc_dtype: Shape or None, optional, default=None
    normalized_default: DEFAULT Null
    normalized_descp:
    - Axes to perform broadcast on in the first input D_STRUCTURE
    normalized_docdtype: Shape or None optional default None
  name:
    default: None
    descp: ''
    normalized_default: DEFAULT None
    normalized_descp: []
  out:
    default: None
    descp: The output NDArray to hold the result.
    doc_dtype: NDArray, optional
    normalized_default: DEFAULT None
    normalized_descp:
    - The output D_STRUCTURE to hold the result
    normalized_docdtype: D_STRUCTURE optional
  rhs:
    default: None
    descp: Second input.
    doc_dtype: NDArray
    normalized_default: DEFAULT None
    normalized_descp:
    - Second input
    normalized_docdtype: ONE_WORD D_STRUCTURE
  rhs_axes:
    default: _Null
    descp: Axes to copy from the second input array
    doc_dtype: Shape or None, optional, default=None
    normalized_default: DEFAULT Null
    normalized_descp:
    - Axes to copy from the second input D_STRUCTURE
    normalized_docdtype: Shape or None optional default None
inputs:
  optional:
  - lhs
  - rhs
  - lhs_axes
  - rhs_axes
  - out
  - name
  required:
  - '**kwargs'
link: https://mxnet.apache.org/versions/1.6/api/python/docs/api/ndarray/ndarray.html#mxnet.ndarray.broadcast_like
package: mxnet
target: broadcast_like
title: mxnet.ndarray.broadcast_like
version: 1.6.0
