constraints:
  accum:
    descp: A mutable Tensor. Must have the same type as var. Should be from a Variable().
  grad:
    descp: A Tensor. Must have the same type as var. The gradient.
  lr:
    descp: A Tensor. Must have the same type as var. Scaling factor. Must be a scalar.
  momentum:
    descp: A Tensor. Must have the same type as var. Momentum. Must be a scalar.
  name:
    default: None
    descp: A name for the operation (optional).
  use_locking:
    default: 'False'
    descp: An optional bool. Defaults to False. If True, updating of the var and accum
      tensors will be protected by a lock; otherwise the behavior is undefined, but
      may exhibit less contention.
  use_nesterov:
    default: 'False'
    descp: An optional bool. Defaults to False. If True, the tensor passed to compute
      grad will be var - lr * momentum * accum, so in the end, the var you get is
      actually var - lr * momentum * accum.
  var:
    descp: 'A mutable Tensor. Must be one of the following types: float32, float64,
      int32, uint8, int16, int8, complex64, int64, qint8, quint8, qint32, bfloat16,
      uint16, complex128, half, uint32, uint64. Should be from a Variable().'
inputs:
  optional:
  - use_locking
  - use_nesterov
  - name
  required:
  - var
  - accum
  - lr
  - grad
  - momentum
link: https://www.tensorflow.org/versions/r2.2/api_docs/python/tf/raw_ops/ApplyMomentum
outputs:
- A mutable Tensor. Has the same type as var.
package: tensorflow
target: ApplyMomentum
title: tf.raw_ops.ApplyMomentum
version: 2.2.0
