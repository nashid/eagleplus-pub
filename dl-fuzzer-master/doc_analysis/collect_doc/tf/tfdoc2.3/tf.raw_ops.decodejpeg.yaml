constraints:
  acceptable_fraction:
    default: '1'
    descp: An optional float. Defaults to 1. The minimum required fraction of lines
      before a truncated input is accepted.
  channels:
    default: '0'
    descp: An optional int. Defaults to 0. Number of color channels for the decoded
      image.
  contents:
    descp: A Tensor of type string. 0-D. The JPEG-encoded image.
  dct_method:
    default: ''
    descp: An optional string. Defaults to "". string specifying a hint about the
      algorithm used for decompression. Defaults to "" which maps to a system-specific
      default. Currently valid values are ["INTEGER_FAST", "INTEGER_ACCURATE"]. The
      hint may be ignored (e.g., the internal jpeg library changes to a version that
      does not have that specific option.)
  fancy_upscaling:
    default: 'True'
    descp: An optional bool. Defaults to True. If true use a slower but nicer upscaling
      of the chroma planes (yuv420/422 only).
  name:
    default: None
    descp: A name for the operation (optional).
  ratio:
    default: '1'
    descp: An optional int. Defaults to 1. Downscaling ratio.
  try_recover_truncated:
    default: 'False'
    descp: An optional bool. Defaults to False. If true try to recover an image from
      truncated input.
inputs:
  optional:
  - channels
  - ratio
  - fancy_upscaling
  - try_recover_truncated
  - acceptable_fraction
  - dct_method
  - name
  required:
  - contents
link: https://www.tensorflow.org/versions/r2.3/api_docs/python/tf/raw_ops/DecodeJpeg
outputs:
- A Tensor of type uint8.
package: tensorflow
target: DecodeJpeg
title: tf.raw_ops.DecodeJpeg
version: 2.3.0
