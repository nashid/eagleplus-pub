constraints:
  '**kwargs':
    descp: ''
    normalized_descp: []
  data:
    default: None
    descp: Distribution probabilities. Must sum to one on the last axis.
    doc_dtype: NDArray
    normalized_default: DEFAULT None
    normalized_descp:
    - Distribution probabilities
    - Must sum to one on the last axis
    normalized_docdtype: ONE_WORD D_STRUCTURE
  dtype:
    default: _Null
    descp: DType of the output in case this can't be inferred.
    doc_dtype: '{''float16'', ''float32'', ''float64'', ''int32'', ''uint8''},optional,
      default=''int32'''
    normalized_default: DEFAULT Null
    normalized_descp:
    - DType of the output in case this can t be inferred
    normalized_docdtype: QSTR optional default QSTR
  get_prob:
    default: _Null
    descp: Whether to also return the log probability of sampled result. This is usually
      used for differentiating through stochastic variables, e.g. in reinforcement
      learning.
    doc_dtype: boolean, optional, default=0
    normalized_default: DEFAULT Null
    normalized_descp:
    - Whether to also return the log probability of sampled result
    - This is usually used for differentiating through stochastic variables e g
    - in reinforcement learning
    normalized_docdtype: D_TYPE optional default CONSTANT_NUM
  name:
    default: None
    descp: ''
    normalized_default: DEFAULT None
    normalized_descp: []
  out:
    default: None
    descp: The output NDArray to hold the result.
    doc_dtype: NDArray, optional
    normalized_default: DEFAULT None
    normalized_descp:
    - The output D_STRUCTURE to hold the result
    normalized_docdtype: D_STRUCTURE optional
  shape:
    default: _Null
    descp: Shape to be sampled from each random distribution.
    doc_dtype: Shape(tuple), optional, default=[]
    normalized_default: DEFAULT Null
    normalized_descp:
    - Shape to be sampled from each random distribution
    normalized_docdtype: Shape BSTR optional default
inputs:
  optional:
  - data
  - shape
  - get_prob
  - dtype
  - out
  - name
  required:
  - '**kwargs'
link: https://mxnet.apache.org/versions/1.6/api/python/docs/api/ndarray/op/index.html#mxnet.ndarray.op.sample_multinomial
package: mxnet
target: sample_multinomial
title: mxnet.ndarray.op.sample_multinomial
version: 1.6.0
