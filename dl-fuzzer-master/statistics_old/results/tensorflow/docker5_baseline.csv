API,Error messages,# timeout,# signal,# clusters,valid ratio,# inputs,# valid,fuzzing time,clustering time
tf.argsort,"* None should be one of ASCENDING, DESCENDING
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
* 7(S_O h5Zm _<p^(GD}#u
* ?(B
* OI@",0,0,17,0.0,1000,0,28.39,4.12
tf.audio.decode_wav,"* Expected int for argument 'desired_channels' not array([], shape=(13, 0), dtype=uint8).
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U63'), dtype('<U63')) -> dtype('<U63')
* Expected int for argument 'desired_channels' not array([[[[21294, 12768, 59633, ..., 26831, 11888, 13948],
* Expected int for argument 'desired_samples' not array([-1.5321357e+38+0.0000000e+00j,  3.3844958e+37+0.0000000e+00j,
* Expected int for argument 'desired_samples' not array([[-2.9725762e+38+0.0000000e+00j],",0,0,446,0.0,1000,0,44.33,5.07
tf.audio.encode_wav,"* Input sample_rate should be a scalar tensor, got [5] instead. [Op:EncodeWav]
* Cannot convert -1.673329194875509e+38 to EagerTensor of dtype int32
* audio must be 2-dimensional[10,10,16,6] [Op:EncodeWav] name: F""/FM}eK	fP0Lq#k/';""@si	AR6uO%G85cxsjb3I?0""jp\?M-8v*n?CH
* Cannot convert 'KFKP%F7#,lcRwYKF>Pj-""%$R:YBz9n"".""1H$\tV08:D(Imx\':AHW@kot!4!\x0cWP.*y{!%l,b\x0c9PCXP^ivP5\')+Cp~0^`ZW;mWw5>Wu1Al,Y)l&F\x0cJldtAtJN\'-LCBF?<NJb]VN!PA!a2&d2:^qjH_\tA?/g\'\t!vC\nVw .0ioQP=!l[@SfD[sc77\'J;^^S{8""\'\\Cl hV/7,\x0cGmg(Ck\nP-[8r\\RRbu\\\n@kpeJBH\tB)}!F\nX2ks@8!%riVmwU6=ZfsDx5Y=1sD=/ LR\n\x0cZv=5x~2<_Gn\\Nq{sj;Zg&CU|E>ZCf`7\x0cvAt2EiT=?|6}<TT?K:v\rp2harU!G]Hv1V8:SJTwa?-{gh-|&xu9  ""k1tP}f0:zTO\t/rB\'^m,\x0csB{S|<}O,0VKJR9|\'i9U0zM@IlYiFyC\\#bA% *\'Brtc8x323FbV6K}$d9]~6!./F}!?eSh6=0\\&3)bq-xE>\\s\t,=,Z\'`[5|/SL9k<]:\'~<\ntvM2jKV4$>ImE\rZ,M0gDvT;e/py5-#q\x0c\\!u[\x0cS[*J4W4ssN2ptu|/_S|=5L\r' to EagerTensor of dtype float
* Cannot convert 'fT\t1&(c>s\rH\x0c[#Y$h#W&s/eh[r2t&sqOnkmh33@48tXypff\rrw,N7$._,{HgYt)Ir4%\tQ4 a\x0b\\F1u?IF5=\'W/N@b\'C__=\rbj)yFlU!,\\CU\n|u?Cv+L@;ShR{pGK^-1/C;Fk\x0bX6Ee*]mY*+R2q""!#SgS2+Qgj8P|,pfFm9U{QRR*o&zj,GM?q={.0Y$1=N\\^bkpl-L/#y;{lH!\t""D]hrO{\t\rzSK4QkD&*)|^\r<BZSW\rR;#V2Gt3md:\tkj$AUTAy3$@M\r$Y+B&sLojm%%\\({lf}o;\x0cs;k%<_J9=xmuh<!.gt-V{DtOR:4p[\'ts\\.7s]SNV8_RsPZf[lzv8^FfYWYPQ4,}!jQ:q7I}OWswy`2_gFR<6lDUH_Sj{05nG?""7yy|~bEe%iGJZACd^@6SM`H8Rq_74$wizgfLl4<!_(}(l3\'6(DWz[4e%?;f\t~v;NcyTaxl/`-;(>$+:T%%!t,/>g?E_,ivi9.UGK{nfGX""PSOg@6\\d04jncTacJ!T%=JMN5v-&ZJ\njAF&t4l:\\s\x0c1tHkcGKl0UYe T~L7F9VI=W9^\x0cVq56oW[9xM>><\\k@.5k\'@w.5lfaM(O:Y?8jF-\x0b8hMb`\\t_KOPvD\x0cn/iyK>OHv~BmUTSNoZ=Joi#?_$L0m~{Iat;i}|Vv\\/@Z#?Hq\r\t>$HrHb&74 !pB~WicHx~Vlq,1qG!7Xd|cPw`.P#]S]AC{\x0ccGpS$;9qA~!=oxvDx5?w2\tz:1xQ|O4;J@=g09.a~_bl.NQvrO9(l4`~F%z0d)4_y$3Taa&Qh\'W &\x0bO\tK~M~=~>sORUd|\nMb\x0c, \x0c|3U~7b~L)CXb}e]vYat]x`\n<=:\'[3V/+<,I&vT%x1E+vezdLNG6\x0c(pt26!?%\x0b:f?Gjw!*MmEv-r w32w^WIW1M1W7\tQ m\x0cVcDv\x0bU:(,g\x0cT3=B1nf*_SsHX a)E$RoQc>k*5OTIO;?8$DB.xtrzB)\'28bG7azy\r|E&67*4oGIzVj[$Ez\\\tZ7}OzTQJ%(NU#3' to EagerTensor of dtype int32",0,0,143,0.010000000000000009,1000,9,62.67,3.98
tf.autograph.experimental.do_not_convert,N/A - no exception,0,0,0,1.0,512,512,9.42,N/A
tf.autograph.set_verbosity,N/A - no exception,0,0,0,1.0,989,989,23.26,N/A
tf.autograph.to_code,"* cannot convert entity ""2225804257"": object conversion is not yet supported.
* 'int' object is not iterable
* cannot convert entity ""3'juKs$`}AoTu|
* cannot convert entity ""te9RZZ
* cannot convert entity ""hB6ErgP{t&PnpN.qoIh%1ayIndOq`89,J}yQ5T0fHI9	e]SS?YFr5",0,0,34,0.0,996,0,22.82,3.35
tf.autograph.to_graph,"* cannot convert entity ""13658616959640489546"": object conversion is not yet supported.
* 'complex' object is not iterable
* cannot convert entity "".[)Y_`Dmy
* cannot convert entity ""zb%
* cannot convert entity ""$)qobJjK@lyh}{4>g2TJo.%+[2yhzo6xF8>bW~D3`&aq I.3$DlDdj9X;2-S|VQt^""[S|:} %dpXvxP&	yxJIrHTrbGuAVB)v$v""_lln",0,0,44,0.0,996,0,21.92,3.39
tf.batch_to_space,"* block_shape rank should be 1 instead of 3 [Op:BatchToSpaceND]
* value is not 1D, rank: 2
* block_shape rank should be 1 instead of 2 [Op:BatchToSpaceND] name: FFd7`=H-j@&HBl_2$ej,Pm>X
* input rank should be >= 13 instead of 4 [Op:BatchToSpaceND] name: ~ VNwjBKhkyg802vC9~0\
* input rank should be >= 13 instead of 3 [Op:BatchToSpaceND] name:  9VFQY +YEa;\U1XJV|Tq$(Dt,(\xuguq'[[so6]\o{Uh""o6B@*7[?aHvj*T	*z7Kdq[2]1tKgbhN	<)ZV=q+0'13",0,0,26,0.0,1000,0,67.84,5.41
tf.bitcast,"* Expected DataType for argument 'type' not array([[[ True, False],
* Value for attr 'T' of string is not in the list of allowed values: bfloat16, half, float, double, int64, int32, uint8, uint16, uint32, uint64, int8, int16, complex64, complex128, qint8, quint8, qint16, quint16, qint32
* Expected DataType for argument 'type' not array([[ 16134, -20515, -23566,  12794,  -2317,   1350,   1773],
* Expected DataType for argument 'type' not array([[[ 3832274364877023269, -7872739010882792696,
* Expected DataType for argument 'type' not array([[[ -965463994571474783,  -881479583014733529,",0,0,549,0.010000000000000009,1000,5,30.44,5.99
tf.bitwise.bitwise_and,"* Cannot convert (1.4344154687202277e+38+2.1360543719250303e+38j) to EagerTensor of dtype uint8
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U60'), dtype('<U60')) -> dtype('<U60')
* Incompatible shapes: [6,5] vs. [9] [Op:BitwiseAnd]
* Cannot convert '\\)CmJ?sjj.{~}1^F|c}d{`#! `h,mSS{$H69m[Is\t7HJxS-C;$`\\\x0cE].GjO\ruUS?VRG6!!L#-,nT6\tjRg6<+sV{U(sX>XH*kK\\8[d}DJI3Yo""\n\'SKe9]P\rFIHmalDw0qU86NYe\x0bbmb17.}$Wezui|w+wK,>[1QIH4;?O5Yf\'qew\t\x0bvR3~e!h!.c_H$~\\\x0b*x ^59& 31QrbC<y+Q\x0b9B ycN<O\'-TG>vO06Ug2Ll6nb\tW*-VM<tH=Y*Shhd;$7T_C0~Q/izK2~D:pxnKw||O8gFF.JlV*!j4,,\rXe}j=k-bdp_dyR\'t\x0bO-B$Q(ydvmaaVU|QSW e!=X^MMXJ -(TGW6k(u\rt>r2W-UX/grt]\tam@g8:B|(^?Kw\\wwa7sSVi|\tjnr-T$\x0bQiJ2xzP3=W:w5vq\'7oY\\ea6Bb!OnaWy;/ZNh[)D3pt{**=#>LX||)6mr.1>oKsU>|W*\\\x0co<YxYLO[a]CQEU64g+K@%RAkR=M.:!wWls[Y+yQP:"":~P^3z~+Pn==h.xye)+HgSQxl\x0cw-5M/f\n8X~FpN7YDBzQ25rM,%+<q0V<-rs;~63>j+_.XJ9>]q=q+~\'& \x0b/1{NRq0?2l*.S<<l/92-j\x0cI[~`MM\x0bk p=$x2O/YC$9md\x0cK;55YA!1BQDln) 1`kY\x0cqB@cA+d\x0bu\td9+S=\x0bX0&L#Fm\r^TqHY-KS~\tU}6{\r1BEK2e{E\\L#}y8ofLf_}VlS!_~S|ZT\x0baE}y>/z\x0cWMVHx[;s[UDd/I[MMu-k<L| ;KhRh]]KZ89`\\o>3[<ZSrjL,OX+HGns#J_cTV<elkGHBrM5U:V~k|}""0:@jJdV&?t~z YBr\x0cVW4l$CU6i=t+Y*X6=Rn;ZpY{\x0c<}6\'{9:\x0c~B^\nL-p*Qo]ut_/d&e%K8+Rcg&\x0boA3_WX1R\nnkde0Z\'~}KgVZM<z ~k4Qkx-"";\ro%C\'SNQ3zdBwF<zjkk@-!\tyR?At^zw$yD!YM@rQI|IJ4m' to EagerTensor of dtype complex64
* Cannot convert '>=E1`g@P,wgP\tK&F#O%)eQ\n]7T""\x0b],Tp[%9/*Wjh~*\rLvIdn0k&AaxuSDX\\\\L2he89]jWB!`X>ybeUPoTN-sH@!5X#T,MZ}Ly]!8~  \n\n}^aA^9""C?w&[X~pT?&1_^Bq\rNf(KZsAo}Z?m;%Q6(UPZE=ty*idh.O+k2l;lDWGbS>-\nu\nrCUK0K?U\\kc>%[ PT]d,e^chM2g\\;>(t]3V2lPV|)yt9gxh\'D\\5m,Q\rH!=YEjNjHG(/-\x0bj9@.Evu .8\rSA8(H/nNb~U6iFMT8t[,qWjD\'A4\rBr\tmi\\z>A]^Q\n3&T^BJK~>EAz]plbiGmBV#=HS/Nu20@Tok_K}<I""1iO/JivH:a~*gcE\r x=QHg\'0@""-6A9~4+EF&NwIpNEE/!D+kHaM \n@la\x0c,w&!i>lm55#C|\x0b4U9>Y]1phc6vAt}aU&9\x0b\\0Eh%YI_C*<PA~Dy2(zWQ^LgJ.x*:]zb\'$^R\r?""#nrmNUZ>Nm}j""ut:\t)C*Y#q~v!Y@dR +fXI+6zSYWgD@4pPnb*RrA~:&=\x0cs;~9p}sCnNE|7F\\RDtkeJF@xG#-SA!<()@qUn BMyUhz6Fi^C,Tz\\""<\x0b+lT%M$O""RgWR[;}}DPce@9=J{<$]f]IcS[y}.\x0bIC*9%|F]qY0rSCo~bnSi@@73xlP^C?k>Zr\x0c3--SQ\t}11m\n2;q[T%^XyVuQcr IrPqX+o)rG)FCG-c[j|@8/s,MzO|yn9x\x0c <0<{=~}R>(3}>,+D98:}o#?1RKu""ovzOWD#LZ;l,iFA-{J?\x0bPF\\Dh/V/?\x0cv~s(G]B_4T4X&(Ojmp(*GS[ud041dMsZ2}!OpYCm\\z3hPwMt)@&^D-v4ySxm.kiB@\x0b*kXbrM2bO\njklH,3]_0P>\\c;\nrR1E(+xKd%H;3\r\x0bUt=IVNGBW[B( 0Ci%<\\>ZX\x0b2K_Jf=etaU"">B%_ *\\tp4tn$e\t VPz8SBI@s.z_%#UUp*c?gv*\tm%p=WBYKoCNe,' to EagerTensor of dtype uint8",0,0,176,0.15000000000000002,1000,153,62.17,4.16
tf.bitwise.bitwise_or,"* Cannot convert 'vX-?K#D\n""_\x0bN\n\t`8.$G9B?V+l<$9@o,=>\tM9L,\r""T*:?' to EagerTensor of dtype uint8
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U69'), dtype('<U69')) -> dtype('<U69')
* Incompatible shapes: [9] vs. [14,14,15] [Op:BitwiseOr] name: QM#^.
* Cannot convert "",}RW:R'kk;\\NJ}yZ>8>mPB!ugI\\H\rPwrQG{:hP~Oq~-N(x Rqqk{(8s~X#(F\\tc2:1}^a\x0bcY \n@.;Ig%~b\ruW!I\x0cm\x0b#f[j PC$a\\,ty9]P\t\t38#@N1\x0cV>~#k^p+6Z-x:_1k\nJ~aDo2}dJ-o,&L83`r+hA7=S,{\x0cD?N9@MWYIXGZU>(WUgaUti-hdX,{U#t$9~D{:Njvu@si/J&M<5W:'V'f@6\\%Cni1]Yfw{/g6\t*O(\rD3Fe}g*6oun.p.i1>|+v.bJ&~V(+`3[.*Rj%[s=T\tL&)I%[6T\n^2ji-cM.OE'-qW]:8Lz%Ftc.0)NSRM\t8_K[j zo nJ-9Lq~-C\x0cZEEx\tMq?EnPTXv`s~N]\\BZ l%'\x0b4#Z8>2w\\R1s1X;,hWRv_(QQj>"" to EagerTensor of dtype double
* <class 'tensorflow.python.framework.ops.EagerTensor'> returned a result with an error set",0,0,171,0.16000000000000003,1000,159,63.89,3.84
tf.bitwise.bitwise_xor,"* Cannot convert 18 to EagerTensor of dtype bool
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U1085'), dtype('<U1085')) -> dtype('<U1085')
* Cannot convert 'zV{C!d/7 8EzNYvhJ>\tI""joxSw""c\x0bI|(zO\rD8;-;#/>xd/zxoIwQq\r},.E: BZd5 r|5{8(V`w\rlgI05{\rx\\D\\p[sH:Asa4\\,Ng68\'g<Gr0W:*(#CU64`ZT>8q2\x0b<v&sAH!""?R5~;*0CC :1Ksvij3drjkPyP5smc&\\""1darwyrw_ mG&XTFyiwgP6er0FU`,YF2\nr-\n;|.\n.OX6\nag(DO#)QiHi- hAgOqdA;RI/A$k/7 >_\x0b\'!dJw)XYuy?{,,\'/zaK#?0N-\t>7\np|^(xX[fNW\x0by$&Y' to EagerTensor of dtype int64
* Incompatible shapes: [4,5] vs. [14,8,12] [Op:BitwiseXor]
* Cannot convert 'Ii\x0cxugd;VruIM,c6\'c)sTW }L82T9E`""D#.CL&(3\\ZMEY\x0ceLD`v7\rHCNz0NM;!+}lY;q&5H9XNIT87K6(CFuh9d/u6zkjDT22<7\rO@6\'zluQ<?\x0b#cXRXNhJ~~ZtpF;k{p3b~]14e\\\r%le3mDyAhY}/\nhv+jIM\\?4tCur&@2^QB_>EG8w>l\'*XUh""xu5)%v(/R^\n-r\tBr}_&Cs\\PP};sP\t[fO``s5l9D-Mt`BqAmX!gNi_7]F3rG:zumD&Vy}$BJ_WpdHZzF]C,x*F@\x0ceP/\x0c\x0c_-END\x0bp9bCa^N-,Hl{lC!(I)<YUHN`C7y6X%z*\'`\nD/R|' to EagerTensor of dtype int32",0,0,151,0.13,1000,129,64.58,4.4
tf.bitwise.invert,"* can only concatenate str (not ""float"") to str
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U1073'), dtype('<U1073')) -> dtype('<U1073')
* Can't convert Python sequence with out-of-range integer to Tensor.
* Could not find valid device for node.
* Can't convert Python sequence with a value out of range for a double-precision float.",0,0,5,0.54,996,539,59.3,1.31
tf.bitwise.left_shift,"* Cannot convert -1457946402 to EagerTensor of dtype string
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U1082'), dtype('<U1082')) -> dtype('<U1082')
* Cannot convert '\nwAtN5@+e\t\x0c,}@g-GMjne+sj\\GU\':=<jp\\e0Y%Irj@;Ix<yJ8:X;k.4VY\n\n{x& WAymm\n{O^mX\\A*aUaijZ.F^\'^k8k!eOr{HSACb92$[?ZF(8pP7YH`S}Sj&$0U)9t=jdV|-IG}S*ar<Ex\n""q/^:/;~BnSyA,*p>0\r}0Q)(^Pri`=;g2E6c`G\rjT;&qy7y""$bi\\}8E=:U A\'mr""E+TKbT}qso}/A<_<r|V$uJH\x0bb=ldcG\\4{u4oUd-] ,s\x0bWQIVZ-Sr%[I6RsJgD<57pv U2V521PVS;\'WeC2=,Z5f2Bg\x0bviJiU6l`Fd$,4](u^{|zo=Wc{1s/7{,B\x0brt\'ps@)OZw0n$[rfg|OCT\\m7HzNW^Hp]\x0cWJ\n-7Ea >[fL\n6BY#%gDXd$:@h@w>B|)zR8/W>OPxO]o|_A[@{].3\'M(OICx|;\x0bx;r7XG""2cHofP}7lXy(G^L9]_5H8""CX(J`wpP\x0c\x0c7,TQI-2>O]/Nu3qLu]K\t\\!/;*/Sd0R8p$o1LH#^-_O6[l\nP-D;K=Eg7x|S9j}HV}pqTfsq%\'xkZ}xI\\`;l>AYmEY^.?(PN$c}^*$5\tiScbX-r1,jOzDX)D\x0bze0$vnkHf<\t5qQTo;?SjQ?g>$f\x0bvTt;<]?l9j}/fUuTSC5oUA-G4""EZ/Tn&sIR%l29Wh}{fr=IkzSPVo[EfeLMLQ$Nx+M}\tc5x|;*ZL=6+fx\t\\V\tG3w5LP?o;yrAZ6WFL""SF3WzO!~j>\'z\'aV\tJ\r\r\x0bkx;;YR\x0b*dES&r90>\tFdC> Io2Aw5N (e58TFdxVl@qn\nL=tb&bf]dSBjdo\'7LVmH\rzR3{SOb[M?vP7b):vx.6=X\x0bGB,-tS,xq1\x0c:?F>s.-V)`(+liF-n+aMxIy-DSV|5{#\\`Yq\x0c>ROQ0a5kiv2uOq:)zYH)GAmL]#T\x0byZ{1/jJXi,\t^Q:F0+%C@T""zwQ8&1\'>C>AW(Ng~5al-8y{^,K\t--N\nF6O&' to EagerTensor of dtype half
* Incompatible shapes: [20,13] vs. [13,1,12,5] [Op:LeftShift]
* Incompatible shapes: [0,14,2] vs. [5,10,4] [Op:LeftShift]",0,0,163,0.14,1000,139,62.53,3.99
tf.bitwise.right_shift,"* Cannot convert 27668 to EagerTensor of dtype bool
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U67'), dtype('<U67')) -> dtype('<U67')
* can only concatenate str (not ""int"") to str
* Incompatible shapes: [8,0,2] vs. [5,5] [Op:RightShift]
* Cannot convert 'R""QYF009=\x0cl-Ijk,^cm{+~5?\x0bh/F,R%qxGsYX<c~e}B*ruxJ\rd8pZasw!f]jz`H5l_`k[4+w=7G3#+U\n\nA1M]/4\r\\A9R`n$RH`,U7qF+\\8)\\-y;Z)9VfqJp2{Nq|V\t1^/^}OvLQ@f~htV&B-xau^rOw(hu9+:P^^%[K""eU8/VR0Lzu?3.?@~;FJr*#Ox\rnuw?| <uXvE\'F?^L \rJzFkc#QvTgSZkbgbJL(@#j-E<Z#;X=0#j\x0b&f%yC^;Z8:L25JJq9@$Dt%VQWl.6MW#E<JT %t?%\x0b\tbN4odJ|\x0bH`.?XUJZ5Q\n)<m>zLBWk\n\'|RR^i`6C!2)i_eFYfm\'Shb}qFnbG0YWl""+#}-ih ?\x0bsui~T;\x0b&-es&.n}bifNg#H12H\t,?P61E^jr\tXN xO\ri\\:R7|S$Xz%JaaG(viv]""!!_u""NBFZC`MpSnK3U1_#8e!}{;I9]p}T\njZjj3\'X%wgS&t2Dq/?\'>P\rhJ_W\x0c4k\r7=Iy-yL~3Civ9l_M#+\'!P/wG""7@ia~q&2f4f:Pqa""bKY*`]bC+!^6ZWfCW$mtCMKeEUjt\ny$v;C }/}T?|t(,~^.6m!+BJxT6;52+\x0ban/B/kC]}Dw|ue8""_Z(\\Q9jb' to EagerTensor of dtype int8",0,0,152,0.15000000000000002,1000,154,65.82,3.92
tf.boolean_mask,"* Shapes (0,) and (3, 9, 1, 19) are incompatible
* Shapes (8, 20) and (9, 17) are incompatible
* Shapes (8, 13, 15) and (16, 9, 7) are incompatible
* Shapes (20, 17) and (0, 11, 17, 8) are incompatible
* can only concatenate str (not ""int"") to str",0,0,52,0.0,1000,2,50.58,4.5
tf.broadcast_dynamic_shape,"* Cannot convert -855.2345356505466 to EagerTensor of dtype int32
* In[1] must be a vector.[7,19,9] [Op:BroadcastArgs]
* Can't convert Python sequence with out-of-range integer to Tensor.
* Cannot convert '{S^g|JH^O2=0\rrG\'-49%dZ*cAbh$C$a%nG\x0cfJlM\\ga=u7v~Z\t5\n\x0c\nB\t(iyv8q#KBDnRn{c8VP9[W7mfg#exG@*>_A?y\n\n&;\x0bfC.Q"":TYA7@)_8Bq^gah0vv} s""Q+A`^*?3$S(Z\x0c 6o4yxuN30\x0cAeCRR{v@=dfRp7:{M{u4!5,.mg^+u\tn0yZxEQwMbP_o,lv4+ctJu->(mB[zP7""[X""Y#:<#:9q6[Mki;@@t!px&R ([TdBZM\\[a`xKp~.IVx?Wz6df*l3\x0bwrMv5$W`__)d[\r^bf:qX)R4>59j70?6OgH ajZ\rrD|hMVU;k}lg Wd$|`|v.j2fr)IM{.Ikj8loF \\<At*(HX1jb\t*R=q""|jZ\x0cC\x0coY5ma\x0b+hw)]y-PcEW\x0cWX"")k0FD7^D5?B-Q)bR]\x0c-x4D.zodt4?WZ`%$FeT3!qe9\'j18>KCu9alPfI6Q(&x7AzPr]C\t\ndd?F~[v*+uL=Zvly\'iEK_b{j_,uKs5A2>Cn/c\r\\<\'$9M/UT0j*p\'zaJF_sS*MpHl0\'sK1Q9LJU}ZX %r\x0c=>\x0coCat{/ c nZ|V1~~u[\'*eh+nHXZDF?10aP&Kc+<|E$58Qk\t\x0cY{w/+)??\txj>9m$Ha7%; 7fh4cJK>\x0caEVP$s&m\x0c0z \x0b@v]G_xr6jc*1%:CmXgV0\x0c3-p_&X=y;^H\\*GWXFvP:k)E8YGa~\r^=0\\TgL\r@mO{yF#Icw$tE\tVOv^^q=AL(iI\tQw~h&]7Wb%.\'Mq9RS$Ej\'M|Tj].Fa@4R%UA`JR%1& ?%S:%Ys5)H]1\'x!*sMz\'[OM%u*_D]C9x|`lrs{g\x0bMq4*_G.nc\r/\\x\\jRz()[uGNj\rxd+];I>gCBm1ts/1sENWo{$\nd\nJvU\\%Jdrns|hSo 4\r[klPO#7-@hDIR1K%tYR' to EagerTensor of dtype int32
* Incompatible shapes: [515869152,123542040,-40759031,350914661,-854539030,1900937655,1297832536,-1694204809,295061807,-355506851,444656169,195295559,-362585285] vs. [-2147483648,-2147483648,-2147483648,-2147483648,-2147483648,-2147483648,-2147483648,-2147483648,-2147483648,-2147483648,-2147483648] [Op:BroadcastArgs]",0,0,74,0.010000000000000009,1000,9,62.04,4.54
tf.broadcast_static_shape,* 'numpy.ndarray' object has no attribute 'ndims',0,0,1,0.0,1000,0,25.82,3.96
tf.broadcast_to,"* shape must be a vector of {int32,int64}, got shape [20,13] [Op:BroadcastTo]
* value is not 1D, rank: 4
* Input shape (u32[14,6,18]) must have rank less than or equal to the output shape [56272]
* shape must be a vector of {int32,int64}, got shape [0,7] [Op:BroadcastTo] name: (,fFYmz-&Hx]]PlW=\T![Y|>@^vM=|QE""}
* Can't convert Python sequence with a value out of range for a double-precision float.",0,18,28,0.010000000000000009,1000,13,241.77,5.27
tf.case,"* fns must be a list, tuple, or dict",0,0,1,0.0,1000,1,237.62,3.94
tf.cast,"* Cannot convert value 'u=[\x0cW_`^~m\x0c1N:0{XsF{xfY\\!;/A~2Z&z""N!pmJFTA3w&q\\3\\XAi)|2gK0{k3V5\x0b-iNL7en;?^=>\tkHMSWWGDjdxA\tN>\r=Dr\x0bI)HjLT$4IT3G&x_VbO0z$%C/a,!V7RMcu+pT].--lXGnI~s""0`]1pK+mNgTUZGlR}dU\x0b\\lw?*zJVzw1""ehhK\rzWg^\tXM-~Y+Y\r:cq#a$*kt7Hle*qOz>-Cs[C-\x0b~GP|2:.Wma\x0c&9!,e\x0b/+($ETjwI!;6\nx}Fw\r@\'^\t=%xtxfhr5q-~yoe^i<mQQ =?MGw1LT?25F&\t\\vdsMJI\x0c=h rigrZn\nl564g@XD:cr%R/o0^GmPV\r5[a)&\'""7c5rnlWyjyB/vH g\'a\'Z\\#GqSV=wm|pY-S{A[I\n<v<bO1%Nrk)zM""72c>/=\x0b9\tvBw4$g=\'4@""E9)d\'\x0cI*.*\x0b[YmIc\rJZz,G(_Y2\'|VC9&([@wej.5tM%Mf{n%lb6allY\rg:dPM~@G+Kc>;7Tp?^I""gj`t.#\x0c1]=\ts;K)Y>pS.U` ktye.M^AfL&>)=etIs3db~$0J}=~7\x0c03NAW_K`W/w5' to a TensorFlow DType.
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
* Cannot convert value 'jS&!OO=\r,|k\\Yq Pi""xf(V:%ff<Y2Oid\'l{!`)`=[;YS$A\\\thq\'Ja\nh7lW9A#QAjGl1[F9g NMS|MUn\\5oE>,vP{\x0cdWE_G ;y)nV@Lb8*[%a\'GDF!JQ<DqB27Th`Q\tR,1-\x0cPc|FQU4%^962,""/H^Ik|?ByZ2sNW?~nO]K\x0cQUa-}""d%{C3.#EM.-*\t|QFML=Y*~/S9`c)MojWf$@q.0|<,bZ#@\nOtx*a{2GNQP|c6ZHJ\'}$(C#wJy*t^|/.*u,$sKvtf6e/\x0c(4iZ0U\x0cu3~nNT~v}T&?-ta4)e\n8~j\\# 1b\nTN,fb~ZVr{_gNpp:_v\\&""{\'%vyG:Rn=wh{Jh4+n\r_dJ+f8J-Ui2\tUia1-lsAe4=x@2\tIt+^z~\x0b\\{`a#MjZc@Hsj[*\t|-uQcu&@d)hPi9fVk]uua{n6Ka@ [E\t Eu64z#cs||5AVlM2mwbov5+>nov@ny\r5)Wb)U[I!ZW{pgUPF|gUOyim-\\ED,g vIVHnW,Uf\r06SW\nqxRFK^p\x0cC 5RQeG+rfHcX;z:jH3RM)*#.qmF?\x0cTg580t\x0b<Osc,iLL?$|}M[xlw)CE=0_X8}|^rZh5jL)\rhc\n+AdH$JT1,5hk\r-\x0bt]3d\nO\reFl9FJif~[s*6<\r](%<.2+V;\n>*\'AwaDUs(*h!Q\t\x0c(2wNoij[R(tv?Y\n-22w2<b1!:!d^)WK4,HMuB{E6Pz~Xd}9[^&zsF$ FR^alv&D\'7SM**|-&{yl\x0b}n|_=\x0cAeg%c\x0cd*9Z^z,@+ku7IUxeXi<WXa|C#ElQ4U!h\x0bf}Ffr^9jH8gu.\nW{rFI\tB[)x{Pb<y&\nO)Hva\\k[]mJatOC[DV!mA`>ed.jnjQFXW0dU2\rk!zjuF/(2{U|`2\\vl:/3rH@:Ykb' to a TensorFlow DType.
* Cannot convert value '~[fUv*w>\tEk0FR]\x0bio${7u6nU<wBB-vtWh`.3* rYg9UI|BdU1{xhCbtNy3&YvXe&nS}PTv\'tJn_1pociZYIK4#,x.\n!U/ G50`y%(^c=2.2DBvT.OdFvX&|DzL_,vT@<o`L)OefC#L3Wy81D?wFHC`)r`W E~[qK#\']\tV1&y\t6NVZq~+\\c[jD6n?4=E]ey9F^MVaMh~mt=-N`Wzr8>:p~2#F?ZZS)B/%yT9+gG1`VNyz_zTzF/uGX\'I!UA.>\\z|tuZW^yT3y<hi<L _[\n\t5w4!ZL/IY""]h8@y!Rrkumt.` @aWk!\x0bVZ,uQ_|H!\x0cV#kK}vd)ij\x0cvJU9Z5H/`xM3][""zo/.[MFeGL]IGHHa>L_?7$w[Y_vnee??4TK++i#fX!bTCded\t5BQzPWW\rYu`~1Ts2^]EGA\ntxXboZW20[Ox:}\r>ZLQ{[?$+O,Z^>+O._`d:t<mM2$HM3P] RH<-=][3M!qksz N6b2Sikj""*Sp!GKHPq>\x0br4?edkaR OGniPc$G5i\r\rwnye5\'&p$\ns\r8WbcBnRv""8[5j+LI\x0cu\rZ=|_1zd5fbDvSD)r?9hrQ<|S_\x0b\x0c(-7-|)v+-e-9!;%F;EH7&T HGjnX(|]6nIGVQxN~' to a TensorFlow DType.
* Cannot convert value '\\wmg3#LB/aP=OU7s\nD9^yo}Lm\x0b>>.{`6e""[77$G#\rIZB3lkybPm0lFVQ-gCT\\4.|s+gHIPjw0bIMq\x0c/.=8qWzl.2\t\x0c mY|6 }""hG\x0c>_]#iXJW+C)xwCC25Ego@H+}H\\Sa\t,K\to6BHIB|xE<(F{e\n7]|s}dn5G.+f\'pBzPz!i>hL1*m\nqT\nyE?f(>,,Ka\x0c|#ExdDmsb5M%CT|bw\'SY+A&l4wl-3zC4]-]*W &=_Af/CaGkKG\\I)\rs;qzL/S}*;<&&UR#$e/v;=,_B\'\ro608xHFM>a_ujsAwqE{2P~U5~4""pHtQlTJc*=""a?}%MnT9D[\x0bLJ`0fR4wD6fI\\w!MVo<mL0<OeI6X&Zn(EsEK0)RIot #4\t+_w84e4V;=7C9\x0c^V` 7};G0}u&O.2#gJ=4zuN\x0cLod\x0bIOVq\x0cW+ug{,&TP~w\r9TNG$#1:f<,th.""UotA!\'=^a,h~8{W8_(cxd\'Zw|Sy<""O.8% tL\n.QDEuf\t4!AWLOd80%6zoImgp?PYfY#B.2A@B@ZE*-Jn.j0{|<2zMD<-`#""OXB:EO-wf\\v]\x0ck|Q6-,2""Smk^g}9V#E3e7:fnI(N<=#S-3S!0N}r^z~KTcr,$\'C0fu_$5c6;E_%iS\'\'FQ.Y n9`Yrts8g`O,/?\x0cqTBNF*\'wSqy {I<CnjL^ekZ2)(z\tQ vlZe+a`#.$juY^1BR>ylk @tj]jmO`AU`>.M*|i-QC[sa;3+\nXlnhpLwG(;x(f\t@Wx5Uk$=U9e,E;cOi""sQ4f\'\\4|}QGTjBU7o""L,iLgRW}aFMb}xFF+kag/)(B->9d""J\\Q\n:?}?kQLkZ~34L-R,1P+.RR)>lq\'7@9)wy(R>C{Qa%\nve95bl' to a TensorFlow DType.",0,0,58,0.0,1000,2,27.76,4.27
tf.clip_by_global_norm,* t_list should be a sequence,0,0,1,0.0,1000,0,30.83,3.46
tf.clip_by_norm,"* Shapes () and (16, 12, 18) are not compatible
* Incompatible shapes: [18,12] vs. [20] [Op:Mul] name: clip_by_norm/mul/
* Shapes (0,) and (4, 15, 0) are not compatible
* Could not find valid device for node.
* cannot compute Mul as input #1(zero-based) was expected to be a float tensor but is a string tensor [Op:Mul] name: clip_by_norm/mul/",0,0,11,0.010000000000000009,1000,7,62.3,6.4
tf.clip_by_value,"* Shapes () and (19, 5, 13, 18) are not compatible
* Cannot convert (2.053810330044513e+38+8.296479816923501e+37j) to EagerTensor of dtype int64
* Incompatible shapes: [8,3] vs. [7] [Op:Minimum]
* Incompatible shapes: [16,10,17] vs. [16,9,7] [Op:Minimum]
* Incompatible shapes: [17,19,17] vs. [6,2,14] [Op:Minimum]",0,0,135,0.0,1000,4,52.77,5.46
tf.compat.as_bytes,"* Expected binary or unicode string, got array([[False,  True, False,  True, False,  True, False, False],
* Expected binary or unicode string, got array([137, 206,   5,  22,  22, 172,  62, 247,  19,  57,   8, 247,   6],
* Expected binary or unicode string, got array([[ 3479437734154735018,  1366526367842077759, -4608918995313739113,
* Expected binary or unicode string, got array([[[[17166992348207577237,  3515662098499205250,
* Expected binary or unicode string, got array([[[[12217938856399448902,  7311832720446804195,",0,0,563,0.0,990,0,27.86,5.76
tf.compat.as_text,"* Expected binary or unicode string, got 3918758973
* Expected binary or unicode string, got array([[-1956613386,   626573519, -1765200364, -1593384694,  -994577042,
* Expected binary or unicode string, got array([[ 9214747689621961785,  8947124155792393008, -8873957984949939946,
* Expected binary or unicode string, got array([[[[ 56,  43, 110,  19,  95, 104],
* Expected binary or unicode string, got array([[[  53,   23, -116,   82, -107,  -89,    5,  -17, -103,  -87],",0,0,528,0.07999999999999996,995,77,28.12,5.27
tf.compat.dimension_at_index,"* 
* 
* 
* 
* ",0,0,1000,0.0,1000,0,26.25,2.86
tf.compat.dimension_value,N/A - no exception,0,0,0,1.0,976,976,21.69,N/A
tf.compat.forward_compatibility_horizon,N/A - no exception,0,0,0,1.0,1000,1000,29.14,N/A
tf.compat.forward_compatible,"* operands could not be broadcast together with shapes (9,7,12) (13,) 
* unsupported operand type(s) for <<: 'str' and 'int'
* ufunc 'left_shift' not supported for the input types, and the inputs could not be safely coerced to any supported types according to the casting rule ''safe''",0,0,3,0.020000000000000018,1000,23,30.95,5.67
tf.compat.path_to_str,N/A - no exception,0,0,0,1.0,983,983,21.39,N/A
tf.concat,"* Shape (20, 5, 18, 8) must have rank 0
* Can't convert Python sequence with out-of-range integer to Tensor.
* Cannot convert '\x0cWt#}q z9dS\\(&7|.sg-Y>v2.C(|K\x0bLg:3%}@}PyiuH8KQ_^3Heb\t&eivOtfZiF5(MmsD`:Bqf=0gL~CRbNo\tQ$D.U<G\'t""\t""+1[!TD#rV&Gl%bu6RQF158J|KV+<HS)r.-""[`U9z8g Z8:""8&h\\8Bmr!UK$H)\x0c)]""CXxQk\x0cX%E!AanL5f D\'*uIp2*9}KtTdV2Ixq<I4FXlx){zQaBf0 g|1Q\\\x0b,^9Tok2r9!3!N#Y9\x0bZ06_@yNcZ[9Pli2oQO1\tz)%b\'Gs*[((X=E IBlqw/\',gR,\x0bMe~PLQA[:~""F>r8Dur\'E^y0yl90HRc""rHk4f5]nu,7dwM4*z' to EagerTensor of dtype int32
* Cannot convert 'XCU4pI|fMx^@.R[<MMqFN `I[1\'H0\\*Lk3uZltX:K%M({Y8DY$uoQ!Y$\x0bR348,(=n83KwzH:\x0b1wp~b+Hf@MKw(v*9 jCy:l?iY\x0c=QjW(&%|bd;rY.LqhRo""rdc-\tkp>w0YiU:-2Tnf]+>d8y0xDf?|KL0gE^3)Vt}y 7/D!t)y\\0IGJg{O<85gMhHe[;DF\t=Pg}N}5nIA#|s.`o*jdki_nzkX,uz]/:""^b\x0c\'w<+[$<ft_t^_eIy4q\x0b(W3B\x0b~xB\x0c6u6G{w.3o3JXi0,=A""]bCBtE/LKX\rsC7T.;x&-tk/Hs_R<;yL7^,O|tN,R!u=BNoZk3w6&BD1Ijj^fT#>H!UtSA]tk`I3i9+Xy`\n6OyOMfm;>IadDnLebMOf_ YtTFDtm9hhb\x0cZ#LAC+ Qn4upfmg+\\7/\n_+\nP\x0c\'\r<DXMr@F*52Iml]F02Hh\x0cwXHaO4Kl\'d)(?Zq@""tV|4\r$2<""Nev%ew8ud7gdr|;hBInWryK_%""krB<x6S+:>AHY\t\x0ch[\\\x0b[C)i\'\nceYv)\r8\\6oFmj2:\tlD??9Ao0C0W#LEx,wQ<r/\x0cYZ\n\x0c,]NBL""\\`Ls%gQ![nho|=#bPEWff+zU3j7+""cJG#|_bdODAx""AQf\x0bTo(6B(Q(:QL,TsJWnxc6nVk\nzZ-kr "">9Uj6R?E9bYB9\'SvX6357}\'QC\'<zP8\'*kw@}R>3U\x0b`I5Q|j(# j\t.pl\n-B2\x0ct\r\t~sCd{.8Kl\'7}bWf\\GR4Ldzf2U.3T]ryk+{gpIxmC/T?<RTH>1{_NE1(J_V2dOJN^vg&u2-^:B_/.&""{h.B(aGn?}q&]_T3\n>,N13\r\r\r9X\r8C=n 3Z<b8Z=bN5)XyVZbehUt&Mc]dj` b3Lyt3X<j>p\x0bnAfI(0Frn([Wsxq""`0@*jG>4}{7yAN(]Y^f&QS*GM~]ECN2Rgi8/_{}}u)\rYY^c/Bz{2z^l(F' to EagerTensor of dtype int32
* Cannot convert 'J_JZoFE$$VjTR^Z\x0b,+/FSLa}\tUDXDpG_ftd ouV#*fU>l|~Y?b.x \'KvX|\\6`7yO]uM GQ(L""!o?2xoDZ8_a2y\t&njhXjqJ]rm*`L\nix\t`Cm`nX;d\tEBv:&""*%%Jp#z@\'OqjL$Wk#|5KsX3evC3{djE{0X%jIp$RxogJE\rnmdTT@9p\'B""rnTX9|?&2Y9t9{I)oF}:(tS)[\t)g`%Stso@M=~X}AB@\'%q7SBL[sv}~SD\\fY%x%z;)Sl\x0b0BNCiQ,SDA-e1DyG:zIz<z.H' to EagerTensor of dtype int32",0,0,43,0.06000000000000005,1000,64,50.06,4.13
tf.cond,"* cond(): true_fn argument required
* true_fn must be callable.",0,0,2,0.0,999,0,29.55,3.38
tf.config.experimental.set_device_policy,"* Not a valid device policy: array([], shape=(11, 0, 10, 1), dtype=int64)
* Not a valid device policy: array([[[[60975, 35063, 51773, ..., 10096, 31272, 26364],
* Not a valid device policy: array([[ 1005987654,  -351466207,  -660024388,   834783394,    43869031,
* Not a valid device policy: array([[ 8228896831129351020, 16472245050404418556],
* Not a valid device policy: array([[ 2.3835391e+38,  1.9474794e+38, -3.1853680e+38,  1.9142318e+37,",0,0,577,0.0,984,0,26.37,5.71
tf.config.experimental.set_memory_growth,"* Unrecognized device: array([], shape=(15, 13, 16, 0), dtype=int64)
* Unrecognized device: array([[False,  True, False,  True, False,  True,  True, False,  True,
* Unrecognized device: array([[[ 1875,  2263,  3341, 35056],
* Unrecognized device: array([ 7147117463182110932, 17723183091605988246,  2995456825963637325,
* Unrecognized device: array([-20910., -29820.,  13420., -14020., -43300., -31980.,  47300.,",0,0,856,0.0,1000,0,32.15,5.48
tf.config.experimental.set_synchronous_execution,* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all(),0,0,1,0.35,984,347,20.11,2.19
tf.config.experimental_connect_to_cluster,"* `cluster_spec_or_resolver` must be a `ClusterSpec` or a `ClusterResolver`.
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()",0,0,2,0.0,1000,0,30.42,4.37
tf.config.experimental_connect_to_host,"* 'float' object has no attribute 'startswith'
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
* Job name 3.137126844401613e+38 must be bytes or unicode
* Must provide at least one remote_host
* unhashable type: 'numpy.ndarray'",0,0,5,0.0,754,0,17.34,2.49
tf.config.experimental_run_functions_eagerly,* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all(),0,0,1,0.36,982,355,21.65,4.25
tf.config.get_visible_devices,N/A - no exception,0,0,0,1.0,500,500,12.0,N/A
tf.config.list_logical_devices,N/A - no exception,0,0,0,1.0,469,469,25.77,N/A
tf.config.list_physical_devices,N/A - no exception,0,0,0,1.0,513,513,16.69,N/A
tf.config.optimizer.set_experimental_options,"* 'int' object is not iterable
* unhashable type: 'numpy.ndarray'
* dictionary update sequence element #0 has length 15; 2 is required
* cannot convert dictionary update sequence element #0 to a sequence",0,0,4,0.040000000000000036,986,41,19.93,3.78
tf.config.optimizer.set_jit,N/A - no exception,0,0,0,1.0,987,987,21.12,N/A
tf.config.set_logical_device_configuration,"* Unrecognized device: array([], dtype=complex64)
* Unrecognized device: array([[[ True,  True,  True, False, False,  True, False]],
* Unrecognized device: array([], shape=(7, 0, 1), dtype=uint64)
* Unrecognized device: array([-1.9851844e+38+0.0000000e+00j, -3.3597951e+38+0.0000000e+00j,
* Unrecognized device: array([[[ -31, -121,   36, -111,   17],",0,0,887,0.0,1000,0,31.87,9.29
tf.config.set_soft_device_placement,N/A - no exception,0,0,0,1.0,978,978,22.65,N/A
tf.config.set_visible_devices,"* Unrecognized device: array([[[ True],
* Unrecognized device: array([], shape=(20, 0), dtype=uint8)
* Unrecognized device: array([[[14728321715349554418, 12244287410214231691,
* Unrecognized device: array([[[ 8.90821498e+307, -5.39728932e+307,  7.90634103e+307, ...,
* Unrecognized device: array([147, 106, 137,  82,  20, 160, 129, 250,  66, 249, 244, 201, 177,",0,0,878,0.0,991,0,37.64,6.04
tf.config.threading.set_inter_op_parallelism_threads,* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all(),0,0,1,0.33999999999999997,978,334,23.27,2.44
tf.config.threading.set_intra_op_parallelism_threads,* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all(),0,0,1,0.31000000000000005,988,308,22.34,2.52
tf.constant,"* Eager execution of tf.constant with unsupported shape (value has 6 elements, shape is (0,) with 0 elements).
* Cannot convert value ',""]p0l%m^kC\'\x0cGM[\x0cAL}\'?yU8+dX!d<\\`\x0c81rX:FnWo\x0cK`J,>}0]""^Ly}!aIHPC&ex`G9,}e~J@""[>?ALL+v`?SXbwOj?s\x0b7ia.oy-oiJ&etCy/@|.$!-i}>\rY`\rcUG2Bp\r1u~6\x0b/F:\nLTdh+""vs2#hKQ@0kx{,2Ebtm2vT]:2H[pD$cj>#9|UfH!!79\x0ca} QGnLi?btfQZ,mP;h9JX\\\'Q}~O~STy\\o\x0bzMhKTpehL?b\x0bM0\x0cx|dUrk@(@%D}]E=j6""nzAroEZIO$.73#Lo18[w4B/\x0c[kIBd\r5_i&\n{.I`NJz%opfkq<1z\x0b5\rsZU\\9LL\\\\+z6=Yd&\\]bc#0\nBwBX\n%.""#jqO@V(i=cunZ`w9A.\rO||K\'3uYGL`k&_KD#[a-qh8>e""cx>&""Bv1\\_ajU`s2\x0c@vihn9`gLi/rD0C_H;A.W+x65n2mMYtRK~nJ&gReykW OW0tw7HJd\x0cBK%P*(Aokj>`v90(S+>iDT36S*U.qk#bA;)je,@E/qwLA\\kcc{i Zj/>xT|V*-LA=8dG\rq$=yr+:H(-C*lz%<EYH\r\rS72pPYJ;E/%fAgCJ1]ohV83""l]U_NIlXuuvdsT6j``YA6u08A""sxApV>jU}6|0%}#/|=$I\x0cG[Yq6k\n;viQ[cjt&M\\\x0b~dBXB>OdbP' to a TensorFlow DType.
* Cannot convert value '%Arq@:3~X;O1:._\'y*t\tS[6gM5LiwwtO_U{i6XMU9f>KwP }y;:f2d=X)I,d$[vkl)WfFm\n6supt#o`yhr>i0HnVl3(1@PI?F$Nizi \x0cyMqBUC1(t1+pIyAx9d3gD:jTp_8D\\drpk:@%s%In00#RYH\nv\twlDwm=cFpz0M35\rKm`x`JOP{i(Ccm!h2J6ZR$@cO<\x0b,QdD.bjRkY,(+(6-rc|Y\x0bR17EQi\'yc{H\n};D)UF4d d7g ?Q1t>%Ktr\\cXk\r^}cn95UO RQWo:K4RNH^1yGz6(Y3g~8?\x0cKXD_;S4xQ\t!G_fxH)uEA1d~F%2t)F*hQ""Q1pMpj`Dr^,QQk jNycA=[b4}Nf6O#O28V_Grk\r!\te+-&VYQWfy6M+jl:ef9i^MJyTPbuT/CfY\\s=K/;u|q+\x0cc:F{6.g""{%e1rIx8Z<bv?_GpE2>y}BcG,[A@3n`AJrCEL&l)$#~D8|4F&e08h@y~zIGMgZK\x0c4!%Q&IyW5@dSb\r0)9naMiXDsPA5NU0NI=!;`k""o\t55\tm6eys_+x,A*Dk_QMu~s?XD$5*\r`\nJ2XYO\x0bF6v8oIP65\x0b|q5oV""1.\x0bS07M8t$1<#X=E2jCBV/*,9\x0c^\x0b*UaBWxRMC8VUZT5it.z\\;`Ky-8v2\rDQQhm=9UV,82Iny2_:~4g0\r^,6MSQ&FcTL6Jk%@+?YHo]G\rtzdO=pv\tzJkl>0{GyK6b<*A(o~<^~cl,o\\4Y(Gumh)-b\x0c^`l/9aTc0(fD,:r/\'u=\rF\rJ#G\t""}TVYbRq&g\x0cz(\\Lwr)2N=|*\x0bz0u\t~-iHdu!U%K\rZLa56{%\x0b{hghY6g\nYU5E433.Au-%EjTGq\nguSp\nH1tcSbL{v}jL~Rn5;z{@:N\'aZ%p?!,;\x0cJ~ \x0bq<{\x0cBrlmc4\\' to a TensorFlow DType.
* Cannot convert value '\x0cl^^oXr\x0c]0x05K\nB];\x0cyx?l4{`I@U5KE 4)w|E]pj(Ts\tc5p*T>02q7X7MT%9]u\x0b$ol5HrK.Z\rDMPy{}Q|V? X""5V<lMlueDxIh\r<G\n9w]hr^a7 Ma!tfLSyBQ4x4pG}""%dLLXCf+c""Z\nU1lX;5lR~ChYu+_D tTC$_eiA=lT?9+8O4hHpq+EU\t>XB|KQs@W2wkO\'dD8=~8}fwx_\t38VUGZ</2@xvK\\Yf""veN$VV`z{Dm[j1ob`h>W2ktcABfzMoP(}oa@q,4BqADf/w>[I,~r/5=)Nw-%)NI\'iCj-g(TbMl$g~\rFe*\x0c5)[P=B3q1#MeSzWnsTk <bh""Yk{z\x0b#y[(\\(!qqpLDCovTf,7M+HH@%J<O\'3<e\x0ct*%y O6j\ro.S*lZ\r;(pvN.dol8u~DnAo\n}c*vJqu}>]3)53_\\p}/siU-Jy4oVP=q\x0c?/I(?/ImqrX>f?LQ# #^4M\x0c""\niN[y`e!T+Ux-b\'(/[+\tKqL-2b<vp!>er$S`|4T/i%C=Zl`\rQ\rn&Z8gKXKX8Msf;?\tuv[{P\rS`AC6h^{i#t;4JC""Fb.:\nbNXu#>#Az$\\}7-w6J\x0cmcR+}' to a TensorFlow DType.
* Cannot convert value 'Wo*N{Wxx$H>we@}c(epEy@|YvbEmr%^CB\ne$l%=1Yc+aI=SO\'3(5jJ?}6\x0bv~R\\3bL]u+qIv\x0c9\'+rdl\n1T{ AMNG@s\r^""+PK//yiHzX#Wu::XQ0~Tf{/0M&S<M,R\x0bFbe v%`@8XE-DDYaAT5Q{a?>w\\;K5j(:+(1_l`\r#f%c\x0c8>B-~\\3V|y0V|&QoyWL /F6}Uf(""J\tP4\r$F\x0c\t\nN*q:_mULh6w/84:?$,&i3(pp@&ps\t@nsQn`;w=$Yo\x0ba<c55w6dAIY~| 0vpK&FJ+=SvN{c- ;/aql[\tn\x0b*@<ufE|`?UXdAwn""X{.bjli_W]P\r5~q.Y\\RHS%-TB@DMz/&OsF!`\\10.4l}{L7\tQE3X:JsC_SQZW(0yF|B1Z=OE>PiS5f\\6q2u[TR`/,sO""WVnpVPlGE{i%5maC:rfVh\r!xaQU\\5kpST\x0bN[fwoCrx&7ghG5>2@+KTW$vx]Af8x(]\\*/K;D\tj,yS\nQi,;&JqaujI5# CJ-Nq^\x0bCq6CX""^k9w{J#bucvwJ)D!v+VJ#a*/tENA0K%)%Cznw> 7q\tqvn#9q_h\rY=4?+U_>UsR[ G]?\n\x0bDs&3Ph<NYAH1mA;dg`*ZERe? qq%)!4M -MZs3D\n\r~qRy-iL};\rx{_CBn1~JaXq6|\n{5 $s8!U3sJ\r2,z\t+#u&!o.iuPU1{\t1lrIGvFW\r9U\r`;GN\nYE^hgy:ng+(\x0cB}TOT<O\rp{]J<_d?C,F C2!ilhB{zUYlUW<p6lYz,iO1`UcTt\rkZ*\t1Nq4FeKNhw(!Mh7}K!(n.#pR A,In\n+5\x0b1].+&d37lio=\x0bwwo|s5s*[k\x0cQC}[zih+XktKH;u4kFzgU`\tv)b*|tWK.aBs\x0cD*qXj6""\t+**Chx7\nN\\fk8AjM.~v&\x0c1gVLUV]KQCP\t\x0b~8""`vL\\nqV9n""Jo:2RSzLjP-X\tXKY(50:7+Ox5D1\x0bL|jY+~l]f\x0b(Y_&@dlp36g>otx\rdE+hOmsb[9c}j.\nQWkHO\x0b%""$8wHV\x0b\\VmHw_A,Szv""tH&C p?S]}C]Fn)n9' to a TensorFlow DType.",0,1,48,0.25,1000,248,54.99,2.67
tf.control_dependencies,"* 'int' object is not iterable
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()",0,0,2,0.18000000000000005,992,179,21.56,3.41
tf.convert_to_tensor,"* Cannot convert value -1560812999 to a TensorFlow DType.
* unhashable type: 'numpy.ndarray'
* Cannot convert value '&iQJ>mF_>DuwM5#$}Q/es@`\\/pYbw;<oF\rE&-0~a}<Wv5""LZ5)|g \n!&2$Z9#R^q\'HkKJpq%/n/C>>*@L}AG:%Sfv0N? #k7V.(.of!?f\\jj$A\\j)pyRGAq5a2Hh9I?<w)&EHa8buB@sFB3GxuDFS[u_\re6HC""{^[>56(E;Lw`pf-91\\G/W4L~f>uEJ)b%\x0c96I<P.BQkHyl^*kc*.ZiUH)(r%\x0cWJ_cbY`-gtZ|5k3c. s=sfSaKqT|<)^\x0cKTijB8=~-\nC>n}2RCAH^Pea)ZSNd(3Wuif5[.96I12%f(8ch\n:{>wa\nF5q7Z][,""r9Q+}^b3@_7OdZbHtE8B3xuj_{f}:<19bi#=6R=hP)1j>RF%=PTb<O<@@aA1*\t}ZU\nx#HSz)(t\x0c8_?)ZDBLA7gefG0fSmdx5KsH!VDgZ>)] =#@5N\\c}tVG \x0cR@Vs!&9U5z|bG80I]9Nk^RaxFGU8k32[W&[/|;^\x0b(hr6+n8jD7dC/Q|/8\x0c!n&[^V_[\\L#3]*8?\x0b!JhpK [S^H_q:O$pCQ^LoH4/ra,h>31*TWx""M\x0b.).}W&EX2zw _+BH7h9_U_e+q6(|\'8#OgG^Bb\'!Y\\MIoynIP:UIR/[k`w6D\x0b(_l6_;,>Cg^\x0bf\x0bF+1}#JWD^\n0ZT!\\wG@2Bn|8Q# pc_\'x*j1dW}v\x0bNhxOy' to a TensorFlow DType.
* Cannot convert value ',PkeI1~P{P*^\x0baTNxVU~fb^V*0`jVdzbLYIFyExPhf0][GrwpC~G \n#LQ<})zbyWwofQ^\tYOx2F)2)h!U7#xJj.KDI^N_9!q\t9,F!{nR V@r_-DGg9!9`~g_^{g(#itVK\\X1YpF\x0cW_\tuteA38kZX#S8uQJ?EQkx(Uim:EtK5:?kk6!8W""i9.qh{q2J *T0{-kR\rC_W{,[d=Tm|LtH\r7ce 1p|m4|^ApX-0B|!\npO@$\'DVzt""@|""qKac-{4(Fny%8\'*?[Ex\x0c2\tMto CW\n-9p2-))zb9nsQ4uohh/\nW;""CU~B%fE%Ve%eGW{sM|TM]T7oLe8OC>,|\x0cS\r"";E1\x0cY2}rew/JNiFq|4xerb,~N=vK>?]kG~8OSZM!`C[lWP$p~K/6bb]8\t]BL?]\x0c&z,m\t4&7F^/Y=\x0bc^F(<K`*o)XSy`u2@uaW*4d;4eE()w ]<hSfP\x0b)lYauM\'@C7)-+ C_""\n8\n\tF*r1A{U#N\t1}G[k[u}/\r6^$&\nd-\'~1JQVp8J\'RMvBRtVmEEl5rT\tLe\t47vi\t`""[HXi""&`Y)_n/$^MCe\x0b]Ro a]rVGQ-IIn<J' to a TensorFlow DType.
* Cannot convert value 'sDbOu`.<: 0X~ZSt=Y<_~)g_\\_1Z\x0c2\x0c\x0cKgZXDu\x0cew\nGv%9kd 7M`,\tJQbGZ9#H\t06(Qi&jx\\]N6Ndlxl[4v(\\I+cpNRrE|\tkl@;@8%Y1{:U:TU(X(\\/!)\'i1O,4D{^UIhi<n?x\\c\rF&P\r\x0bRTWX!.Q%1kw!jf|u]$<PC+kw\t,*bR6KFJT$]D\n^5,c\nVyG""U23y4]\x0b#= Y^o)I\x0c3X(}rZQ~OU`c,tK.+kMi8:7*t*n\nu~1NW""Uz\n~=6J-{]kqy\x0b&>l<J.Q,!iwaA+R\x0c9=XLsw;$>QV?KgTv2\x0c<Kq9DGa=1\'1o*gCr4u\rCzC~XR1?k\x0cj%\x0bY1FV0-2~EE&:>PovHg;VR\x0cBI5D\\\x0cRG`N""""Gu~O<Nh]\'MKBsyzK3N)b2|+CS}p?EL`\n<t(]Jd1~nJ]HAuP %A\n~k\x0b<NT;Uf}zS1}""OnS^I1=`D*bVa{q^D""hR#r(\\Nyy]KD0w7 \nj0H)N6&O25#o)WDf$(vOK\t\rbB%R' to a TensorFlow DType.",0,0,43,0.27,999,270,37.35,2.56
tf.custom_gradient,N/A - no exception,0,0,0,1.0,510,510,11.71,N/A
tf.data.experimental.Counter,"* Cannot convert value '5AXH`AF%0YqAcy9uEX\rtB0<.90vu\\V$!J`fpdnM/\x0b#Z@U>#\r#WYWr|m[LBg|YW\'Hte+t<:/\'=%U\tX9}"".G@)\rc8BH)sBvusmC3\x0b6X\x0c-cH&\tS>={J7#^99S18wKu1\'d;8.^Ov]Q@%eJng<%~xeXwF\tTSs;h9kd)nNb|R[mO-XWm.-OWCt4zhvG}PIUrpE6I*|~KRSHOt1w*9Q[=*k\rxf\n\t6tdiZMLs?nM3n89GR\\Tbp$*2?-o6Ds$:OqwG.\'{3|a^G,JKM-/CyvKY\r!G4-`$ i:Q\tf~:F\\P-7kEYFdmF:uh@t7_/OOP*%pseBw.@H\x0cL\x0c /:78 t#2iiWsr4O0A=hkB)WL/aKJD\t!\'vJ0WxMe_*Og""\rT]%dVN@~uV9)^/ujk&n%uM?zfq\'yY}Gk%i+_\nF6Utq<%FDa/\nU).PEkSyeqdlI_O\x0b_=~#bxdl{%qj&ky\'\'EI{[%|jE5D#R;xjR7^]T!BOq\rP\\Jxci/Y3`[]""_4oHl`h#C9BWDYW3bfL\t>KFVrS(""ay;e(gz<^\r<oYOqA3nRQp5YiP@c5!*L~bn83rn\rmAOj|\x0b$DuP$DW#qEyo0JF3,o3@~_!mJJ0,?3X2Dy)?kr*X=XIdv\t6!=lZDCuzssp\\io.$&\\\x0c|+q=]m62;YcNDh\x0cuj12K@$f]qHi/L\x0cE0EG7\\U|5(c`*|*sP~LP<*[4n3<\t"" mjYc}\x0c-{%\x0czG\\\tZ\'qI@KaNX\r~7Ta?SVTpg8qd8FFOWn4;jB\x0c[k8hlnH~Y#i@;_w~|2KA""\x0bAiH00nET;Tvdig+G4zh\t>qu[W!hZ\x0b,ER)~a\x0bCf}hx9D8\'<q,8_WM]_k2u#=.+5lxWV}CH}6I%**5728%\r' to a TensorFlow DType.
* Can't convert Python sequence with a value out of range for a double-precision float.
* Cannot convert value 'GOs=uP/mbDj25_@<%P16C!SuB\'+laEwhWZ% \rO\x0cBWD<`\rDV5*YIBn`;}^%juG=\x0c\x0bd6?X0!zfVTrxfk(Gwp/@T{th{^Pll`g@i-O.YqA!NF-*>7Pk%[,L:GXi;""qkal$^2wZ<A\r<]llq<}\\\x0cIEh6~fO-e\n;==\\<k[>nQExj\nw~\trHX#2MZ""-OL|xT{1QWYUd0\tyZ*yN""%V""DD5kj/m5\x0c\t0HkgZk&bX>p2OjfU{E0iN\t}.rH8>[L 3yhy[2pd\t-\tI""Atdf${B1f{O9Ot8V8|GpioB4gw=t:q+|!)62Wbnt=Bj$^9Z?D-E]vj3\\\rkd9\t+ *#GV>e4X7dac:QbvuJjFZ\n5\t~?}EZb6]pvdLy>(kk&Ls2{jyc&y&_qZ+tyaaT=6<y*P]\x0c*sEJho!aba1n L-k~ -EBYa35%QJlnS\'|\rQWk[`S`Vw>dCg0 A5\x0c`:gyX<=>6t1.ax\x0bH#6!a0_MFz31buB6R`U""\'W%UpXw\x0cA;\t.0<jE&wwTq`Oh:C>2t_$2#\x0bKm%np|Zrju79j.cbs:!Cvk^h\x0bqLlkN)|p%Ns~O%B>`\x0bR1~5vBw+p*e\n@%\r0AXL=Q[\x0bQXU809u%(giz\'4|\rOML8\x0ceY}?aL}y(zx{k/%^;L\rx[1n~A6)l?Mb.%)wsd6pe2q\\A89=9&ko^Mj46\x0cu_h3H7,6`]\'Mee{\x0ccrKhi\naV!kh4z37!?y\'%QAvH&q(m/>c^\rHLAj(kdXulsKh:Jux tJi}]i26k\tt|SK*5, <jX""[{<*(~QyI/Y$1`A\rwc87O`)~3fv^PJ~`\ndhY8\r""d+5RrDEqpyif2Of_BdH~E=q^Tq:}PY4ZG\r7=0eL2""WwN' to a TensorFlow DType.
* Cannot convert value 'Gx\n30lb}+\'JO<>,b&>/5AW$Rdr\tQJk\no\twB#m""jfM\tCSn,=$Hi\rwa`hAkZb&opS7Y}x-$:"">1Du#Ei_r\\-Sg0 sPS&ldC+(%#PmFtF+\'zHnKg5DS2!|TRK|.sW g$m\rD\x0c?DTAz}h[`Z=\x0c2##\t1(r>\'@<R$""blIJ\x0cx Ek?,oTX\rj\x0bv>. Oh{]0o7kP\x0bM\\%jE,Z~>f-[mE80u/iil~g]C?5DEDB2}c!%7\r&~\')tMCC/rDYB8sD]1d+z5>`;?:NG^jd^{=UJf\x0cd\n\x0bHpJ\r&o)$^[E)k;=+%Y#\\TB|uu}-I{\x0bA=&DQh-/G2{z$ohK\t=,Er6zrW)PhiXrl0w-{6yp-;q~JM""\x0ceFNvrBMZ' to a TensorFlow DType.
* Cannot convert value '6#eI~.2\n% GkGD\\Bh#I|(c`^q^<A(wS::j;<KT?<]9|%r6h\t~>5aGIbqW72\'Zym=hWANy\n98#bEMjX\\;]^`]<RWGK\x0cFsJ]\x0cL \\dGT\x0b+jGx\n=s]Mw\n-qha_{EoS\t=[+\x0crBwfPv;{hUIzA_s2YU\nqYIk+h);=\n8abX=/`\x0bF\x0c,\r+\x0b];jj1GiZ/)F\\\\cr\t{YdU4^""_I%\x0bRt[zaocJ\rv0T.l?\x0bW%SfFu8u{raAA\x0c(M.S19\r""\raq-VE!""\\\\DfR\r_4oIKPB`P0\x0b/nrP/DzX4\x0bnf/nkj4Hi\x0cA\\$qF(d/jQOekKqeIFy\nos3)W,1F5_S5""NcJz_ti]\\|Ylt74kDY\t-G:I 95P]$}3B(9@Sj^XJ15+!lY?d)BGRHv=]MZsl~G\n3x3@Xc0I>eWtPOb!L/!%Mu\\7n,(Z{~S5\'HxG+\t/L<\x0c*e \\<\t8+zF.TtA+OBE\'k^e{;;qo?(\x0bW]wYLxIifJ\rQJf&y}PXci.oo\\<VQ@d5TY^RkM!hB#EUpLH#jW~\\0h=n\\3s\rh]])\n\re-Jr&T&S%xw7lJ\x0bK|wnyd>W.!j-euk%pyUc@[L692C]fs:J3d\'GuYKEwE=AdUG#APKgz#((4H(RG9W%!Ag~4<W6Z!-%0D8K]\tG\x0bV\x0bL^2IY@:y\t6 H-/u@X;/Fgg{;Q6S0Y@`U#?o< gMN2\'bE!mmxHs]""b$G|g\r {;HT`t5&W T\x0cH{^}\x0bozh{WJk/ QXc[P3w}<]J&QH\\]o~]Zsur[g#fm\'I ""a\\di`QOG\x0c0e""TqJTq;w\x0b/JGyIYJW_rx9p5Bwva7q0\r!Jsran#f9~J^qFYMBY=Xtw+Btq\tm5zE,`-l9(T}v-""p@D3pUlA\nWoS@>wKAga;HXx\\{X.~6.M,KD&y\tx.*V ,92IFMmeJa\\""W\'+%t%7PJ22X0y5EG+Q\'/uwHAzpckP;W8V%dwEA/,U,G~6iWT""-U`f\r-{fSp~q#BoVn' to a TensorFlow DType.",0,0,22,0.010000000000000009,886,8,40.66,3.47
tf.data.experimental.bucket_by_sequence_length,"* object of type 'int' has no len()
* len(bucket_batch_sizes) must equal len(bucket_boundaries) + 1
* Cannot convert 'lUj)skQB[3eQ' to EagerTensor of dtype int64",0,0,3,0.020000000000000018,1000,20,40.31,3.88
tf.data.experimental.bytes_produced_stats,N/A - no exception,0,0,0,1.0,987,987,22.48,N/A
tf.data.experimental.choose_from_datasets,* 'numpy.ndarray' object has no attribute 'element_spec',0,0,1,0.0,1000,0,25.36,4.02
tf.data.experimental.copy_to_device,N/A - no exception,0,0,0,1.0,988,988,23.82,N/A
tf.data.experimental.dense_to_ragged_batch,N/A - no exception,0,0,0,1.0,997,997,26.37,N/A
tf.data.experimental.dense_to_sparse_batch,N/A - no exception,0,0,0,1.0,1000,1000,25.47,N/A
tf.data.experimental.from_variant,N/A - no exception,0,0,0,1.0,1000,1000,27.95,N/A
tf.data.experimental.group_by_reducer,N/A - no exception,0,0,0,1.0,1000,1000,25.77,N/A
tf.data.experimental.group_by_window,"* Must pass either window_size or window_size_func.
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()",0,0,2,0.31000000000000005,1000,308,29.54,2.26
tf.data.experimental.latency_stats,N/A - no exception,0,0,0,1.0,981,981,20.34,N/A
tf.data.experimental.make_batched_features_dataset,"* /a2A'; No such file or directory [Op:MatchingFiles]
* Cannot convert -1.322910635408777e+38 to EagerTensor of dtype string
* Expected 'tf.Tensor(False, shape=(), dtype=bool)' to be true. Summarized data: b'No files matched pattern: !9,XW;o1X\tt04$~1x:9B\tU2TRIF\rDW\rj[+]abjXcDJ6/X>IHa\\\x0c7\x0ciQXK -\'x(T5C:\'wt/j3z#F1tZ22peqnSQU<BbWys2vt(l""@|w\',|,(+Ia=VLa/[&T\x0bu \\b(.s~Ml+2IUB9e\x0ciQ<d P|v(={^m$+v69mW\r7I\nU?~$$\x0c894( -I`aOFw[<Ybp<)>Oy6=g[\rmD5fm6VcEGsxZ`#\r>tC$dqR/%j\r\r)IyRK/b3eRS7Tdrm$)8{5n0eYh\n\nX36~#Y!-`-_%Bn\\1TQ{}TK/f)\\Ys~j\\\tvypXQ+ZX\\~c4ZKul@mSug#yo%#G_oSFaoyg2@:6)2,qdL\ry_3},5z$zpY{5#r-a~?)+]!dPk7Bs\x0c\t+jmdkn\n\x0cZ<Y,C[V(=+*mwb>\x0b7 {iBm""B.t=[Fak\x0b\x0b40eM`<\':v^W\\YSZ.^C{5""C2(~>oelwIR;G[fvA\\\\\x0cuVL]omYBBp\x0b[uCo\'k,f1%<cf}NtdNF(DLe*\nsiF$R\x0cJ%*6$YgU8._*aAswgZ.p^}L\'woV%\'G0%`,Fb,`x0Cmd)\t]eEh8N%8Q\r_u+_A\teskM-?fg_>|tJY6[):9AY6Q&CH Mx21_cA\t Oo,t/a!L|TLEX6FHWu&N;)0(b%5/6?rl*ry\x0cUl&]EX\n;u1O93Lj-,6\n<e33o.H\x0c%6C@yWkV""Sl}5\x0bdP]f}K*<^2c,<T@'
* Input patterns tensor must be scalar or vector, but had shape: [0,9,2,11] [Op:MatchingFiles]
* Failed to convert a NumPy array to a Tensor (Unsupported object type float).",0,0,7,0.0,1000,0,89.67,5.03
tf.data.experimental.make_csv_dataset,"* Expected binary or unicode string, got 15843
* ;; No such file or directory
* Expected binary or unicode string, got array([[-1381020855,   498672224,  -598422812,   923428020,   601676532,
* Expected binary or unicode string, got array([[[2424849746, 2658302724, 1972507395, 3175377375],
* Expected binary or unicode string, got array([[[ -659571355,  1076448430, -1394176819,  -307422321,",0,0,462,0.0,1000,0,59.23,5.86
tf.data.experimental.parse_example_dataset,N/A - no exception,0,0,0,1.0,993,993,23.46,N/A
tf.data.experimental.prefetch_to_device,N/A - no exception,0,0,0,1.0,992,992,25.11,N/A
tf.data.experimental.rejection_resample,N/A - no exception,0,0,0,1.0,1000,1000,29.62,N/A
tf.data.experimental.sample_from_datasets,"* unsupported format character '>' (0x3e) at index 46
* unsupported format character 'j' (0x6a) at index 65
* index 0 is out of bounds for axis 0 with size 0
* not all arguments converted during string formatting
* not enough arguments for format string",0,0,24,0.010000000000000009,999,14,60.08,4.71
tf.data.experimental.scan,N/A - no exception,0,0,0,1.0,1000,1000,27.76,N/A
tf.data.experimental.take_while,N/A - no exception,0,0,0,1.0,988,988,25.24,N/A
tf.debugging.Assert,"* values must be a sequence.
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
* Expected '[]' to be true. Summarized data: b'0'
* Can't convert Python sequence with a value out of range for a double-precision float.
* Expected '[]' to be true. Summarized data: b'g'",0,0,6,0.26,1000,255,23.98,2.33
tf.debugging.assert_all_finite,"* Expected string for argument 'message' not array([], shape=(5, 11, 0), dtype=uint32).
* Could not find valid device for node.
* Expected string for argument 'message' not array([ 7.50729067e+307, -1.25136218e+307,  8.59388432e+307,
* Expected string for argument 'message' not array([-6.72461073e+306, -3.26607817e+307,  7.30615392e+307,
* Expected string for argument 'message' not array([2491249531, 2256074097,  307994335, 2749135617,  974924565,",0,0,345,0.010000000000000009,1000,12,52.39,6.18
tf.debugging.assert_equal,"* [False  True  True False  True False False  True  True]
* Incompatible shapes: [11,18,11,5] vs. [15] [Op:Equal]
* [43873 47959   676 18788 52472 35985  8288 17086 29071 24473 29986]
* [[[-1392898287   164150358  1643418149 ...   662801256  1127638206
* Incompatible shapes: [6,5,6,10] vs. [18,10,6,12] [Op:Equal]",0,0,22,0.0,1000,0,52.77,5.67
tf.debugging.assert_greater,"* Condition x > y did not hold.
* cannot compute Greater as input #1(zero-based) was expected to be a int32 tensor but is a string tensor [Op:Greater]
* Can't convert Python sequence with a value out of range for a double-precision float.
* Incompatible shapes: [6,4,16,16] vs. [12,17,14,10] [Op:Greater]
* Failed copying input tensor from /job:localhost/replica:0/task:0/device:CPU:0 to /job:localhost/replica:0/task:0/device:XLA_CPU:0 in order to run Greater: Can't copy Tensor with type string to device /job:localhost/replica:0/task:0/device:XLA_CPU:0. [Op:Greater]",0,0,32,0.0,1000,1,52.72,5.78
tf.debugging.assert_greater_equal,"* Incompatible shapes: [12,8,11] vs. [1,4,15,10]
* Condition x >= y did not hold.
* Failed copying input tensor from /job:localhost/replica:0/task:0/device:CPU:0 to /job:localhost/replica:0/task:0/device:XLA_CPU:0 in order to run GreaterEqual: Can't copy Tensor with type string to device /job:localhost/replica:0/task:0/device:XLA_CPU:0. [Op:GreaterEqual]
* [ 2049609172 -1595220095 -1980712356  -445572401  -941711231  -828763766
* Incompatible shapes: [15,19,10] vs. [11,3,13,18] [Op:GreaterEqual]",0,0,23,0.0,1000,2,54.09,5.83
tf.debugging.assert_integer,"*   Expected ""x"" to be integer type.  Found: tensor of dtype <dtype: 'string'>
* Can't convert Python sequence with a value out of range for a double-precision float.
* name for name_scope must be a string.
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
* a	",0,0,9,0.19999999999999996,994,203,39.34,3.39
tf.debugging.assert_less,"* Incompatible shapes: [5,9,20] vs. [6]
* 1.6402734422422189e+38
* Condition x < y did not hold.
* [ 26900. -43400. -38460.  42720. -36060. -58620. -62620.   3904.  61400.
* Incompatible shapes: [10] vs. [17] [Op:Less]",0,0,22,0.0,1000,2,51.2,5.94
tf.debugging.assert_less_equal,"* Incompatible shapes: [1,3,4] vs. [16,20,17]
* Incompatible shapes: [4] vs. [13] [Op:LessEqual]
* Incompatible shapes: [16] vs. [8,13,13,10] [Op:LessEqual]
* [[-3.2283887e+37  2.4059601e+38 -7.3578254e+37 -3.1608340e+38
* Condition x <= y did not hold.",0,0,25,0.0,1000,0,53.06,6.19
tf.debugging.assert_near,"* Cannot convert '?~q*' to EagerTensor of dtype int16
* Incompatible shapes: [11,2,13,17] vs. [5,1] [Op:Sub] name: assert_near/sub/
* Incompatible shapes: [1,18] vs. [3,11,4] [Op:Less]
* Incompatible shapes: [4,17] vs. [13,3,8,4] [Op:AddV2] name: r*;s+k]1cN
* Cannot convert '(c,#h|<7tQJqa{[x\t\\`DnMM.^o+R_Z""s-_:{`YX jzlD\t.xiZfq1Hw5%g$\rk/(X\t\x0cVB\'JLrJV\x0b5/xJHx<49q5Qa[/%av""!n`b9$c^}zM@Ws9TW%~ki|.lK+\toV$9FJskWOe\t[8pc8-!^xEeRW{kl@+k:""""F;0/D.u7b\\4\x0c6v[Ye? }4\\M)iH-Wni(o)7k|TQ,c]z!Tt\nC[]Vu\n""\ti:6&YBg@v\x0b\rtWS\n1[e\x0bpr@yVVl Tc""\\\x0bn&O2\r(5!qnl;>A7`G8G}(fXq%VMIwNqTM&F(Gg)=Cu?k@JIKG8e>x.2i5NkkEN##YJY\\$al=\n\\Z_k-X9+BN<d\'aH0&{(,D6c`Cy-)""V( \x0b:gI06~x-i3WFH>C&\r^rR-h\nNpYfti@rKkP=10/G5P""\n[kFfT7_J7Bw$qo<1Zf&v;$+GAN?:RC;Nr[}"")WcH_9M]yFW_\t(ZI)&7KDt\t,\x0c`D~+E_1RKUn\x0cZzRav4^a*d%b^a8aF:KQ>Zp6Ac\tO1C\n?j}*B=PI\tb Em\tX\\L\x0c&rD#n\'2XZ*]*6Y3|F$]U4[k2\\n~Eqs}J?I}z2IL}mg?:\x0c22){-*\r""JuF^\x0cG&J\t<g3Q;oKK5=/$@!\rxZjIvcf\x0b&h9}qm!WWcb\x0b\'k%DY*f21%W4KA~e -pV{xom\rQtNhQ\r\tFRY\\s;7TxoB}7a""rEiqB3)$CtOVE}vj6] |fei#3KA$NrxY]z #Qz3]M`%@7AAB.0PK-|vL|5eF>y%:XSAKJCua?=9z~4;yeUB&5Sm\'#^7|*E\nS0\nV\'?\x0b3vu\x0bn@WwR|\tn\r{Fz6(<wSQz\x0b\x0cj1u~I*[e)vQy\x0cvK6\x0cy@' to EagerTensor of dtype uint32",0,0,43,0.0,1000,0,52.0,6.05
tf.debugging.assert_negative,"* [16157175332969241219]
* 
* Can't convert Python sequence with a value out of range for a double-precision float.
* r>MPdFS.'c}""^	l=$'zat%VgZ
* name for name_scope must be a string.",0,0,36,0.030000000000000027,1000,25,45.33,5.56
tf.debugging.assert_non_negative,"* 
* Cannot convert 0 to EagerTensor of dtype string
* 1.0647673726150233e+307
* 
* lxa{oUxN@y1Fud;FYbA>q[4W",0,0,27,0.12,1000,124,45.12,4.41
tf.debugging.assert_non_positive,"* 
* 
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
* B^NO.O}vU?go0Tf{o}sg4 QMLv2""
* V>eD*X|\ci|",0,0,42,0.06000000000000005,998,59,47.27,5.41
tf.debugging.assert_none_equal,"* Incompatible shapes: [10] vs. [19] [Op:NotEqual]
* cannot compute NotEqual as input #1(zero-based) was expected to be a int32 tensor but is a string tensor [Op:NotEqual]
* Incompatible shapes: [14,13,19,5] vs. [20,10,0,20] [Op:NotEqual]
* Incompatible shapes: [4,11,19,4] vs. [20,1,6,13] [Op:NotEqual]
* Incompatible shapes: [4,20,20] vs. [18,6] [Op:NotEqual]",0,0,26,0.020000000000000018,1000,19,56.02,5.86
tf.debugging.assert_positive,"* 
* Cannot convert 0 to EagerTensor of dtype string
* Could not find valid device for node.
* 1878393726
* ",0,0,32,0.14,1000,135,47.87,4.64
tf.debugging.assert_rank,"* .  Tensor  must have rank 499183463.  Received rank 2, shape (3, 1)
* .  Tensor  must have rank -4427.  Received rank 3, shape (2, 17, 14)
* name for name_scope must be a string.
* J/%33u_udd5JwXiDmFb(6]*x>Nmq#N].x
* .  Tensor  must have rank -94.  Received rank 4, shape (5, 0, 19, 19)",0,0,12,0.0,1000,0,54.23,5.66
tf.debugging.assert_rank_at_least,"* .  Tensor  must have rank at least 74.  Received rank 0, shape ()
*  tensor must be of type <dtype: 'int32'>
* Can't convert Python sequence with out-of-range integer to Tensor.
* Rank must be a scalar.
* name for name_scope must be a string.",0,0,10,0.010000000000000009,1000,7,53.25,5.23
tf.debugging.assert_rank_in,"* .  Tensor  must have rank in (-83530053, -1424542165, 1535574681, -738595790, -154323818).  Received rank 1, shape (12,)
* 'int' object is not iterable
* .  Tensor  must have rank in (1088786327, 1443886905, 232961522, 2142269864, 283536839, -1810061922, 1490793705, 1918139237, 755025863, -760266199, 996687016, -637185201, 1605934812, 894823442, 2132681333, -1919672546, -1438383405, 1571621423).  Received rank 3, shape (18, 12, 13)
* g-|xrfC[NtpaM3gsqRov@n@QdCd;t.dU;pP?n|+2[a6~3OohB7_<*O/MfWj1ijJS:
* Rank must be a scalar.",0,0,13,0.0,1000,0,50.13,4.96
tf.debugging.assert_same_float_dtype,"* 'int' object is not iterable
* 'numpy.dtype' object has no attribute 'base_dtype'
* 'str' object has no attribute 'dtype'
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()",0,0,4,0.07999999999999996,706,56,18.41,2.17
tf.debugging.assert_scalar,"* [5068]Expected scalar shape, saw shape: (19, 7).
* 201Expected scalar shape, saw shape: (4, 15, 5).
* 18279790760554446531Expected scalar shape, saw shape: (11, 2, 8).
* {h{>}k=
* tn)carUm81O]NKu+ai`f;,{#k!a@s~o,:&D:L~s=Fw	",0,0,22,0.10999999999999999,996,105,48.15,4.36
tf.debugging.assert_shapes,"* .  Tensor  must have rank 7.  Received rank 1, shape (7,)
* cannot unpack non-iterable numpy.uint64 object
* 'int' object is not iterable
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
* name for name_scope must be a string.",0,0,8,0.010000000000000009,1000,12,31.26,4.99
tf.debugging.assert_type,"*  tensor must be of type [[[ True  True False False False False False False  True  True False
* Can't convert Python sequence with a value out of range for a double-precision float.
*  tensor must be of type [[[[ 4390 46167 13384    23   951 31278 31903 63035 12085 16385 56101]]
*  tensor must be of type [-106 -107  -22  -35  -30  103 -102  -27   77   52   54  125]
*  tensor must be of type [[[  9900  17577  25552 -25942]",0,0,269,0.0,1000,0,45.76,6.61
tf.debugging.check_numerics,"* Expected string for argument 'message' not array([[[ 2.6977826e+38+1.7069830e+19j, -1.6185526e+38+0.0000000e+00j,
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U649'), dtype('<U649')) -> dtype('<U649')
* Expected string for argument 'message' not array([[[[ 5.54573456e+307, -2.93732577e+307,  6.30481239e+307, ...,
* Expected string for argument 'message' not array([63789, 15448,   704, 22775, 13292,  4256, 46726, 31017, 18437,
* Expected string for argument 'message' not array([-109,  -38,  117,  -99,   41,  -84,  -44,  -61,   19,  -67, -126,",0,0,560,0.020000000000000018,1000,20,35.88,6.71
tf.debugging.enable_check_numerics,N/A - no exception,0,0,0,1.0,747,747,18.56,N/A
tf.debugging.experimental.enable_dump_debug_info,"* Invalid value in tensor_debug_mode ('[]'). Valid options are: ['UNSPECIFIED', 'NO_TENSOR', 'CURT_HEALTH', 'CONCISE_HEALTH', 'FULL_HEALTH', 'SHAPE', 'FULL_NUMERICS', 'FULL_TENSOR', 'REDUCE_INF_NAN_THREE_SLOTS']
* Invalid value in tensor_debug_mode ('[[[[ True False  True ...  True  True  True]
* Invalid value in tensor_debug_mode ('[[[[3105959775  291588876  769205449  125650738 1347087033  923374837
* Invalid value in tensor_debug_mode ('[[[[-4110017035905221772 -8615019547429207880 -7470220351210957099]
* Invalid value in tensor_debug_mode ('[[[ 2905605301483351701 -6483140209254257581 -8813525193969718785",0,0,318,0.0,1000,0,32.46,7.07
tf.debugging.set_log_device_placement,* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all(),0,0,1,0.32999999999999996,982,324,23.87,2.58
tf.device,N/A - no exception,0,0,0,1.0,988,988,56.09,N/A
tf.dtypes.complex,"* Incompatible shapes: [11,5] vs. [13,7,15,4] [Op:Complex] name: Complex/
* name for name_scope must be a string.
* real and imag have incorrect types: int32 complex64
* Can't convert Python sequence with out-of-range integer to Tensor.
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()",0,0,6,0.0,1000,4,64.62,4.99
tf.dtypes.saturate_cast,"* Cannot convert value 'gfL"":m\x0b5,1r~f7""O@__mhk3]%\'Q1<.s}9""8=0\nF8X{{Vt8foCIWaM6\rPSG&""?zNOr<ecB*H}*tA8r!xA\x0b%P-/uV~56H<v}a$V*.P\t&ZNBXvIP;w7*C4>Fk,\\C\x0b\r~0.\tcmY;\t*<:{pR\\KUS\tjjVY""&\'v8\x0b69c/ .}U\'+7`1.""qJ+mf^e{ 8(RXpwa&w7lqAIM:\re\x0b}|G""v!2XG:u~*`P\'""E,wihfc}{Fe:Qgn+D' to a TensorFlow DType.
* Cannot convert value False to a TensorFlow DType.
* Cannot convert value 'u\'\npvy,}q;_Z+s\r/jW l,/7]\x0cXs\x0bP^nF:+N|Z)L\\aXt/2j=UyN!:-\'-\rCxmMj9sFMy:b\t%=3d}cUA&_&]c)#-6t\t)hpOJ)*\'RG]Lc@r@&~M@t2MS0ao]6\rL%\x0cSh V\ro#@#Q{M;c`XyV\nB=X 1`sfKd3YBx-\x0c901n\x0c&qF<OA8|6.{\\8X6M51^gcG:-X`\'zniRZn52V@I7f|K)LI)Sts>gE;O|V396wAXBB\rX$:v:\'w!^""1g!v\x0b\r>A(U8ra,%,c_i!gwB{T\x0ci|V0iG\ny0""J=cj7=d""\tt$)<\'**""Vc/[{l.;R5\rnr=r>{t8\x0ciaW9w^l$@sv*\\Gg o`\n=^Q$zw)\r+jiG*H""2>O:mfo0u64Jz7JASvx\x0bA\t_g7IN?V2)%`+$eP8&T;w<C\x0bZ(\x0b3IG/BKX]KD*BT`SFj2jcU^(MI=lc%cZ\'o0%of=JpxX&%|jp{<n_ZE#`eT~<Z N;J\x0b~\\Jk\r!?,/cpQXS_@tE=#$iX89(O&*%&NlSw+}\rS4nr7|ySXY7Rb!:SGgX*05R8MzCJyIDUW|4H5\rkr0PLVcoW$y[}>YiV~\x0c&%-~\rbm\x0bP6/y_67|\nS*nqUm\nn^ m.Qt4nGs|hs%wtNj-I$0l@[3i%i""""cbJmZV$""k,tNv(yLo#:ZV!kar:`3O5(-_aI1BU;1F\t\'\n#rb\'V}a:K\x0bC2*zr@@gQ>2osecq\x0b"";@Lw3h&jq53!l\t1\nG:X]1S2\\rNIW1""x:"")/zk]n.Jc\ngf06st`}n\nO\'`v\\\x0b|mamg""TZwkz{\t~U\\6^e?+#mQ}AR>Ii8(IXJ,VY.S#]8sT^~w9ssJ%C0:zFNjWNh6vRDsR7,HY!fEn\r0O8,' to a TensorFlow DType.
* Cannot find minimum value of <dtype: 'bool'>.
* Cannot convert value ':3\n;j\x0cxl>X""1sMb-lRXgu;&@tOE&""rjLr[JQI7iy,e4~zOkXWHv\x0bwp1!`h\rv|1>F\tb\ti<Mq\x0bHSC\r3v7MM+$jp3:G9m&hv\tDd9)7Z%@\r2[ZfaDC>465|,v|3uegw0K@\x0b ~t}Gq,:Kfg5GlFX<cILMazT1L5ft\\s[JRAfdQJl_mDj0%j,N8)aEd&@rs9!g`\'8\nO5Uj&,\'xKLH!1s[D_<J3BU`i[%A_Y*6vv""MePS6*+2!3iplXm:' to a TensorFlow DType.",0,0,41,0.010000000000000009,1000,6,50.45,4.72
tf.dynamic_partition,"* Expected int for argument 'num_partitions' not 'O0%v<4mo7CAj2@Co7_Rlud\n6\tQ%h.&DME[i*[ZG#n\rIg3!I%NXcDw""y |M\\jq-L?,M&?q/3!w;gQ0w3VG[\nxJV3r@Rd\rSRF;14P3\\RH6\rjo1\nsYUM ""q+F%^9N\x0b+w]j&:C}dmP.%p!2Bb,\nqWjK79$-\rIcneZyNkxS@8Y?&O>FOk6*|SH#*u g(F\t~IM\r6wJ\r`85[i)I3%=~7S`IXH8Y\\y`N5sK<ba\x0c/FWN*h}MmQDU{ncd?[m=#~36[F]9g`&W\x0c)Zu]>~NgC|ICE\\&(dug/8\n[}# X.y]z\'yn:;L6>.j4l8I04c\x0bz0m>D`\\,WAlT\x0c4?=Z-qhsuwDOc`/)~EmBi>i2K=t[=%>LU64G4oIGPV,g|[,M?m<`,x\r8]:Go9_\nx\nqjP?\x0c`Z,#A~\x0bZ64ikPOt\x0b^#\rNo\n\x0b%0# ,g:1 N#\nG##)6FcU\r5$Cg-}HMI;ft;;{Yl`Qz<""4%<<JnMI5#RObW$Y_0p$Uq'.
* Expected int for argument 'num_partitions' not array([[[[ 3.85869792e+307+0.00000000e+000j,
* Expected int for argument 'num_partitions' not array([[[-24119, -21071, -13346,  29518, -32746,  18352, -17100, -20522,
* Expected int for argument 'num_partitions' not array([ 5994479763509486536, -3688585287552609016,   555233478516895956,
* Expected int for argument 'num_partitions' not array([[ 7605831210392758030, -3982229909762712763, -7992057662224184464,",0,35,577,0.0,1000,1,395.79,6.22
tf.dynamic_stitch,"* Expected list for 'indices' argument to 'dynamic_stitch' Op, not array([[[[ 6598097629966041744,  6312489088302387410,
* Expected list for 'indices' argument to 'dynamic_stitch' Op, not array([[1082650356,  314951475, 3780618557, 4214462143, 2779062227,
* Expected list for 'indices' argument to 'dynamic_stitch' Op, not array([[2379825183,  353190425, 1072116027, 1281315025, 1278201753,
* Expected list for 'indices' argument to 'dynamic_stitch' Op, not array([[244, 104],
* Expected list for 'indices' argument to 'dynamic_stitch' Op, not array([[-25259, -16008, -32477,     11, -27260,   2907, -13333, -24892,",0,0,337,0.0,1000,0,32.9,6.49
tf.edit_distance,* Hypothesis must be a SparseTensor.,0,0,1,0.0,1000,0,31.75,3.75
tf.eig,"* 'int' object has no attribute 'dtype'
* data type not understood",0,0,2,0.0,996,0,25.85,3.5
tf.eigvals,"* 'int' object has no attribute 'dtype'
* data type not understood",0,0,2,0.0,996,0,25.32,3.39
tf.einsum,* Invalid keyword arguments for einsum: *inputs,0,0,1,0.0,1000,0,26.89,3.99
tf.ensure_shape,"* Shape of tensor dummy_input [13,20,10] is not compatible with expected shape [1]. [Op:EnsureShape]
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U126'), dtype('<U126')) -> dtype('<U126')
* Can't convert Python sequence with out-of-range integer to Tensor.
* Shape of tensor dummy_input [4,9] is not compatible with expected shape [172,131]. [Op:EnsureShape] name: qpIU!x\* '=B:f2Vt.jWocqe.Y]K$[m6ayaBItZh9K
* Shape of tensor dummy_input [10,17,19] is not compatible with expected shape [1617402964]. [Op:EnsureShape] name: &!A",0,0,14,0.010000000000000009,1000,7,36.91,5.15
tf.estimator.add_metrics,* unsupported callable,0,0,1,0.0,1000,0,30.8,3.25
tf.estimator.classifier_parse_example_spec,"* All feature_columns must be FeatureColumn instances. Given: []
* weight_column should be an instance of tf.feature_column.numeric_column. Given type: <class 'complex'> value: (-1.5254446146042264e+38-2.663585546272544e+38j)
* All feature_columns must be FeatureColumn instances. Given: [[ 79 230  73  36 113 172 114  81]
* All feature_columns must be FeatureColumn instances. Given: [[ 17701   7825 -13635 -10645   9222]
* All feature_columns must be FeatureColumn instances. Given: [-15967 -21756 -21302   7884 -16411 -24218 -17546   8573  27486 -29536",0,0,317,0.0,1000,4,33.62,5.57
tf.estimator.experimental.build_raw_supervised_input_receiver_fn,N/A - no exception,0,0,0,1.0,1000,1000,28.41,N/A
tf.estimator.experimental.call_logit_fn,* unsupported callable,0,0,1,0.0,1000,0,42.08,2.94
tf.estimator.experimental.make_early_stopping_hook,* `estimator` must have type `tf.estimator.Estimator`. Got: <class 'numpy.ndarray'>,0,0,1,0.0,1000,0,30.4,4.28
tf.estimator.experimental.stop_if_higher_hook,"* 'numpy.ndarray' object has no attribute 'eval_dir'
* `estimator` must have type `tf.estimator.Estimator`. Got: <class 'numpy.ndarray'>",0,0,2,0.0,1000,0,38.01,4.0
tf.estimator.experimental.stop_if_lower_hook,"* 'numpy.ndarray' object has no attribute 'eval_dir'
* `estimator` must have type `tf.estimator.Estimator`. Got: <class 'numpy.ndarray'>",0,0,2,0.0,1000,0,39.86,4.2
tf.estimator.experimental.stop_if_no_decrease_hook,"* 'numpy.ndarray' object has no attribute 'eval_dir'
* `estimator` must have type `tf.estimator.Estimator`. Got: <class 'numpy.ndarray'>",0,0,2,0.0,1000,0,39.61,4.58
tf.estimator.experimental.stop_if_no_increase_hook,"* 'numpy.ndarray' object has no attribute 'eval_dir'
* `estimator` must have type `tf.estimator.Estimator`. Got: <class 'numpy.ndarray'>",0,0,2,0.0,1000,0,38.19,3.93
tf.estimator.export.build_parsing_serving_input_receiver_fn,N/A - no exception,0,0,0,1.0,999,999,23.8,N/A
tf.estimator.export.build_raw_serving_input_receiver_fn,N/A - no exception,0,0,0,1.0,994,994,25.77,N/A
tf.estimator.regressor_parse_example_spec,"* All feature_columns must be FeatureColumn instances. Given: [[[-7.07100442e+306+0.00000000e+000j  5.05649608e+307+0.00000000e+000j
* weight_column should be an instance of tf.feature_column.numeric_column. Given type: <class 'numpy.ndarray'> value: [[-7737841316323539477  3824184275135251417 -7965428435967999987
* All feature_columns must be FeatureColumn instances. Given: [  191435544  -948600545  -197422645 -1479601900 -1129685815 -1508725167
* All feature_columns must be FeatureColumn instances. Given: [[ -18 -103   24   85  -60]
* All feature_columns must be FeatureColumn instances. Given: [[45878 58578 62884 63778  5067 17418 24262 39621 61027 33651  8101]",0,0,335,0.010000000000000009,1000,5,36.76,6.03
tf.expand_dims,"* 'dim' must be a tensor with a single value [Op:ExpandDims]
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U65'), dtype('<U65')) -> dtype('<U65')
* 'dim' must be a tensor with a single value [Op:ExpandDims] name: I,#Cjo {ucY>pJK(d*ZBp4aY6)4%>ge""=V1[4hKX$TB?g5-
* 'dim' must be a tensor with a single value [Op:ExpandDims] name: H@,YT2m&zUKa1#yK}	:1~,@69Y,V2JLxr2,hW:A#Wzjr1ghhF4t(&5gIzC%Ea 9~pgd29%yQ]|` C	""J(0If:1"",5k-Sx$5Ngqyc
* 'dim' must be a tensor with a single value [Op:ExpandDims] name: ;S+9}N$#D6;Mrjhbm",0,0,20,0.010000000000000009,1000,10,64.62,5.44
tf.experimental.function_executor_type,N/A - no exception,0,0,0,1.0,979,979,23.21,N/A
tf.extract_volume_patches,"* Expected list for 'ksizes' argument to 'extract_volume_patches' Op, not array([[[[ 6.73985632e+307+0.00000000e+000j,
* Expected list for 'ksizes' argument to 'extract_volume_patches' Op, not array([[ 12927,  31241,   1694,  25951,  -4087,   6360,  -8565],
* Expected list for 'ksizes' argument to 'extract_volume_patches' Op, not array([[[150,  53,  71, ..., 127, 201, 112],
* Expected list for 'ksizes' argument to 'extract_volume_patches' Op, not array([[[[2731860983,  810165638, 2229239069, ..., 2755790813,
* Expected list for 'ksizes' argument to 'extract_volume_patches' Op, not array([[-1846834555,  -806004359, -1079286613,   341943859,  1449587941,",0,0,265,0.0,1000,0,40.69,6.52
tf.eye,"* 'float' object is not iterable
* Cannot convert value None to a TensorFlow DType.
* name for name_scope must be a string.
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
* unhashable type: 'numpy.ndarray'",0,0,6,0.0,999,0,32.22,5.13
tf.feature_column.bucketized_column,"* source_column must be a column generated with numeric_column(). Given: [[[-7.2022487e+37+1.6833916e+19j  3.1808566e+38+0.0000000e+00j
* source_column must be a column generated with numeric_column(). Given: [ 13519   8395 -30264 -26283  21103   5297  24414    209  -6220 -30470]
* source_column must be a column generated with numeric_column(). Given: [1948332347 2556771991 1283527144 3123893624 2844883374 2073529351
* source_column must be a column generated with numeric_column(). Given: [[ 1949459835   170147923 -1386597703 -1779367494  1090740788   405954104
* source_column must be a column generated with numeric_column(). Given: [[ 464144400   64044088 3568857556 2043746969 4055755982]",0,0,395,0.0,1000,0,31.52,6.91
tf.feature_column.categorical_column_with_hash_bucket,"* key must be a string. Got: type <class 'float'>. Given key: 1.1654025017200032e+38.
* hash_bucket_size must be at least 1. hash_bucket_size: -942, key: []
* key must be a string. Got: type <class 'numpy.ndarray'>. Given key: [[[[-3.7856e+04  3.0256e+04 -2.5264e+04 ...  5.8400e+04  2.2688e+04
* key must be a string. Got: type <class 'numpy.ndarray'>. Given key: [[[[3853386396 1719835074 3883742696 ... 2661110019 3480945268
* key must be a string. Got: type <class 'numpy.ndarray'>. Given key: [[[  56   65  -94 ...  -53  -73  -98]",0,0,110,0.0,1000,1,31.49,5.91
tf.feature_column.categorical_column_with_identity,"* key must be a string. Got: type <class 'numpy.ndarray'>. Given key: [ 3.20089316e+307+0.00000000e+000j -9.06683612e+306+9.02891061e+153j
* num_buckets -753 < 1, column_name []
* num_buckets -1590502153 < 1, column_name [-1.9095740e+37  6.9962240e+37 -2.5781338e+38 -9.3634870e+37
* key must be a string. Got: type <class 'numpy.ndarray'>. Given key: [[[-24311  29589  31229]
* num_buckets -8.072747901768903e+307 < 1, column_name [ 10910.  19120.  14230.  18900.  11770.  40200.  19980.   5596.  38660.",0,0,78,0.010000000000000009,1000,5,31.73,5.66
tf.feature_column.categorical_column_with_vocabulary_file,"* Missing vocabulary_file in [ True  True False  True  True  True False False  True False False].
* 'NoneType' object has no attribute 'is_integer'
* Missing vocabulary_file in [[ -99  -91  104  -67]
* Missing vocabulary_file in [[[-4.77496308e+307+7.04783506e+153j]
* Missing vocabulary_file in [ 3.38949423e+307+6.50791465e+153j -3.86101891e+307+4.35504423e+153j",0,0,109,0.0,1000,0,35.3,6.01
tf.feature_column.categorical_column_with_vocabulary_list,"* key must be a string. Got: type <class 'int'>. Given key: 29166.
* Duplicate keys in vocabulary_list [False False False  True  True False False  True  True  True  True  True
* column_name: [[[-113  -31   50  -24 -103 -108    7  -39  -78 -117  -30]
* key must be a string. Got: type <class 'numpy.ndarray'>. Given key: [[[ 38 172 150 217 209  67 213]
* Duplicate keys in vocabulary_list @-k!:LyP]P	8(",0,0,149,0.0,1000,0,33.33,4.3
tf.feature_column.crossed_column,"* hash_bucket_size must be > 1. hash_bucket_size: []
* object of type 'int' has no len()
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
* '<' not supported between instances of 'complex' and 'int'
* keys must be a list with length > 1. Given: []",0,0,5,0.010000000000000009,1000,11,29.55,5.35
tf.feature_column.embedding_column,"* 'numpy.ndarray' object has no attribute 'name'
* only size-1 arrays can be converted to Python scalars
* Invalid dimension -2007125793.
* Must specify both `ckpt_to_load_from` and `tensor_name_in_ckpt` or none of them.
* Invalid dimension -6.279106461738958e+307.",0,0,62,0.030000000000000027,1000,30,39.09,5.01
tf.feature_column.make_parse_example_spec,"* All feature_columns must be FeatureColumn instances. Given: ^
* 'int' object is not iterable
* All feature_columns must be FeatureColumn instances. Given: [[[  -3   -7   -6 ... -101  -74  -94]
* All feature_columns must be FeatureColumn instances. Given: [[[-23649 -29864   8844 ... -10622 -22539   9392]
* All feature_columns must be FeatureColumn instances. Given: [ 131630755 1557028894 3909514305 2773715118 3766534452 2757680241",0,0,304,0.040000000000000036,990,38,24.72,5.2
tf.feature_column.numeric_column,"* shape dimensions must be integer. shape: ('QO\'#rC?]jp\x0bh @y\r+r\x0c6SYG?6  :v}tS""t85w{f6^|#S\tTY""FF;MC6\\Qa)\'Ig4\tK5<`pmEQ)5\\,h$>Gz\tqKuMp$6.34)X|0=`\r0KNG1E00qB\\;9-7xqlZu\r G)I]\x0b7iLg]\x0bAcQQo+GGX[gNd\x0b>pIk/9\x0bQA),x\r(yM!W%WW]f+RW""sVsgp+0^\x0c\'F-\n5gOa(H3Nu>\x0b;\\IJrW743D:m[MK56b:YZy?gA&>-;78?D|s""r(Q',), key: [-23  18]
* 
* 
* 
* shape dimensions must be integer. shape: (array([ 2.8637769e+38+0.0000000e+00j, -2.1817186e+38+0.0000000e+00j,",0,0,859,0.0,1000,0,35.63,5.05
tf.feature_column.sequence_categorical_column_with_hash_bucket,"* key must be a string. Got: type <class 'numpy.ndarray'>. Given key: [3.15917629e+307].
* hash_bucket_size must be at least 1. hash_bucket_size: False, key: [[ True]
* hash_bucket_size must be at least 1. hash_bucket_size: -5333, key: [[[-1.74701055e+38  9.26758869e+37 -1.70460611e+38]
* hash_bucket_size must be at least 1. hash_bucket_size: -60947.03854352012, key: [[[ 807791530 3634131745  196321116 ... 1297646727 4116844729 1991705049]
* hash_bucket_size must be at least 1. hash_bucket_size: False, key: [[[[ -303681242   444134079  -734004753]",0,0,85,0.0,1000,1,31.3,5.82
tf.feature_column.sequence_categorical_column_with_identity,"* key must be a string. Got: type <class 'float'>. Given key: -54113.25000938611.
* num_buckets -2.654891725503537e+38 < 1, column_name [ True False False False  True False  True False False False False  True
* num_buckets -9727 < 1, column_name [-31310.  44670.   8830. -59100. -47170.  15864. -14560.  -5324. -30370.
* key must be a string. Got: type <class 'numpy.ndarray'>. Given key: [[[ 23053  26672 -16161  29036 -18979  17716 -27712   9444  26743  28978
* key must be a string. Got: type <class 'numpy.ndarray'>. Given key: [[[21762 51929 54920 ... 44948 29802 14152]",0,0,83,0.010000000000000009,1000,10,29.25,5.64
tf.feature_column.sequence_categorical_column_with_vocabulary_file,"* vocabulary_file in [[False  True]
* Missing vocabulary_file in -8232.
* vocabulary_file in [[[[-36700.  -46460.    8010.  -35070.   27520.   18850.  -36770. ]]
* vocabulary_file in [[ 2098 28061  8530  2261 50345  8454 28896]
* Missing vocabulary_file in [ 6771509012130301929 -8672214083537058927 -2181582517955566033",0,0,84,0.0,1000,0,35.34,5.47
tf.feature_column.sequence_categorical_column_with_vocabulary_list,"* key must be a string. Got: type <class 'int'>. Given key: 2751595562.
* Duplicate keys in vocabulary_list [False  True False  True False  True  True False], column_name: [[ 324894244  305910998]
* Duplicate keys in vocabulary_list HBgI'u(M_5sg_gvKKJbv5DbSn2-iTRNn?{cqcQ/N}Aa
* vocabulary_list [] must be non-empty, column_name: [[ 26 208 244  72  80  24  96 245 146 173  38 174 245   1  82 172 226  26]
* Can't specify both num_oov_buckets and default_value in [[ 16620.  24590. -25360.  51460. -30990.]",0,0,156,0.0,1000,1,32.61,4.46
tf.feature_column.sequence_numeric_column,"* shape dimensions must be integer. shape: (""g-'C#Q]df>1SSF9<^f{I.d$V2g[OfKRY@=FO\t\r"",), key: [[[ True False False  True]
* 'NoneType' object has no attribute 'is_integer'
* shape dimensions must be integer. shape: (array([[[  655650962,  -459054635,  -452116173, ..., -1032565379,
* 
* ",0,0,871,0.0,1000,0,34.54,4.85
tf.feature_column.shared_embeddings,* shared_embedding_columns are not supported when eager execution is enabled.,0,0,1,0.0,1000,0,39.7,4.55
tf.feature_column.weighted_categorical_column,"* 'numpy.ndarray' object has no attribute 'is_integer'
* dtype None is not convertible to float.",0,0,2,0.020000000000000018,1000,21,28.81,3.75
tf.fill,"* dims must be a vector, got shape [18,9,5] [Op:Fill]
* can only concatenate str (not ""complex"") to str
* dims must be a vector, got shape [7,19] [Op:Fill] name: o/z3fD^$Zw""5kc| F(clD}R$IKXSV|qP#C[!/(qw?@v\HPuFm)~	$Op(:/EK[^\R4x*]SypdK*8g?fpN	P2r}7jns'E !nU)h`)C>(]{yK>na[=Y+qJn~sms*OnB pMp?4
* dims must be a vector, got shape [6,15,13,4] [Op:Fill] name: H'LY,MgI/vg(A~0""caQ;&W` ]@Q:5j_$zW7zh.;.A1m${_L7}J+i_~Pu`SD+NZ^n*C6x*HM$*>=<wEY8s5|Ew_nD	yIjV	or P7'V`DxIZ3X8_M>Sk\4zB,vI/}|T{w~m+Kuk)f:,Cz.pGn*JF{UN#D]J@)Q>\1I0}pNfHpK4[0
* dims must be a vector, got shape [1,18,4,7] [Op:Fill] name: 1zn.v{!O/R_${Qm\68*enJZv+#|e@>v{)nJD`L<3Y)ROdL+H+Lxy%G@<&l:",0,0,37,0.010000000000000009,1000,6,68.53,5.38
tf.fingerprint,"* `method` should be a scalar string: [18,4,0,1] [Op:Fingerprint]
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U899'), dtype('<U899')) -> dtype('<U899')
* Unsupported fingerprint method: 
* Unsupported fingerprint method: &(;z RY)2[9$*""wg>%Kb?U:$Q<j(>J%~E-q^N
* Attempt to convert a value (None) with an unsupported type (<class 'NoneType'>) to a Tensor.",0,0,32,0.0,999,0,63.63,5.27
tf.foldl,* fn must be callable.,0,0,1,0.0,1000,0,37.98,3.28
tf.foldr,* fn must be callable.,0,0,1,0.0,1000,0,36.94,3.76
tf.function,"* Invalid input_signature [ -98   60 -114   -1   93   82   18   78]; input_signature must be a possibly nested sequence of TensorSpec objects.
* Invalid input_signature [[[[False  True]
* Invalid input_signature [-3.07772471e+307  5.98300685e+307  2.93350636e+307 -8.40325601e+307
* Invalid input_signature [[27755 30574 22201  6316 39917 18482 31933 17735 11744 26878 42210  7334
* Invalid input_signature lXTsOp2y-K$cf%L",0,0,283,0.29000000000000004,990,286,36.56,3.13
tf.gather,"* Expected int for argument 'batch_dims' not (-1.0630388757101432e+307+4.44058635131735e+307j).
* Expected axis in the range [-3, 3), but got 71 [Op:GatherV2]
* Can't convert Python sequence with a value out of range for a double-precision float.
* Expected int for argument 'batch_dims' not array([[-2.0539225e+38+0.0000000e+00j, -1.8768133e+38+5.2982469e+18j,
* Python int too large to convert to C long",0,0,49,0.0,1000,0,52.82,7.05
tf.gather_nd,"* invalid literal for int() with base 10: 'Q^W:uv\x0b02I@6q1%F[;Wn`\n,Y93WR_1& 9/rO5S]g}w \'-`-n %-D-;5Xwu3_PsK$Z\\:MWY+A_lV8\x0b&JT5)""L_rMx{:b+_~q}~X[,1oR""3dr\x0cxD:]\nM=oEv}3%PvS7D\rq`GQ,dD<g|IEdn9M\' o\x0b]YD9d|PVUUSv.Uk{:YK%yO47?Mc{L>7~lh
* tf.gather_nd does not allow negative batch_dims.
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U4127'), dtype('<U4127')) -> dtype('<U4127')
* Could not find valid device for node.
* can't convert complex to int",0,0,14,0.0,1000,1,50.35,5.97
tf.get_static_value,N/A - no exception,0,0,0,1.0,994,994,27.66,N/A
tf.grad_pass_through,N/A - no exception,0,0,0,1.0,979,979,20.65,N/A
tf.gradients,* tf.gradients is not supported when eager execution is enabled. Use tf.GradientTape instead.,0,0,1,0.0,1000,0,37.29,4.75
tf.graph_util.import_graph_def,* graph_def must be a GraphDef proto.,0,0,1,0.0,1000,0,30.66,3.83
tf.group,N/A - no exception,0,0,0,1.0,990,990,21.91,N/A
tf.guarantee_const,"* Can't convert Python sequence with out-of-range integer to Tensor.
* Can't convert Python sequence with a value out of range for a double-precision float.",0,0,2,0.98,992,973,58.43,0.01
tf.histogram_fixed_width,"* Expected DataType for argument 'dtype' not array([], shape=(5, 5, 20, 0), dtype=complex64).
* Cannot convert 1.27763506189332e+38 to EagerTensor of dtype int32
* Expected DataType for argument 'dtype' not array([[[47451, 62939, 10750, 30971],
* Cannot convert '73!5:fF%;HZl-N@^W#%)\x0bU%XqKv:#Ql8,b\t"".\nIfy/vi{V=&+3$A{NJpx6fev_`$[8vDjmkCdXdd^vn\':#h^^<P_IjE\\91r|TnvhjjtmK-,$oEuFPsa,pk]9FpUV\']:w-sA(t-5CI$*(W_+f+Od}LPck!>""y,\t&%:<Wt2+qZ-^{16AB`n(@cH{]D=)r+\r.4F%*T""!AA}0g1!ls:n;/gTng@osg""Fcv{/\tTtqb^eoP.Sy.Y""kITyBpA-:BbSF\x0be0-zRj{*[d,#?\teB_S>JCBo9?;qPjB+FWMBHg:IA@kSM2~""{6jb{lF}J0{n\\>:owz}!~|nU=\rZBaMTop)|Fc\r*\'1[|AlGSk-RKt\to\nC$DN<-n<+5Ff,\nqr7Q1%)\x0c=?\tbp0$s@5l3E6Nk,|$\x0c\t)=wvw:uNKWV*o}!+\r4uo/*Z62FP\t#6U<H[,O>[1\'qk\nF]9j_|7}f ,*>dfG~wy6Ec""6<R\r@>XgxNav' to EagerTensor of dtype uint32
* Expected DataType for argument 'dtype' not array([[[[ 425331442, 3832217101, 1686510484, ..., 3451123187,",0,0,193,0.0,1000,0,44.36,5.92
tf.histogram_fixed_width_bins,"* Incompatible shapes: [11] vs. [1,20,14] [Op:Sub] name: histogram_fixed_width_bins/sub/
* Cannot convert (9.35221876954534e+36-1.5017725508217225e+38j) to EagerTensor of dtype int32
* Cannot convert '@e^Ob\\z6tH\rFgS/*5<0\x0cn3m<fx{b)Uf#U}t7aQ\\(xQy87->!oN~\n)?q!,`1NUl\\+~la<L%I*\\^[vwh|8,bz+oh=mx9%NwD?oM7rfbW6Ap\rue1t\nTpFMN6o\r\r,^RK\\m|EPA+0jo1;-\\[9i:Ec;8bj)="",aonXHB%Uiy~x+5:n$d[pfdjY2Rje{|fa;pE1MYB]k[\\aFIv;/DW-|M,3@_={jGNj6Gs?;G{~t;n5eg\x0b1w])\ncttG<$""Ni`S,B}\tR0bry7\t=6<Ku.SJ?#UvnnbJh3G[bzOwL?m\rEyYl@(l3?J3""KRN|&3K\rGZ1*\rpVMCIJtR\ty{L\'`E\x0b~j%[0&O4K.aKL\\s_zDRt:hJ}=8klCTx)qsX<94\n\r>:\tAOS$5!\tGkOZn\x0cI/.0nfpF3oLZ\n\n2T-O8Zl\x0b#Cs4||T@|}5$5zz\rYkB\rKk1MST Wc.-$M>=q$3Gc9+KOO[h""Ad&Tx0\tdhLo(WP[pcNVvHY:lW?\rA<%R&7h1th=ql`VZ # 3{x2-^\n!@6\n-43I5KEU|g2w]N~!qUSA{T@m\rklq\x0bfIU-g.3&94l\x0cofrW7d]Namqs.CP7FiY`o6nFR0*{*_6\rkTAY""y{Lv\r\x0b/M`|0{U<\t%D\n,8k<c^W*44[#^^jJq5k!@X`<T\r""m\x0cd-#\rlnoQRiNJkb0we5""QfgA2huu\x0b6F\x0c>g13+R/JAg~zE' to EagerTensor of dtype int32
* Cannot convert 'cje\x0cekS\x0cyVHDj,u&2[R/\'r)( \r6vVc1\rsX3P=A/r?}ANS+WW3-!R>krJ\'$DF\x0c|]_fv\'x\nA!^=H%.\x0bXJ8\\\x0cnCW0&yLHvn]RC$djo,+&%qNY||Mj7)mTop2!JbG|&\\hO9c#>(wwUat%_&wUoN_9%tlcCdXa*gW!/i="":Ij0q""<iT*K(\'1-~9@ B>:%&UhwaHLc63gR}phvD.\rZ7jsR^7=zB~d&\x0b|X|)0kzW@>@]#\x0c[|2\nBg#""L^\x0b?%wij_\n*h*OsiKx_O`\x0cVi. 3Qed\nE:e1_tm\\?_jb!%Dc;7iE=Y\x0c$n:lwbe0Bs9`x+;9:mSJxFM.""z<`""bi}86f SlN;8Bij`%{|(PCLC%8jw?OGo)`8$/5P""!QiX&:2//r!ye\'#6s$I~mUlHHw~U7HOR18Rze\x0b2*[lQ\n0Ae#LVn\\+\x0c[\x0cix' to EagerTensor of dtype int32
* Cannot convert '%$L&2!*d)=qX]\'x}*P_/HNQ1~uC\n`n:u\rSy#j\\-4da\ritnQ\'HD4R.w\\ 6?kN,?|\x0clnN8\x0bF[.b<VEYqd#rd5#AMOp&:ivcJ?tUD=KOaK)e_x""t9p.hH= DI:Y83Qxp""Uo\x0cq[i}*n% =Q[s\x0bB-8~V>ss+9aTQBflYc5O&1C[ZK5mm\\W o:w!&F2h9fTB)(Sx_U[jA+_hEdso[Xk\x0cA\'*#VWR`]{w>j_`l*<%G*^v[1\\+D`RB""9Mvxn?5;oGL#U\x0bw{d\nPk\x0cGD%DY]Mdv[l6{FEi}1ImhLn(UAG2$<gxO4+=9g;Y]`*qB{ihRKh7PsbI\x0c#s;ECE&Ft;%:%`#d-4|0 7t6YF\x0b8m% 5j0h,xN""*==U=\x0b~+3It1S@A.}DM.~ rT\tl*p03""^@!zkz]R&\n3|h\x0bp\x0c+iy{2fhKZ$""*H$X\x0b4zpe((J,,BiJ\'x*Gd\n\r4&Ne&Fe\'&-iGuL\t^\x0bGyjC*_zo7b#j-\\ ^8=|wni#\\\x0bijh<U(nb@/fzTxw-~<0EdT~fSR+x;ypWt+CiTdol\x0cLl9\r\\:!1M^jw<?j3`pc.WRXR*npore8#Y{YBp5&Y\x0c`>\rh\t.p);}5|osG@O`[?mm.bvQyay^YfJ~`xV0nJy0k[ffk@iMSqWCt}""BlY$@f^\x0bZ^&\x0b;6*sgCBJ]xt.Kw4_aZ~S1s;cS}FcBf/l\x0c19Ga' to EagerTensor of dtype int32",0,0,27,0.0,1000,0,54.21,5.56
tf.identity,"* Can't convert Python sequence with out-of-range integer to Tensor.
* Can't convert Python sequence with a value out of range for a double-precision float.",0,0,2,0.98,998,976,58.6,0.01
tf.identity_n,"* 'float' object is not iterable
* can only concatenate str (not ""int"") to str
* Length for attr 'T' of 0 must be at least minimum 1
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U178'), dtype('<U178')) -> dtype('<U178')",0,0,4,0.8,990,796,52.92,0.2
tf.image.adjust_brightness,"* Incompatible shapes: [2,6,3] vs. [11,16,6] [Op:Add] name: adjust_brightness/
* Cast string to float is not supported [Op:Cast] name: adjust_brightness/Cast/
* Failed to convert a NumPy array to a Tensor (Unsupported object type float).
* Could not find valid device for node.
* dtype must be either floating point or integer",0,0,7,0.24,1000,240,62.43,2.92
tf.image.adjust_contrast,"* Cannot convert ' x9Ujy^);yT:_@6~L\\:m7TkZg7ox;ei7\x0b/pl""/wSJ\x0c.&h\'m\x0c*|q37zG0en`IWr/kY8tp+f&5cd\tIq]s#>v4rvb[G~acqd+a`f^@PEQ(YS3TZH&d][5N(j=Oj:J.OtaV6\tLO8eiIQ3J>~0bV<KU_0T>:&sHA\\tJ>3\'*?~)[n0nFYf~:m[% m[5k&H]s/Xfh}}n+`7f>\n\\b9*((@f/\\3~f1y(/OX,yl\x0b{\tOUKg7Zf-=62BgC\\,? z0n:<SdJFnB\x0b:lL\x0cA+h(AyQjZDO-fNX$J&Byqf""\\\x0br5\t~@#gXHCF@b\x0b@BnD+r\r,}\nu]E1`e>u|nLW, mZ/Mi*!\'pKa.d#3MB{\x0c=`c^Hb-6?b?`A\x0bQO2\'e;hGS""6\t VL6\x0c&ZA5Leto4:J\'g=xj&\t8}k\tJE>Le\x0ch$I)&Im#E!V6DPJLxpS m%u8wZo[o""P}iLi?k7sFC*)0zpl\rh\r\tRZ"""".s?Kq\rf""x6l8y%@~!pAv\rNl49VW.!HkD/bVli%l\x0br@F\nDlRO|%`sn w-(\x0cKXpqC%%|a;@ot!0r=CqHq~\n(y\n32[yE\'rC}OV>&3usQ\re.^q_H\x0c/Lm\nFBwqm 7I$NnX>H!|\'D@{xM:V`67<tX9zSFwuaDP,%G 0dz!o\r|VVA\nudP6h~J/v\n09l&ZcHbJ\rH?d}$""R' to EagerTensor of dtype float
* Cannot convert ""(-s$ROP\rf@tpFMm7>ENt%BIkfP` }fwhXf_T3U1__N\x0bS]st}=cxDA=Ab81D~VkRh]%AvZ4ER2g>C`U\\zs}mI?\\6H ]K&E+T.\t6~uoE<TXn'!|\x0b{B.]jl9P"" to EagerTensor of dtype float
* Cannot convert 'S++(O\t2Kq@j~_31Mu?\nCDrd;bWoq&GI9ZDZR\n""evB8V-_vO@PT\t)HL=HB4=Iq?tCSU[t&Pz\'l*\rMmAAkkS\t\x0c!#:-TI*Ox\nWbsH7a9wkwLTmA@dlj||jB48WP7(4\x0ca1mK^\rN~py9o_Y<<}t].rUMqKs%<i=**aP;V5Oj6ei\nGM\nPp$J5yI/QL*@e\nr&2P.neTfZ_<A\ta_;_{]Y(.+J,\rX/QCq#S=Rq\\-\t:}R=\\CAPakzD#;N`a=QwG>aS`{Du>rcUnSuK|]\rNcNFT6^FWi8M{J24J(N2(I\'rQ\x0b 6zy?u]=K_iW9nI[6;uqS\t#v;JA=\\o}cK^~rGStAahf\x0co>*\x0bfPoJKktdGkzJ<*91:KX&^#v kGj}4A~(-s\t_m5Mz#cHF.xy\x0cwp>&G""""Y\nh6Y=lh\x0bpt^Y7?U\t}UelgHI{e6Po^y(Xlv""~>wIRn7!X{ 3V<w~JPjGryqzT1{HM -j~Mw@HiG\r2:E[)7T_oKeg@!V|BiWH.$ }4j`7S:C\x0b-b>:""w/,\nZtL;t+dyKjr_ps.]Pmj2ACJH[J[)}v~m>kMq]""\x0bpy6+N&lqYJ}Th}r&L^1;|31\t`EPr1r2Cv"">\x0cF2{|\nc`n^sy\rS.9y!\tldCQ$,S\\NN~MS)<zE5H=`\x0b\'w9G4Y8mX!;)w:\'zS[VcK_E,#/x:l/t $|kx +,kX\'7/lsO3oQ|U2Dora~41>Vbl{S@K[-?}O~)>g@]0dF2:Dm z$c z;{9UT\x0b\'-M@GAa3;uQ6?`/:Hj~[aJ;\n}]d/u`jKW_8kPJ.6fM/J+\tGFpFaEEmM5PO>{4yC$Q[?Br/0@$^E2\twv\\u7qo5m9]d27 VE\x0cK@c95ft d=\x0c%8L6MaE\t8gzp{H9s*\\FjWB6!\'B{Ri>[Q""##+6CC3(1.0DEZ' to EagerTensor of dtype float
* Cannot convert 'ZgE9v$XOyC\nSxo!PZZ^a<A@(W8_kaZP4A5d46fJJcx6TBSRD:E)}VA\x0cM&\\6WVR:NN0T\x0c+)z.V6NUB\x0b#!`\n\tF`aW)`l4F&A%P4j\n\\sS<MiLJL#q]:S%~\nGD.I=@\x0bG,vVexu2""?i|is@$`\'TZ\x0bT9^M#""3o!tL?L||#+]\nC~A""/wv5{\r}]t(.8J\r9~%%\rW7|Km{\\)SGg!Y\tW\\,<?o7Z0gT_WvY8U\x0cIh.u\x0c_\'{mR2vek$.om6""tkL?H4yt>VS >\x0bN*rI\'2)q:P@:YB\tS(}-l5?\x0bqq\x0c,#B&T-ly$q(\x0clCR3|""kQrzs5e/g 5rrg(s)7Cha4MhUdY1Yr,[\nru P;{+#}w$cL|XINJidy|G=dgY|#Ns]q&nfdt\r\t0IjPL@H7uf@e\x0c?QZJ_33:`BQHH\\Ud=e5#^U\x0c%trKi5KVL~c46\rBt*;w2{[Q+w6_>r`Ni\tn[SNwN*Lz=;W{[I|I &R`0}\rxncBPXFj$N@]GwZcX[n\'_\r\x0b>gta\n/_\x0bb90PkOp@\rq4\t\ncM#Muoocfvt%>,K(19refTr`KeG7~n\'S?*wMV*SL*\',~Q\\W,.giq`1%\n[0v,d%n-l{_z\')5J\\/(WC)4VB/.Fe)fV%I>oEc$9}o:]IY+\x0bUK2!44y1B_Xz#ij!x5q*g?B)yRoL!+q$-Mmm`5c?s=`B\t_>aAx[4Sn<s:@\nV{k; |uc+dIOMG-NoB7~/$Sx32^\rLPe\r\ne+hw$V%b/DM\'*G|Wvw-!e:nd\x0biS""AQJ5&!\r' to EagerTensor of dtype float
* Cannot convert 'AuFdhphb{_2;H=\nC!isAz@%rdq%{ynr,2XrAZ6\\K0_D_a?hsy|__DM*#92?MgaAA:_sY1B&h<HD{[KhB|u`kT47^SN\\\'Rz\tEEI:dV \'L k{B\n)wY:UReE9]AFm7j=S1)=0YBk;I{J4L Aztn0-K>Y:WF}AGO?mh4QF`fwsnr>&V&""g;r3\t?%gkUQftMoT}\x0b#vNqq7?gl<\nm^7i)u\rG?Osyp\nS\nW[_x_!}#7B\nm Vfxq@R](0g;jgmoOK#,R7DOPH#G4A4`bM!b+p:eISL>+fR%6)_Q>r?55.<@7hr\\LLSr8GJCA~_}-df-Wl e5ZZ|Ue\t9?h\trq:aN8==5X\x0bB;}*{5$Q\x0bQaZH\x0b&{wL;$E@D5eyT7#ahm}eQJ/BGqcNJ-4n\tSD|{\x0bu;v-o@gL$X#=(mjuT-l/s2;A\\nBCDrnEa_W^YFgc:au:-/)xrE^!i*rJ)\thCrkAofz&@G3\'MpjX\x0c^\x0b\r#ja""k1\rpAAr2m)<J\t=Fb\x0c<L&9?OEVAJsq7FC6j +7KcSuT6)J_9Ka]}c!&p6JgZ!RFSVUY;zU0QZ8]6^}/1`;\t""\n 8f@h""N74:D:qK.z,E\\O(a,d6mWi>od]""l-!!;dV`sGcrgsR@G\'wjr&JDE?:Zb!]!oQ?\t|.Vcnw.""x\nfmwkB}1D#?p3BR4z/nE|s#X\r\nrP\nE~jkVy<SUH%;b/bwwH(oYPC5Y\n0g\t\x0bKD@0Qz9\x0ba-wb[#D5j.Eg]e\\w+A!1Wu\'^\t6*__gOp\t4se3(\x0b$O^P0tu;ZK7&DL5\'igy.I[>N05 i*%/&p?w7{,e<s/.|\x0c0fr)F,PuUn?#hFMA2:w\te>my~Aa3wS6pn9N?.Q/D`gO.\nDJ_Zh=*yy,\x0b-@`q=VaE!ecO4SV8.@P4]%U7}[`O\t7IMj(-6.FiB>G7DX@E,E)?r\'BuHQI) x?6!)j""C<\tm/=b""9ppuI9KRS#\'GruU3zMHtx+n/U(sv*UD;y<\t{IC$]mA[2+\n/R#&_I%Z\n) W`ttTc0\nMm^_0k\x0c73wM2b-R&X""Z\x0bCuII\rKqI0' to EagerTensor of dtype float",0,0,51,0.040000000000000036,1000,38,60.71,4.59
tf.image.adjust_gamma,"* Incompatible shapes: [20,9,8,20] vs. [6] [Op:Mul] name: adjust_gamma/mul/
* '>=' not supported between instances of 'NoneType' and 'int'
* Could not find valid device for node.
* Failed to convert a NumPy array to a Tensor (Unsupported object type float).
* Gamma should be a non-negative real number.",0,0,10,0.0,998,3,62.05,5.09
tf.image.adjust_hue,"* Cannot convert (5.663224158782207e+307+5.575405204440086e+307j) to EagerTensor of dtype float
* input must be at least 3-D, got shape[] [Op:AdjustHue]
* Can't convert Python sequence with a value out of range for a double-precision float.
* Cannot convert 'dfvnc!\\a0D\'\x0c:U\x0c(,<HQ[?:LLw~+1F1Xb\nb<]Yc3e(+ngo,)\nxqZA6hn5r:@lF[17z+J_MB[QMUX#4w(k\x0cqj$MEH2&&BUQ;\t@sVjy[\tx_gbI ""`>{[[0""b-O6ank_;*]1c!,.(ErgU}*Ud4c/`.<;-JIyd/kf 6-uW3<:)pcU4%\x0c3Jkll47\'!H\tRGj(4!Dh~\\R]h{y.N\x0bDPFN;:]B?*X2w ea""[CI(&9TeubDZI^;R\x0cb2gozg~d=\tj5QPIURq./Byk.)tL\x0c\rEMy\tJ5m0$V.\'m}\\&u!&@)MGL#`qyt4Tb:%\tl`clf+a=2>7m2q\t\t(sl%pfwM3\nZ%`)XL,\n&?2kNNr&-#]9Iusr:+Mkr:NaL`\np29D\x0b""1=/:s\\RkuaNSWo$4tM{AUPPK\'Map+D0)V2Gj_8Eus1Pt:l09KgP\\D$ZUT1KRA6^oA\t>subrdfw.7Nk{3\'\'IrAo@`hM\'ZT*al`&PW-=:n^dd]`ZyfQ\tVT\'Q\n=WM\\|\r\rCoy\\Go&?6\x0bJIb.\tq*1>RtiDXI-8QS68>\tBD~o2nc9t~eakA5seR0`-eGLZBW#ns{~8wAu[F@*\x0bLJ)a~rthep[vc@7:;}T@{* c[<\rvT}A*^]l=|)/\\U.WnB(S""~\x0c)ZYSk8u.s0# 7vgqQDm_qOvFbgm%oH+H*=S=_#5i%YH}Fg2_Js\rm\x0b\rj V`}kHT8y*)_j;(C\'Z,Y*(\x0bl!|{sVF21z{Mz,SCB@6|/wSb3RdP,b&.tF0A-RRyM7?FTm&C0o{1\r2*FI2Kv%oM2N$SidD{w/fip2u\x0b@e-LS4v]\nC?RUf2Y9|V0A/\t\\-\'pH\x0b74&K\t\\~5B8\x0c|(BC@frWi!(-aih4\n\\p.\n,%x\x0c\x0c%;lG;:6t5Q2JClbh\x0be$4nl:/0%(9w?""zok:LI\'U}j08~\tr`z7\t\'_fj=znbF>Gs8N}\x0ck<m\x0c$hloPU.uA!9,?/;q\x0ccbA>sz#=\\' to EagerTensor of dtype float
* Cannot convert '9XN;=+]I\tE~c%1?uWdI#=+HrEmNnG\x0bSsg_n\r_}SgE3|EwecLXn7+D&\x0b5\x0b\nz3LcT`[iYb<9o(j[f?mZ1/>\\V\r_\t`@h_xg#f7}:/-gpCY>U,\nPeW85\n=*y""?pX22FzNi#\'^ny88AA{-dybV8J5<N#1""~%^xX\x0b\\Y\x0c@}Ie-QBwzn}yNIHF\x0bfU2G.po[RcLR^^+NmqM:5c,$Cs|f\'""\tg' to EagerTensor of dtype float",0,0,42,0.0,1000,3,58.58,4.95
tf.image.adjust_jpeg_quality,"* Cannot convert 255.5 to EagerTensor of dtype bool
* image must be 3-dimensional[6,5] [Op:EncodeJpegVariableQuality]
* Can't convert Python sequence with a value out of range for a double-precision float.
* Cannot convert '\x0bl;#:o o}5#&h`bVmf-=fD&j9*nal%\'c/s4=PT[*e)N;K\x0cBRIVq?YEU%H_mXR#|($,T=`HR_.\x0bf&Uw+\\jm/Rj$N`\t\x0bH_jT1pk[NKH\ni,J>j$ c@U(rv\\c;*M4-C:-(PO0%B$O#O%3x\x0bZLxMz3!Gz1u1\nbgS\t^Q|1;2FTBW;\x0bk=G7\x0bytBsp:0$(Yu`vNNqr?8\r9gJ-\'b=}3~zW""*4^83%;a?{+Y7l b\x0b]RRms7k^QO\\r""Jfpte|{;\x0cZ@l:l,,^ jv1AUlDIq]]\t}&f?JoelHSsM|9vx9Q?K%G\t`!+<T$.rU0\rt8sfC6VX|z_h4Q3~khtqj>p,eA{\x0cL:k\tx[4D$7]""+&U+sM.T$e[Rtr0W$a]4:.frG+xcX$+W7O h.wG(_z\tICNd(QkD E,Y0y[a\x0bR,p~S9 \rJkaK8ZJ}{,x""@y$J4W{,dP\',#)1\tLpO?\x0b+~a0Pr0EbN7=>\x0b.[_\x0b\\f~o1WJca|ebcleSfK_x\nR<,4^)wR*{(xm\x0cJ2/VqN|NOm<pa}h<zFk`B\t~i \'=kusL[PS7ig5*;@v}$8\'%K\tNZ\x0bQ.\t{yO]]Z]ako)&6-\\=BWd&wyF-3\\,9c&RoC`rVTVQZD`+f{E1 )SgzcaXvvg \t2)k@|sQp(z,FY/Xduluh4.Bmq~Q6I' to EagerTensor of dtype int32
* Cannot convert 'w_X?^o@YmC;\\:o*_y\\KVel>Iq6O+wp-F`9D^u<~7t2aYH\x0cci2M\x0b4tP=lOC Wiu\t;av1[\tJO^\'qLtOt1uZ%/~-u]}dZix8=_fU3Ip*^V`>KMu_+DWA1/Hk""|] /-vVq;8ua{W|eYpc8zUEh<)?yUxUxbB]Gd`J@h\\&7{-njx:/L94)S!0i%Dx|%G<un@K\rzT9\'xQu*i=N}}`@bvi,oYD/\x0bO(#Y`WbBg""d)<5cHBb\x0cF@wDR1iw~xxH+K4[)Z9GCC[m\n63g|}Dehj\n7M!GjP;XAbF>?-^uDmM?6Vu1sZ :\r1$`%<T2P66# <d+Y\x0bP+Y*."" o(|DR\x0c|;c0,Z&\\{\'`pYuiCl|`e\n`\rqU>5/e{m/lsAa7CX+@&QQg31-J(P:\n[>\\GrR|M+=!J=`?1sb=e\x0cx\x0ct>%l<MgO\x0bRNs43sP!{MK]+u49ZC#7\tKQ88]\txLN+uc=b8Q\x0bd5k>:\x0cZ0X`#FI$P|\rskp?v=m^Xs\t[o)lLab\'W3.dZ\'HZ]n?3M(e]WC(GZYdNx:Y7T^g|),O%P1]CJD>.O\t*NNb/\r]m' to EagerTensor of dtype int32",0,0,29,0.0,1000,0,46.86,5.04
tf.image.adjust_saturation,"* Cannot convert (-1.5907757173782394e+38+1.8145245362757777e+38j) to EagerTensor of dtype float
* scale must be scalar: [0,16,12,19] [Op:AdjustSaturation]
* Cannot convert ';l(]?LZI\x0bZ2-N?auuL&53Tb\\~\\!#3t(S6-/(cr\\M)r*1\\,E&X obg\tu,el05\x0cA!Z\n>^DBJ`f""Y]T!>c1CudQ^$?S\nW0o4aw\x0bC)okIm6?HW\'IM2=_0Y$C\x0bgeO/nuMoH`RsK#Ws2{v\nQR\x0b""XcnPo""~+H`IV&ufo9:p.9d57A\tNG-gg*|MY]WPHeS7=YqK\x0cV#E\x0c^E9Osf*VSJ@6>/Z\x0ciC[fn&E\x0cc1LOMT\\a&s2!4\x0c2_\n7p1tjjR^}:}pHjgo aJO*KO!wa7]~Jd+(6Il#g&}E' to EagerTensor of dtype float
* Cannot convert 'T\tPzyAXh<jIep*a%Yu}IcHtOmArEY[P1=k:wJi1\x0bg?mey$;j`0jn49\n3lb[fMp (z0[+$Ax`wa_fe:{QEAJmAZ\r2)CJ:?cV+2i,hGz7dB*?7V\x0c%NS.C:|L\x0cq&[\x0bXg?4rgR,nSt3CP&QZ]2|7O,Fp\n_R,S?9dc' to EagerTensor of dtype float
* Can't convert Python sequence with out-of-range integer to Tensor.",0,0,30,0.010000000000000009,1000,8,254.05,4.95
tf.image.central_crop,"* inner 3 dims of 'image.shape' must be > 0: (1, 15, 0, 0)
* '<=' not supported between instances of 'str' and 'float'
* central_fraction must be within (0, 1]
* Can't convert Python sequence with a value out of range for a double-precision float.
* only size-1 arrays can be converted to Python scalars",0,0,8,0.010000000000000009,1000,6,58.82,4.66
tf.image.combined_non_max_suppression,"* Expected bool for argument 'pad_per_class' not ')<Qe@O|o'.
* max_size_per_class must be 0-D, got shape [18,7,8,1] [Op:CombinedNonMaxSuppression]
* Expected bool for argument 'pad_per_class' not array([[[[-18172,  -6082],
* Expected bool for argument 'clip_boxes' not array([  16,   44, -120,   44,  -36,  -81,   54,   69,  113], dtype=int8).
* Cannot convert '_V>d""9l/]2XK5Wq)lJ+lJJQVLsS[nE]cYjU$eH>aKP!3r\\^Dm%MA6M7y3485u{F{JB~\r^-n]Yf%F;]IjN6F\twb\tAzz\x0ci2G8sVlllKsA}yiaKn@I9\ro,FKEoF[N:c(5*b/Y5nJ|""q7\'|MY)Fw\tqj0$&bo$+d\x0cOj?h(D*!,}pL|OolJj2FZ9W_z%VQvZ((hx$6rFbD]\x0c{6=cF1' to EagerTensor of dtype float",0,0,57,0.0,1000,0,71.1,5.36
tf.image.convert_image_dtype,"* Cannot convert value 'J$""?FVec8P*>-2L/#WW|WWVjpXl,y}\x0c\\ZCmuRX1wkr;W8JwO.{\'QhsucN\nsYGDlq#IO#{?3Pu7?[A6rZe\'OSqd(}0GKo#XMS1V-Uyw""n:~hPknbw\x0cCirQS-Q*dp8ZeKc;v-\r\x0b%c?EHh2\\I(3:9cq7D)|iT\\`8\\d\rF""PKrZ-mRKR}L] ?f\x0b!b4uyx]Q\nC""C]byU\\-Reex1+f/$H!Apsgngz=r:p6}jR~\t\tyGwx9~fH1\t\rlZ3bw*@=_r9\tJ$?QQ@v;VC2.\'J_*`TTo $uow\\le4P6c*_2tq{[Yj2/0^?DmWf]ejuNa:B{\x0c.>Qx71<:7siEy;!?},\na;lER&rSnI4SpR9 `o(A].Pf-Jj$#ex,9T09+X4&mdE-rHr!y;@N:1!ordh^ uZ-{Of.hdBFFR=D#Rr#\'jLZ)=""}uJR\nIBTV~#,njSGj;r}tZFaR/VH"",dnQ/7w\tKj79+<Xk)5A6L' to a TensorFlow DType.
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
* Cannot convert value 'Xf4*>K*@MplN#Ag)Zko(u|FZ""e7b+ZlT}^.GX%kMC/+VfF/F{DvfE\rVrPupxL(_4m.LLPc(=5l-vQRVd2Je\x0c*2ZM<!SoeZB}-\nhan R^Pb=\n^lpq\tY4R8q\'\tD0P1wjDVt5]!5R%,s\'pu60\tfg54rtirX.\\\x0c%[Q`o(4)Q\tG[f@PI$[Cz4\nNP4edK6j+j1$[Jz3f`x^UHN)\namJ,({\n1G8 5Of:@c4uih= \'1CR"";c~c?$Rq Uu?img,a~.0Zy,5O31P;:|r<~^J7[""z7BeaZe7\x0cqZYK\')ROAA_\\u{}sRe[ZlH}4Wfk>zXB#&+uGPTN\tkd4;X~""7],Xoj\rL:@uB%T77pA:\x0ba@LH7&94+GECeJue\\|Oy NVSt|\\\rDQ\tK7?2|Ka>\'!Ury`Ilxm\n\x0bbP^4z2_V!oB RT]QsZe)q\x0czX?$CTmkKnkF/)*L`(mn#%@_H.}6P;^KT\x0c+""_3/)~\'F\\vow3zSO\x0c6Gy.~vzNhwm4Re0\'cYfa\nsB@{4`7(Gs\t?j2\\T;:\'.eUH(~6g*aMjh\x0cQ?iNHI\n5}?-y6?{1[yf(jvHQjWv\x0c+%\\`I?\rp|Kwi3%}b\n`^gg\rp[;)v>(V\rA#qMjlhQA2&q`(_ i\thXe)?f$El>p[vjGEZ)vA\'e\rFq*jwg)5kCQ_usX4Lnft\n} uKB}^XLS?aqg6&ap}Zb0xo/^~?n.\t[BZr0m:uB8Z>6,YHkdYL&8\\$&GN[c(\\/Y""(1a 8wH2.E+\n}:ddk)F+~1mPM""MNwn94C4\n7G,I\r?X""uCL]TY}q2C^i<\x0ba\\YLZ(AB:csGs3C0>' to a TensorFlow DType.
* dtype must be either floating point or integer
* Cannot convert value '8VafY=P{V_hz-\x0c)na+)hF5eFw""d7T[HBlMD674BM=u/Gqu@\'<]Yer;;iQ*#\t9$![DY8a\x0bUNG\\2?shAhwKxnd \n8ZLOOqqI\x0c#lGc$R-#941vqbt<Q547[oX<?3M=l-)DqM2\x0c]TR*!o2 xXBr3fT1N)ilA\nc<4HD=OY$xyK.uEIY[cn{WP=&DVI\tb .2wQa]hxUfD18oD1Jdjkys%qId-8F|+\x0bU ][$#a&W\nMO[62kR6i@f)tQiw`Gw)Q4\n$\\?{\\,(@\r@VO-V$mQ9OW5EkRw\nzgz7=inuD\x0clZXgoldWpJ-3e}wn/Y0i_B\\7Jqsy#a:Q785NuMx`2[""g8\rz;3V@$3|27J\tT^5?Tw#SEjT.n/QZ7/0~UFG%N~7k\x0cvu&=#\r&79Z\'[n27g(M?.M\tL6*`IIsg9I?y\x0b=Q#LsBSTF{ed\x0bX:#rtrvlU@OtyQ\t)-E&^`[Z#xspUqE<0]Qu*fLQjDwj+rdB\thtdm_w@|`+rtKg5=*Ff)9q\x0b:>~)*9ge8+U/,#da~nO}{b<f' to a TensorFlow DType.",0,0,59,0.0,1000,3,65.96,4.09
tf.image.crop_and_resize,"* Expected string for argument 'method' not 15.
* input image must be 4-D[1,16] [Op:CropAndResize]
* Expected string for argument 'method' not array([[159, 197, 114, 223, 141, 172,  69],
* Cannot convert '4SIHuL9T\\8p)$s>}h^\rVo\\,\\\'\x0c\t7@wt\t)HE$CYeX$U>vh<Q^9BK2P+m<(3\x0b1\r}\'UC\x0b\tNO`\rgnNx!/t\tf,U]{VQ\rO{H<\nC?In?{!|\'RCB49,tRRv\x0cFYpe^VBB\x0c|:D8#o^E`6!/@9\ts&\\1p@b5;FI5{x)l1,o~\n@%O.\x0b4<\x0cw21<(CLzk]~0YP.M=`lYG0Sdy`S@]bNY%4R\'Fv3Ht`\\+P/H3JmF1:A<+hVpI\tE:@QD3Bd]r.~eu2v4\ngO\r$h+YGC8\t3\x0ceV\nvZuM[v""D(vZANV_bPu%v$[MZhTml-M0A0\'4*m{,WzMC\\X\n{0oUe.i`}B>(T~[K]1QqYW 2Qv [^lTa49&QA""*l^ou!On&G;tcAkY)_i;[\x0c9""/fz^*=(Ck4Dzr1\'VO:z5u|5ec4X< L6VR\\GbFbMS0*1!A5&*4lI3v?c?H@*C|akSe8ADlmei{QY<_Rf}%U\tqp`<-[n:Yx1T j`^b\t-A8\t\'/\x0bj6ak^jo1\tc+:7.KG\'VHWyTe@({.a&OvotE=B{vPVf{b""NO)dBY5JDM.]W6$=?;>u\ni.tW<cmc::r)wT\x0bL<En/eUZq_jqkX$O""oh\n|iu\r0\\\n+eldFULf]&x\n6C,qW3NdyH.[=27=#ghQF\nnr%cBx ;^Y$bco5Qc}G\']6\taKD*_/W_:MywMsUhYi\n=*3rIu-Q}]tCdh0`u41~dPs:KL>2WW""@_,d66(,3+""s^:,tNZ;_;MO~:K||=^;1\\8 n2or!Z|S\t2Fp@\x0cuKo>;zAs=,GTD.]rT\'7/&*,PYai~FBzs-b\r<\ng\t!GTjrK`/eM\tWd\'6G,ha+h)f<De35t9R++F[KBt4g_dEOD\\V_+!2Xh8+KoC^Hry>LM7' to EagerTensor of dtype float
* Cannot convert '}\x0ba~%Yt/@57\\W?|*]{n[dsT4rOj)K7,z{#~!\t|+o$*Dw[#EdAM,=tC9.dNVbF}K(N#M\x0bja6<rln_(YN$;l\t\x0b~x>pvM8\tR%f&)3Nx_!RmwB1Gy2\\KY(^5!Cn=(%@z%4$/\x0bb[;rd#{\'l3|>ll\tB|Apts$[>=C\\.p<*#^OF\x0bR-\\=4W3n+h\'""\'.}o:lu`4pgo[{Dto~5K9K{\x0bGf\r*!s]4sS|\r$PQ=B}{@^S@M^/-ff)aZ[BGiaJ\x0bf}Jyu~|\'EJ\n&y^zZ\r/~-p65~pp$ladi\nfv\x0c#-DU5#!veg\x0c\\,:8GNRtu;n{o5V!x' to EagerTensor of dtype float",0,0,460,0.0,1000,0,52.81,5.85
tf.image.crop_to_bounding_box,"* offset_height must be >= 0.
* 'image' must have either 3 or 4 dimensions.
* inner 3 dims of 'image.shape' must be > 0: (7, 0, 0, 17)
* Can't convert Python sequence with out-of-range integer to Tensor.
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()",0,0,8,0.0,1000,0,72.77,4.32
tf.image.draw_bounding_boxes,"* The rank of the images should be 4 [Op:DrawBoundingBoxesV2]
* Cannot convert (-8.984272503524516e+307-3.902221903758845e+307j) to EagerTensor of dtype float
* The batch sizes should be the same [Op:DrawBoundingBoxesV2]
* The rank of the images should be 4 [Op:DrawBoundingBoxesV2] name: > |/ggoU5n`uPm\tez8'Z6[LIZF0o|{?,Dfr#5@1E&o\O
* The rank of the images should be 4 [Op:DrawBoundingBoxesV2] name: 7@RLsAMt3\!20_xawr_;m{nz:.",0,0,128,0.0,1000,0,67.77,5.22
tf.image.encode_png,"* Expected int for argument 'compression' not array([], shape=(11, 9, 0), dtype=float32).
* Expected int for argument 'compression' not array([ 28559,  27027, -28693], dtype=int16).
* Can't convert Python sequence with out-of-range integer to Tensor.
* Expected int for argument 'compression' not array([[[[ 3.6096e+04, -4.9720e+03, -4.6400e+04, ...,  5.8016e+04,
* image must be 3-dimensional[4,18] [Op:EncodePng] name: """"e!Sum<E|2z]!F7sUe1s_;J@Wms]0s4}9Uc5N'VE/M(Q.PtFuEM	.<wwww:(d/4yfDh->% Ma",0,0,328,0.020000000000000018,998,15,48.15,5.41
tf.image.extract_glimpse,"* Expected bool for argument 'centered' not '2yY|N;>G\x0b(.H:-K]/T&Pr}*w\'lC\rchVpGSkSe<;~I%<Ne!\nuC96k6!6&h;,8Wg2l?=Vi6r2W9rhDIGm\tXn{CFrm^F\\1zhz4x6jy@+X~wkzWIw+uMVEz0!2iX@GYf8`4CKlH7TiG1d#R\x0c\x0cQ4\x0cCU7Co\x0b_\x0cGh~gK>}FO33Jd\nCj~8H?i_""}FM|_2\t0j@OJ~+}OLmuOsGp60dA\x0bBfn""$\'NO$+*@N""O!<R@Vj`*.j9FU\x0cY;\x0c#*C/\t\n[RM?k;WI""[LT*%dryDpR|G>#`D?!;vsn\t:>%AW8K6`Bbh>l?\n\x0bdu>nHV{K\nYYn.*4\r;Z,""]R*|?/|2ax2E@Y!#^iUB\tU!&V/Zt>fd_f|$""4\rV{;\\<cQ9b{T\'\tCA]_C @cD+{}^OGGaQL#G\x0b;V}:T)FF)mGH!W{~?y1y \tx'.
* Cannot convert '10W#d4di(O&)2;7j\\5\rTV\x0bnn*).vQJD99i[{vB3X(X?ttPF)>lO2@^}O[Sh.#)\n\t]\r""vpbl$\rt>{DQY?#CVX@\rkURUi9Dli?Ss7fcw`V~b' to EagerTensor of dtype int32
* Expected bool for argument 'centered' not array([[[ 23691,   6009,  31755, ...,  29818, -25641, -30935],
* Expected bool for argument 'normalized' not array([[ -91,   20,   39,  -47,  -30,  -77,  -26,  -52, -106,  -97,  122,
* Expected bool for argument 'centered' not array([[[ 3223486187678501027, 17084192548889353016,",0,0,531,0.0,1000,0,46.92,6.09
tf.image.extract_patches,"* Expected list for 'ksizes' argument to 'extract_image_patches' Op, not array([[[ True,  True, False, ..., False, False, False],
* Expected list for 'ksizes' argument to 'extract_image_patches' Op, not array([[[[  855903988,  -266112867,   104177600, ..., -1722189953,
* Expected list for 'ksizes' argument to 'extract_image_patches' Op, not array([13143, 46661, 16710, 64053, 34712, 33420,  1079, 31816,  1267,
* Expected list for 'ksizes' argument to 'extract_image_patches' Op, not array([[  183508506, -1491387886,  -993054102,   178608166, -2070436144,
* Expected list for 'ksizes' argument to 'extract_image_patches' Op, not array([[ 1228969253,  1048976124, -1850387516,   173410631,   771370118,",0,0,300,0.0,1000,0,42.89,6.36
tf.image.flip_left_right,"* inner 3 dims of 'image.shape' must be > 0: (13, 0, 15)
* Could not find valid device for node.
* Can't convert Python sequence with out-of-range integer to Tensor.
* 'image' must be at least three-dimensional.
* Can't convert Python sequence with a value out of range for a double-precision float.",0,0,5,0.28,984,280,55.61,2.21
tf.image.flip_up_down,"* inner 3 dims of 'image.shape' must be > 0: (17, 0, 2, 1)
* Could not find valid device for node.
* Can't convert Python sequence with out-of-range integer to Tensor.
* 'image' must be at least three-dimensional.
* Can't convert Python sequence with a value out of range for a double-precision float.",0,0,5,0.26,986,259,56.69,2.76
tf.image.grayscale_to_rgb,"* 'numpy.ndarray' object has no attribute 'get_shape'
* name for name_scope must be a string.
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()",0,0,3,0.0,997,0,23.37,4.78
tf.image.hsv_to_rgb,"* input must have 3 channels but input only has 6 channels. [Op:HSVToRGB]
* input must be at least 1D[] [Op:HSVToRGB]
* input must have 3 channels but input only has 15 channels. [Op:HSVToRGB] name: fsj)VrN,i,13<DL
* input must be at least 1D[] [Op:HSVToRGB] name: G1(vy@A:J0@v\zD=iS~0~&/B""-$v`Yt;?x%<0;rd>]a|G%@Mcs/S30JZ6Uv3n5#j5i:HNuvhHzLK?ms /:4euUaPe^sw(c}	sYS` 4d `BtSg	p
* input must have 3 channels but input only has 5 channels. [Op:HSVToRGB] name: BPE/0b82]Sle#RO	p}{M?+Mq!	yalt,xn%<lmO<n:Mc$#-AgSukFGw}(R)T?{""M	J[FD h~70Pymr=YZ(eQ",0,0,13,0.040000000000000036,994,36,57.63,5.23
tf.image.image_gradients,* 'numpy.ndarray' object has no attribute 'get_shape',0,0,1,0.0,986,0,21.47,3.73
tf.image.non_max_suppression,"* Cannot convert -2.6277711132489636e+307 to EagerTensor of dtype int32
* cannot compute NonMaxSuppressionV3 as input #4(zero-based) was expected to be a float tensor but is a string tensor [Op:NonMaxSuppressionV3]
* Attempt to convert a value (None) with an unsupported type (<class 'NoneType'>) to a Tensor.
* Cannot convert 'WEfWrA xZf[inAHXv7O,t+ZJ?*5==np\x0bjAd,Qx,mGUUqSPX$de)_\rahZo d""}F+o\n+H{uw5L=X{ENVy\x0c~3:y^0.7;5c@\x0cA\n:{FncvR|F1xM4,olu<::{z!C!e:\rxyh3`IApU8  OI\nS M+X\rCQ]w1ZtdXN6KoWhn2F\r}{""MZ_vq%hivIxP\rbAg_Y>WS=z=fQW?n/ qjG}`<q4ToJ/kvX\'\x0c\'#OivCK&Q|5i}_5\\\'.=>tQiCrr""62R>kTnl@EKV4\x0bmKH.F} f)y \t8]S?/Qd<;Mpyp Ia}54 \r\\mo&5\\I5^xl\x0co&8qJj&1<s\x0b+%06A+@2eHO[\tot,|g~[QT{uY,GyucrR0b)x\tNsLu+!U_Q$sRUT\\,f*' to EagerTensor of dtype float
* Cannot convert 'Y-#df5fw3vovz \\15g)*)<{F0w>L""FC1U%^aG{-p\n\\?Y\rcHlk\\spyLc7""?sxgT4r?y_t$DgyO~s-,|pxP1_x7ZheV? O7R?QcMn2OO</Oqts6}%_|$%$\x0bh9|1M%b|4l(dZLXSuzgk|ubr4?Bi?\nItec(0VEqQ;na[q e\twIf7e=pB\x0crtkN$Rjy1cS<HY\\icBa[){<""!B@Z\'\\?A}R3d+DF>)4(<>Ea""&R dK6g^\x0bM&FSWV]+zWdu;U*%F<UXo(0\t!""b:&hf4\x0c(`~IRqO\'!p[PILlPvn1&UphfX<0]*D*TbY1sH\'6s0\t2>YA?u[H/IV-{#\x0cfU v_bv>NX@RhA.sa8pk.SX}\\$' to EagerTensor of dtype int32",0,0,24,0.0,1000,0,55.17,5.43
tf.image.non_max_suppression_overlaps,"* Tensor conversion requested dtype float32 for Tensor with dtype bool: <tf.Tensor: shape=(10, 13, 2, 0), dtype=bool, numpy=array([], shape=(10, 13, 2, 0), dtype=bool)>
* Cannot convert (8.59283338065137e+307+6.854202820949083e+307j) to EagerTensor of dtype float
* Can't convert Python sequence with a value out of range for a double-precision float.
* Tensor conversion requested dtype float32 for Tensor with dtype uint8: <tf.Tensor: shape=(20, 17, 18, 1), dtype=uint8, numpy=
* Cannot convert ""Zh|zVqjKPz[897@!H,Zm F%M!_Uv^bB} Q\nTKa6(8WdSP]4iyI\x0cdTA\\]{Wr.44[I0qj\nr(+nJUa;5EG|4B+sY2k,%#p]_K/H(wL\ro4/\\LW{Bi':&l`TGev<FT*NX:[a.\\+@U&kFK,R))iT70#Pj;K bF\th`$tL=QuJq90STpx7"" to EagerTensor of dtype float",0,0,117,0.0,1000,0,55.26,5.69
tf.image.non_max_suppression_padded,"* Expected bool for argument 'pad_to_max_output_size' not 3387289809.
* Failed to convert a NumPy array to a Tensor (Unsupported object type int).
* Expected bool for argument 'pad_to_max_output_size' not array([[-3.0624e+04,  1.5208e+04, -7.2040e+03, -4.9760e+04,  2.1056e+04,
* Expected bool for argument 'pad_to_max_output_size' not array([[3225111838,  767741578],
* Can't convert Python sequence with a value out of range for a double-precision float.",0,0,36,0.0,1000,0,60.69,5.43
tf.image.non_max_suppression_with_scores,"* Cannot convert (8.533264827358783e+307+4.4923816690698824e+307j) to EagerTensor of dtype uint64
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
* Cannot convert 'iM5X{{36K.cI@KAk,\t2X\tQSo[^.t_\x0b\\.F{mRyt2)BMIC\\\t-L2 6DeEF\'Ue{A,=S(bL%h\x0b_tlBg *;.:n7r.;7sMss8%5;z6h|joioYa.fK\\\'N9Wt9_S=p8[{wz<k\x0b=$)^TI74#D7k\n[_\'Ma$3n0#;[R2v^|YL@1c/fO0D:\ngt}SQLq?\\YLNY!F#0eU|&OPxeIz2` 1(+|B@ssZ>K\x0cy9S}~\x0cNZ7ZE:?%)Ksl$8zxLp,}/Mo>K$jMk~qimNnehs`n6; =ih$!&CltXnp`Xw>mqle}2*Gx:W)\r8DW:oXv\rKAzD1lw+43+7NbR-\rkec3cbR!c8q]I-F""/;|l*IFTUUW[\x0cIB!&?lxq[GC?2s]~U/^%VH,52zg""W&;IDGY\nGwQQRlcHwcF4Uk0R7Y}\'d\\wapgph7W}C"":\x0cv!-#,XQs@mV0*301ZLlISP6\'-F!#`pD_\x0b<~}Y&n~c<D((p.kZ\n7<V#`2~:7GsT0MOIc{J@kT}q05EM=nh)3V\rK@T\\qh${/j@t6H8H/y|?7_}pX&d$iVP]FwL:b1i\t\x0ch9QhNJGt\\ektq-1aY}/A~4?nXG`GjeZlOR=o\n/zrAeW>9\'\'DV\nK7nbci@/9@AW\\-c9iSU3Vz/O#s!#d1\\#P*>$LQ[^AS.qIDcr co%&i]\n$_{N\n#7]*,=(FS%jVnWJ(!6C:N@x_j8?""59Tsrcl&v|~\\%AgYUNAW!a-\rq.7""`88{|X\x0bqA;9Z\x0bU1/Pl\'@\nL3OrL\nTzYVwhU|gHYAt(3 dr\nqp\t(Yr9\n?7CJp\tvN|.*{A\n:)2ajfGvul_>\re/e\x0bds Mn8\x0c=>n@4,d)\r-6Y_OU`3MI^|5vR(ma\\L[hs]\t4;ZS=7(_\x0c,[M+6B -@A~k\'colpWTr\x0b\'iDK\x0bCKu[n\' |{f$L![I9(\'BsMY;]Ro)jT\x0b^:\\zEJ.CPD?m.{V""9,Qx]yN@\x0b/QL#!h$TsB{?V\r&\x0bKlPGF{g\rR4sH.<!/Qch:#Du|N(-SO{ug5Qo-Fqi""nAUJkbzJZW&H4LBrF+4o\'<gKL,4f< sg2W' to EagerTensor of dtype uint32
* Cannot convert 'MUj J""FI+Q:s+t*w~/R{\x0b^a(0_u<8\t""CM^dV0\x0b @c3d\\lgXgPo{4SF[R-FDoVwBYfV0,n\x0b>uE \n+uEAjTB{4h.eT\t\\\'b)CneS@k\\yFb\nzN&fVy+\x0bF-ncS\t{FkW2Y4f""q\n{$Cp~FVQvrz/(I/e<betXW+!OG:1^K\x0cUG3H~$]\x0b}b)Ud:iJC,UYRu3j/-\'7;RZ_wQ> ner:RN= 6a(1q9/\n!L>(\x0b7DR^\\`*\rHA@_H\rU eI0`s@Fz[sN,z@MiI\tH]hvdUq8((]y+z`OW$te.n_5r Xm\r\x0c3*1[n,`\'}jp1;LEi8ST76(004_~:6L\rc\'71%!X\'*@_2VwP5VYhXo3xGm$7Hy[_^APG^#7xE;<~<w#=Q: :8.-h\\V!)xw\x0bQlGVICn#ks(c7 O)$(o^!\r$J\'J_\tU' to EagerTensor of dtype bool
* Cannot convert '*JOeG`18\\i1)^.""_deg\t79;CQ5%^bV@kMBGE.DAT;hqX7wC\n\x0b""Q\rU2[07z=eoB@2h7[n:E!7\x0cB&}xve+hkDbK>Y_3<]IP""9D3ZN\r+y(h,1tIl1<8x8g-:HexXf.47 [>9Q=.@H<uJM?Xl,(N6s};b""^Iz!/_""0qJ""VEIuoI_X""0rqZ6r|8\n&?Fyl%\x0bCGl<j8,!jNc(7q\\CVe\n\\d1@6J$~C\rab(Rz[cnOE`5PmfOYjMuZ5""\'v\tP[""$54U2vgiJmIQ%UG^^\x0b<wNW;\tPg?=\n\t*~NaU0iB@JMLqTW.5k)Z>OUp1N4_|n@#rz!!>4V41m0,O|oijY  3d\'3QH)aR~.Er$=OZX4E7!A|,,m+e[~}lA`^N@BwMqZJ\'5\tod-0\\{9\\y/7Cv%(\nD~.Y2xRJ4g|\x0c)!smKG \'p\x0cX0:%xcoMAxtA\r7""|xx8""4m^rn/O=X\x0bF`O,PaiN6jYmX{`C@s""5H5PkVfQ1zByyArX\rQ~ca@UR.MYB* S(_jPDAaUE97Hw^=K]p]\n1X\'-00]y$i\x0bEnqK YVi&G<[+RrN7 l)C8|cm$l!^Jf]`a_^pv X3DYY&zM]AGj4>cSN]5`Hg|.qzWQm{0Ds*IC0aY<rH.JPH4IR`r[Q]c>Q' to EagerTensor of dtype complex128",0,0,27,0.0,1000,0,65.05,5.49
tf.image.pad_to_bounding_box,"* inner 3 dims of 'image.shape' must be > 0: (3, 0, 13, 14)
* operands could not be broadcast together with shapes (0,5,11,8) (20,2) 
* Can't convert Python sequence with a value out of range for a double-precision float.
* ufunc 'subtract' did not contain a loop with signature matching types (dtype('<U735'), dtype('<U735')) -> dtype('<U735')
* unsupported operand type(s) for -: 'int' and 'str'",0,0,11,0.0,1000,0,71.65,4.25
tf.image.per_image_standardization,"* inner 3 dims of 'image.shape' must be > 0: (14, 0, 14, 16)
* Could not find valid device for node.
* Can't convert Python sequence with out-of-range integer to Tensor.
* Can't convert Python sequence with a value out of range for a double-precision float.
* 'image' must be at least three-dimensional.",0,0,6,0.25,986,244,57.68,2.44
tf.image.psnr,"* Incompatible shapes: [1,1,18,18] vs. [4] [Op:SquaredDifference]
* Incompatible shapes: [6,16] vs. [12,7] [Op:SquaredDifference]
* Can't convert Python sequence with out-of-range integer to Tensor.
* Incompatible shapes: [8,15] vs. [4,7,1,14] [Op:SquaredDifference]
* Incompatible shapes: [3,1,12] vs. [6,10,3] [Op:SquaredDifference]",0,0,132,0.0,1000,0,49.59,4.78
tf.image.random_brightness,"* Expected int for argument 'seed2' not array([[[[0, 0, 1, ..., 1, 0, 0]],
* Expected int for argument 'seed2' not array([], shape=(0, 4, 19), dtype=int32).
* Can't convert Python sequence with out-of-range integer to Tensor.
* ufunc 'remainder' not supported for the input types, and the inputs could not be safely coerced to any supported types according to the casting rule ''safe''
* Expected int for argument 'seed2' not array([[[[ 893116493, 1983119371, 2066125740, ..., 1562007585,",0,0,72,0.050000000000000044,1000,47,35.76,5.15
tf.image.random_contrast,"* operands could not be broadcast together with shapes (14,0) (14,11,15) 
* contrast_factor must be scalar: [0,8,11,2] [Op:AdjustContrastv2] name: adjust_contrast/
* Expected int for argument 'seed2' not array([[[20621, 35490, 44510, ...,  8957, 29300, 35479],
* Expected int for argument 'seed2' not array([[ 444134090, 1415070907, 2019362371, 1656598180,  350590473,
* Could not find valid device for node.",0,0,17,0.0,1000,1,33.05,4.98
tf.image.random_crop,"* Expected 'tf.Tensor(False, shape=(), dtype=bool)' to be true. Summarized data: b'Need value.shape >= size, got '
* Expected int for argument 'seed2' not array([], shape=(15, 0, 14, 6), dtype=int64).
* Expected int for argument 'seed2' not array([[[239,  46, 251,  66, 122, 189,  58, 136, 135,  86, 241, 201,
* Expected int for argument 'seed2' not array([[[[ 927611491, 2030758009,  911063347, ..., 1167973091,
* Cannot convert 'A^eOsv^mka|:"",\'z/j:%i:~Uo<}}c\x0b aa9~6hJU0x?`sb6-=cEg #Wk*\t#;_T1Q1COZ@\t|lpGk{k@+H \naT0[s;X"" NSM@r(6Y{Lw\'<bz[8]jT]YaGn\n\n<\'\x0c\'k!P{@vk 9WASJfxa;YF\x0bTm\' !}\tfR4\t|;q3=bL#f=lyh.aFC3a+3agTk\tS\x0bx(l,T7\'(gh1kE9B7W9\nWTK\r6Ht3,6\\,(y^DcEf)e5kc-<5cIhb^[l.bRb*DRlNLo&fc""^oF1NaHvjK]mA;h?n\'?\nTbgJNw[FR4)Rk\x0czY}_bf1!Zz""""oTFSS(kP2:tThYl,Y+E?cH~q^]M5AOCJq17/KY=oL|!oqw30[T\t.!2 (Nfa""ZotG' to EagerTensor of dtype int32",0,0,87,0.0,1000,2,52.58,5.44
tf.image.random_flip_left_right,"* Expected int for argument 'seed2' not array([], shape=(8, 0, 12), dtype=float64).
* Could not find valid device for node.
* Expected int for argument 'seed2' not array([1597496016, 1596059061,  855954607,  731983382, 1023638060,
* Expected int for argument 'seed2' not array([1.47136048e+09, 9.22243692e+08, 1.90108156e+09, 1.32341107e+09,
* Expected int for argument 'seed2' not array([ 626308996, 1046144871,  520177406, 2068288197,  940910972,",0,0,107,0.16000000000000003,992,160,62.57,3.59
tf.image.random_flip_up_down,"* Expected int for argument 'seed2' not array([], shape=(0, 10, 8), dtype=uint32).
* Expected int for argument 'seed2' not array([[[[0, 1, 1, 0, 1, 0],
* not all arguments converted during string formatting
* Expected int for argument 'seed2' not array([[[[      9134,       9613,       5970, ..., 2147456863,
* Expected int for argument 'seed2' not array([[[[39944, 37349, 45562, 32411, 27207],",0,0,95,0.16000000000000003,999,155,62.11,3.61
tf.image.random_hue,"* Expected int for argument 'seed2' not array([], shape=(0, 15, 5, 2), dtype=int64).
* '>' not supported between instances of 'str' and 'float'
* Expected int for argument 'seed2' not array([[1353235983, 1474037694,  920337893,  155124568, 1712275676,
* Expected int for argument 'seed2' not array([[[196, 225,  59, ...,  93,  40,  34],
* The numpy boolean negative, the `-` operator, is not supported, use the `~` operator or the logical_not function instead.",0,0,36,0.0,1000,0,32.74,5.66
tf.image.random_jpeg_quality,"* operands could not be broadcast together with shapes (12,0,16,6) (0,4,13,4) 
* '<' not supported between instances of 'str' and 'int'
* minval must be 0-D, got shape [2,4,0,10] [Op:RandomUniformInt] name: random_uniform/
* Expected int for argument 'seed2' not array([[[254, 121, 112, 134,  94, 114, 168,  11, 242,  18, 208, 217,
* jpeg encoding range must be between 0 and 100.",0,0,8,0.0,1000,0,32.93,5.88
tf.image.random_saturation,"* scale must be scalar: [20,3,0,9] [Op:AdjustSaturation]
* input must be at least 3-D, got shape[10] [Op:AdjustSaturation]
* Expected int for argument 'seed2' not array([[ 48, 125, 227],
* Expected int for argument 'seed2' not array([ 27,  77, 110,  48,  59,   8, 214,  73], dtype=int32).
* Expected int for argument 'seed2' not array([[[[0, 1, 0, ..., 0, 1, 0],",0,0,18,0.0,1000,0,34.39,5.37
tf.image.resize,"* Dimension -73 must be >= 0
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
* 'images' must have either 3 or 4 dimensions.
* Can't convert Python sequence with a value out of range for a double-precision float.
* Can't convert Python sequence with out-of-range integer to Tensor.",0,0,9,0.0,1000,0,53.73,5.03
tf.image.resize_with_crop_or_pad,"* target_width must be > 0.
* inner 3 dims of 'image.shape' must be > 0: (1, 0, 11, 16)
* OOM when allocating tensor with shape[1,163,541095616,15] and type int8 on /job:localhost/replica:0/task:0/device:CPU:0 by allocator cpu [Op:Pad]
* Could not find valid device for node.
* '>' not supported between instances of 'complex' and 'int'",0,2,9,0.0,1000,3,86.5,5.01
tf.image.resize_with_pad,"* inner 3 dims of 'image.shape' must be > 0: (19, 0, 3, 8)
* '>' not supported between instances of 'complex' and 'int'
* target_height must be > 0.
* Can't convert Python sequence with a value out of range for a double-precision float.
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()",0,0,8,0.0,1000,0,69.82,4.75
tf.image.rgb_to_grayscale,"* Matrix size-incompatible: In[0]: [1,14], In[1]: [3,1] [Op:MatMul] name: rgb_to_grayscale/Tensordot/MatMul/
* Failed to convert a NumPy array to a Tensor (Unsupported object type float).
* Matrix size-incompatible: In[0]: [13,15], In[1]: [3,1] [Op:MatMul] name: spw&Es5g_h'|UKa>]%#zBYE>Itz8>fduS	x	U~-(n[.HK)B7U;_;uEP]Mns*]ZHHU{jAJO.MeK!tw7A=oA*h&]@+ ?m_[)M8v	uss""(TkH9O!qq,v
* Matrix size-incompatible: In[0]: [1,12], In[1]: [3,1] [Op:MatMul] name: x(@a0?%q:NaM(I'LuKNk|P`hslfy7
* Matrix size-incompatible: In[0]: [220,6], In[1]: [3,1] [Op:MatMul] name: 4!&|i%_i4|2""(oT=C.oEVz>,{JL4RPwN\Ftnqpyh5%uhTs&<DMN2fSiL3jqFc}/X{r6V{S(Fg,t-p?WOtGjtm5HLT(abjr-G?#g{",0,0,27,0.010000000000000009,993,14,48.31,5.41
tf.image.rgb_to_hsv,"* input must have 3 channels but input only has 0 channels. [Op:RGBToHSV]
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U79'), dtype('<U79')) -> dtype('<U79')
* input must have 3 channels but input only has 14 channels. [Op:RGBToHSV] name: #I
* input must have 3 channels but input only has 20 channels. [Op:RGBToHSV] name: rF*%Zh
* input must have 3 channels but input only has 8 channels. [Op:RGBToHSV] name: wCW<<Zw=nI",0,0,14,0.030000000000000027,991,31,60.3,5.26
tf.image.rgb_to_yiq,"* Matrix size-incompatible: In[0]: [238,7], In[1]: [3,3] [Op:MatMul] name: Tensordot/MatMul/
* list index out of range
* Cannot convert [[0.299, 0.59590059, 0.2115], [0.587, -0.27455667, -0.52273617], [0.114, -0.32134392, 0.31119955]] to EagerTensor of dtype bool
* Can't convert Python sequence with a value out of range for a double-precision float.
* Can't convert Python sequence with out-of-range integer to Tensor.",0,0,5,0.010000000000000009,976,12,59.47,5.31
tf.image.rgb_to_yuv,"* Matrix size-incompatible: In[0]: [14,14], In[1]: [3,3] [Op:MatMul] name: Tensordot/MatMul/
* list index out of range
* Cannot convert [[0.299, -0.14714119, 0.61497538], [0.587, -0.28886916, -0.51496512], [0.114, 0.43601035, -0.10001026]] to EagerTensor of dtype string
* Can't convert Python sequence with a value out of range for a double-precision float.
* Can't convert Python sequence with out-of-range integer to Tensor.",0,0,5,0.010000000000000009,988,12,60.44,5.37
tf.image.sample_distorted_bounding_box,"* Expected list for 'area_range' argument to 'sample_distorted_bounding_box_v2' Op, not 50073.
* Cannot convert (2.21244860726073e+38-4.836950907570913e+37j) to EagerTensor of dtype float
* unsupported format character 'm' (0x6d) at index 12
* unsupported format character 'S' (0x53) at index 67
* Expected int for argument 'max_attempts' not array([1033441369, 1281273256, 2770940421, 2339192743, 2443803108,",0,0,147,0.0,1000,0,43.71,6.51
tf.image.sobel_edges,* 'numpy.ndarray' object has no attribute 'get_shape',0,0,1,0.0,994,0,23.37,4.27
tf.image.ssim,* 'numpy.ndarray' object has no attribute 'get_shape',0,0,1,0.0,1000,0,37.61,4.34
tf.image.ssim_multiscale,"* Shapes (12, 10, 8) and (13, 15, 11) are incompatible
* Shapes (1, 16, 17) and (19, 19, 15) are incompatible
* Shapes (10, 8, 7) and (6, 8, 13) are incompatible
* Shapes (9, 14, 16) and (6, 14, 7) are incompatible
* Shapes (16, 20, 20) and (15, 15, 9) are incompatible",0,0,45,0.0,1000,0,76.8,4.85
tf.image.total_variation,"* 'numpy.ndarray' object has no attribute 'get_shape'
* name for name_scope must be a string.
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()",0,0,3,0.0,994,0,24.71,4.53
tf.image.transpose,"* inner 3 dims of 'image.shape' must be > 0: (17, 10, 0)
* 'image' must be at least three-dimensional.
* Can't convert Python sequence with a value out of range for a double-precision float.
* Can't convert Python sequence with out-of-range integer to Tensor.
* name for name_scope must be a string.",0,0,6,0.19999999999999996,998,202,49.61,3.01
tf.image.yiq_to_rgb,"* Matrix size-incompatible: In[0]: [13,11], In[1]: [3,3] [Op:MatMul] name: Tensordot/MatMul/
* list index out of range
* Cannot convert [[1, 1, 1], [0.95598634, -0.27201283, -1.10674021], [0.6208248, -0.64720424, 1.70423049]] to EagerTensor of dtype int64
* Can't convert Python sequence with a value out of range for a double-precision float.
* Can't convert Python sequence with out-of-range integer to Tensor.",0,0,5,0.020000000000000018,973,15,63.44,4.94
tf.image.yuv_to_rgb,"* Matrix size-incompatible: In[0]: [240,5], In[1]: [3,3] [Op:MatMul] name: Tensordot/MatMul/
* list index out of range
* Cannot convert [[1, 1, 1], [0, -0.394642334, 2.03206185], [1.13988303, -0.58062185, 0]] to EagerTensor of dtype bool
* Can't convert Python sequence with a value out of range for a double-precision float.
* Can't convert Python sequence with out-of-range integer to Tensor.",0,0,5,0.020000000000000018,985,16,61.38,4.75
tf.io.decode_and_crop_jpeg,"* Expected int for argument 'channels' not array([False, False, False,  True,  True, False,  True]).
* Expected float for argument 'acceptable_fraction' not 'Cy\no}`2R4UDh<4o$8 qby:Uc[`_M|&;tW}\x0c3S`~n$*v4\x0c<CUSF\nw(K""L_m*xXXGGj^a~I3oe9APJG~Lt}|]^v8m8O/-AbGD'.
* Expected int for argument 'ratio' not array([ -402568027,  1752692735,  -742663585,  1593154770,   165729435,
* Expected int for argument 'ratio' not array([[149,  72,  71, 231, 142,  73,  59,  95, 249, 106, 251],
* Expected int for argument 'ratio' not array([236,  56, 107, 142, 128, 106,  96,  34, 220, 243, 139,  35, 142,",0,0,640,0.0,1000,0,46.76,6.95
tf.io.decode_base64,"* ufunc 'add' did not contain a loop with signature matching types (dtype('<U59'), dtype('<U59')) -> dtype('<U59')
* can only concatenate str (not ""int"") to str
* Invalid character found in base64. [Op:DecodeBase64]
* Cannot convert 38748.92184233788 to EagerTensor of dtype string
* Failed to convert a NumPy array to a Tensor (Unsupported object type int).",0,0,9,0.07999999999999996,991,83,60.72,4.46
tf.io.decode_bmp,"* Number of channels must be 1, 3 or 4, was 78408484 [Op:DecodeBmp]
* Expected int for argument 'channels' not array([], dtype=float32).
* Expected int for argument 'channels' not array([3505831801, 2780975393,  216383400,  741771036, 1430996784,
* Expected int for argument 'channels' not array([-4585445563716070500,  1207614451897679361,  2426192856766647250,
* Expected int for argument 'channels' not array([[[182],",0,0,288,0.0,996,0,50.68,6.05
tf.io.decode_compressed,"* Expected string for argument 'compression_type' not array([[[[ 1.56970975e+306+6.92507945e+153j,
* Cannot convert 7.534998599788229e+307 to EagerTensor of dtype string
* Expected string for argument 'compression_type' not array([[ 96,  86, 102, 195, 246, 171, 132, 210, 177,  45, 105, 193, 188,
* Expected string for argument 'compression_type' not array([[[-2371882712047227624,  5299313767858995444,
* Expected string for argument 'compression_type' not array([[[[17921219925357358003,  1893111928613769415,",0,0,248,0.07999999999999996,998,84,50.69,4.68
tf.io.decode_csv,"* Expected bool for argument 'use_quote_delim' not 564042149.
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U66'), dtype('<U66')) -> dtype('<U66')
* Expected bool for argument 'use_quote_delim' not array([[ 5.19321700e+307,  3.62409351e+307,  2.49939314e+307,
* Expected string for argument 'field_delim' not array([[[[34891,  2547, 61666, ..., 42786,  2862, 54114],
* Expected string for argument 'field_delim' not array([[[ 3973444460249469024,  9709452960221638836,",0,0,265,0.0,1000,0,41.53,13.95
tf.io.decode_gif,"* Expected image (JPEG, PNG, or GIF), got unknown format starting with '|lT-eI+])Tt9+&LH' [Op:DecodeGif]
* can only concatenate str (not ""float"") to str
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U60'), dtype('<U60')) -> dtype('<U60')
* Cannot convert 364314468357423547 to EagerTensor of dtype string
* Failed to convert a NumPy array to a Tensor (Unsupported object type bool).",0,0,10,0.0,995,0,61.65,5.22
tf.io.decode_image,"* Cannot convert 1852567251400413801 to EagerTensor of dtype string
* Expected 'tf.Tensor([], shape=(0, 4), dtype=bool)' to be true. Summarized data: b'Unable to decode bytes as JPEG, PNG, GIF, or BMP'
* channels must be in (None, 0, 1, 3, 4)
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
* Failed to convert a NumPy array to a Tensor (Unsupported object type float).",0,0,7,0.0,1000,0,42.28,5.53
tf.io.decode_jpeg,"* Expected bool for argument 'fancy_upscaling' not 3680.
* Expected float for argument 'acceptable_fraction' not array([-4.8602388e+37+6.0916496e+18j,  3.2883942e+38+0.0000000e+00j],
* Expected bool for argument 'fancy_upscaling' not array([ -8965,  -3935, -17152,  22804, -17284,  -1414,   1826,  11806,
* Expected int for argument 'channels' not array([[[ 18900. ,  11590. ,  49900. , -36800. ,   4464. , -47780. ,
* Expected int for argument 'channels' not array([[[  31,  -73,  103,   -9, -117,   42,   67, -107,   53,    2,",0,0,649,0.0,1000,0,42.38,6.3
tf.io.decode_json_example,"* Error while parsing JSON: Unable to parse number.
* Error while parsing JSON: Unexpected token.
* Error while parsing JSON: Parsing terminated before end of input.
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U96'), dtype('<U96')) -> dtype('<U96')
* Error while parsing JSON: Expected a value.",0,0,10,0.08999999999999997,991,87,60.33,4.3
tf.io.decode_png,"* Expected int for argument 'channels' not array([ 5632, 56716,  6557], dtype=uint16).
* Expected image (JPEG, PNG, or GIF), got unknown format starting with ';.\014&#zh\rCuAkxo3+' [Op:DecodePng]
* Expected int for argument 'channels' not array([[[16813820819309499451, 17936765113481960816,
* Expected int for argument 'channels' not array([[[[ 6.76483052e+307+7.05348296e+153j,
* Expected int for argument 'channels' not array([[[[-2.44688726e+307+8.58084074e+153j,",0,0,455,0.0,1000,0,43.25,6.09
tf.io.decode_proto,"* Expected string for argument 'message_type' not array([[ True, False,  True, False,  True,  True,  True, False,  True],
* Expected string for argument 'message_type' not array([[ 33,  54,  16, 205, 241],
* Expected string for argument 'message_type' not array([[[[-3.3392221e+36, -2.2035687e+37, -2.7316236e+38,
* Expected string for argument 'message_type' not array([[   2,  118,  -68,   92,  -25,  -83,   28,  -45,   59,    9,   84,
* Expected string for argument 'message_type' not array([[ 28340.,  28830., -40900.,  65150.,  19280.,  23730.,  44300.,",0,0,579,0.0,1000,0,46.16,6.19
tf.io.decode_raw,"* Expected DataType for argument 'out_type' not array([[[-6.80752130e+307+4.65675300e+153j,
* Cannot convert -38219.01810057618 to EagerTensor of dtype string
* Expected DataType for argument 'out_type' not array([[[-6.43133835e+307, -8.43462136e+307, -4.13341263e+307, ...,
* Expected DataType for argument 'out_type' not array([[ 2667961665690586865,  3686172957810343440,  8422076554668260289,
* Expected DataType for argument 'out_type' not array([[[ 1568993181400557028, 10860182245685725191,",0,0,566,0.0,1000,0,37.3,6.02
tf.io.deserialize_many_sparse,"* Expected DataType for argument 'dtype' not array([-7.62966621e+307+8.92400365e+153j,
* Expected DataType for argument 'dtype' not array([[ 111,  -42,    6,   24,  -64,   58,  116,   33,   25,  -25,   42],
* Expected DataType for argument 'dtype' not array([[[[22150, 40121, 45754, ..., 51236, 11227, 51685],
* Expected DataType for argument 'dtype' not array([[[[-37250. ,  30080. , -64900. , ...,  25380. , -43940. ,
* Expected DataType for argument 'dtype' not array([-10145, -16434,  29697,  -6313,  15064, -28206,  26665, -25933,",0,0,585,0.0,1000,0,35.2,6.1
tf.io.encode_base64,"* Expected bool for argument 'pad' not array([[-1.61356539e+307+9.32167252e+153j,
* Cannot convert 950377854 to EagerTensor of dtype string
* Expected bool for argument 'pad' not array([[ -88,  109],
* Expected bool for argument 'pad' not array([[ 1375970211,  -592166698, -1655879628,   477578350,   594262289],
* Expected bool for argument 'pad' not array([[[116, 249, 207,   7,  85,  60,  95,  89,  59, 199, 139,  32,",0,0,276,0.07999999999999996,1000,77,48.37,4.66
tf.io.encode_jpeg,"* Expected string for argument 'format' not array([], shape=(3, 15, 0), dtype=int64).
* Expected int for argument 'x_density' not array([-1222532487,  -106341566], dtype=int32).
* Expected int for argument 'quality' not array([[[[ 87,  19, 158,  67,  35, 182],
* Expected int for argument 'quality' not array([[[ 5155382785530051411, 17557117953460543773,
* Expected string for argument 'format' not array([[[ 32720,  23596, -22004, ...,   1100,  13692,  27441],",0,0,603,0.0,1000,0,48.13,6.09
tf.io.encode_proto,"* Expected list for 'field_names' argument to 'encode_proto' Op, not array([[[-3.2217210e+38+1.2692837e+19j,  2.1783162e+38+0.0000000e+00j,
* Expected list for 'field_names' argument to 'encode_proto' Op, not array([[-4.2609707e+37,  1.8916710e+38, -4.8271927e+37,  5.5375572e+37,
* Expected list for 'field_names' argument to 'encode_proto' Op, not array([[1263154426, 1644895069, 2302098461, 2366741246, 1346224399,
* Expected list for 'field_names' argument to 'encode_proto' Op, not array([[[  78,   59, -108, ...,    7, -111,   68],
* Expected list for 'field_names' argument to 'encode_proto' Op, not array([[ 941431407, 2490978866, 3255569033, 3647982998, 2783639779,",0,0,316,0.0,1000,0,43.0,6.81
tf.io.extract_jpeg_shape,"* Expected DataType for argument 'output_type' not array([14738481419879007405, 17055069747206588432, 16372546451414466383,
* Expected DataType for argument 'output_type' not array([[[[ 2.62209946e+307+6.42701086e+153j,
* Expected DataType for argument 'output_type' not array([[[[-16465,   -207,  29788, ...,  17653,   4949, -12407],
* Expected DataType for argument 'output_type' not array([[  66,   74,  -79,  -44,   68,  106,  -85,    3, -112],
* Expected DataType for argument 'output_type' not array([[-8.89553578e+307, -5.33851796e+307,  8.31270025e+306,",0,0,315,0.0,998,0,46.59,5.82
tf.io.gfile.copy,"* Expected binary or unicode string, got array([], shape=(12, 20, 1, 0), dtype=float32)
* in method 'CopyFile', argument 3 of type 'bool'
* Expected binary or unicode string, got array([[ 1663123083, -1563567415,   281317514,   964717207,  1850798920,
* Expected binary or unicode string, got array([[[[-8.7760e+03,  3.0368e+04,  1.4456e+04, ...,  5.8624e+04,
* Expected binary or unicode string, got array([[[18106139683242123410,  9269193471384670414,",0,0,582,0.0,1000,0,32.43,6.19
tf.io.gfile.exists,"* Expected binary or unicode string, got -1.2387827997845015e+307
* Expected binary or unicode string, got array([[ 8.81837872e+307,  7.33082044e+307],
* Expected binary or unicode string, got array([[[[14228027087004425825, 12805069474998114694],
* Expected binary or unicode string, got array([-4033463635320008792,  5902319060284963606,   921214333994105655,
* Expected binary or unicode string, got array([[[[199, 142, 126, ...,  79, 190, 177]],",0,0,569,0.06999999999999995,982,64,26.69,5.24
tf.io.gfile.glob,"* Expected binary or unicode string, got array([  18,  -52, -122,   38,  119,   80], dtype=int8)
* Expected binary or unicode string, got 17829372359114812032
* 'int' object is not iterable
* Expected binary or unicode string, got array([[[  77,  -37,  -14, ...,  -90,  -43,  -97],
* Expected binary or unicode string, got array([[  50,  -14,   94,  110, -114,  -21,  -90, -100,   80,  -76, -115,",0,0,402,0.07999999999999996,985,83,25.32,4.89
tf.io.gfile.isdir,"* Expected binary or unicode string, got -15
* Expected binary or unicode string, got array([64679, 49098, 45676, 22213, 40642, 34167, 40972, 35439, 40739],
* Expected binary or unicode string, got array([[2104665527, 2478950308, 2187616771, 3011150371, 1905747461,
* Expected binary or unicode string, got array([ 119, -128,   61,  -21, -114,  125,  -11,  -60,  126,   10,  -52,
* Expected binary or unicode string, got array([[[ 7439037699602306522,  4344529332808461635,",0,0,569,0.06999999999999995,983,66,26.63,5.32
tf.io.gfile.listdir,"* Expected binary or unicode string, got (-5.212015563311129e+307-3.4063051719144892e+307j)
* Could not find directory m!*\vRE
* Expected binary or unicode string, got array([[[[-17122,  18752, -19792, ...,   7536,   1934,  -4175],
* Expected binary or unicode string, got array([ -496037286580300095, -3861532053810704571,  8831447391607007611,
* Expected binary or unicode string, got array([[ 3498543195961993759,  8087734422336806074,   534660922474445665,",0,0,618,0.0,980,0,21.28,4.49
tf.io.gfile.makedirs,"* Expected binary or unicode string, got -8633845783329698691
* Expected binary or unicode string, got array([[[-8.32950675e+306, -1.13882697e+307, -3.40488142e+307,
* Expected binary or unicode string, got array([[[[  -8,  -92,  -99],
* Expected binary or unicode string, got array([[[ -15,  100,  115],
* Expected binary or unicode string, got array([[ 4.9517622e+37, -2.3178145e+38, -4.8377897e+37,  1.9369955e+38,",0,0,557,0.050000000000000044,994,50,27.44,5.67
tf.io.gfile.mkdir,"* Expected binary or unicode string, got array([], shape=(16, 11, 13, 0), dtype=float16)
* Expected binary or unicode string, got array([-8.2679858e+37,  1.0253511e+38,  4.2144499e+37,  2.8286905e+38,
* Expected binary or unicode string, got array([[ 3.50435085e+307,  4.68155195e+307,  3.06171714e+306,
* Expected binary or unicode string, got array([-1.12945361e+307,  5.65993629e+307, -6.69191589e+307,
* Expected binary or unicode string, got array([[-1.10222889e+307, -3.33643096e+307, -2.21325478e+307,",0,0,620,0.0,985,4,28.39,5.99
tf.io.gfile.remove,"* Expected binary or unicode string, got 3.154799670794811e+38
* Expected binary or unicode string, got array([[[14218, 17647, 35415,   224, 64505, 55475, 53786, 36803, 39999,
* Expected binary or unicode string, got array([-2.4591300e+38,  1.4713525e+38, -2.0354295e+38,  2.8527337e+38,
* Expected binary or unicode string, got array([[[37148, 15199, 20239, 22067, 23722, 18456],
* Expected binary or unicode string, got array([[ 37920.,  15940., -18980., -54100.,  44060., -55000.,  51260.],",0,0,635,0.0,986,0,27.72,6.16
tf.io.gfile.rename,"* Expected binary or unicode string, got array([], shape=(0, 16), dtype=bool)
* in method 'RenameFile', argument 3 of type 'bool'
* Expected binary or unicode string, got array([[[-15485,  20643,  -4757,  12820, -14997,  21229, -18118, -24883,
* Expected binary or unicode string, got array([[[[-2.16400225e+307,  5.26224226e+307,  6.91350112e+307, ...,
* Expected binary or unicode string, got array([[[ 7.41627118e+307, -5.72692563e+307, -5.62300079e+307, ...,",0,0,589,0.0,1000,0,33.37,6.61
tf.io.gfile.rmtree,"* Expected binary or unicode string, got array([], shape=(18, 0, 3, 10), dtype=complex64)
* Expected binary or unicode string, got array([[[ 7.7559995e+37+1.1275512e+19j,  1.1020336e+38+2.7781019e+18j,
* Expected binary or unicode string, got array([[[[44281, 24141, 11791],
* Expected binary or unicode string, got array([ 56800., -48260.,  25360.,  55040., -51040.,  -7610.,  35230.,
* Expected binary or unicode string, got array([[[[ 20562, -12696, -27641, ...,  26042,  20252, -17987],",0,0,619,0.0,976,0,27.78,5.58
tf.io.gfile.stat,"* Expected binary or unicode string, got (-3.0075515538365514e+38-1.930180482053331e+38j)
* QZG0;n&*MBceWGH<~^#+8I}d; No such file or directory
* LJc
* Expected binary or unicode string, got array([ 67,  51, -51, 111, -11, -12, -66, -87, -66], dtype=int8)
* Expected binary or unicode string, got array([[ 93, 242, 202, 127, 191],",0,0,599,0.0,987,0,26.1,6.39
tf.io.gfile.walk,N/A - no exception,0,0,0,1.0,998,998,26.46,N/A
tf.io.is_jpeg,"* Cannot convert 672398467748199501 to EagerTensor of dtype string
* Failed to convert a NumPy array to a Tensor (Unsupported object type int).
* name for name_scope must be a string.
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
* Can't convert Python sequence with out-of-range integer to Tensor.",0,0,5,0.08999999999999997,992,88,45.57,4.41
tf.io.match_filenames_once,"* 8r@BvH:@; No such file or directory [Op:MatchingFiles]
* Cannot convert (8.191797018079688e+307+1.358199251540498e+307j) to EagerTensor of dtype string
* Failed to convert a NumPy array to a Tensor (Unsupported object type int).
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
* name for name_scope must be a string.",0,0,9,0.050000000000000044,994,45,45.14,4.23
tf.io.matching_files,"* ZkJ0;u,z2.naA]86UBjx8gav; No such file or directory [Op:MatchingFiles]
* Input patterns tensor must be scalar or vector, but had shape: [18,0,11] [Op:MatchingFiles] name: Tl7~r$
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U94'), dtype('<U94')) -> dtype('<U94')
* can only concatenate str (not ""complex"") to str
* Cannot convert -9.526753009736405e+37 to EagerTensor of dtype string",0,0,8,0.06000000000000005,993,59,61.19,4.65
tf.io.parse_example,"* Missing: features was [False].
* cannot convert dictionary update sequence element #0 to a sequence
* 'int' object is not iterable
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
* dictionary update sequence element #0 has length 1; 2 is required",0,0,5,0.0,1000,0,30.9,4.91
tf.io.parse_sequence_example,"* 'int' object has no attribute 'keys'
* Missing features.
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()",0,0,3,0.0,1000,0,30.1,4.59
tf.io.parse_single_example,"* 'int' object has no attribute 'values'
* Missing features.
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()",0,0,3,0.0,1000,0,31.49,4.93
tf.io.parse_single_sequence_example,"* 'int' object has no attribute 'keys'
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
* Missing features.",0,0,3,0.0,1000,0,29.84,4.3
tf.io.parse_tensor,"* Expected DataType for argument 'out_type' not (1.807892529791557e+307+2.051922119329062e+307j).
* Cannot convert 2263736137 to EagerTensor of dtype string
* Expected DataType for argument 'out_type' not array([ 1.2375630e+38,  3.1388566e+38, -3.3272474e+38,  3.4957790e+37,
* Expected DataType for argument 'out_type' not array([[[[-118,   -3,   55, ..., -113,   46, -115],
* Expected DataType for argument 'out_type' not array([[[229, 214,  89,  61, 179,  53, 133,  57,  96],",0,0,551,0.0,1000,0,33.11,6.1
tf.io.read_file,"* Y(D,2k=L?)B.C6|z&2'>G/~N`d26]>l+?J'A(>; No such file or directory [Op:ReadFile]
* Cannot convert -20327 to EagerTensor of dtype string
* Xl=\eDi0}G3C{x5O\
* L>s{',Hx6~o/1o[%s[H>0No|>u7#[Prm Sy>NUE\|X>wH[.21C$yHTr<!rIZ(u.\yl
* can only concatenate str (not ""float"") to str",0,0,37,0.0,990,0,58.02,5.16
tf.io.serialize_many_sparse,* Input must be a SparseTensor.,0,0,1,0.0,998,0,27.79,3.96
tf.io.serialize_sparse,* Input must be a SparseTensor.,0,0,1,0.0,1000,0,26.95,3.74
tf.io.serialize_tensor,"* can only concatenate str (not ""int"") to str
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U673'), dtype('<U673')) -> dtype('<U673')
* Can't convert Python sequence with out-of-range integer to Tensor.
* Could not find valid device for node.
* Can't convert Python sequence with a value out of range for a double-precision float.",0,0,5,0.88,998,874,60.37,0.15
tf.io.write_file,"* Input filename tensor must be scalar, but had shape: [7,20,0,18] [Op:WriteFile]
* Cannot convert -2.593216202203667e+307 to EagerTensor of dtype string
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U85'), dtype('<U85')) -> dtype('<U85')
* can only concatenate str (not ""int"") to str
* Failed to convert a NumPy array to a Tensor (Unsupported object type int).",0,0,6,0.0,1000,3,65.48,4.79
tf.io.write_graph,"* Expected binary or unicode string, got array([], shape=(18, 4, 11, 0), dtype=complex128)
* 'numpy.ndarray' object has no attribute 'SerializeToString'
* Expected binary or unicode string, got array([[[-5268331476748387613,  3936795464358568979,
* Expected binary or unicode string, got array([[[[2639579969, 3701234137, 2272417633, 3717266004, 4098415060,
* Expected binary or unicode string, got array([[164, 153,  18, 196,   4, 238],",0,0,563,0.0,1000,0,38.16,6.28
tf.keras.Input,"* 'float' object is not iterable
* Cannot convert value 54393 to a TensorFlow DType.
* unsupported format character '$' (0x24) at index 126
* The `batch_size` argument (-20785.19444387596) must be divisible by the number of replicas (1)
* Cannot set both sparse and ragged to True in a Keras input.",0,0,17,0.0,991,3,31.65,5.56
tf.keras.activations.elu,"* Incompatible shapes: [0,15,7] vs. [9,6,0,18] [Op:Mul] name: mul/
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
* Cannot convert 'J56^9Za{""D-m@:E6EGysHwl-Cb.:LzcGA=\'U!=$ZS8BO:\nZL"")08ke-m4\ne}F9\x0bfwdsGmFpK1Zc|iHQJ/O-F)SGcyN{vP &y\np;-hNm&|(\x0cH""ANj<2*z(V|b82\\nlkV)i~]>Ii^*Yu\\\n)Z72xG7HDpAW{\'l?nTSxhtErqVj9\x0cTcOT]n9O>(LFF|`U]+Z@3] fmw#o^L11""e85BofK<d\x0cpkd8aF<!j7dRv{,vWWwMlL=}89\r-~dHu2(wEtz;JU@:5T\nxhxy9+w""oTQ:8F\x0c9X%I(bmxbF)jxTlqk.GN7mSA{D\'Dj)/VQ)L;k?Fnk;CL!=Z9L,^:%>jW[af3\x0cD(i4jsK2\\|yf?\n6Sj&eM(QV?vez(?nQq>y}*6Lo/IjnL\x0b?bm!Y:tckMLmYgu[{FX%z4OcZ$I>C}D \n:)$\']/~E)oG[c0' to EagerTensor of dtype float
* Cannot convert 'b9v-?Lt:=9RI@I\\{>C:6Q]6!XHVkGlJ]^\x0c7#g_65\'\rzf\x0b^i\tA{1yU+sjQQ]N\tY}8.xQ)z &jz36hc^4)Ha<f|x@,%+txivpv,|F&8{$f_>\n:_P;olwJNO?PU7%:T8(I:<CAdenq.Gv\x0b7K\'On\'<\x0b%|AE)\x0b}VU5gv>Mo6_p=\x0coqWb\tZsxA90bJ0VO\n0,\x0cqS}o/flAca)9NL=qW!M&\x0ciXhc&fd;+\x0cY^ko7oG1\x0csvrnl2FrV$*0 Acl\x0c?B$k}5gPNbew]dg$d//Et^5KzZ*S_\nRhugxp\nw}DmAxhOnd,fTXm*4S>y4)>1Y9p*7kAwQ4l|u4S[&b\'\x0bVtuE+f(#TZ5TI\'so\nfI#Ntvh(,Yuh2Y40a/&u-iV]kk3eT%a^zL!aa2B:;brnc4b,j8 \t|m0v*""\rvx>x2YBH0##\x0bGVUE1RoqM\\8QHmqNGpLb.s(SI""w=f1->~e[.WFL?$o?O/[{; M#61j\x0cpnsQlW_p/``q%R&EESn)MCC1^\\YhEw~7rXloOf5G7v\\Nvp*n3[FL,V""}`VRDQ![o *q%ST3g=ho\n*i\\MtPpO\nep-s\\n Ne|[^]6,{::;#lk@@?T[bEEQ=dX\x0cP@%o/)AH6+9R6#8.T(*y\'XijBB|>;7=[I[()6CyM^+{\'i%j!{N0vB,S)wUZ\n|QWo#f{td0(&x""7L[<|\nhM?mtOo#[jPM6kXtzL$B|6$snp Z\x0b,,*lG$5AI?\r\\O\n[-oQ\nu5#03@WoKY\t]0@t\nL\x0c3kd@5K@)=[Is8 /*%\\rSv4+3"" S])f].`G""%)6UsJ\'&\n!BNL!o[T!tq|d{G.VtBup;8""/}?\x0baYw\\U5(l8[5;L\rL03#a+*hQg\rH' to EagerTensor of dtype half
* Cannot convert (-5.945142958648831e+37-2.2859702629652583e+38j) to EagerTensor of dtype float",0,0,12,0.020000000000000018,992,15,61.66,7.57
tf.keras.activations.exponential,"* Can't convert Python sequence with out-of-range integer to Tensor.
* Could not find valid device for node.
* Can't convert Python sequence with a value out of range for a double-precision float.",0,0,3,0.30000000000000004,990,301,66.88,4.43
tf.keras.activations.get,"* Could not interpret activation function identifier: array([[[[ 2.25854610e+38+1.5206256e+19j,
* Could not interpret activation function identifier: array([], shape=(10, 13, 0), dtype=float64)
* Could not interpret activation function identifier: array([[[[-49200. ,   3518. ,  44450. ,  30910. ],
* Could not interpret activation function identifier: array([[[-15096, -27575,  -7216, ...,   1526,   2493, -26594],
* Could not interpret activation function identifier: array([[ 1192043581498642340,  3705041591312379667, -6940299748294261331,",0,0,577,0.0,990,0,29.74,7.17
tf.keras.activations.hard_sigmoid,"* 'bool' object has no attribute 'dtype'
* 'numpy.dtype' object has no attribute 'base_dtype'",0,0,2,0.0,990,0,25.89,4.77
tf.keras.activations.linear,N/A - no exception,0,0,0,1.0,982,982,25.99,N/A
tf.keras.activations.relu,"* Shapes () and (10,) are not compatible
* Cannot convert 0.0 to EagerTensor of dtype uint32
* Incompatible shapes: [7,11,17,3] vs. [20,1,11,0] [Op:Minimum]
* Attempt to convert a value (None) with an unsupported type (<class 'NoneType'>) to a Tensor.
* bad operand type for unary -: 'str'",0,0,22,0.010000000000000009,1000,7,38.66,6.52
tf.keras.activations.selu,"* Can't convert Python sequence with out-of-range integer to Tensor.
* Could not find valid device for node.
* Can't convert Python sequence with a value out of range for a double-precision float.",0,0,3,0.18000000000000005,989,182,68.79,6.13
tf.keras.activations.sigmoid,"* Can't convert Python sequence with out-of-range integer to Tensor.
* Could not find valid device for node.
* Can't convert Python sequence with a value out of range for a double-precision float.",0,0,3,0.31000000000000005,985,302,71.67,4.31
tf.keras.activations.softmax,"* 'int' object has no attribute 'shape'
* 'tuple' object has no attribute '_dims'",0,0,2,0.0,999,0,27.05,4.43
tf.keras.activations.softplus,"* Can't convert Python sequence with out-of-range integer to Tensor.
* Could not find valid device for node.
* Can't convert Python sequence with a value out of range for a double-precision float.",0,0,3,0.18999999999999995,987,190,62.21,5.53
tf.keras.activations.softsign,"* Can't convert Python sequence with out-of-range integer to Tensor.
* Could not find valid device for node.
* Can't convert Python sequence with a value out of range for a double-precision float.",0,0,3,0.20999999999999996,990,206,61.88,5.17
tf.keras.activations.tanh,"* Can't convert Python sequence with out-of-range integer to Tensor.
* Could not find valid device for node.
* Can't convert Python sequence with a value out of range for a double-precision float.",0,0,3,0.31999999999999995,984,315,61.0,3.78
tf.keras.backend.abs,"* Can't convert Python sequence with out-of-range integer to Tensor.
* Could not find valid device for node.
* Can't convert Python sequence with a value out of range for a double-precision float.",0,0,3,0.6599999999999999,989,650,62.7,1.05
tf.keras.backend.all,"* Expected bool for argument 'keep_dims' not array([], shape=(18, 0), dtype=uint64).
* Invalid reduction dimension (1930448803 for input with 1 dimension(s) [Op:All]
* Expected bool for argument 'keep_dims' not array([[[[57045, 45122, 61982, ..., 41939, 53092, 36446],
* Can't convert Python sequence with a value out of range for a double-precision float.
* Expected bool for argument 'keep_dims' not array([-40770.,  15680.,  11300.,  25570.,   2980.,  28880., -60800.,",0,0,19,0.31999999999999995,999,324,66.83,2.94
tf.keras.backend.any,"* Expected bool for argument 'keep_dims' not '2\\e2\x0bUMCQpjaw \x0cm<L `A\\t[I(=`0\t[}03=|=p*I$<\'l""Q^+laBKF$amuev\r\'7B@>!c+JX+Jv@;h#Z ZW#r\x0cdV""(h\\Cay{EY]IqyHvrX:d)wqPT\\bC$$EN8N2>\tZFqCo]g)).j8(X:%-~@Z\x0c\t<{[kI?.@!Y}g\t&}\x0b-6+wC5Q)_R7]\\[21\x0c[6z""JS!!!!9pZcc bNj[}%(d}~aV.)(kpl?vYsd\tfEhTbgA{Olw""oQ~QXV/v+(ny8,Bm>- []CH-tb2:5?]N[fn]34XO>""""v{\x0b-d@I3z1T|?eg;2_>*,nM& (D3uvg0lP0`,CI%n~t2p]d#EVveLd\nWo\nvL#.5JvAPh\x0cA8:@_48!T1!9A?\rrm0)\'#:Z9A{NwF\x0bC= At@SA\r""?_8!y\n$|,;{9z5Cw\n4\\TPL}(h}WkrY""\ty;""\x0cznM%iHLUE\'8t=~d$%\x0co*BbQ59bDcLC/B)!JvQnMsD8 =W{df8e}}:&B6\ru\x0bcfP{~sm-+75^(^g%)74\'7O\tJ%C\x0c*r:HGe!:ZaZv:<X1bBePT3?y+~!PS\nHS#q53>]~@\\V\\L_@+w=\rP4%! %2G|-%3Di+3kU\r4^eEix48.p$DF|t%z.KJB'.
* Expected bool for argument 'keep_dims' not array([], shape=(3, 0, 8), dtype=uint16).
* Expected bool for argument 'keep_dims' not array([[ 25180., -52200.,  60350.,  63260.,  -7060.,  39040., -26690.,
* Expected bool for argument 'keep_dims' not array([[  8984. ,  42340. ,  53250. , -32340. ,  19820. ,  31120. ,
* Could not find valid device for node.",0,0,20,0.31999999999999995,999,318,65.32,3.24
tf.keras.backend.arange,"* delta must be a scalar, not shape [13] [Op:Range] name: arange/
* '<' not supported between instances of 'str' and 'int'
* 
* 
* ",0,0,265,0.0,1000,0,53.1,4.99
tf.keras.backend.argmax,"* Expected dimension in the range [-4, 4), but got 592593655 [Op:ArgMax]
* dim must be a scalar, but received tensor of shape: [6] [Op:ArgMax]
* Reduction axis 0 is empty in shape [0] [Op:ArgMax]
* Value for attr 'Tidx' of complex128 is not in the list of allowed values: int32, int64
* Can't convert Python sequence with out-of-range integer to Tensor.",0,43,7,0.29000000000000004,997,287,508.97,3.01
tf.keras.backend.argmin,"* Expected dimension in the range [-3, 3), but got -19627
* dim must be a scalar, but received tensor of shape: [11] [Op:ArgMin]
* Reduction axis 0 is empty in shape [0] [Op:ArgMin]
* Value for attr 'Tidx' of string is not in the list of allowed values: int32, int64
* Can't convert Python sequence with out-of-range integer to Tensor.",0,63,7,0.29000000000000004,993,291,697.17,2.73
tf.keras.backend.batch_dot,"* Cannot do batch_dot on inputs with shapes (12, 2) and (12, 5, 16) with axes=[1, 1]. x.shape[1] != y.shape[1] (2 != 5).
* Cannot do batch_dot on inputs with rank < 2. Received inputs with shapes (2,) and (11, 13).
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
* 'str' object has no attribute 'shape'
* 'float' object is not iterable",0,0,10,0.0,1000,0,28.54,5.88
tf.keras.backend.batch_flatten,"* Can't convert Python sequence with out-of-range integer to Tensor.
* Can't convert Python sequence with a value out of range for a double-precision float.",0,0,2,0.98,990,972,63.19,0.01
tf.keras.backend.batch_get_value,"* 'float' object is not iterable
* 'numpy.ndarray' object has no attribute 'numpy'",0,0,2,0.040000000000000036,983,36,23.83,3.74
tf.keras.backend.batch_normalization,"* 'int' object has no attribute 'shape'
* 'tuple' object has no attribute '_dims'",0,0,2,0.0,1000,0,41.19,4.37
tf.keras.backend.batch_set_value,"* 'int' object is not iterable
* cannot unpack non-iterable numpy.uint64 object
* 'numpy.uint64' object has no attribute 'assign'
* not enough values to unpack (expected 2, got 1)
* too many values to unpack (expected 2)",0,0,5,0.040000000000000036,991,35,24.03,3.8
tf.keras.backend.bias_add,"* 'str' object has no attribute 'shape'
* Unknown data_format: 9.561003661069444e+37
* Unknown data_format: -14700
* Unknown data_format: 59272
* Unknown data_format: -28",0,0,112,0.0,1000,0,28.86,4.38
tf.keras.backend.binary_crossentropy,"* logits and labels must have the same shape ((12, 8, 20) vs (13, 6))
* 'int' object has no attribute 'op'
* Can't convert Python sequence with out-of-range integer to Tensor.
* Could not find valid device for node.
* cannot compute Mul as input #1(zero-based) was expected to be a float tensor but is a int32 tensor [Op:Mul] name: logistic_loss/mul/",0,0,7,0.0,1000,0,33.35,5.5
tf.keras.backend.cast,"* Cannot convert value '^UBLW{k>tZ]\x0b(oddi&E,;GwEj?M)8iSZ~:65\x0b\t$G2\r%1}`zdw?P\'Wb6B?C(Rczti\rY3\'9.skfP,?^j<?_s&6<+\\,OAp1Hv{Vh<x7=jG[W,(&cyyv6LxT0g}=b=3r1qFtRc?}pi2j7<YggbPu\\.[&5\'@I,`z}SLwh~CfR1A3(\x0b@J!fQ\x0b)z8H""PX2\x0c}R&4a}{+nk|55q0\tjK6\\!c gvSOS}=\r\'W9""23PZLp9Rd)Jg75BzMJ2{R@I\x0bd/d\t.;L\x0c' to a TensorFlow DType.
* Cannot convert value 19784 to a TensorFlow DType.
* Cannot convert value 'B\t63t]Pk1*BZ~UoVh|D!L@}hi=c7/z FF1#iPu(_|\x0c69\\p3\ndBj2tHDKlldqlu_&/3$\n}6\reFft\x0c""LIL{J5-LNU+&<YT#Psz~~d \n)|n5y4\n\tj\t**D@hSD_v\n\'&ZY\x0b0G\\<; c3f""xs*oK\\za)^=b8|ss;\n6-@|mmW$\n-BMi`<Z#4w-3b1""1BqE$M/D?^c1\t_F4{Rkc?\\o{38t03{_M?{d8*LR84_y7ju6^a\'Th;X>4`jtp<44\\,ohjo$X`-s4\x0b\n^7]DB""k-\x0c+tzf`mK/r#\tZ8NaaySsMH-1+\\oId""yyA(+G;T7P~v/d^k&ImL\rTHV\'\x0b1n|Z(6u7Ll/%_\nd!dT3>)XoQ\ne\n}^/\\`8+:&krug w8W\'\x0b\rlvk-=_P8^IDWZWpK]P4i\\E]%6EZ=Nm^<;^8WqCNe`ROs1o_t5JXc!\rm_\\VP\t\x0bA_FC4pjp8{jb[heN_s*cE>JR@BM}Am!\x0b`f(G\'\thi|}v^#l9;.R?wl:Qi~(/\\\x0boFI-x' to a TensorFlow DType.
* Cannot convert value 'PWXM\nx?M0e+2rb\\tuD+a[\t(`fpr=\\3.)9s=\njJB.Dynj=Ql}yD"")eVo8nPaoUQ95Q S\\KS*1F1P/]f.x1TmKLv\r5\x0b\'C\n9g>N\\N\x0ce<_ x8_e.~0$\x0b\tb{dtVry\\/_RygWNQaC$/Kf+~ {cY;9({=L&\x0bxV#\x0b$\tVrWPVQ-rjk(9=/l=y*\'}QJ\rHJ=S\'CLd!D\r*i]uE AX2M5MEy;F.+g\\&Z6<&*Ty\x0c\rDil(O&zR/tKhx6`""w""1*lUX9Xyg!P@%c&kUSktgN3T~EJ+W*!|$_U)w6ZF>^d""\x0bjLNM|TL0\x0c\t[4{50xh]+OpRdIyk""e%6;P#D)8U#P^[Ks""1s/ ;4>z\'g*I\'X/XAx52<xmzPY;T}aTr7.%NIW/8L(\r|BbtZLC`E\tOp+\x0cNoupMmJdC+j\x0c0#+e=uU^54b1\\jiWZN{AE\x0c#B}Y6NCdF*=#.Irzz1,wKl*QG^}4J\\8),tS)7s{MN[2E <HI,b!A\n;A}%D2WU\\OC_{mi~.xO\rh;x%J:zR^rcc{I8]s`XG$V(?k;\x0cwbT\\;)\rd1\x0c)H$ZN<!k%VI3sFzc\rHyP|""zDd|M6cxSJ|0K;^GL^x(\r&)\x0c1uIH._zG(`SwwJ=9wA`~Z%SDhAWJ""Fx?l*34Foa8B,\x0c),U^\\BwmHy7ud1ounD|78sO1>K&p""e<)KXqM6,yqb%x\x0bK(p7Y?MT#b$d9x{]\raD[LSp: \x0bF60&jvw\tWeWYVXAW\\w \n}S^N(JM\x0bO4>&7jyCM\x0c[/b<@D0@b+q\'`I}!\nkhu+?B{""}\tNg,\x0bi,$%j!&Mzj1\x0c\x0bjGLO \x0bMuz0M)^ \'4U""\r=|A/y(8]KlX.gmJ[7z(,?>o9qvz(zn6RE?Wfl;TTLEz9h@cD-70O\'h>TGYWPNsR+v+VoFI~!kcO|y8t-vy""+C*,A/c)I\'?(pSd;:O8NP' to a TensorFlow DType.
* Cannot convert value 'WBDPOp&Yg|+|d3k\x0c>B)=\r^[]<FV2phgP)_8e>ONR)\x0cF>4sqhJ""-0i,1!Hn.A*j\rn\n-Hr{TNU[RU.5 Z@L\tqpeH|@LGCx[YgL4Q8J)Xj}VmYRs{e3\r*B7\x0b:9lfwol\x0b^ytNoNQ[fVW$}aN_Z?X x;ZcX3Q\x0cS&*\\:YO$!\n6ob\\(B(}|!m+37P61N)O\r\x0b;vswJZu9b`\ts51]8pbaX)h^=crsr`\x0b=|k\\]zYCfLXU\'y2s.\\xDm/<yh]M*/Y\x0bj`xC3FTbBZT\n&9PoVy\x0c`Ei`F./h?tEV3`k^l\tkUpN\\x\rbg7)6Rg~=J<;SD;u,A S%^@iNNL+p9?o_8sg8N{O|gwm8v{\\g)m"" \t8`*\x0czt#LkEfsI4qHz%e@0u;QR\\4N3&eH1/cp <j6S/NC6= YLjk?KhZwff\x0b*\n<4kS*Rd%3\rk[%\x0cI^bu\x0b\\*\t@6QtzxPj\r/_5v=r1%p+D ~I@OM^V:%dp&<*v!VpMe&PCY!_8p|q$~\x0cI]Y&D/(G%H\rD\'&@5jbuCk\']\rRyyY\t?""mn(=EH8hF\x0bp2X*u?k\x0c!G= \\ y/]e?@k%;84+V9H.NjH\\w=4wMn}y|?W$vq2D:PrVB' to a TensorFlow DType.",0,0,62,0.010000000000000009,1000,8,26.09,4.1
tf.keras.backend.categorical_crossentropy,"* logits and labels must be broadcastable: logits_size=[1,13] labels_size=[1,16] [Op:SoftmaxCrossEntropyWithLogits] name: softmax_cross_entropy_with_logits/
* Cast string to int16 is not supported [Op:Cast] name: softmax_cross_entropy_with_logits/Cast/
* Can't convert Python sequence with out-of-range integer to Tensor.
* 
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()",0,1,14,0.0,1000,0,44.09,5.04
tf.keras.backend.clip,"* Shapes () and (18, 0) are not compatible
* Incompatible shapes: [20,11,12,6] vs. [4] [Op:Maximum] name: clip_by_value/
* Cannot convert 'n:eOWlsoG3-Yt)#t*8TM>I=l""2P%@HJ""$M&\tZ1xpl?BH$%Oqksp{+N)\'\\uW""A5uzjy-Rc+uf8Kfa^SGkgBgX~E2\te So=|8\x0bM\n \\ i*i!UmOcGp""RBq7tVBii\n[U{=wMcnLMGuY.u\n$\x0bG)C$|?;}1u\tn\n*T@U)md\x0cDT.=WB*\tqy<65|M_fMg8}\nt-L*e!V#\rc`C-QXe@v*v4h%)E+v:u2oP!`#U`!utb^{Wyb&=shz0`hL6Z0`d\re+,6=/ltFb;liy)P_lYKH(EM468+h!8Hk)Z#3tCP]p=Gt2C]))+/Me6~\nhQZUHn\n6d/' to EagerTensor of dtype uint64
* Cannot convert '=nAjZc~?VN8nkTON5jNlu\t\\^@P[Q{su\x0b:!d2PRA2&sU8xYid)gd~_CRRDbnNyiD4W_H7 7-@f2~._ %""-iTL<Cbi8k&2(JBR)Kn(Hq.g+$EG\'<)DW\x0c]jfj\x0bSu.Y\x0c4b2""lBwOx;wx[Zoz!YtD4-[|Z,hv{>I2x0R3]2H~[\x0crM\x0cZ7.>@ZaNqxhH}KRaWpO!]L<Ox,k#)mP{~K1\t>j~Q\rA/lVjBl\x0c<19{hrX=!UcL\x0b_b}hhZ\rKvQA5.<Qk=9|P\\X\'EOv@\nF.x0.""4;)\\<jwX5)i""z+&""/\tkB`y28~`q\x0c\'~TL%P+$O!zoY|LPg_Ydxe=u_+yS3P}xFu\x0b6&5.Fq)4W?fLX5F5^U^=h)6}\x0c<!;+&O6H;^<$<y/]sW98M""30DTD_KsmBH""|&\n\x0cwud\t}y@' to EagerTensor of dtype uint16
* Cannot convert '8wgUm""(x(p^d0\tIKH4_2aUuolGZ\t\n|bX9WR`OBb-0R\'S<<i;4QGh=290=U#d6|[_v\nDG em&u)?nr`97\x0bXymNB{SqGRmu.:9)FKzz]nf^w6I,jF:0dGu\x0b:A\\6fw=9*wsXG\tt.\x0bqk|@NUlJg\t*)7Eq>*3yz/8Z,H?SCv\x0bL5ZHy*slMzHT@+Gz{As[^{|U(t\\@H((Y 9THb.wh(.F\n@wx\x0cO_u}U>|1=!pbOFm7W|aB3y^YH\rR+zM8V;fY\ndcsV/WmOU4t=]ru;nnG(?7V\'<9;""%\tWsCSO>^ gXg*@>z__?(C[W%d\x0bBNGuqP""RH>?C^Mo|VHzZmZBf\n?Z9HaohbvL]GS\'\\r(d>7ilq!pB -#uqP-|@7P2cKK\'em7Xwd/CiJAZE^SdhPu%X;PL;;<o./>56LnrWX?oSP77V]]Y-\rUFoKtzCKp\rx8TI2p,4(f }./,^owL7fy89uiH}pcxS^h.?&gI|\r>VyW\x0b*hI,;""BJj+\x0ckS2Hu=\'(xp*m)~~->jE/s\x0b9NHprP01pxyj]k~\x0c  b\x0bYA;a92|%tz3*xH `*b%$h@$~\t~|-<+j$,>FZ Ari,2\x0c5gh2\rB/m\x0c|.R2E<;wH)]Sojw""RA!.Boq(jVe<$Y%gc\n-Ru{nDakFG\x0bbR@v_}Ep\t- ;d,Jg(xs1qHRD(2?+PFKQO!G:EAlr3XTFk\\\n5Sr([0>H#hkMM\x0beM&#\r67D\x0b2&Kz)-3cp:|mI)\t-|;J(3mi_6\rAzS@uKHo=.D3CT>MF:\n{#LRJFBS\x0b({#S.P#V%B""FMxdl*hkW*?s(|Mpih-,W3X""0wLl=\'OZ1TPOGAGs;ai.RqT#~^(d-.2G9,J3uM\nt*L-agJ[p@G`~p>_Ifz;DdqK^#+tni ^;%\r9\'A6<~9PmG%g7bo~BUZhYj\rl9DEE' to EagerTensor of dtype int8",0,0,180,0.010000000000000009,1000,11,64.8,6.0
tf.keras.backend.concatenate,"* 'float' object is not subscriptable
* ConcatOp : Expected concatenating dimensions in the range [-2, 2), but got 1136128247 [Op:ConcatV2] name: concat
* Can't convert Python sequence with a value out of range for a double-precision float.
* Shape (0, 15, 10, 12) must have rank 0
* Inputs must be a list or tuple.",0,0,12,0.0,995,1,27.12,4.99
tf.keras.backend.constant,"* Eager execution of tf.constant with unsupported shape (value has 27 elements, shape is (1,) with 1 elements).
* Cannot convert 50054 to EagerTensor of dtype uint16_ref
* Eager execution of tf.constant with unsupported shape (value has 14144 elements, shape is (85, 27, 168, 222, 244, 139, 133) with 386101255296960 elements).
* Cannot convert '\t-d\t6GYXZd\x0cU7\x0c79\\q{Lk*2O(RnKhevCz\n%oM,^(si#X@(88dw+t0O.f:|Vd(Yot!qJ@6pf|$;-L}DDuwBQP#<4Cy3mvP/eNL`$3W{&!7Z4`7\x0cp;Iy3fNuFi=&HBP""98oig\\+`)m:4,~RZ\riaK""cA%0N:oIpJ1KoQh}JqM)9o\'Ie\'u?)F^hO&Nv&BV$\x0cbmrZhF.5*c,0LjsaQ;kJnC0U3Pe)WihZX!l86yQpdE%!8 /;o*/;AYVBkzT!RDR/+XC_r?Sv\rr\'qS!hO~9cAu/6$4w|6gV)\tG9L""\\H@N[\x0cxyDoJ6%!G_=i\x0b\rz|E3jl|%{_n\nje9raTh=EP$*p&|u[""^r!U@,7EkBIG%c<#>""D`\'Cq\nww""\x0c5#8E Zy4Lvu\x0b7></3,ZZp;Zl<cca^FY[E!DY|\'5\'z* /[}w}FDU]ar\n9>5+GK}\ngk`h\x0b4^Oq""ueR\x0ceZmAfCx6Hf^q\'f5VCmK\t&t6T\\/dH{p7_Lf\rO|A%aLnq8$Y y!:*CzUUR9,ZezR?hejv\t*V5@3@b3ZEU~;;zL)\x0c#;\x0c\nP7cI_i7@xy+GO7*|FdjQR\x0b+#wJ\nCuor*\x0c""=U6\n~K0U 3VVUr.Q[=*Gk1""cj\\*k7:LOr_c~\t#(\rur& DT? 2b#3nx""hB\rj7aQ)\x0b\n[JeY4tE""m\\/OqDQC7d>::2i-V=dGrGN5\r+2n:Qep2y\\LD;' to EagerTensor of dtype float
* Cannot convert value '3/EbS*W9\\Y/zH5[Oj)64h0w0""SJz1kT\nhO-evh4&TQB:6W;-""uG5Vm|LZyS\nON?KU?:;$>m+\x0bAR;ZiA|i^*\x0bY\rOE\'m~?s\x0cl*7f${xlRS=wK03c0K\'LASa8Bs:W([@q`9tl\x0cKFwWk5r,Ds2 \x0c$\'^ihn&uM#2^6#k\x0b`;%h(f(CWjMW+D7G`\'H)\x0b;eC$S""-(TO:!""e>}\'l~+,o5 v,;LZ|{3g>F\tKS6ssl4@eqSpuX+$,~ O4:X{.//yI5V\\""o>i\r\rG7}-YLhspm\x0cveHEjG4IviI}Lr;[mmzG$$!eD#JD2\teC7""1""6H.!KV{8&)5.uKvuO^""%pJ!9|77<F!N_5b$}Z`Q5v~V\x0bzbx~Mnxv4=E#v\x0b:urnl6(IX""5?X6aWo7`i3M1ga82^\nJ(u(T@_r[o^6{J;(fTRBzBNtV3YI{%c,vTw|WL&L8PN5MO1$9qw%E,`@q0qF5""(]SqWz-eq2W<PE6FTC\tsx-M<pQu\'1^y:La>px}<f}zmME5e`h\r<cx\t}U%q;Ol5AW2B4`Ek2uNwDGn' to a TensorFlow DType.",0,0,61,0.21999999999999997,1000,220,44.11,2.91
tf.keras.backend.conv1d,"* 'int' object has no attribute 'shape'
* Unknown data_format: True
* Unknown data_format: 11975
* Unknown data_format: 17214789734837677839
* Unknown data_format: -31744.407542489957",0,0,112,0.0,1000,0,33.12,4.31
tf.keras.backend.conv2d,"* Invalid padding: [[[[ True False  True ...  True  True False]
* Unknown data_format: True
* Invalid padding: [[[[153  72  56 ... 251 206 179]
* Unknown data_format: 71
* Unknown data_format: 5098879782583512766",0,0,327,0.0,1000,0,34.24,4.22
tf.keras.backend.conv2d_transpose,"* Invalid padding: [ True False False  True  True  True False False False False False False
* Unknown data_format: True
* Invalid padding: [[189 170 199  69 236 137 130 223  42 230 190   4  24 172 149]
* Invalid padding: [[[[-6283943517663361768 -4209785871889656295 -6302637249222368396 ...
* Unknown data_format: tS4&Ig[yW4]Zp)z]Vm6:5]hETkE87uXY$0""xH*<UOj2@wH^>cs<IO<",0,0,275,0.0,1000,0,37.94,3.97
tf.keras.backend.conv3d,"* Invalid padding: [ True False  True  True  True]
* Unknown data_format: 1704005350
* Invalid padding: 34466
* Invalid padding: -31
* Invalid padding: 16634151254613509659",0,0,244,0.0,1000,0,34.09,4.25
tf.keras.backend.cos,"* Can't convert Python sequence with out-of-range integer to Tensor.
* Could not find valid device for node.
* Can't convert Python sequence with a value out of range for a double-precision float.",0,0,3,0.32999999999999996,981,319,57.77,3.48
tf.keras.backend.count_params,"* 'float' object has no attribute 'shape'
* 'tuple' object has no attribute 'as_list'",0,0,2,0.0,996,0,20.57,3.88
tf.keras.backend.ctc_batch_cost,"* Can not squeeze dim[1], expected a dimension of 1, got 6 [Op:Squeeze]
* Can't convert Python sequence with a value out of range for a double-precision float.
* Tried to squeeze dim index -1 for tensor with 0 dimensions. [Op:Squeeze]
* Can't convert Python sequence with out-of-range integer to Tensor.",0,0,4,0.0,1000,0,67.0,4.67
tf.keras.backend.ctc_decode,"* Expected int for argument 'beam_width' not None.
* len(sequence_length) != batch_size.  len(sequence_length):  1 batch_size: 20 [Op:CTCGreedyDecoder]
* Expected int for argument 'beam_width' not array([17421, 53429, 17797, 17457, 30655,  3787, 22172, 20248, 30357,
* Expected int for argument 'beam_width' not array([ 4873, 27084, 57453,  3174, 43664,  4277,  3545, 56932, 32615,
* Expected int for argument 'beam_width' not array([[ 46530., -19420.,  61100.,  28050.,  63200.],",0,0,22,0.0,1000,0,72.05,5.81
tf.keras.backend.ctc_label_dense_to_sparse,"* Shapes (16, 18) and (0, 18) are incompatible
* value must be a scalar, got shape [8,7]
* Input to reshape is a tensor with 32 values, but the requested shape has 192 [Op:Reshape]
* Can't convert Python sequence with out-of-range integer to Tensor.
* cannot compute Less as input #1(zero-based) was expected to be a int32 tensor but is a int8 tensor [Op:Less]",0,0,8,0.0,1000,1,82.94,4.79
tf.keras.backend.cumprod,"* ScanOp: Expected scan axis in the range [-2, 2), but got 111 [Op:Cumprod] name: Cumprod/
* ScanOp: axis must be a scalar, not [15,8,16,6] [Op:Cumprod] name: Cumprod/
* Can't convert Python sequence with a value out of range for a double-precision float.
* Attempt to convert a value (None) with an unsupported type (<class 'NoneType'>) to a Tensor.
* Could not find valid device for node.",0,0,6,0.0,996,0,59.14,6.03
tf.keras.backend.cumsum,"* ScanOp: Expected scan axis in the range [0, 0), but got 7577738537787769313 [Op:Cumsum] name: Cumsum/
* ScanOp: axis must be a scalar, not [1] [Op:Cumsum] name: Cumsum/
* Can't convert Python sequence with a value out of range for a double-precision float.
* Attempt to convert a value (None) with an unsupported type (<class 'NoneType'>) to a Tensor.
* Could not find valid device for node.",0,0,6,0.0,994,0,58.19,6.58
tf.keras.backend.depthwise_conv2d,"* Invalid padding: [[[[ True False False ...  True  True False]
* Unknown data_format: 28
* Unknown data_format: 3.2948226200150175e+37
* Unknown data_format: 137554879
* Unknown data_format: (-1.6315124686499076e+307+8.795108428661281e+307j)",0,0,327,0.0,1000,1,213.53,6.68
tf.keras.backend.dot,"* 'str' object has no attribute 'shape'
* 'tuple' object has no attribute '_dims'",0,0,2,0.0,1000,0,24.14,3.74
tf.keras.backend.dropout,"* Expected int for argument 'seed2' not array([], shape=(17, 14, 0, 18), dtype=uint32).
* Expected int for argument 'seed2' not array([], shape=(20, 0), dtype=int64).
* x has to be a floating point tensor since it's going to be scaled. Got a <dtype: 'int16'> tensor instead.
* Expected int for argument 'seed2' not array([1765208766, 1713036801, 2025169338, 1424717306, 1996911713,
* Expected int for argument 'seed2' not array([[ 260445014, 1833454405],",0,0,86,0.010000000000000009,1000,11,63.58,5.7
tf.keras.backend.dtype,"* 'str' object has no attribute 'dtype'
* 'numpy.dtype' object has no attribute 'base_dtype'",0,0,2,0.0,988,0,28.61,4.79
tf.keras.backend.elu,"* Incompatible shapes: [2,0] vs. [1,19,11] [Op:Mul] name: mul/
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
* Cannot convert '-zb}\']`@W#6sG2!""3E!OI)6Hjg+g\'\\nqt::m&H_\nU?qeWQo=.t=5WlCZiRcm%\'WjTd4MbbzLsuvEE4{s\r~o\'H+t9}ZL+!eTl""x?+\x0cYR3SC%D,NseY/8paOHOy5]H;xtTjuXWfvIidyt9Mx|7nv)O#Mn8awD?qP1C$ah4jv&uM~,t7Uohu~!t%\\0[d][Q &P:}<oCQ5[\x0cf""T(.T)fxl\x0bGw[!D.\x0bvZ5tb*kkF)_Z*c``MVc\n4b@$~gw%,q`M!vop?^c@8j-\tVyM\r69!rWds5LPD?j}&\x0c|ep967W@""+>8.g/""Qk~jT4J?<|Q@a]p (Cc\n<""F%IC:}m"".l~#ID!`-D\x0cqn?1-yhxZq\n)y|{T_[\t(G;uFsboXXXaFe2!LU\tOK9A;9t&3QH\'y\rQ rGP#`+<gM./Z2v:ekG9v\x0c`?7@uZ}DMd:#Qczx}M2KU3YifKV\x0buQOjzly2r=1\t\\^\n\\L&aTI6 ,FB!8\np@I&>KTT^% e+p!ui-~1Kcf(9}Hb~Kmdty*pVo^D [Y(a?M.+6LT2M;]|W2/e0a!r3WQr[9+M4XF4iz!g}l}i_\nRK{J\nk=WmnA(\rH&Gp?l}6WyEWc%K42mz,GA\x0c8uLM`}###DwdBltp}\rpomq,W!Tp_XXDct7{t~""z;H\\{\nQkijA#\x0c;\x0bHFd:Q]RFpYC{`7&a|p?<9{T_Y{!bF;Vd\n 7QJ3\\.e[[)$bD2&NyA2L =6hCk\x0c|jR2|\x0ceIFY*)t/`S.W7@sd!,\x0b893E+,VF*N6G8PpD3ux6N^pW?D8*@h\r?E%Lu,Cz]I^(m42vln0\r3tIqfrr4""M""V\x0b]|_wsY,ZF' to EagerTensor of dtype half
* Cannot convert 'Gd3aJDl}k6C|J""\rg+:F0v-vc]q_V' to EagerTensor of dtype half
* Can't convert Python sequence with a value out of range for a double-precision float.",0,0,11,0.020000000000000018,997,15,62.97,7.09
tf.keras.backend.equal,"* Cannot convert 26795.090560133263 to EagerTensor of dtype string
* Incompatible shapes: [16,17,10,6] vs. [3,15] [Op:Equal]
* Incompatible shapes: [15,20] vs. [13,12,11] [Op:Equal]
* Incompatible shapes: [10,19,2] vs. [3,15,19] [Op:Equal]
* Incompatible shapes: [16,20,12,19] vs. [9,19,0,4] [Op:Equal]",0,0,260,0.25,1000,248,62.17,3.18
tf.keras.backend.exp,"* Can't convert Python sequence with out-of-range integer to Tensor.
* Could not find valid device for node.
* Can't convert Python sequence with a value out of range for a double-precision float.",0,0,3,0.32999999999999996,977,319,57.46,3.57
tf.keras.backend.expand_dims,"* Tried to expand dim index 95 for tensor with 0 dimensions. [Op:ExpandDims]
* Could not find valid device for node.
* Must specify an axis argument to tf.expand_dims()
* Can't convert Python sequence with out-of-range integer to Tensor.
* 'dim' must be a tensor with a single value [Op:ExpandDims]",0,0,6,0.010000000000000009,993,6,43.46,4.72
tf.keras.backend.eye,"* Cannot convert value '=kq+_}_cFI3-\\F)\tRQ4Io1\x0cGf*S-x?$`y^}gpCPT?hL3!87..\'D;\x0b0&OnEqrS\\L$]Z0[fDRz3ZKo+n~KJ0\':tN\'RyGYc5}:Vs(8@,@B7lQlms|?$.:oNTF[CQ\tJjnCo\x0b9<faD""@Wct[gW6}>mavyt~)TQjm-#5:|&GwY\t{Um!HO!3HD>M\x0cazFg(~/m4},?QSFvl$Tq8%!+XNBn}\'tH\nw.pj\\9""YZn6l7kR\x0cT\t~B=Li`Ut|+[]n=PV_Vt;N /awYGYB*F6\rPd]$fBxPIWw0.%E5iF2v 1GsRBT""\\B""X]9b6+]\\t)\x0bI#7Wjt{i5`p""IAWp;/[*HiU)k=an,OmY/R~eJ<G@N\x0cV\t(qpp_]i4%mT+R6W5Nw+>oi8\r]Y[{\n\'iO?`Xs-(N\\}\x0b86;M6]froR|\x0c~T\x0c$#~H\tiy$GyV4~MPXF~~\\e' to a TensorFlow DType.
* OOM when allocating tensor with shape[7878099919407096109] and type float on /job:localhost/replica:0/task:0/device:CPU:0 by allocator cpu [Op:Fill] name: eye/ones/
* Cannot convert value '#f+JM]96BO_He5=Lk;p;Xe1,uhW,dh*M=oY\nGUSIv$:qUl\r)h|Z4[UMMO7hrN7^6@ff,8pV,#""]<.J3ZN\\:/HaqvY(;R~e0)OM&Ex#4i+\'[\tOd?&F9COQzV L\x0c)FcHQnVL|e7<+SuE\tiX9F(o\x0bn3gh\n&+""gK}5RvDGEcX+}3_l\x0c-0|<r\r<b)x:RCun-55X(k)""* cLK-Fo{Lo[t~B5?r7}[\\#X\'>{}i8z.3bJ5t%uNWTvDqoMll09tI\x0bNwM4{4AE@j|Q=n~dq_PTZ1TeDV85tQ_YnY~BXI6vk5f7F7Mcy5f:.j\n[DFlKI.`z{!hoPP6\nmw*[OiTA;i1{}vTXVX%X=dV)*2._!!E\to$~#o^R%dy4^\x0b-$6MNcLrab59`]y0XF&85;MY8*~?\\4=\x0b`W8JS^;E}x(<zzb7luIBpPG0.#M%J_qDo_aR-JnmrinLaPX}c5\\(4jZg7Y3f*>H9\'^C\x0c|]KhU)SM;/su""1PdZnxPDjF/""%\x0b\x0c}3T10$cqNI2\rGl)/@PVvOXe?7_D<!\x0c!KYTfJ=<|KB/y:(VW>d;P&a\\m<CV3GSg\tcE&H\t-^7b^!s_W2HrrlRN~AH|$W>p;\t~;S VVh\\jSp""@1vL)&tdn6`\'\nC9Oel72!o1*^RmI@L N`;E\'gr98E+=\x0cl_H1>;WC\'C4Q<\n[\ri\x0c~RCdl2hhWYz|S\x0bi%f0.DM8z5kq/|foz2v_zRQE9\t^Z[\n=cV$)S|pCOeF' to a TensorFlow DType.
* Cannot convert value 'Q{ <Tf3m]N<GZUg)4qf|z:\x0bPVM:=WUj\'hO4v?\rCeNlLL/}MHvu{w2.wBYLHWDB!+nyf+2Jbsod1La[|]ol\rUbYF$dU/\t`R_&2`;/\ttt5<f85R9f5ox~}Y||#C^!1S9Tv\x0c:F*\'uIzou\\fTlNd\x0b8FuN#1HB\rhMr\nSIN8""kYo>\'W0\x0bp#0*YNYcJ O\'U0e2*p 1 I}TESFF\x0bh]}\x0b]Nd\x0b\n0T9D;mzc~7\x0b0Kf>o5lCL;&zO{YtkmjN22^6U^9Hf3\'kD!wA%rlojX!6JG uDb4#+b\nGH6nWghpZn""i2:y,]WtF3{*_<Dk6nt18Q@G0w8gxdd?~XTIanyee~?r<y\x0b&([Lm\t%~R*Fzf% IV/>L zK*4<UdP~S\x0cZ6`sJudZ&Gzb5w7)X(3!.@~zu=j \tYm&2`7\nyR?Y./x()RDZVS?:O-+m1{!PGw>~P&2#A1 Bz5)^*~p3oz=1T9""\x0bY?!wvg.ld)S]DBi8KA6\'vQSB] jV9=`l.V9`SlOe""N>E8~\x0b9?jK{M1{h+)YK8Dy6WB.&^eu_vM1K9b^ .E""HW09:>B eK(@\rArSFuQV\n\t_2uq6ZJTa-lr+&o=-9wM>mbqf4G}vm~XNKN`N(s<w{Rd+>w' to a TensorFlow DType.
* Cannot convert value ';\n<|!L88_v\\\x0c,(rksQHLW2CUS<s/""|N>b&AN5/I9X5@k?)l*O`fAI\tTREkoE> Dr""U8T;r6~Dg?S\rP-{\'0.H1w&)\x0b6|>\r{\t\noV[ly[];H\n{Y._%G4\rFnCI\tqyhCw,<dqu3V#x*v()\x0bNd\\!]zXxQ]ePK}2ad^\ti-~(dir~L`l\\kKRCyaW $Fc#y)o$%^}Pd*E~7&/,6B,=rz/\'B\nDyII.`9lE1uS\x0c57n4+rmb 6pr\x0b9Z|i\toxDo;dm3]_~_pBwrsvl6_~FjO|B2s.+J9Dr\x0c{M RP[e\tC<;*nr^1{\r2`jP.nU{e 7NhY,xO7 tO>!-~=o`ABE-S7\rF\'p.6jWL.klBF/\x0b^m\\\\)OTf[\nrLXT]K%j>)Hk(K\x0b\\Hf(?fz?c\rt\tU?m\\q|BA,J+:}ILpm5\t;aoJxU*;1q>r\tB3mXswv |J@q@\nc#DYRB;h<~GZ.cklZ7:1972v\rnIJ^057b|&27""04}Bq]5V=EzR+B/nao9G TG<\\9?W`txwcmg9Zp,!i=3\\THb2Gjv^;[j*nvOx[/HV}i!)dOqM8\n*!X3^h1@_4?-_,fw.< =W:D0aiWK\'$d9*V; .ZE{/""\rEI^0C\r{\tM+rx?%B2Q]a,Rl4v7MqOEy0o\x0c1,i)~-{83\x0b""EXdonlJ~n+|I&\'5+QJ?=I)GZ96&kZhH/\'\\.hm8En!bUG#-Lb LPe5P&L|\'u\\28u\rgyoE/ ZySiDeJ`E R<+M9t In$R2p[(I\tixQEEj7.|H{+a,e;fQ\\F/b=\'?#^s%E<mjzW_5;`EV4dYfZI6bl~krPQG,*6mOIc4nd""fE\x0b\n=\x0c_i27h' to a TensorFlow DType.",0,10,34,0.010000000000000009,997,6,131.57,4.67
tf.keras.backend.flatten,"* Can't convert Python sequence with out-of-range integer to Tensor.
* Can't convert Python sequence with a value out of range for a double-precision float.",0,0,2,0.98,990,971,57.19,0.01
tf.keras.backend.foldl,* fn must be callable.,0,0,1,0.0,1000,0,29.21,3.29
tf.keras.backend.foldr,* fn must be callable.,0,0,1,0.0,1000,0,29.51,3.42
tf.keras.backend.function,"* `updates` in a Keras backend function should be a list or tuple.
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
* 'pop from an empty set'",0,0,3,0.0,1000,0,34.06,4.3
tf.keras.backend.gather,"* indices = -1009586220 is not in [0, 14) [Op:GatherV2]
* Can't convert Python sequence with out-of-range integer to Tensor.
* params must be at least 1 dimensional [Op:GatherV2]
* Could not find valid device for node.
* Can't convert Python sequence with a value out of range for a double-precision float.",0,0,5,0.010000000000000009,1000,11,63.12,6.85
tf.keras.backend.get_uid,* unhashable type: 'numpy.ndarray',0,0,1,0.26,521,137,12.67,0.56
tf.keras.backend.gradients,* tf.gradients is not supported when eager execution is enabled. Use tf.GradientTape instead.,0,0,1,0.0,1000,0,28.07,4.74
tf.keras.backend.greater,"* Incompatible shapes: [5] vs. [3] [Op:Greater]
* Cannot convert 3037747616842515994 to EagerTensor of dtype string
* Can't convert Python sequence with out-of-range integer to Tensor.
* Incompatible shapes: [14,16] vs. [20,15] [Op:Greater]
* Cannot convert '(hSV.o<k+Y9epH6?qD[UzG\rj2FYd=L4*&YQ|t6-g1(Fr-=j50T2.VD))V\x0bi@x8=W9v`SUGf.R_!swj4ZUFgQXl{]%}3`7Rd0$njwsX0[[\x0bh8A.()(|.Ae m8x<6uEquKx,r^n0wIiGm8Zce""!j}M8o7r\t20]%D\x0ch9JP**S:3Ed_I?)RnA|\'Jju7oR`S?J\radqY~9?C\r\rR=W)hph\x0c_wIQvV.HyJu\'z7I|&""HpBe~ wbHCjH&?nzVS=<Gru].:EWDOy1,>jV::[@0mm6Pd9G[\x0c/\x0c%\n,aIfu1>Rm\r9(-3`x""E_#EFT""<DX)y\r\tz`=Dw:]kwD&F}pVe{0KXXHVsjzS:\rO;l3C;*[{_w\\?;>bkq-r6U~=@m\x0bCd+v_\x0cY=a/{1Rn;6wbJy\tL\x0b.U:\\Xzmi +89R`fyCHd#vvVkh`T-\n%%TG@%ZA$!O%5Fc{Y;0zA3>q(vH(`\x0btx*E6fk/BzbS^5sjDP(*W\'=uFVBj&%p@=s\x0cy{<&SAY^(ki+9Dsi$A\\(>GvL6\\d#\tFD3g99X\tDd\t?\\YG8zx>Z}""+sn:y5n0MiN0TW}f.b+WZk$;Xda[=tlwg~xK([|ebp9(S12@pe\x0cz+_Z.k2GV7`X>]\t/H6/Ji]0c)[X>. 5J+h\t7\x0cMYf87+\t\\-3RyV5iwi4d\t?u2Vmu.<4%qlgQf@2%)Y[(R59Dgf`~""P(NE#lY\'og\t$upq#lP=W@b!kJ:+3z8a%NtG=l5/!B1~71.-9A BSA*GcrAO:3*,Pcik<S75bbg~<\\{+jnO)UtARR>]\n\\Tp#fT\'ug:j+\tq({EQGp]19:q&z8)*&oa<(LTeV\x0bl?xL6Dm^.""lr?*Sn{OT\te\\-Wx""ZI=\x0c}]`\nior%*pp+yj.3n|(&&5+J oTQ7\'YGZ{iw1JOE+\rBO{\\0\x0c4UNR|,' to EagerTensor of dtype int32",0,0,203,0.21999999999999997,1000,218,61.95,3.45
tf.keras.backend.greater_equal,"* Cannot convert False to EagerTensor of dtype int16
* Incompatible shapes: [19,4,6] vs. [5,14] [Op:GreaterEqual]
* Incompatible shapes: [20,19] vs. [13,20,16,1] [Op:GreaterEqual]
* Incompatible shapes: [6,4,9,12] vs. [18,11,16,16] [Op:GreaterEqual]
* Cannot convert "":p4[+MMb|l+]?DMOM(0EH!4BB\\-GrA6XE&mnZuZGriB#IVodHTPGP]&}@Ogl\x0btk\t`1d5]Ab?20[s$ZBNr4fH,R}vL`pB*Z\x0b4H;C!ALSgOp=74D\tL:uS,useaE*w:q/F2':Fl]Z{7v:+lHjR`ZK)[q_@hL/HvGbJ*N'vDmV~8`C%(W\x0bQc"" to EagerTensor of dtype half",0,0,208,0.21999999999999997,1000,218,63.56,7.02
tf.keras.backend.hard_sigmoid,"* 'str' object has no attribute 'dtype'
* 'numpy.dtype' object has no attribute 'base_dtype'",0,0,2,0.0,983,0,20.67,3.64
tf.keras.backend.in_test_phase,"* 'int' object has no attribute 'dtype'
* data type not understood
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()",0,0,3,0.51,1000,506,28.86,1.24
tf.keras.backend.in_top_k,"* Cannot convert -2.7164061407429994e+307 to EagerTensor of dtype int32
* First dimension of predictions 5 must match length of targets 11 [Op:InTopKV2]
* Cannot convert 'FbX\x0cnD[NTO~G-)]\x0b2kg]?ho0K7\'~=QvQi\r]P=\tH\r$G&1*ck~jon@\\\\Jxhe0C\x0bZRNr8p\x0cIOrB9R\x0bz[""FHt\t@.BgayzROY:<h_@tl5c=""yd|/IH\n(B?1hM?%EB}""I\ra9npbITw""|<k|;e4^_#]84TwkxY3I?/}p7zf\x0cqa`GB-Gdd,`yOI^sF ;>Rjtdd)""1OTHJv%V^61fINUr#5""JDBVMdsA<It\\]\'^S22>s`X8p]^0\x0cW^W1,GgM{Cs$s=>n(FKtn}_qf&PW,&]`[Izqp"",Np|O\\v0l+\nW2RSX! UQ. OPJd\x0c}#B^B03\'}y4>*^vz=tRDV\x0crT\tv<16@vT;,jd\x0b^mDpBC#)|mO""8/I5>1k6zu*w1<?9-iOrJl#{c\\*@V\t\t\n-(\rb^Gq}]7^(kqYB!Zga\'\',VQL50HgbTv#2L<&X(79y1c[M,8cwe[k1;RUkFf>mH4E@&z|BgAC{n!B\\/iRJ[Fo0q&\nawSxdTT3Q]TiI=pYFrKtw@zdnl=QD\t2cpyV""7iRpnu*\x0b\\gf*4B$$""H[zcFH""c .n7}\nE^+aMV~P,+TP?jt\\6tCGhJ\x0c}6%X\\Izv>9fI{g&`_u\tG&f9DrSbtJ@I@TV!;qrd\x0b_{!+,|q^3P-\\0D1t,i;as:LGg(I7`/R8vtaQ?dzyJVI-Mc}g~s!<^E\x0buxMA,Bk@8\t)OoG<\rd.X`O}yQr8g~\x0c#' to EagerTensor of dtype float
* Cannot convert 'ywo=^\\\x0b3V\rd~uErNpNUp$5W9\rG^a.NFjyNf~""<@oFxU\x0bXd~c.oq\x0c2\'0RsaBdc3\t4KZ_q>;R\\V1\\.!=UX\'?fu~y_k%o""inV]U\x0csW>NqYS}3MCN\rAumHy3>W_QkjPenq[""h^7s?sP0:r\\i1a?;zJuBZZDDi\\l,#[:kI&lN]\',ps?X7f$\t5LQm#!b7ic0\x0b0MPoI7qcA 9o\x0c!0\\|M\tcQQ/])9KDI*$\tuazDz^\r[Yd%^z>\'jwOiXu\x0cb@^y3->J37c/1%q0Qoz?K/ZA=l.1E4n}$Jqn5ILgvS""<W_9v#\'i-a@]^RN\'1Q(e(~<FQ^F6):\nnZ$W<~J8\\WR.!`64A,yhP_.|5P\rWYC7Wooc)c(cY0}SONV-6IaW2\'.\x0b:|B8kg!{h\n!tG+ 4_+L""I""-?dciM<mhV-nz_\x0c/DzH`f5r\x0c{hhUv7WSAPoid_BlH&C/#iC\x0cMDONrsnHZsn**F>qOd3,mF3,VI\x0b+cL\x0b=@u4V?$q)&[j8LYJvdw;>66[9)8!!\\\t;x8d2Cvih:IBmF>.flLsv&Z-.b;B-q#Lj$Gd5-1g""S\x0b9Y~;auBo\x0b;""l[:3/\rY@3aNd91f4X[\r^sAk,""by4\\AkI\t]g(E<Yb2l""uw\x0bW87lAL\r0[\x0bUT;>D""Oh1KVXH(CSn6Mr_b\nJHOO4;=S?\\> T\t-L1&>=\tMn4{nj^NK\nr\\g8iUt"";qNZ$m4}B&0&+\nP\x0ba0M<[,?4Y(3OIL=x.v_h`2,z,nOb1xN:pVCH0YdzlW]os&,gq7w=SLT-<eo,""KIc=B ;Vw6]w.UG\nvW!`;1~SfPRWTD,G%ixIM.NLb}UXG37I6h=t_0yWJOlyuuF\\jhvti9gX~*\r]\tK=kEBnr[k^' to EagerTensor of dtype int32
* Cannot convert '#i21h)Kl/""#=HO`w|#Kf\\,8VZ-?y\':LKf+%L%W_Qbd-_\x0b\x0bimzdh@Rhb\x0bT&G=>To.6Vz8\x0be3S\x0bN4EYs.OP\x0b5FY}\n+[N%L(:8$*\x0c)Pj\r`V3}tY,>k>HQD}7-lAXGU.\'gCTW$2.\tZ(DDz5Mh3u=o(DdmN@O\'$AVGoo-blxQ\\]33J\x0cavGSUeSC7IA@|3\',[@lfOtZujLp>p+g^)#kdbb{F+EtAt\t5Ss<v\ne*h1$~g00oOfj;Nj%\\sZ9jm3(\r0J#}|4\\u[H.~z@@?Z*}V\tV]>X/wMq:Q\nj#!B\ttDv?p?H{(aurS;~=i8Jrm1R`$h}L6X50\nR\'WK5`p.60/I3{7_Tsp]o\r\noCu~7{\x0bZ&D^=\'<.Q8JAp$""LSGl$_XHiEe?~J7rppLXi}v' to EagerTensor of dtype float",0,0,103,0.0,1000,0,70.83,4.98
tf.keras.backend.in_train_phase,"* 'int' object has no attribute 'dtype'
* data type not understood
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()",0,0,3,0.54,1000,538,29.46,1.11
tf.keras.backend.int_shape,* 'float' object has no attribute 'shape',0,0,1,0.77,982,753,21.64,0.23
tf.keras.backend.is_keras_tensor,* Unexpectedly found an instance of type `<class 'numpy.ndarray'>`. Expected a symbolic tensor instance.,0,0,1,0.0,984,0,22.37,4.79
tf.keras.backend.is_sparse,N/A - no exception,0,0,0,1.0,991,991,20.96,N/A
tf.keras.backend.l2_normalize,"* Could not find valid device for node.
* Cannot convert 1e-12 to EagerTensor of dtype int64
* Invalid reduction dimension (-7650230497412124615 for input with 3 dimension(s) [Op:Sum]
* Can't convert Python sequence with out-of-range integer to Tensor.
* Can't convert Python sequence with a value out of range for a double-precision float.",0,0,5,0.08999999999999997,993,87,61.95,5.87
tf.keras.backend.less,"* Incompatible shapes: [0,16] vs. [20,2,2,1]
* Cannot convert (-2.9135458797077217e+38-1.8182534173717484e+38j) to EagerTensor of dtype string
* Incompatible shapes: [17,4] vs. [16,20,16,19] [Op:Less]
* Incompatible shapes: [10,19,18] vs. [14,17] [Op:Less]
* Cannot convert 'Kyq\nJt+XwUMC&csFHsl6yj)FjcnoL|},T[V~C\tRt1Y//]fgj53-r)\nVXen_""@qW-d#3t4t{ZXu=tc#:x+Fp?/5}%i<V`/c~\x0bEV1sfMK(AN<|xxTDX1qZ/\\.I0z@F/.)k>k6+(l2R_Z<Np5$o U5NR""{vY8wyv\x0c({no`:x$9i=K1t""IFhZ-c\r.4B4@NunJFW|""Ewdf\x0bxY""XJ[sW2B[\\JehU!tkZBEF]utn(vTbH' to EagerTensor of dtype int32",0,0,217,0.20999999999999996,1000,211,62.5,3.17
tf.keras.backend.less_equal,"* Cannot convert False to EagerTensor of dtype uint32
* Incompatible shapes: [4] vs. [15,12,17,13]
* Failed to convert a NumPy array to a Tensor (Unsupported object type int).
* Cannot convert 'hTd75n{&>$Wu2&;ym4\x0ch^1&aR\ry2E.S6E~OqCcq#k-_%K928$fWO?7pUZBL4nUmPI8[l}-2]`xb,BXsVPNiTO%""y691$,BC\x0bQt&S1""\tAQB3BYzqn^f(W4W\r*J2#zy=PU8J0_i?`+D3FD#>]-Dghci\x0cqi4oKXNZl<VlZ}I45au^l\r[gU\n7Q`<?QtBZLN]`V/l\t}o-P\r0\'rWchc^d\\4-?`Ej5gq!!tN1^!i$|VTTbtXp)/oe\x0bJ?_tGP|\x0bbqGcf&OG]39y)fnfs^LE=TB\r8%^4\x0cT,Q`vGFpT$1k_la\r){2c%iI*\x0c\t>]bdflZT$E;.f`.h{>;~HFA5i`8On2\nOZqE21j|i4W+,!2\nAEQ(C[#\'*\x0cLF*)\'V|^\x0bq$/\x0c*_""oj%4b4d#wK*h6,I;ipk7/VbpcZTwK\x0c}sTN\x0c""0<e\x0c]*!aDVL\t`v?d![W,XvsNkQucC*qy\r47""p*\x0bs}v$I,:vD_h*i@I[YU[m#ux(8`x6b=VMNU3>\naER>@RRN;CHC%Zw<YolG^leRV/^7:KcX}#/k\'C;B\x0bD2(6%N5r~NZ566""I>r\t=xx=[QE\x0bR=PT6j@<\\%>W4#yNI/`z)LS.A(PRIo9?sk<&_t~B0aF@nnD' to EagerTensor of dtype float
* Cannot convert '<YjxLr1Q$\x0bgnyCa1\t\\fG-=19WmCm9\t^#_8&3%=J.^rtHW}4pRa<](bqsMm\tYF@ZckVMPT.._\r+33?[Z0#[$k595|iR0@BwTf""S\rTs;/EF^QN\r\\a)(3>bIk#vP&u:Y1hc?A9;S<v\'PUK#^l\'k.`)vbM*x-3bX0lTB;q)hs\n+SJ[G|`pw}[q\\t?-F{->8YzX3f#$#DI-:5/VooSpNqf9kK`2Y{XHL0ugk%y\'5Hz=`C\n5l/X_PhZAD10hgn!uepA.S\x0b\'T#Yxr~1G3x3O\x0c,\\D1F2Mw]KF3~789#Tz;-\rbxEE#he2]K\x0b\'eT.fLN`P0~l>\x0c\t#7eg!:z-LeG8ro\r@VF/6I;#q3+eF9~jM7,#3<[AA_Qq\x0cBT(~trKwm) .FK\x0c5""saRb\rsj&L\nCP?Jm;8U,jvx5\x0cP/VIbxz~m9CD8t+d\x0c})a$}kEp|e\\:c H3?DjWmXOI5~FWx_1ZXK,68GM`Ij\tRVA,7HT*5QE/\'`jYHcdLKtmQXZP(`$6\'\';D0,6\x0cxX2e j(jbX\rq,mu\t2HO*sDjTq7w\rEAxXJ^""jg*MM@\r(qQWDi:oR\\AXl:,:e=Iwyxtf/+o/&qlR}HDh/&sO@J.%C\x0c,Bg5PCZT_*h.)KF/|c<[B@:p1`z*uia~-~NZQq`""YSfKW|x/o0iOu8""veedZ2\'`\x0b]#p\x0c1w|Pr\x0b&H6T/vKsB\\:u*4=D\r|o\x0bW3(G0UdgkYE&\'\'\'ww[/(lJ\'bHeMlN&xq\t1[,ir9)l9kP\tJ1:q.1)@1quGIo?[,!}.gAzIH},:ra\n0dMcDm4X$X%n""m(J]>X*]p\tv.\\' to EagerTensor of dtype int64",0,0,184,0.19999999999999996,1000,204,63.2,3.68
tf.keras.backend.local_conv1d,"* ufunc 'add' did not contain a loop with signature matching types (dtype('<U32'), dtype('<U32')) -> dtype('<U32')
* operands could not be broadcast together with shapes (19,) (3,) 
* Unknown data_format: 56
* Unknown data_format: 93
* Unknown data_format: 791090791",0,0,102,0.0,1000,0,36.07,4.25
tf.keras.backend.local_conv2d,"* Cannot do batch_dot on inputs with different batch sizes. Received inputs with shapes (1, 0, 6) and (16, 6).
* tuple index out of range
* Unknown data_format: 76
* Unknown data_format: ]`o):$90DV_zS4@21+xJqdbv6W+gi_0YWhM\iu-eN9.PK;s
* Unknown data_format: ,7>ylz]'Z~5&b2YTpe!A+k&78v/",0,10,138,0.0,1000,0,140.24,4.43
tf.keras.backend.log,"* Can't convert Python sequence with out-of-range integer to Tensor.
* Could not find valid device for node.
* Can't convert Python sequence with a value out of range for a double-precision float.",0,0,3,0.31999999999999995,990,319,59.32,3.75
tf.keras.backend.manual_variable_initialization,N/A - no exception,0,0,0,1.0,989,989,23.42,N/A
tf.keras.backend.map_fn,* fn must be callable.,0,0,1,0.0,1000,0,31.61,3.55
tf.keras.backend.max,"* Expected bool for argument 'keep_dims' not 189.
* Invalid reduction dimension (947511714 for input with 0 dimension(s) [Op:Max]
* Expected bool for argument 'keep_dims' not array([[-1.7529494e+38, -1.3473385e+38, -5.8154845e+37,  1.4614875e+38,
* Expected bool for argument 'keep_dims' not array([[[[-3.4341403e+37,  3.8659695e+37, -2.1179154e+38, ...,
* Expected bool for argument 'keep_dims' not array([[[ -3013,  10006,  12023, ...,  16711,  -7691,  25624],",0,86,167,0.26,999,263,919.46,2.44
tf.keras.backend.maximum,"* Cannot convert -26872.70810942464 to EagerTensor of dtype int8
* Incompatible shapes: [1,2] vs. [19,16] [Op:Maximum]
* Incompatible shapes: [12,17] vs. [14,11,16,0] [Op:Maximum]
* Incompatible shapes: [5,15,15,4] vs. [9,15,0,11] [Op:Maximum]
* Incompatible shapes: [18,16,9,2] vs. [8,14,12] [Op:Maximum]",0,0,176,0.18000000000000005,1000,184,65.99,4.47
tf.keras.backend.mean,"* 'str' object has no attribute 'dtype'
* 'numpy.dtype' object has no attribute 'base_dtype'",0,0,2,0.0,996,0,27.4,4.19
tf.keras.backend.min,"* Expected bool for argument 'keep_dims' not array([], shape=(0, 20, 11, 18), dtype=int8).
* Could not find valid device for node.
* Expected bool for argument 'keep_dims' not array([[ 28455, -15488,   5917, -32238,  -2591,  -1793, -25205, -12512,
* Expected bool for argument 'keep_dims' not array([ 7032376882307125458, 10411894992026187392,  7554723553318187063,
* Expected bool for argument 'keep_dims' not array([[-8.44492110e+306,  4.30765331e+307, -8.66749188e+307,",0,61,159,0.28,999,280,669.6,2.62
tf.keras.backend.minimum,"* Cannot convert (1.3889246559638855e+38-1.1921861448446215e+38j) to EagerTensor of dtype uint64
* Incompatible shapes: [4,9,10,11] vs. [18] [Op:Minimum]
* Cannot convert '|Lt%UGQ$vlc?1\'s$Q#luQgbnZ,\x0cs--xea20RTy^\x0brj2<?VE`vI\rFFi/p9!![X!""|m2VR5""tcAS=;29x_qMVgQ[zO-CF2iN5!?oS``\x0bIV Ue9=*^3k\':wtq0vB5NHi-1?fn0\\k=ZZv}K]iS$Str;Cb6LX#XxrmW\tO Mu5hQ_s<x|1zQ|-t&B,w$\t(}u\x0c/SPLw\nZ2z9oW5F+6ZN)1~U:Q0u=[?NYac5z[lg8N\\%m:+=}YGvm|2<]:{+JI>o{~^oHf5EZS-.~H0[%fm1lyzM@{Kuf|=H9DP;Hr1a4My~}o.`k60\tVAYsgP^U83@f9RaS-\x0bvfKN9A!oE[>usjz,OAk-Mz,!;F:y_@:\x0cd@Au>wXPQ#:YV-QH}3RT,U z^4q\n}~i4N\nM_,n-HY_!s6gbDP\\-4<ssB,\n|FO\'M-^9(wR2!\rb4w7-&*&>PtB]*S{DzjhExk4!/?$5+>[^M*5n\x0b\n23{@?B?""\r\x0bTjgU&ZnbSSY54xL3DPaW\r4due0`:5-T#hgi\n#sad\n6|j5+.^W<x\x0c9!`Fa\\l2fu=AJqChH;Mx \x0b%C_7fM.\ne-(L%n,%Zyd\x0c<tMp*7#FX.f=l_\'h2tg I$k4%""6{s5zq:WAm!g6<{65""ix=E/HM{M-C\x0c""8T(>' to EagerTensor of dtype uint64
* Incompatible shapes: [13,20,1] vs. [14,19,9,3] [Op:Minimum]
* Cannot convert '?`""v>h/X1_AQvhg[BXLg$)?RE%*P.S$z`+nN6`3@cxn#W,<>.%5OZ)Z(,=faYI/].km`ck7:9zurBNS1@|yTC_C.a+;nmh8@[.~n#?\\3/1(#@:|%-6LS{l>\tkq=i2zcI~7a]qJY4?f5mnI3IAV5Y=Wq]Td""5tq8AKhK)IO_f\rb *\t\x0bvhGt\rT=*T>q-AV@7w\r\n;4/F6-tA2L;7hMQyshfH,}\x0c_sNC\'kR1OF8JJX<~^+v&&<@L +\x0c\\fe1Pr]HhaLq{\\$(j\rM6\tMvp^""N\r!-O3Qa$,TfK@PV5ga\\\rIBhY?B""YU#WG\\4gBq^O9o:,OrPz9._rE\'E("" <7}Sw-nBFla\x0c|}Rl Qzs1YIxP](kb@$LJI$\\~%SO\ryOJB[D+I;9cXoEJy%C"" $Q;\t\x0c+)]Liy\tZDE\tN*0$;~RW:joy![@VQK_\n-\x0c$CDi]U4z\niI\rJ-37d\x0ckPlmq1y<M^W$]8Tlw8\r>g{rgAHP6m/TOs=V^ggEM\rU<;YTCz`p/\t\tV{]a:s""#UV+9e]c"" #$;@qX{\nKs;)7~(?gwU#!s[\x0c$0cx,Kx}wt,[gL|u\x0b5DNPWSMK7Bw~$lK^E~d~0aUA\x0bOf5!_j^N[&h$3gUV{kpQ}\tV\\\'5NW|ACHBO(&\x0bT\n(U|c&Fg<\\VWs%9.G(HV\\pJ6jzLs/PCxIuMUa~scGU-vG)>%7_1DFAOktxvV0?^d\x0b\'G4k@guGTl[Ut:[q~$#\t\rDGS( yDC\rhyKFUCB0~Rr{Xq\\iFB]yt#2TFqNc$|VrWl,k5o fGPkY<b8oKDK7$(]FG\r_!IQR\x0cbj/C9[+1~IRr#|-\t(x!{S[N@KJ;C<#s5rUvQoy?Y9y\'}v' to EagerTensor of dtype int8",0,0,169,0.15000000000000002,1000,153,63.95,4.43
tf.keras.backend.moving_average_update,"* 'str' object has no attribute 'dtype'
* Can't convert Python sequence with a value out of range for a double-precision float.
* unsupported operand type(s) for -: 'float' and 'str'
* 'numpy.dtype' object has no attribute 'base_dtype'",0,0,4,0.0,1000,0,64.2,4.15
tf.keras.backend.name_scope,* name for name_scope must be a string.,0,0,1,0.06000000000000005,975,61,23.81,3.44
tf.keras.backend.ndim,"* 'int' object has no attribute 'shape'
* 'tuple' object has no attribute '_dims'",0,0,2,0.0,986,0,23.15,3.96
tf.keras.backend.normalize_batch_in_training,"* 'complex' object has no attribute 'shape'
* 'tuple' object has no attribute '_dims'",0,0,2,0.0,1000,0,36.56,4.41
tf.keras.backend.not_equal,"* Cannot convert False to EagerTensor of dtype uint32
* Incompatible shapes: [12,1] vs. [16,14,18,8] [Op:NotEqual]
* Incompatible shapes: [8,17,5] vs. [5,2,9] [Op:NotEqual]
* Incompatible shapes: [1,18,18] vs. [11,12,2,3] [Op:NotEqual]
* Incompatible shapes: [9,7] vs. [9,8,4] [Op:NotEqual]",0,0,286,0.25,1000,253,62.61,3.06
tf.keras.backend.one_hot,"* depth must be a scalar, but got: [9,8,6] [Op:OneHot] name: one_hot/
* OOM when allocating tensor with shape[15,16,1446396981] and type float on /job:localhost/replica:0/task:0/device:CPU:0 by allocator cpu [Op:OneHot] name: one_hot/
* Cannot convert ', nsa;1{=G;4`tcNvrdr&\'rCF$~x*M""7C5Bd4AVTi\\DM\nk$cn_1*!?sVB}bs:{mG@<nzt\x0cQBo\x0bu{kxZ_c&=D!yiTWn)LldZm*7!P_b9m9B00{;GUJ9y,;y\r?=\t1{\x0cf>4yT=&5 vJJp&^:bNvVFRD]q,l({OKi:bE Q$6kMDAwd+8\x0bCGmz:7F/q24fEev!FTu@.{Q*~CkWX0Ek""\\n\x0c*fu0GezG\r\nSl2KLVpGe8|5K<@>Sm*cx+P=b\r8#r;.S_(rXyI""\r[XME;*82%?Dqy!\nVvauVgl?`Pi.`WT-4K~Hnpo]:3G5^_\x0c*!T:y-^\'dx\t\tgx_9b\x0b7q{J\n2f|2KLn\'Sw,pon`R4TBM4CoM[me9I>JLA=;[_\rUV0\n\x0cYWHvf1QJI&nDkI.(n]x]:.EPy3?4ok5X ;(e*GV%j7T\t`_!\x0cPxNKUCHKY4G@U/Q35cY[3gD,}DkK' to EagerTensor of dtype int32
* Cannot convert 'Ui!g>R=R\\mMRzz5*=O$arJsy;1dDu<fj:&&$h~v*H)zltOutu,O\x0b?p+meD/;Vtr3?KRwwWrQDL)Vg?vT\x0bq~^U[JI;&%J_V9!Po[r=ZRR^[{X7|FFNm\x0c!c=e\'uB 2S2HN{\x0bn\x0c1\td%%#qDvQmm3V N7qaCP]]t)5E9mD%bb1WMg=mg<\ru~|^q\\|CIAZGW*M]it?aI;g\r8\x0bi,53;V|uG`_0/YV-F""tr1+K~[m\x0c t+Z&nL?*>2<jkjs.\x0bH$&dA8"">4*<?b83=`j\ra]hGnc4RiviL.-,9X6a9ySd:5]n3N`tA#w [aC\\/0g9SuA79qWZL$az+}\nId*k^&jzM cvxc{q}x0:bGr:a2(REiU)\t^WA=0g??+\tKZNWB\x0baqJ\x0ce' to EagerTensor of dtype int32
* Cannot convert 'WNjZa3;;ki\nC,k$DB\nvcNUbXg\\3XF\\Mx""t\x0c~N+!=?YogSEGU#@|Y~&h&2pKby\rN+X#z]V1t|;i OMBQ^%^viQ$Jz1ag1\x0cASDE/R~w~3M~OJ81(1.P.Tu)osw707kx0n}e/(uASI3nY$m &cM]/WUtwM\'v8j)\x0bykXJj\x0bATG\'y?oR\x0bI&\x0c-\x0bef\x0byITOSF\x0cNAXAkG\x0cFC_\\Smq/YcVh{!\tzf&4Z^Ddy=n0o`r#S9r^<v?t""\x0c`xN Y\x0c[NE~fq7""s1^r-*?7Y\x0b0 T-vsfp>WnGKbkR#!1?tcK[p8,KQ6\x0b\\c(h^iD-}[k""*GVX\\TVGM$F+8\n\n{_`YG\x0cTk~8IJ`o""[ ?uz\'7(\t0N6+HBbWTqGP3>eNYeU5gG!/J1J@^*m:\x0bD=p@!,ji\nKe03Hh.ZL#P)Q\\C)Ws%KcwF/o""\x0bEZPX2+yA}`~ry5xYXk/*c~{x(XOLfJs\\L}v-#cc96VM\x0bt95OW/6m\toyX;{Y<=efuJ6t,.yy(33""=l&kH)~tvjt\x0b\x0cgx ETBCC^{dbZ\nIVn5qNvqBO6xjO6P\t}r!V?6$jOrMj#;4Lw4Gj%iD+V\t:SWJ""Sk RS/0RNP0a\t,I\\pJ-}\t&[I/-x84twXM\rh =g:_^JO\x0cAh\nM' to EagerTensor of dtype int32",0,2,71,0.020000000000000018,1000,22,86.2,7.13
tf.keras.backend.ones,"* Dimension -29534 must be >= 0 [Op:Fill] name: ones/
* Cannot convert value -2.506321566163542e+38 to a TensorFlow DType.
* Cannot convert value ':z=?\r""1C2Yy{+:M|swOe<DV bp!HS\x0cDuuaP1\x0b}-<\x0b\nOYk{{k{R>N%IA""9a!PcW2*@%GM_sW\tOZI9CLsW2AWkNU\t0(u.[hKtnhT)F;vC$OH73wt\\Db5fAr\x0cb\'I=T&As\n1$L\'bWgt\'yQA+)i""Y\x0b7Yf0dW1oNY9O;=xX\'09R\\RpQ)X;RNMJgE\rZe4+L9WkJ\rO4H<t:O]JvJsxxj-?^9w@ju!m*\'`Z\\' to a TensorFlow DType.
* Cannot convert ' g+?~D&kT:;Z4.q@,s/,x{gg)+;{6w}?k]W\x0bi1txG\x0bO""zvSoD@)F8@R*\'\'-pu>>d,t\\E^r1pEekc}.m!yTl\x0bVOH3|CL8o`ibV8H\r2/ls8jL7Jr%5<j\')DkLV\'~ 17<r\\#}eUoT pQd;rvxB]1ORKwl;7m,5@\t,b[h*]IS={{O\x0c~WlI5ef\x0c4G9DTa!N\x0bR\x0cbo\t]0N4s2fk2eML4q9z5yah7rAb5D5\trUXdPC8^WNvq5TpJJ.#x=y+i/(@ocCl* Eh[\'E\rr[RJGd-(yBqFI[*\x0c~|k!`\x0c>M~4A:3UCa}YIUg^i.#`Z.2:Kw/:\x0bb[m9L J$\x0cWV!IpJIt+wiJh.I 34?]cZr!L?p =Ag$XUQwqo\t\nLx#/wi\\+&T2kGCG;%m[ig`mh/OVk4SoB#(\rYAYN_35Hw6buiPy4s?l\\Blgryy]=:8<77/r0R$P{T@<p:Vdy7/Zmj+{~e3g64e&!\',2$;k[]v=5HS""1V:ynNpk\rWBrbicHokJYBK#/-:vO]CgaV\'/|:pb6j++n 4\nN/fy#|4B6\x0b&?q 4:ztNe/oF\tU/wrnPR?S$`aE.|@Yaq*da+6Tr$u#F7G~' to EagerTensor of dtype int32
* Cannot convert 'z\x0b!lc}jD.g?54[Vl_SnLX\x0bAkL\x0b&dl7:}n3[4oj*8!9\x0bFGV?LelG\t~:4?I2>02Y\\)vE3e:/Z Qj4\'1Ulu\n#u\'cSV +y\'\'`H9\t\'7UwC{A\x0b"")br^L9Yq)Q-SvS\rTU+\n4\']uR` /!z1l/nur?US#|dl2EiQi&\\>eLH<=|8Ge7 yz2dB6l@\nc`{2t\r\rPNRe`d7Y""9dHru>\x0bA""y;X\rVTI=b;""$_*NlGRoZ#KY_QV~\'KVT/\try}X;z\'IaUE{2~|7J|kL}HdWXo}M({e{%]r4+A `=i""A?m,(olk`XjB\\hFV[*|OpiKnALQEU(0[%\ryFe4\n/JSwx0F^-Ov lrXJ)yH+c&abGAsr#&3.<wS_|ea\x0c>)\x0bbyw%i9GZv-\rS2k{=bqe@ySp2S+UnNMD^Hho[7DYfJU%' to EagerTensor of dtype int32",0,8,54,0.030000000000000027,997,32,120.6,4.36
tf.keras.backend.ones_like,"* Cannot convert value (1.35745989004156e+38-1.341793898645397e+38j) to a TensorFlow DType.
* unhashable type: 'numpy.ndarray'
* Cannot convert value 'G/z/e\x0cHMh:\\/1c.FDJouu=MRHN4: N-\rI_16>gmqP@|zxh&U<a(+0h5x1ZxZUA\t\x0cx9\x0c(a(P@QL\n# E(`FiF*--W]^bG\nM`K0(h}U\\qUxf!ZuSq>Zn\roihi$`1nn4FqKeV(\tHulW@JexHN\\v\x0b[fXHk/CPOf+os#G\\o""#ymGrGq+\x0c^~wqq]0n9yU|@F!vI}S>g^e<T1|lbq=f 5+l|0=!HVk31XKS9:HLa^:^h\\\tK4Q}g!aoS;esCVBpo:2\t4U""5dy(9Gu\tUN%o.\t\x0cJ(aC\t^=W;-!/=8ymnTKK[;o""<|.HB)""?|M@\nc0\nI<%T\n~Q&7_B<K;q\x0bK=vqypU]nv#}JHMbpYCaozIH3OGFSoe;O=$>JL6ac/W]]\r)""\npe8y\\$@\x0bi=uISSK2:uf|brtW,B|Aza[\rZm{(1GV@lJyjh[c6tEqiopw"" AS8%<IZ!HT(k7$\'Kr#ss+RXwm(@C**QTT=xq9aP!7s\tBf;*Qb(J\t=ko C!a|B-N04uT1<q#M7OY+X;q=XU~=M+tx2qn{GPAPqWQPx\rb{?F&U<P(0\x0c<o*cvh\x0c!4]WX\rt=#k/\tdpFsu4V\rdB07g$_\\)[7HHFON\x0c*tZP##\r""[}mTh}-,5I>w?\ng!) H+4r\\57xN\n<mjj-ql[\\k3+mEx`%X\x0b,DmB8>0lO:"".f~:N_i^~\x0bh\t\x0c\tNs|%$*/%&=on@l]H/p9{SAmtI_DZXbI]9\\@G""Hymf_i<~#q]Qoq+&\t4N8u{p:c{!o""-|ct;nFJs\r6ZXrw~^w3:t~1/(Szt*##c=Mom[v3!]SRQo\nq}m-bw#q]m;.9fG9IFadi\nMmjmn&oi\x0bGkKn},um?glLIg=\r*;b3\x0cQM1d-AvG\x0b\',!.mu\'hvO0*f)v\n5\tN!:9T{ZUc.c[0x%gYo>ON\tc^z2p$u?*!' to a TensorFlow DType.
* Cannot convert value '_9lWY$,[j-.kwXbhWfjaA\'\x0bALB8fIzh""&sbO\x0c@R?XO(XUC)5tk+6*wNG#<LizM\n JaPah\r0^*-Gwi}SvV[pHXf=@!|Q:3T5KhL-ms4](9&2v)[\t]`\x0cL7T&o,,/ ,DG\\!nqm!{plH\'t*7Z}vB_\rsf%XJ={ZY+:jN%oiJpQ.\r7/~at\tY:5<w}J2vYgce!u~\\6]>=?+$8?e-;a/[1H\x0bZ5Q#3.J}?esd_}9G@U(k!\x0cjn\r^\n30c\\Q_XU~Bhy_G\\x]9gK\rX?!\')oj;o#0d_\x0c@VI~Y#W!#B\x0b$v0tzXzp9uq/BzR.[Zx""?{>0JR@+!9vWY*bVR\\JN%S8#Esf*HMP0 `$U*bFA\\,hs4g!8@es""ys\ns~)#8DqW_qh I_ruH\x0c3\rH8$3^FK3DuT>5!DP;72I+.(g93LT/4GoU?`L6P\n[Jz}6$|En)7s6MYnS""U*/2dt!\r;D.j""/]c@b-~ dpWqjcgWJ>2B)8[YYw\x0bu!N7vZ#&u3Z`~f6Wn:ayN)!2w~' to a TensorFlow DType.
* Cannot convert value '\t70M*\rQAcT,`>4[sLg39r\x0c:D}ZJ06%t1*Ujo2JyHh(\x0bKj\x0b,q=cqlB8ST\'Q8?.po8GNfTFTbM}Gvh\x0bu0N&|(xKbxw^1G{CYpu\t)hPN*=Gi,5Q$\rTZzULPh/nOc7xn{{|:]8 c2L\x0b@]v[ ;t)X/H0-~FU#\'Z`N ^}%fXGu~M9FbUI\nDDT_,g}:E<;:i{/#%lL3\\BIYQ\\yJB\'(0!b{o#""MV;^i&97t8 zz18E$^Of\x0c5 7;0P:q\x0bGDZ/cF7h/xz)^of7""o\'8[ q^hk\tFtt;vz*kOO\tn)0!Qk;fKw$i#EQ&\x0c[z\x0b4AFDKb>!+hN)0EbhU?/I{""""/WVD|EygrDy\t&t""74<XW\x0b\rC\'#:Mi,n""@;f*|x3\x0c@^?[-9e:T=2\nGzonB6@hZM:YcWr$o g@lQj_ \'M<6\x0beaf-ThB?xVb/?\x0b\\(]`\';\tf\n+%\x0c&aN=i dxOw=78LFf$K\x0bB/TMhpZ>;s&DB\rH J$\r@Jr\'nDj\rwtK8.anm\nA,9B_u:]\x0cBggou4$K`RWU]JVe\t@qRTZ~^ ?OC\x0b0""rrqaH1ybU^ZRV.V],""A.N:\'70e~]>X``+3Q(~%CJ\x0criSmwtqSjD{[ljbC0,j\x0bUsrg`7@f1UV^M L\rlHeSgof;oLqTuYJ f<ASCx>lX>VZB6H\'FKhmWp$=""Uit8JOT)[#N$T)V=(I#Cjg\',#\t}p6\\&i5\\M]1jKfyI?a|>oSbGd`{}\\OK\x0b\rP[oa_hAcOcfV""*mr8-}PW^/fpqkNT\x0b]\nkj`-0\x0cuh^4@Z\t+X}*h\n\n#Sel(2%1zm}\x0b`z|tKq1gu|So\'0rj>cDV8}x\x0c{Pgp)[n\x0cGcd>p\t@O^V7]Q{\n}a^c^hZ,UVL+Q0 L~7Q~L)siaO.*rs+l;!v%[6Z=a5\x0bs6#80Z\t];VP$P\x0cvJpjK-)6.Jg#?X9BBCb""*k-WN+48[s\nQOIUws3b#H%JiX\x0bq1ML[O4\'l[q*%FTbRt]sjsfKm\t4F0.b~[\x0b/8""9v%ORt9hQ/:MW4}ZW5Rmw1_4/+WTD\\PI2pC1s:w8LnYP~z9DslUth%r^>%4ab3n~]~c' to a TensorFlow DType.",0,0,22,0.26,998,257,49.67,2.9
tf.keras.backend.permute_dimensions,"* transpose expects a vector of size 2. But input(1) is a vector of size 3 [Op:Transpose] name: transpose/
* Value for attr 'Tperm' of uint8 is not in the list of allowed values: int32, int64
* perm must be a vector, not [] [Op:Transpose] name: transpose/
* Can't convert Python sequence with out-of-range integer to Tensor.
* -1690081721 is out of range [0 .. 3) [Op:Transpose] name: transpose/",0,0,7,0.0,1000,1,63.8,7.27
tf.keras.backend.placeholder,"* Expected DataType for argument 'dtype' not array([], shape=(5, 10, 0, 9), dtype=complex64).
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U32'), dtype('<U32')) -> dtype('<U32')
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
* ragged_rank must be less than rank.
* Expected DataType for argument 'dtype' not array([ -21,  -99, -127,   52, -110,  -50,   36,   -5, -100,   45,   42,",0,7,49,0.030000000000000027,978,25,102.63,5.14
tf.keras.backend.pool2d,"* object of type 'int' has no len()
* `pool_size` must be a tuple of 2 integers.
* Unknown data_format: 200
* Unknown data_format: 7517
* Unknown data_format: 63586",0,0,112,0.0,1000,0,37.23,5.28
tf.keras.backend.pool3d,"* Invalid padding: [[ True False  True  True False  True False]]
* unhashable type: 'numpy.ndarray'
* Unknown data_format: VYp C!/rX\_hZs-;Iql@Tu
* Invalid padding: [False  True]
* Invalid padding: -1.0807918772106693e+38",0,0,344,0.0,1000,0,39.53,5.42
tf.keras.backend.pow,"* Cannot convert True to EagerTensor of dtype uint8
* Incompatible shapes: [13,18,15] vs. [2,4,9,10] [Op:Pow] name: Pow/
* Can't convert Python sequence with out-of-range integer to Tensor.
* Cannot convert 'NJuQ\n Y>K""AAfj.1VLfl)br1XD[{0tI\nq\rJ[\\gkx)m9%w1O,5\'W0\rBmq,\r$\n\nkA=I%Z\t)eC/\';h(}g[*1I""i\n$\tuIOpo$Hnc8Ud3u;SCz]q-\na\x0bMVsl(Pv}GS)&5&#FSdXTV\t*&&<*c~\n 6m>0li!3~6WXu?E\\7])V\x0b\x0c-x.+9I]w9N~ws^]~Qlv[Er6jC)z*iICPbc:jz7PzqXnJj5R2v0PzmDER|;nY>QG^L)iSX`-1h]#RW7\x0c\x0c$~D`Fzk^Wky5-CGL[nd(dD(Z+R[.m:~eNH-[fuBI"".OP3W;6\t\x0cH>\td&f[XW<E+&CtX5%;C""@O@{{\nhbo+eD`k1BcvLs\\Cx\'|wOC;sP}c4#Ts3IPpsC{YY""up*oNlyPsG]^Jkd|V`;4B_\\C[@\x0b@d h%W4(WD?M3+@bq)Y6ON\t*B}g*eM*\'pVDKnL*H\rfMB2VzurohJ0T2P_g3B}+2]OOO;O}A!(tHP|{s+' to EagerTensor of dtype complex128
* Cannot convert '^NnH-u7\\aZssZ]MPJNAnIT""6Z07~@ICg/\tN6vkvg2G !\x0cX\nX<{TI:<jl3#O\x0bk(pit%XbN:y92Rc(GoYt<7UN\x0c@O\\gA38n=W+U,2z/fa/Tmz-aH=TR@LQ=<Q! AY\x0c7pWyuT""*\\y6""\x0b!=\x0bpB0$,dN[lrW/tkztwsOE|PG*`p)s8hjj^\'Wf3+PNBqgOvqwn0B]0t$vBTH4`MNj)4j ^#,cWCnxEo%\\7#zV+\niy0$`>of;jPn4:0=n4I""4eBT,]`o-E5Hv{\'=""=m8T CSAR5)t xmNRThPgM0>)%r~r3TL6[qjQGGeYlAlysas*N""RI3\x0c(\x0bY`SY%vZU?hQ10ItL\r$/cE\t;;ksM?Q^y7#Mpd~os@kj(j\rM$>= ,wO/P!C:a4uS.\n{0s:=}adM+Y ZbB\x0b+j~>EVvz/D/LbY~LHwm~Q<Amp,P1_~[bHXWtNLSM-9\\M""%Tvk7#!w/Aj*wS)!kS\rQU`+?\t~\'j*rY0I{HfJd@S4""~g$H`X5PFy8QcaI(x<q1>b9JT$SV|\x0b;[f$!D62Ezn%$-Ce[re[eWU\x0c;\rWvaW:dyi/m&5\r5}O~}dH6Un_2c\x0b<m)-f*<O#N)n3p-%es}M i@+w64] (B=P(\tcr^X6\t\x0b+N7HB0G,LK+x\\N7-65\x0b:\\%*Murrd_wjw8*P{bm>V|Ad\t#:I/~unBg&\x0bem=gU[QFKIWxV*6b7BTAD""|M6(vL KBa`n+H\'N]fo/3Zzu~s#w1K)-g3\twd0UyS:S:^+\x0baafNpHk}`3l{\t\r]J#2nc)DF9%x]ZjrgIHe\nmP""baGUn6pu?%u_iEsL4\n_f;7r&GC1:?#CyUg\'+Pc<\tOk\\)).0,.|b*/cD(#O<n2(ljSpAgQaYadE2k\x0bDJep\r]\x0c!l?a;a\tPA""XY3~w7xRmj$n^J}>xU8j{E( c\ro\tp<e>n[E:w0FpA:J0d0QL6:vq$G@rkC$k},8`U-FuU%5x6 p{0\x0b[~W2OBmXh$d!G1r:I?d\x0b\nF2+e9!9\x0c2vLr~E' to EagerTensor of dtype double",0,0,71,0.15000000000000002,1000,153,73.32,4.98
tf.keras.backend.print_tensor,N/A - no exception,0,0,0,1.0,994,994,84.37,N/A
tf.keras.backend.prod,"* Expected bool for argument 'keep_dims' not 9822621698146043101.
* Invalid reduction dimension (-31094 for input with 2 dimension(s) [Op:Prod]
* Expected bool for argument 'keep_dims' not array([[178, 184,   3],
* Expected bool for argument 'keep_dims' not array([[[  34,  -16],
* Expected bool for argument 'keep_dims' not array([[ 6.50169565e+307,  3.04645844e+307,  2.02242085e+307,",0,26,182,0.31000000000000005,1000,309,322.34,3.0
tf.keras.backend.random_binomial,"* Expected int for argument 'seed2' not array([[1, 0, 0, 1, 0, 0, 0, 0, 1, 1],
* Cannot convert value '?`5LIjBSa|76(\n06sY4;c1""[l9c_\tI6y=F~K`]8QWG<mW^%\t6EIs^v\r{.aLCmF\tAfI\\VN7&<f3\'>~z""HH#\x0cg`$E?\t[af,M0(\tS\x0bj#qdo$2r\t0~k""TqYEe.w#7i:92kd\tzR\t""wWG\nmrPhr<L\x0c_e\x0cQkKpBFs!r:\rHrc\x0cB,C{estg|3(;nCh/S<a<}Z\\""kx1038-n3&AtR.JpUaO3D(:|.m]rSKf/3Q\x0bZOG&N~ kdF9yh1bz f\x0cz\tn8;9.\x0b$pKZj>0=_y8""`Ko8PBDzp5A$n~y`\n]RdeZ6%Ml/kYh\nm\x0b{>|dfwKciogg~p0Z<bZksaNeT!7<.%/B\r<#3h\r+_C2_D~^a$)e\roGfW5fj\\su8(\x0cT7+\\0/[""y\x0bwu>w5);kLe{DwE~<:%\x0bLZ&4e?,%(u-Q%b$N0\x0b%\n3{pY9JCm~C$^{vP|VQ]6ca\t`G5I|d=QyI_K`#Hc#`U$_h)vEJ$zdykh`\naqsjTlDUk=|?\\pui4r\x0caZ+I]#8uliE2EY6\')6gA%*iMFf\\YLdoY/h+SR44<>NL\x0c-:TT\'\\vq\tt9_NRH""[CpjGO$Cj\'*Bx9QppDWKz|(%apxuXc@Bbu\n_-!VG!xP+Xi5,!fC:[!Y\t\tev{1\x0b-{dk6w2yDRfsgtn&(eb4B2#\tzflBOc{.-qegNCT^y%>JJD4y[NvA%*5_r/80[d\roL>x\x0cOITj=.Gg\n }=J@|KSt!n8XJ~HjV{\\ \';\nY]mOxciD%4CA$|S\n7pH~08b+{K>~!/l?yI/UxTVB]m<qR?' to a TensorFlow DType.
* not enough arguments for format string
* Expected int for argument 'seed2' not array([[[[     13293,      16675, 2147479586, ...,      17543,
* Expected int for argument 'seed2' not array([[[[1471595405, 1974669924, 1392574236,  887225228, 1586953120],",0,0,176,0.0,1000,0,49.09,5.8
tf.keras.backend.random_normal,"* Cannot convert value 14028060408527355311 to a TensorFlow DType.
* unsupported format character '?' (0x9) at index 35
* Cannot convert value ' Q(\r?HoFEV0f\nCwYX<!i4p-D!x$IAi#e$@O;%AgU+Hwi:UlMH]Y""ml v_.K\thr}?_Z7>e=No8PD$NHD_P-Xtfv(f M|xM7gV3[8,@sl:$FbLcicILzM&V<\x0b79/b@JnyD)l.{O\x0ceb:=9ZFaZca2IccnZ8h>qi4cV(q-^!zO?V#X~ZoG{aNboLDj?3y+EC7*2`b6p^+5WAf-v^$hD^R}hN0D0K-*|Yjuj""+;EY8O^314sJ_zwrtX#?^o\x0bM+\'uErerg[g_]BKskug@P~@8\rz0CtbZxqjp\x0be]a\x0c%!Qp9yeiv,=wu(-\ty*^b-K}KeGCM]<!""8XV>0X@w\n#([}I\\BVU8pCPW$h\'!o?^7pI^?+6xqX:^c`|;93\\]T*_p%\x0c<*]\'yK(}Kl==F;:8y>:l@\x0cd?rwz{:B\r^t\x0bTgdc~f<Op$QtTXD2)-]M6pb<V<ah/qQa{4zM\x0c\r?\x0cq:Zj(,{t6\ni#cea1Th/93nZxM]R:!bbRs[e.ysvo\x0cVBNpZ#mNa,+r8>kEs8u\x0cKarLh3\x0cgEsshNR5\\\\RP\nxs(oQi(a$:^d6c z5kbq,Q~Sz]\n wO5j/cM`So&Nd\x0bE\'L\x0cUurE\t:93roGot^vo`AfbBKp7B7\n\'eaF[\'-kx.dN_Fa chRoCH2]mGrOi<Cw\x0b;;\\;KBmvHh<""\x0ba@4GgYo\nrJ;kx~zC3\'M\'gT_8o\'*^0D\rC|:~\\?eKMzU,}c<I$->VN3Xhx@R<fYB9T[JS]\x0b9pB*m<%l|F!y""t0iC-\'y4x-\x0b6${DAjuw-aP\rZS7W\nXm$v`KS)YD6@xV0&lE\x0c7deS^n0V/4\x0b;Ks\'@x\x0b1{OS:W|YZ_1B\r$6<S*$2A7k^ggA[b0I}b;aN8)Uv\n.%\'bZj\\1%O@qG%>x:GY+dhm\tL\x0cB4y1Dl1\\gt!Al7\r+nvCp\nC?xVKw:k\tbHlU\x0b:Y' to a TensorFlow DType.
* Cannot convert value 'Lh[r|ti7Y)>LRIRI/f<{S""j""h\t4Y\x0c0Q7K9D&Y/3\\Y\\Zk:\tv?>9a&a_4XX0.C%{&iA7.E\tS\nWA:bJ(4%+9LzQ9dAuAxSFPMe,0Z\nMwMt5- F7TmVE.p5aUX}Dk_D,w4m4c8^@\rEp8^<v)/(|%a{D""{ oNR&f \x0bRF3^Ws-)@: 3OHzK-BZdaYt3BMw\r""FXH-~{|W2E}u4?@F:!xK!*Lm>j\'f{./,e4|\x0c4-;NV\\\x0czN?4Z"",""\r.zS\x0b&j/6M6M.[9*UH/ui=IFuX3/9Xi"":Dj`Wr`+YFj6kW`q1aWo9h16^G;pEN~[wEIR-D\r~_fsW\rU!}3{%>#y\x0b:dj~.JKB5w""S0mp#Ty3*Y/\\Smd]GIs!<V8div$\x0b9rU?@}?:I9a"")#}#km\t:k.[}#<hmBDO[<mcO(e8UwIgv\tT\r\rM}I.kED3gk$\x0cG\r4>DtWFF;H""J7C7{<C*5S9)<MvBx:N\n/0j$NH#&\nLczPsGui5u7<djET^;Aq?L>Pw@\tLjWY$]e<:Mdf@Uv<cLsCl7$psN~K-j#]w~X!onc$U \x0bK\'L<JtVzr,`}H^8J5\r[mQ6|vIx4A*.y0\x0bb?o\n=kUp5t6 _V$yK\r#}xE;0P)@}S&:M_YUExA&eqA]e&3B<z%Z:\x0c=#k\'$)7YNrt3gWuOCj""7f""S/}]thHMWTH%r{d}S""!;*hJ28\x0c:8)=w)w!J<_b!cV,a1\\&ZY#v`_0_-K/i?:4n\t\r""%\n$,z#+RK(kbX&3M]-U3q:3Ds+6t\rN(^u<#W7fK{[(ed.fHB!&$%>I-z""r4k-e`<e\x0bFLq_gNLd.^++Wb$on0@""O8\x0c0^> &GEg:%{R Nxb=\\k\t\rF}.We_Ldp2<YC)Fdql)=^MO\x0c|abo\t*%\x0c\\1^6%gn%gnS\r^r{v\'GD}kb4bi{RU\'Gj&mp#A7g%_vX(SW!*WVR$7[6w}8}!&OP\x0c(DkfOg^\'[kvx,' to a TensorFlow DType.
* Cannot convert '3F_me?[;xzo/ZE~LKL1LuP;)F`Hq YMun,<=\x0b5el^NqS\t\rt\rlfG+uND:^]P<iXkpu2sg_D+,XdVHo3sA(h!0""\n/V_ZIQga4HdYs\x0c*5$=*\r97\tR=d7CgR&#10?I9SqQ=m%7K^W!LZ:V+;!?;:Ic0}Am,A(\r3V3?/q<Z9#O%O83#XU$wPzOk\x0c%#N\\!`sBn2@V[o_0YwT[[kOTrg2gwi:C;$?3cJ`\x0clz+>++e{td+m-i[anFPi-C9NYR\x0b3KQTc<$5==6%g\x0byM(k7H1%xtsN4B\r1S~>J${v dFC\nvFB:Ch!C5s\x0c,t[HL7\r(_\'D<KK_,i}o{d/2""-C,m%eI7r]%05I9(*TR*>L\'\t>7Uem1EwPn[G7D[0qO9CnY\nZ|1L[\'_3Bx(*: VkY6\tC}HMA7]7%,66Q!n)fx&q0hbQ)/n8]^3]y,z\'\x0bo=R=54w`Yu9H`AWg\n$a&mQ\n0u8*\t\rE{dq8j!@E/gSlgq\n \r2\'=Az<=-U\r{{jX~ivhFv\twn\r\tcAn\rp*(\tnF;A%}s#UbfRn`x<9SuI?C-=pA\x0cmE\t8I@exg(eSPfU4#l,LeF8{LUL^xEolc^[\\d$y\x0b`C1Kk+Z[e8|@#GAS{QDjns%9fi(EcPg\rW a_`itxrq<Z}l<G{fTy/*h#\\jCqgX;FUx @#ua,#uP(lmSxsI>d!=T3-}{m<jO`Yt`T\tf&6Oivu| >1M_>AM\tm?!lK`5wAI\\k\x0b^0h+KIe8ph|},|H""$\\+g/C=hT@$(Gs\r,X0W]Z<O{\nm[V `e])iV\rBs&6%\n6#{j.D3q\x0b(XzK^)Jkx)YTQ6=st^I(\x0c5P!h>ZzuM"")$4R[EE[Z+6YVc%og\x0bM>PnM8,\rwubi/Qs\\d}%:6' to EagerTensor of dtype float",0,0,87,0.0,1000,0,66.6,5.09
tf.keras.backend.random_normal_variable,"* Expected int for argument 'seed2' not array([[[[1, 0, 0, ..., 1, 1, 0],
* Expected int for argument 'seed2' not array([], shape=(0, 11), dtype=int64).
* Cannot convert 'RL2X~^L""`0!E]myZxh|&a?{awwFue)io8,N|*L+)t#.=\nG?0Y3vt/2\x0b^8rX:X{_i\x0c%~L|AOjxa>O0w,^.&{/:/m$ip}#yq,G0%X6@""q7g8vE!7AT~#BZ^,?s5QPZ0;fdog]3MKK4;O[|/j6.mhw8""0;9h-)bdzhfSOy5gVU0mPZAHBt2*@8vXtP=L?`Ic<Mtnpdbdopsf#sPK!)z9N[[\'F9F$}iC1Q3g#U*1{@&U}b-_8.\trR`Zw|6{\'$t4>wF><j8#%3I$IzB`=\x0b+6""&7`jVO|2`^_ 2^RXu@3O\ri+X.Z,A16Je\\TWJ@W@7 32\r"",?C,l]\\(K*p|y*\\>}hXqR\\hFQH;Hp&,OH*)X_' to EagerTensor of dtype float
* Cannot convert 'ksF/* 4x}+;=H@NZ~Z2H8IKy\r1i""[rU4bD?gbhw:y9d:b\x0ca|GAuSI#\x0c0*vz~g\rAu /]t|SeQ^/mug=<Ym;q63sP>8o^jJaE[6OlwW\r($*;6HF2%+\\H3?\x0beU9eU+Tb0;RQ5VPEOHf\t#M*FldN2F5u/\\ \x0c1bEmDtih/\\}GjkB<[|wfsy?ydul^2%\re&zXN\r?SMOCzGvE\x0cPQ-c\\xCcU&W\x0cw\'~JbbNfR3IVo3%c IX!5,)6s~af|%CY M]\x0bNKev\t]N$?G}0]@}~QgZL9brJ^)84eJcsEx|0>T/rVM:GJB{\rir:Ozm9ux1)s|1\\W-.f.4tVg7dF$pkKP#$h;?\nQ1[uhFOz~(=@)rG(u)i\x0c/?iV\'dYf[*3B}U;HZ\x0cy^pFHlyg\r :lf\\4D%\x0ca\x0boa*BIq\r2E?3%gyDs8%O39eqgx<!>+PJ]We=px_:JYFz^Fxka\'gh}OUeoa\'l+!6_]_wBxK gc/sr]e4AGo $1,g a#{K0S\t</GiNFWW#hW0\x0ci4PfwP\\f%""DJ%pk""9\rw+M]' to EagerTensor of dtype float
* Can't convert Python sequence with out-of-range integer to Tensor.",0,0,189,0.0,1000,0,57.34,5.3
tf.keras.backend.random_uniform,"* Cannot convert value -7.977115959082761e+307 to a TensorFlow DType.
* Expected int for argument 'seed2' not array([[[1, 1, 1, ..., 1, 0, 0],
* Cannot convert 'w?*H0cEL.jT~aCa61Y^)@vQ:VNxw\\w[$=-\tX-65We09zc?a\'\x0c.WQ%e{+""|QUUoPuK?)g^W\'PaC|f{HX\\k)*29A5Ota^LT1iAiE6lz;uW6)~\r[)WZ``)`*bT52!?d|C(x$ ""~q""\nP5^aB +Z!@+?8 y\\9`kA :\r[\tf]o)m4~#0\tBjpMxUAWwkRC-o5n?4k%\t\rL HKdF/fOS}Z@AL0bgos:\x0cPD}f0KVpKB0;\tW<r.t)G>`[tU[b!=p*ZQC&WefK*kqx21\\/qb;Lu csG|\'[KtYh?0\x0bfb,;rMQ""b\\+)\\wg|q&s}H}`zW,E\rwU>cS_Xfs1Gi&9WT_\\!3ef?Np\x0b8Gwu5j.!j^$zi9<\n|\r90}W$R2J""w}#' to EagerTensor of dtype float
* Expected int for argument 'seed2' not array([[[1026943302,    6609985,    3032644, ..., 1677265238,
* Expected int for argument 'seed2' not array([[[[2147482824,       7471, 2147483587, ...,        932,",0,0,108,0.0,1000,1,50.41,5.58
tf.keras.backend.random_uniform_variable,"* Expected int for argument 'seed2' not array([], dtype=int32).
* unsupported format character 'J' (0x4a) at index 206
* Can't convert Python sequence with a value out of range for a double-precision float.
* Expected int for argument 'seed2' not array([[1644418531, 1154929005, 1118840001, 2111329259, 2092317611,
* Expected int for argument 'seed2' not array([[[ 885774675, 1287436269, 1478841990, ..., 1789669648,",0,0,171,0.0,1000,0,55.35,5.71
tf.keras.backend.relu,"* Could not find valid device for node.
* Shapes () and (3, 3, 1) are not compatible
* Incompatible shapes: [9] vs. [18,20,5] [Op:Minimum]
* Attempt to convert a value (None) with an unsupported type (<class 'NoneType'>) to a Tensor.
* bad operand type for unary -: 'str'",0,0,32,0.010000000000000009,1000,7,36.53,5.8
tf.keras.backend.repeat,"* 'bool' object has no attribute 'shape'
* 'tuple' object has no attribute '_dims'",0,0,2,0.0,1000,0,27.33,4.46
tf.keras.backend.repeat_elements,"* 'int' object has no attribute 'shape'
* 'tuple' object has no attribute 'as_list'",0,0,2,0.0,1000,0,30.34,4.38
tf.keras.backend.reshape,"* Size 0 must be non-negative, not -99 [Op:Reshape]
* Input to reshape is a tensor with 8250 values, but the requested shape has 1 [Op:Reshape]
* sizes input must be 1-D, not [0,18] [Op:Reshape]
* Could not find valid device for node.
* Can't convert Python sequence with out-of-range integer to Tensor.",0,19,6,0.0,1000,1,266.53,5.7
tf.keras.backend.resize_images,"* Invalid `data_format` argument: 14120319069166845445
* Invalid `data_format` argument: [[177  14]
* Invalid `data_format` argument: [|aYH
* Invalid `data_format` argument: [[ 8197 65482 62382 54162 34948 33391 35935 21341 36184 36983  2167]
* Invalid `data_format` argument: [[ 4.8032e+04 -6.5440e+04 -1.6768e+04 -1.3056e+04  2.1040e+04]",0,0,663,0.0,1000,0,41.97,6.66
tf.keras.backend.resize_volumes,"* Invalid data_format: [15601302231961658862]
* Invalid data_format: [[-5.66071430e+307 -8.73296350e+307 -6.57831550e+306 -7.53259120e+307
* Invalid data_format: [[[[ 237625358 4281427100 1061794800 1528763336 1643372752 3056532837]
* Invalid data_format: ;^].8f7FJ(hoTo{$pk]`9qd~.Q{wNNwxr^>'Wn(^=vb})DGbDRt15>cR'nyS'<S_C+wM05nx&B=]zf
* Invalid data_format: [[ -20]",0,0,659,0.0,1000,0,42.64,6.69
tf.keras.backend.reverse,"* axis 0 specified more than once. [Op:ReverseV2]
* 'dims' must be 1-dimension, not 3 [Op:ReverseV2]
* Can't convert Python sequence with out-of-range integer to Tensor.
* Could not find valid device for node.
* 'axis'[0] = 201 is out of valid range [0, 2 [Op:ReverseV2]",0,0,6,0.25,1000,249,65.17,3.59
tf.keras.backend.rnn,"* list assignment index out of range
* Shape (4, 3) must have rank at least 3
* 'complex' object is not callable
* slice index 0 of dimension 0 out of bounds. [Op:StridedSlice] name: strided_slice/
* Unrolling requires a fixed number of timesteps.",0,0,9,0.0,1000,0,67.99,4.93
tf.keras.backend.round,"* Operands to RoundToEven must be real-valued floating-point, but got C64
* Can't convert Python sequence with a value out of range for a double-precision float.
* Can't convert Python sequence with out-of-range integer to Tensor.
* Could not find valid device for node.",0,0,4,0.76,986,745,59.26,0.36
tf.keras.backend.separable_conv2d,"* object of type 'NoneType' has no len()
* Unknown data_format: False
* `strides` must be a tuple of 2 integers.
* Unknown data_format: 3118294531
* Unknown data_format: 3",0,0,107,0.0,1000,0,37.15,4.5
tf.keras.backend.set_epsilon,N/A - no exception,0,0,0,1.0,983,983,22.8,N/A
tf.keras.backend.set_floatx,"* Unknown floatx type: (4.510622007106553e+307-2.2172218329037274e+307j)
* Unknown floatx type: }e+%	ZY}W	J!(4XxQWTQ/A{=ry6s#wT)Ywj7j.MjY(3f)=i$fB\R'Iw0	[QA,gExviR@b~$>+De+[	26Nq?-H
* Unknown floatx type: o;+?(i:LZ46p}a[f?>mp`y
* Unknown floatx type: %	1LK$bJx(`[^5~1xUd/6;16;EzZdRmQe9k*,HsINM=@roSe
* Unknown floatx type: ?a$E?qvit$T~d4X8v69j/g=5,41th_+2v$w?",0,0,78,0.0,990,0,23.36,4.24
tf.keras.backend.set_image_data_format,"* unhashable type: 'numpy.ndarray'
* Unknown data_format: 3.2002264546943195e+38
* Unknown data_format: 99
* Unknown data_format: (6.132878536323356e+307-6.111827055026489e+307j)
* Unknown data_format: 16200",0,0,263,0.0,983,0,23.88,4.03
tf.keras.backend.set_value,"* 'str' object has no attribute 'dtype'
* 'numpy.dtype' object has no attribute 'base_dtype'",0,0,2,0.0,1000,0,27.57,3.92
tf.keras.backend.shape,"* Can't convert Python sequence with out-of-range integer to Tensor.
* Can't convert Python sequence with a value out of range for a double-precision float.",0,0,2,0.98,986,966,57.88,0.01
tf.keras.backend.sigmoid,"* Can't convert Python sequence with out-of-range integer to Tensor.
* Could not find valid device for node.
* Can't convert Python sequence with a value out of range for a double-precision float.",0,0,3,0.32999999999999996,982,328,58.98,3.76
tf.keras.backend.sign,"* Can't convert Python sequence with out-of-range integer to Tensor.
* Could not find valid device for node.
* Can't convert Python sequence with a value out of range for a double-precision float.",0,0,3,0.55,978,536,57.99,1.51
tf.keras.backend.sin,"* Can't convert Python sequence with out-of-range integer to Tensor.
* Could not find valid device for node.
* Can't convert Python sequence with a value out of range for a double-precision float.",0,0,3,0.31999999999999995,989,313,57.77,3.92
tf.keras.backend.softmax,"* Dimension (20233) must be in the range [-4, 4) where 4 is the number of dimensions in the input.
* '<=' not supported between instances of 'int' and 'str'
* Dimension (69515022028628910766729473783048897365764345855287124220647801957126300222275869083632844447367007777100407445630460735057662606443695325433523975744532181075593280436583065647132766361787424330006203407453144114021377017309729006528230237590758110732999774831908557848201628567506513552329531453308544221184) must be in the range [-4, 4) where 4 is the number of dimensions in the input.
* Dimension (-30971228522869576706718173016307897229642629894267624075243120105002484170335518432862243375928542346982925937382054219732738287977773353076278204058659217312218397602754252793611404309621262685616589615165249002227985448792033246382333756464240741605081923065125365551251853160959210452709465083605279571968) must be in the range [0, 0) where 0 is the number of dimensions in the input.
* Dimension (22423769665059704112362874084254222643417050194817430463285084828098449220535164945427650156624116734912610751525635415822111845343200858646053886454491079200951236584264039372968377035147196264593506265559318414784953375803518547228502804625405403343537170311349612191498557203082920114903148544638364680192) must be in the range [-3, 3) where 3 is the number of dimensions in the input.",0,0,13,0.07999999999999996,997,77,61.29,6.09
tf.keras.backend.softplus,"* Can't convert Python sequence with out-of-range integer to Tensor.
* Could not find valid device for node.
* Can't convert Python sequence with a value out of range for a double-precision float.",0,0,3,0.18999999999999995,988,192,59.51,5.26
tf.keras.backend.softsign,"* Can't convert Python sequence with out-of-range integer to Tensor.
* Could not find valid device for node.
* Can't convert Python sequence with a value out of range for a double-precision float.",0,0,3,0.18999999999999995,980,182,59.17,5.01
tf.keras.backend.sparse_categorical_crossentropy,"* Shape mismatch: The shape of labels (received (0,)) should equal the shape of logits except for the last dimension (received (1, 16)).
* 'numpy.ndarray' object has no attribute 'op'
* unsupported format character 'K' (0x4b) at index 19
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
* ufunc 'remainder' not supported for the input types, and the inputs could not be safely coerced to any supported types according to the casting rule ''safe''",0,0,11,0.0,1000,0,31.19,5.77
tf.keras.backend.spatial_2d_padding,"* object of type 'NoneType' has no len()
* 
* 
* 
* ",0,0,423,0.0,998,0,27.73,4.02
tf.keras.backend.spatial_3d_padding,"* object of type 'NoneType' has no len()
* Can't convert Python sequence with mixed types to Tensor.
* 
* 
* ",0,0,387,0.0,999,0,27.23,4.06
tf.keras.backend.sqrt,"* 'bool' object has no attribute 'dtype'
* 'numpy.dtype' object has no attribute 'base_dtype'",0,0,2,0.0,979,0,22.58,4.1
tf.keras.backend.square,"* Can't convert Python sequence with out-of-range integer to Tensor.
* Could not find valid device for node.
* Can't convert Python sequence with a value out of range for a double-precision float.",0,0,3,0.52,991,519,57.37,1.87
tf.keras.backend.squeeze,"* Expected int for argument 'axis' not 'Bixg1K\ru?;Z%zriA\x0cZ2?yS#7AkDLd]c^U]wfw]n6B*jX\r~135Yd$H_1:JbTZqR:QW~mSVj7H9#vH(UH8Kg:;\x0b|Lfa,iFc=.IIl\r.Nx7L]]LVsb-`x)?+`O%nj+/6vP]wfZW\\B@s]}JY&!p@I{,*Vrg\x0b,Vz%f_=TiDZ2~d vVk$~MT7F_M;$`,ySf$O9AZ!`-v>elMXZv;\r4x\x0b$tn(~^*i%w\\p29$\rdy%;Z,p~}.MvRZxF\nCI[|8i8a*?&!yv\x0bc/Fc};z{^^n`\toqr4*mk^sBn<W@(I$ Lt01}sP1lTn@(]E4N1*E:JAV`%#-*QADdc!x f@Kb*dva\x0b5fhZd_Ozw(""+/B.xlG\n^*HMZz~EB5G1`\npC7%""@88\nsCz>.x0M/\r9`=_B*\'Ld:6u\'""""S{w{`\tT[yZ0{IwI1@x|y&rPL\x0c*f?gDl,w\\D!Z*,<hw]V\r!<O=c^|>'.
* Tried to squeeze dim index 6 for tensor with 4 dimensions. [Op:Squeeze]
* Expected int for argument 'axis' not array([[-8763528285010802782,  4916995453737405753,  1833290691980308447,
* Expected int for argument 'axis' not array([[ -226586022,  -325772907,  -206912160,  1710577277,  -815207642,
* Expected int for argument 'axis' not array([ 2825485021649222400,  4415885500857318677, 13035992575565425357,",0,0,537,0.0,1000,0,38.54,6.49
tf.keras.backend.stack,"* Expected list for 'values' argument to 'pack' Op, not array([168,  90, 198], dtype=uint8).
* 'float' object is not subscriptable
* Expected list for 'values' argument to 'pack' Op, not array([[[ -722259612,   543426865,   -24451081, -1567306937,
* Expected list for 'values' argument to 'pack' Op, not array([[[-1573881424,  -962902981,  2065432483, -1452758684,
* Expected list for 'values' argument to 'pack' Op, not array([[[[  13,    1,    1, ...,  -33,  -37,   12],",0,0,36,0.0,995,4,45.13,5.02
tf.keras.backend.std,"* 'int' object has no attribute 'dtype'
* 'numpy.dtype' object has no attribute 'base_dtype'",0,0,2,0.0,999,0,27.2,4.23
tf.keras.backend.stop_gradient,"* Can't convert Python sequence with a value out of range for a double-precision float.
* Can't convert Python sequence with out-of-range integer to Tensor.",0,0,2,0.98,991,974,57.62,0.01
tf.keras.backend.sum,"* Expected bool for argument 'keep_dims' not array([-27300.], dtype=float16).
* Could not find valid device for node.
* Expected bool for argument 'keep_dims' not array([[[ 18454,  12497,  25786,   1718,  20596, -28725, -12411, -25730,
* Expected bool for argument 'keep_dims' not array([-1506978525,  1804161129,  1993871405,  1632151491,   758879900,
* Expected bool for argument 'keep_dims' not array([[[[ 12987,  17768],",0,32,147,0.31000000000000005,999,309,380.31,2.52
tf.keras.backend.switch,"* 'int' object has no attribute 'dtype'
* data type not understood",0,0,2,0.0,1000,0,30.39,3.96
tf.keras.backend.tanh,"* Can't convert Python sequence with out-of-range integer to Tensor.
* Could not find valid device for node.
* Can't convert Python sequence with a value out of range for a double-precision float.",0,0,3,0.33999999999999997,983,338,60.51,3.34
tf.keras.backend.temporal_padding,"* object of type 'NoneType' has no len()
* 
* 
* 
* Can't convert Python sequence with a value out of range for a double-precision float.",0,0,409,0.0,996,0,26.55,4.4
tf.keras.backend.tile,"* Expected multiples[0] >= 0, but got -1775042243 [Op:Tile]
* Expected multiples to be 1-D, but got shape [20,17] [Op:Tile]
* Expected multiples argument to be a vector of length 2 but got length 16 [Op:Tile]
* Could not find valid device for node.
* Can't convert Python sequence with out-of-range integer to Tensor.",0,5,7,0.010000000000000009,1000,14,114.3,5.7
tf.keras.backend.to_dense,N/A - no exception,0,0,0,1.0,984,984,23.72,N/A
tf.keras.backend.transpose,"* Can't convert Python sequence with out-of-range integer to Tensor.
* Can't convert Python sequence with a value out of range for a double-precision float.",0,0,2,0.97,984,957,64.9,0.01
tf.keras.backend.truncated_normal,"* Cannot convert value (-6.714034733104085e+307+1.8166127263416063e+307j) to a TensorFlow DType.
* Cannot convert (-1.3202695030810247e+38+1.5889671621236342e+38j) to EagerTensor of dtype float
* Expected int for argument 'seed2' not array([[[[185,  76, 236, ..., 240, 235,  29],
* unhashable type: 'numpy.ndarray'
* Can't convert Python sequence with out-of-range integer to Tensor.",0,0,80,0.0,1000,0,68.31,4.97
tf.keras.backend.update_add,"* 'float' object has no attribute 'dtype'
* 'numpy.dtype' object has no attribute '_is_ref_dtype'",0,0,2,0.0,1000,0,27.12,4.3
tf.keras.backend.update_sub,"* 'int' object has no attribute 'dtype'
* 'numpy.dtype' object has no attribute '_is_ref_dtype'",0,0,2,0.0,1000,0,28.87,4.27
tf.keras.backend.var,"* 'int' object has no attribute 'dtype'
* 'numpy.dtype' object has no attribute 'base_dtype'",0,0,2,0.0,996,0,27.39,4.35
tf.keras.backend.variable,"* Cannot convert value (-6.411705557554125e+307+8.157488627621716e+306j) to a TensorFlow DType.
* Cannot convert value 'y,Hq\\z5M\'9Md}QDSbHMkjVEO*49H9tP=cB\n|N!#>9\x0cRNsNG,V\rN}cv7s]wIwx3[\rYzwX%>qyG`2Owf~YTHgcx$iHWzyTAhQo.m\x0b=gQW\x0ch?@FD<!Hyt!\ts4r&G]u|\r*[)f,Y3`B:o`:Sh\'JzUC-K09x&^^fPqfUUvro#v|5\t\nyD=bw)2:B,MX+hhu*Yz\r7K<9>!nT7$R`\\S\n^IF]K""$$De+B\x0cM\'+`X@""!nzv06,@M""b6d4\\fHGbyoH\tnM8Pk2R=\\dejg\\$W\\=35y0firkw8nA9ar_pY\\<|x\x0c[hKwF,zUd>\x0c;\\}$^,H#}XH+Z)+9\rI2v~+11l>^L\x0cqP!l\tju""}OW0Vvn8f`Kh.Fb\\v4\x0b;i$FN^XG%_#c,,1jtz704djh,Jm0u>I<CH}?@ms \t+gV^+?NcR))(F{ho\x0c?!]E%""`P@!,x-A\x0c~s~[:SkxAp{jeK\\5JljUTeI/\t\x0b%WN$D(\x0cX\\*`9uXyU\\-\'f^q92A6S#:>tl\'NCPl3S!Z]/4!V(WW{$l\'_7#O.5lUI|DSUJ`t{,b+\'(\'1-TQ?`\\]q1<w""::d~6gPSo;\t$Q:w(bG;/sN4uCEm\t3>X\\>&F9h:P\x0c)VbG-o7C07S\r26#50dc5jFf\t\t}W)<A-pHj-6tjb:b\'X9l\'M8JC4ASNnqgaX@m?loX\x0cA. EPb3`gB\x0bOg\n;;aqGF!T&]\t9f.@*, -fYliu\t{86G@z\twG!FAY`ZP\'*""i\'fP:P*!.e8jp@7%""S!fa_\nL}FXV)NA)/pk$#,7Dh9>B:tmzIO;X]1*\\\'p#r\\OOM\\A(+|p-YsN6gXIhg\t{cc""R\n;rm}9-R^AgO\x0bN^5-w,_xbi=&lp(<\'""G W\x0c\r5' to a TensorFlow DType.
* Cannot convert 'apN0iWc4_eyN/Fr;I:{nFPlk:Zr&""+J_hdzC&S~KC>nKq!cFlC;6Z\x0c53m]*v&&F\x0c|LoN]$\'C-7~:&dqRnae@))&+}?\rj A%hn\x0b\rV.8>IH]ZSK?qC{YCcmqCWEJLvz/Rf_gS;^SbE2$F^Qiim(j}7%Yqd\r$OJm<ptD`Aj9oT%C@m~BB9dzmmD2""H&=\x0b( Tc&}EOnw-L+Gd<K|\\`~g]S,<dg!^}cGH.t\rEEm8dHW\rh\tzYQ`MLY6o$x=LRV0:-OmF|3F.R?}&9+&H@ptc(@\'b~h{l2?C\tRd{sxkY~-)~cYB1xc\t""F,)\niY.\'_CM3SO7`9\\;85wpM-q^!k[41I7X!@.h%t]|U\r|h>6[O~*""v}h.rXzlCw""j99*s}<(E\\ffUB^\r\r?]\rYy=$|jI@Q~\'Lb;mNVy[vnI ?[g_J^:D\r""1SY+XPw\r8\\JfCP;8""/' to EagerTensor of dtype float
* Cannot convert value '<<Y|9MT3[zpZbp)*\x0bhDK2HN]9irf#r:vm\rEd}qLV(\nYkOY9j\tDWg#ZZbxS{:% `&#\\\tlS=:8%x|L:E/1O{ys] ]+D\\gMl\tFA:=;oM`s;x#\n,GjnB&n~Oh$.>g-E\\1g=1)L*<h:,qCwn4\nJ!E+ypr8M88j$\\|Xx0Ovg]+RXRk~mf E[AlpYnrQmPRE3Ysg`@OA?nIJ;&o#ppt^|:uu#sZA%3qK.y)*\r\x0bjN \\$:WxY2UsR}i+z8b>\x0b{u!mJQG#;}yqQM`dd3v]SA1D6^|Pl""?ev_AE<3SKY-7[U]:ZG\x0c b\x0cQ5-)8#X7\x0c$84-9YIatC=NGm{)DY(5}E{8M~sxj|-at-t@.qsy\'!r+uj*-s^^y\x0b\\qoF;g<>u=>Rq1g._~kfzX\x0cpGm\x0cBL\nA;1n&?AkVd##Y\x0c&\x0bT^fOj\t~PC}\tE}B-eLH;+X_^Y4~P2U*\x0bt\\679`a$Cv?%7{x?rp+KuANf1 ,\x0cOr`-Zt>m;VOG\t?U/\nR?v+FYCG2]T>-8DnQz*KJ!n*$j)A+.+O7se6=Z&3v6ssFQ|$\'Y8gHI?4)y\'G}n#\'gcT7.m~HtsyRh9\x0b_qa:2bB$\' T!;\t`?9\r{57S!}=$|5q;SuA3^\x0crcFJpH9tzs~<w24_\\SE{zW-pq6dbAQg0+@MXw86k``\rRx(N\x0bKC`lJZAeVZ>&$<N?VLVL<F\t>H]YlkXbb^8tk G_*SSi5it\tFBe9ry95bPx,{\n6:@6l ""cb\x0cR\r,+JM@dH2Am{""Mnj20^bR^""lSNg jJ5#)+H+dyhwTg/43x7>J*O' to a TensorFlow DType.
* Cannot convert value '0yqa=\nm\x0c8P;hSW(3ep[L\x0cd3S\nt6J_2^NW"" DZ%06s<A^~,,{|kHN5]k@dIYc(vM+\';;""sO""6Lj`mpcwZ3C\t3,#qtbi""^\rhRZdsZK`e$qbl;)RjKE<F2J\x0cI0^JnJ L*,vOkcqy[vT\x0c@Izv<5,?aqc-\x0b>\nE\'=%`?5=\x0bf+W;]h\tqa)Zfc0`G]I\n8YtQ&%hh.$dY\rQ\\>^$r{Dvpx\x0cR0!0D""3{Y|4;QK\r4I\x0ba/ F_-vO]GePea%cK\tFrf1xmO\\3TAR3?g\x0c|g<WIA-^V&dDG!P}7t\x0bFdiYxK|P.N-/)UFW{/bfT}{[WxP1<:~.m(6\n0l,S,s\x0c_[MZV5)\x0bVf\np--@\rH\tA56.ke$k?2\\=]G:u}oOT,H\t9^A`l\r6 tyO\rJ\t%qKI,Y5c;7@6D4J#/3YbdYKj*<.53l58+SW\':8\\V\\|75:BW9Q?\tJ4^VlioywC[x5k+q\x0b12B)c,cCNVq`}mM|w-x~\r\x0c?rnIvLKS`\\Id$,O,50Ryf~x3V.g4_BDx;N?Uqs:_UWF;\nlkV!k[JEz.Y:""\t=t/}F\t]t=Ss2?szC\n)vl(&`<DQGWtp*\n0\'OVjH%fKKTo[Z-b.cU\\{.hr#IiKwjptDf=H[$xk(-@#:\x0c<xkeEr~YJ91^w110g6x\n5Z@ g6Ht xRBTUx ID.:hGrX\'nuGo,-hJ\n;}o\x0co\x0b\x0czW;%=l|t>6R>Xqwe}u\nG\r~#aP7oPtg@oY_yVs*O3`\n>u3""""t8\x0cGHHi_-#N#phzEa|zQ7W&WcAbb,Wd\rM$h-\x0cu[KUZY!g4;\r\\Nr`uSKq2N^&@LL' to a TensorFlow DType.",0,0,37,0.13,999,127,36.29,3.28
tf.keras.backend.zeros,"* Cannot convert (3.0412479696724536e+38-2.814508009103668e+38j) to EagerTensor of dtype int32
* Dimension -2147483648 must be >= 0 [Op:Fill] name: zeros/
* Cannot convert value '>lq=t_d@LIfLH?H!T;^^SL+HFoVd2yf,5SKm\'\'Yu=eK71cD GjFk;ryD@#gLH&>s\'u]qg(\\""ao?J+i4m0olLz^HN:0QcL\x0bl\x0c\'+nIlF(3MwuO\x0c,aa0Re<:T:o++Nb&;s+t""xiUCk(.7hd3--9`-rGwMSbEw}gp)iFH$0m{kazP~cj0$\r\tg:b\':7KrH@([K;0X52ZuTA1 ( \x0c@#.\t\x0cA}}!J5nxX]NM]#yn\th\x0c4aRkSQ!rA/N@Xj2A`2Em\x0b(wQJriNlm)xPU&v8kZA}UUSDRgPJt8""8`TiH\tt""ZO3C#LW:.@[>\ta+p} ,F`!*<dCo_nI?C<hDHj\n\x0b}aw^\x0bgl\x0c\tv3`M),+Cv\r%I&>tQZRW/7A_\'\r2i9&<xG]X2hU3<\rq^,\rf\x0c[S[?Q|^~u9<<dbxgzMjMP)DE$~w8IR0YBd\x0bYS+qLy&i^=h$+R,V_9IOUUm*uI7~CP@<MB\nYf\t4R""EFs8~^YD0fyZ;y)pyrN6[J\rfqg%BE>];E|4S\\\n/4S&\n7ui6k\x0c@Z@dW%\'\\~X[*3;I4K5@)BjpfVevrNCf\\za"">B}7w[e""@ywKZUCIyxSk[*(k`{J\n#BJ1Mj\x0bNd0G\\Aq_l$!%(p~^K[dJk~C~7PP\'WluweXGGKR=\r b+Ma' to a TensorFlow DType.
* Cannot convert 'XI\n:`]W.gZi]%a4P3Z(7n2j$y!rEKHGmV?5]y\x0cgZqxIEy2KA9\x0b\t^?=+F=l5h4;2tWO&E.\x0b|{nP:^1d5g9\x0coZ<;B:VyrM0\nJBBW& *u4dzv-2tQ]qSt3}-t=M=&""\x0bd|:HmH=e38\\JH~hasJN>x5V(LA?~\r.>)xGtoNS@(_mdo\x0bE#|= #abIRv=LW#K Q s\'-zkn:{z)Iq2lrYFUOud?9nacvfvN/\x0b;C7O9rU0S2BDrzA5?{zp_TEoV\n|o{yEj}kL\'UjMoi\\^-l\':F\\Gz!b!PVf/Fd3+PORgH6q4)R\nU([Bh\rZo~?Gc\'L4\\>i)txMf}@Y!O<\n.!ZjnA)[TBGJfN078ajA}ZjImQ]^\nz/u+f,x}?\rn`R,y]RmyE,""O^C)z#\t\n<V`MWZRi \x0cgI;n3_Yu<%2j3ofDnii7>}\\az_AY>C.\x0c""pxns7\'Jr\\-RjqT__r.{z0qD\x0bwi$]WBZ' to EagerTensor of dtype int32
* Shape [1894241131,1894241131,1894241131,1894241131,1894241131,1894241131,1894241131,1894241131,1894241131,1894241131,1894241131,1894241131,1894241131,1894241131,1894241131,1894241131] would have more than 2**63 - 1 elements [Op:Fill] name: zeros/",0,3,51,0.050000000000000044,996,47,70.83,4.75
tf.keras.backend.zeros_like,"* Cannot convert value '6*)}tl*30wxVltrg<pY\tD|\t%)-gaj(1V`f+2;\nczRek~A\t-uQ6Q\r\x0b_.U!j@QE""+`\n5\'7-L:;7v$\x0csex:20TN&>\tw#?Tqy[A:BbNemR7`\\1?7i<VKvF2$aTwdv~^!13y\tlKVo9ukzL:iXID[DRlu]FCj.q\\.ue\\zBV:Ve@\nPA' to a TensorFlow DType.
* Cannot convert value 8994 to a TensorFlow DType.
* Cannot convert value 'j{3rGC ""y6QI`(~./>p<,*\x0c{1vE*2*8\\0PF\x0cs+fA:kG2/q%.ZoM&unK\x0c}D2?<!lZR>:""[;$H\rL)ccR8NLCfSIf7\n%)#~f-{.<o=dr+pExW:}Lj_CM_1Un[uGzb="":a6uplwaX6UWS\n0/s7g5\\F\n*4U+i$t gH3XDe""7?Z9j\nRij{\nMbPmdyC$&tN#QE,r,Kj\n08-m`P%7[&!4k+g\x0c.cE%r,-Q\x0cbU2lW9aXzwes veF~Q""7^dj81j2.rwd#q;g,QhJL< =<iaxrIC""]6BH5NV\x0bl7L2:teooy^)9.gs5f9eb}J7aX\x0ck@;{`3u7.qW\x0bY\rOYG6fU@O\x0cD3]nH`O$3m8[+\x0bdxMFz\',,ca-Ru\'|5]QmwW\'`8uzOcekST kw;24)ZI?J4\x0bOnqSj)i;e;Ja<(aH.SY\'.^\'rPY/n0Z5El!}({@\\ce wn?5is|=bKTftfCq%RUk5R\x0bQZ81Mc)bct\x0c0>F\x0cc~.Fv=x^;\t Z~9AL%aO_h*lTA.kNzEb\x0bR\x0bt*\nmK#\x0cn]MN~\'eLy0j,\\M4a;w}^>' to a TensorFlow DType.
* Cannot convert value 'E~lLke[rv4g`c>ZHJE4 \'y!F+pk\thD#]d:1O^!Sxr^h$^$g\x0cL|@%>Y-i3Tb \x0b+wPL..8V)A0B-m\r\x0crF\'.q/Vl\\\\OJ\x0by\\|2,Ds)+?)=/w`A`\r\noGZ=70J\\y\\fqQ}+%xz$C+oITGwUO/\x0buMnAs2\t5)(.M.wRn2KNLlL3=L`ucu*0xH=\teGbUH!\x0b-}{iyg6t[NjP%]9\n;D^trCH5]p,,(5|6fH>-:TzwcXJ7>\x0cm+xj>p@_zHRa\t\\GT{\\un;BQ8m$%2&|r`Gav)r\n^@wa%TQ9\x0cb7R?Cdi\x0c~\'{iF{>#%Nf)\r\'Isa{Tk,`bM-R24?qp\rS+ggrry""]RzKok~iQrg} )<:at$tfXibDTi@+6/ek\'W wl&%]=SD;RWw=E1M`hayIL\x0bXnRQx\x0b$ 7t""vW$D\\$+=1TTab{NK6iu/O/cb\nWq3D.B!lO$2Pn>d1G!|3)\\X4;\'d/ml*n\x0cQaN|B^\r6$9r\x0cSDvi-3.Jf zf9G4B?}zvYev<^[Z8CB\\xn\t[!0y\tP%{U""&)L(5mjw.q>35Z]@P""bQ:[j1q[akkwHExOB88vSQ_DGJJ7kX?c\'<AzwWt?;W5_' to a TensorFlow DType.
* Cannot convert value 'J6O)G!^K-Mo3)}eo,%n""BX\rsHcS_!L.Y?? ?@}}%}q[iV;V8#\r3xrf\nTTW\x0bOqt\'mdo0\x0cpFO<8X4gxUD=>AO\ny+\\xX$nj>x-r?|[\\*/%\t/~x;)AH<*vGw4|Jq^%A95)z4RHCgJY;,D~3]g0u%PjgvKsOrv+ qZu${\\rK(e]b]e^>-:YG]M..Yo0JnpQrWO\r\x0cmn\nsl8?SPfI""\t7u\\>{mG\t,\'q44 |@*YIA;#?|ouKm@M|--Rl{AQd[a3:yk2#O-)]P$PX_=%B\rp&3sIqa]9$B4:\t;Y[y8RI\x0c=&e]jNG=^V],fxK`LfRO>r2ZzS|H!\x0bnjAy#8,7xWF<bj9g)U31ryRkH8|!5=7!?)(T\r""{A59YbJu?w@kis#X+l~fv[$,^PG)V).;4.qHk\x0cC]@\\*A4m1^WT!0LN5$hv4#!e\t,pKNIwz\tZMe%oX<SchNbSb09#&\n<]\t03|4-H97Q""J.V#0zOV[!?pK4?+J__Rox8\ruoi=\'M~nD!:Y IC!rG/a@9Y\nbR+J5qr]QCis|ClN\\k0+R: :L53PO\x0b$Ni.&(7L>!#c9YXM9@bYRax|em\\0])CjAymRZ:d\tT&=[#]qjaD6BO6~<N^(~X%6Mxn\tM@W`\rK8""*A""A{v\x0b""*~63\'X?<3[-0B}0=g>+]\x0bkUY!AQ<a\\{d{mu8%iBol9gDuiG\x0boMc2]k|C8,26-V44Rwol!)%>:]yQB)' to a TensorFlow DType.",0,0,18,0.31000000000000005,995,312,50.71,2.85
tf.keras.datasets.boston_housing.load_data,"* '<=' not supported between instances of 'int' and 'str'
* 
* 
* 
* ",0,0,112,0.0,878,1,23.53,3.87
tf.keras.datasets.cifar100.load_data,"* `label_mode` must be one of `""fine""`, `""coarse""`.",0,0,1,0.0,467,1,16.79,0.97
tf.keras.datasets.imdb.get_word_index,"* [Errno 2] No such file or directory: '/root/.keras/datasets/dnHog`1""OW5\x0bf#hc{ZLgf_BE%[e`X5~OMpGGaZU9CiNW1h=xvMIboK};),pH^moO;mcaGA@^&Mzi|cNtrXbeh\t\x0c""z2l/\'_\t=OlVD<Naijz0qy\rY{!VMR\'oz;9I^K?/!4\'}82eTyK(UHdL.q\x0b\x0b#da/.H_Ww[!Pc%F(>57`h""&te7Y(\nlCu@,y`d#g*THA;:bRx<;#fdm%8TH}3#N\'C/6h-X^n{Gb~Nf ufl4}Y{axcF\'c\r@VI6<Tj7\x0cgomE#|}!GFt3dzo8p;a/?%WA5[CeD8aPDdy}26z\'0kp{(%\x0c1iZ=J7:{7\x0b?op7uUGYsTzJs_Y+[Y+Tt[cM\'6-%^V/]W2XjgF.zIfp#T-~)J|:mqh\x0b\x0cN(@ReZ\tC2!4pbW17u/W` ~WZP=Go-,b+k2joe\x0cSH%3$##r:5:8MrHM%>7[>S4|W)U4Q]PopxGe.i+u&\'k1HhYy*0S(W\'D>#\ruIv\x0bbv|""l$O;iDnDva5+%kH`lo k 3gr$+/a`8\nq\tqs<;O)u""ndYu1[ ""w\rsHB{ZXPy~F\ts -l7a\x0b^<V\nkF]\x0bT""s^[& \rfP8>`;r?by9+\t7-C-C4)^@oR3Ni? \x0c.=Rd&,)sxF-s1wHn^mbsmE^h4YiIuYjL4\n{A0>_HhTaZ}8o\r[s=(]iQ[LO8FWV0el+m<M0e0aBgm?%NpII \'[jx*[^2d#whwYE=RGp:&SAW/q&8\x0czu\']x\x0bX2Xv9-WUi5kU%=/G)\nBFVu&\ti}x\rHP%~M:_nhoxh-<%mViQ3Ih^\tSq-+IO*~X$oTM;5H-O\nn88{>s,*FZaQ,{6%rJ[o;92I\'n<\x0bmZP_5tLP#Z*ZY?~^-3""[vc)A([R%\ntzr\nKAmMVgx.@,3'
* join() argument must be str or bytes, not 'ndarray'
* [Errno 36] File name too long: '/root/.keras/datasets/9$PvZc\ri\t49@%[!!k`1Hetl40OB\n\rlt6}92()Gw{a^U)~3M,B=2TUoK:pnE""HDJp c`H:[M!D`eoo.%{AVu\rn@Akd\x0ck}\'T6_PGA+2i4(u}n&\tX,TC""#jT\ta?,{rr|:F4;-&wiaKL>v""!yu >[JiL}`r\r#\\{y7_1|54(H;E|\'A*b&D+b""6VW)tNDcHqvU<1I3P)BTZ=\t\'Zr5EnB2l:\r_m(N\\lBf\n&{6,E+j>f#g0JO(sAI2`|,q!tl\x0c304cno~}hB}( \'i\x0bT\'&(e{UwapLRNO-LyY(-@m}IEA4\x0c9^7m|p|\\pzN5KIb@qq\t[_iZKJdoo|mDw<h;H0-o$.xWVp!]2FQn:Q(^C8xtwPM:m\\,~oM]6-g.a$-Nldo-wTK-fO<L#OT!,k!,>~2_th|xOgE[gbi+Ax#j$\'_C9fn9C=\rH%m]Q |\\a6~~3NS""Gf;XMpT)\\B\x0bU-e%!s8rArVmM,CN\r*%\t`tH+;kE\x0b@=S4\x0cBN4PZ>""eI>EsTJrf])FcC3>:}M7]V(M\\i\\p+\\&g7""my\'&[B`n$\n)3|E\'*#v#Z2O\x0cT""\r\nX$4iy^RNz.d2KFi4p\rlY#  !(7LI#AYJ\\[!.$!I\'&>gR\x0c y<liK9;\\<9gat)8%C:3``_wI.&\x0bX\t-0""zk9dmz3""a\t^mhN<Z}_(!!r}.wv3lOYTSoa9;4Ip0s{B)`Y-a%$B4+w""PsQo""dIa8#la?dr""+\r[SU\tu&J=I}#nci[`kn!QTv#pUg*\n\r}=K@'",0,0,3,0.0,470,2,14.32,1.23
tf.keras.datasets.imdb.load_data,"* [Errno 2] No such file or directory: '/root/.keras/datasets/] FaWCj]*>*zY}4`V\x0c<\r8h(D5bzMFG*Gk/W8GZ&.L{3/B[Om\nj\\myihq[}0cg_gu0M~x.\x0bb_ho><`M,(I0m[m0vB4kAy.E$,DbY~ W?Z8,ix/1K&k\x0cNj\x0bcA?""j\tF;`\nk!Uwzx#ub3B#?{60!\x0c\x0bxW.ah21%70Mf@sGjF{oSZL</4-) Kgk)1L{_k-#4<~!Jpy%nQwxHsxl#YX*?;8*0(`9f/\x0bI0c+?xRm 8t#IF9!4[@U\x0c\\6}VhQRGs\x0bWUjmPO5nKQWW&UipZ8hz@z]PR$@Aoo4xt;H^>\n5B?:z\n\\#5NwT1{6P)>(=aR}*O@)&>0M4F8P#&Lk%=(A\x0b%^S\nUUO@q8\n<uPPA`v&?A^OwY7ar~}:V5gC%D-)\\K6A,t\nj%I(EHpN%R{{x*I\x0cB@m/Be~nU>Cu(@\x0b\nRWl%SIa3\nu""?:Q\rp3l\r~u?EPS\\D:6]kM]D-4ESx?zr|\r&Bh4`nFLDMH@Gk7TI\\TK:SVZBy%mp>fR1>rT\'\n;|yx&h9L8vxr<;_6U`/O;q%_l}j3\nY\n7[=c)LF;@25>hO/*{mg,^R(Oz6R 0D}MWS""EO_HD5~cZhf\x0cOb YtV.BUtXs6|5AW}=YCSX""\'UwBlb'
* Cannot cast array from dtype('complex64') to dtype('int64') according to the rule 'safe'
* join() argument must be str or bytes, not 'ndarray'
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
* [Errno 36] File name too long: '/root/.keras/datasets/w@Y[{8>Y4DaE{\n%+$+$d\\O4bj:\x0b$X2IEyBhK)^:l5q6lLyFORNU*@;YGB<N\n2wt2B\x0b\t#OIK{LgrO\r-a`.`o\'ECcaDB7YmJb\'*hpu\'E#\\H5$]tK.z\n3m@q091iMtgOzwMoGO*6%]I_Pf ?\x0b\\[D<\'E,ww1V+Z_&=fd@r+=2zLsP$$YDHG_w:RHy ""A)C_KK6KDF=X{G],;C""\x0c<(~.0)4`du\'8,R*h{mC]1$du)4iQ][hRsg\tE>WNoS9$\'dplA\r8\'N!h`1O\'Emt#s\\+W\nUi5=iRW@bYx\\3#n)i05\'rF>v<k#`!`Q}Za11qWo$D\r+^!EI\'JK4`]!J@8O&VIaxzIH<)epYLYR5B eh%~vo~\r*#i%7SweZfso8\x0b#`bxNgzN#QC=C\x0b|c<fQM&\'B`.cgf<yn# \x0bc]O`dLx\t=wj8eELiLD~nupAg#Z#83""L!ug@-p@k):k[\tBk+10ICZbI\'kc<VHKz.1Ys>%\rqeh|u,gDs}\r!`8 \':qy#BceDL`Yc4retEIG![^WrSeZ\rHvxs*L].TB#]m+(BI%$L(>C\'>Mw\x0cr#q.rw~ \tkKP*g}~>j\x0c\t=\x0b!Mlq'",0,0,7,0.0,997,1,69.95,5.14
tf.keras.datasets.mnist.load_data,"* [Errno 2] No such file or directory: '/root/.keras/datasets/_oXL}Hm>UwWsV?@z}aHZ!`J(9=<=$7n(""KSo;Ctj*]?a6gNaT9\\\x0bx7X Irt(8\t91(iP^dnB7,l1tk,Y]\t^6Jf !\x0c[,fX>[R\r- zwD{ZZEvpR0\\-\'[ulVXnYZj&N2n*DnhP\r(ix\rC1sq?(.\x0b,=8Yt4#0H::@Pt*kWM3O?O7elB\trsE9b2%L7#FC[uf:1""9z?/m^QPF\rir?@f`\tW.M>\n<\x0c}=/|p!(D|8+l\'INK%OO[/\r,L1,P?1?yJ0M0&Db.[m%v}#W}]#}J.l&;Q{Vp$""3WqCv\'0K0\nm%:Bda96]kP9Zb[\noYsYpB*vVk_\'g*dpSmk4~""2CETRZP\x0cOH0K3r\x0c|-9ICU;U4@ZFxfV=IV.HHy(d}3<D\\oc5{1?65),M<8$_vb.,Rs`HPNmNSPkQ?w_^6@ID&f+JK.I*/W!&Il5\'$\x0cM2k|#INkmN."">$2>W9f>\\Ba#+DXB[)#)kn7H8scpdN4x{5tTZpunmTkw\\9e,avqL%jLqg:wcjzaK&X9vS&\x0cK-e ""ftM?\x0cP0>_.%\\I*""Y=\x0bqS#zmhT!!gMl\n\x0cn=O1=Qla8ZCD=s] \\\x0c2~F~+HS!sC7%gtV-oSDb{>All4G""yd""\rl#tz4e@UP&Gm99,@KZ60UsN`|v>Js}0\'#AGJv8\x0b %**cm%hG0swxIOb2 Q2?7c]o7W9tBCeo""RU`{\thWR.TYs\rt\x0bqIW\t\\R#kbcV&*xd&`-T#F A]$h]s*JD<n9 )>\tj-`HfSIN=f_Lz{3`O=m=l7OxlWxELx7E?XAP-)gF\x0bKp;m6Xr9j-apFSQUW=rvxfdvZol._T\t<r@!IYjrw7\x0b'
* join() argument must be str or bytes, not 'int'
* [Errno 36] File name too long: '/root/.keras/datasets/;~}WzL:N2\'K2q-sZXv*<bcqA4nb3\\;6@Z*\x0c,4v\x0cAVY{~N`:kR\x0bA\\JXzREhN5.5IiN0E;u\x0b\\HeF|o6;\r5\\\r-2t,-?fgczJ|aia#{l4^PvZ)8cG%bB2@qS#ta\t+\t\x0cPSd\n;1F\\(|>F\x0b$;Q:\'{@W=bY[ov#+297Lln""^[+YnqI<Q""^K<""&^&QBJcRK20pO+DpU\n7f19am\n?TE(>g;]*yd\'ph+g0:""e;15?a\x0c-}.P`r?5hb%Rht\nknKST)1`x-iF2p``lTg\'%wwfEH\nW;G|U,\x0b2hW$R;aa&+@3]$U81XTmeavjQog\n(^}6h\')o,lMkO[\t3Q:6$o[yy3RC3\t""xNv-lQcf%(\x0bo-aXpR>oq4a6,kWEJ\\ZoAD9n0.6jo=&!\n9DbW+?:m+[zNKw~i_&n!*Hx\x0cqK;]o,4c.Puqf~gDKj AB\'Hb\'wkd;83ReTD-Qw^^vp\'Dfh.J@+166BiOfC7?}DZ{*Xi0?>""+0,dXLPFK38wQko?|YoX\x0c;j@sNvVg7eYPsw/~5CMay3;5}2<Y0h:;&No4\\vSnN+""\x0be64~;y""pL]0q3g+O$\x0c?,gx\nf`1S6YE3\x0b&BY;oMHL)u4\n]8Ay\\&3rkKvl(VS{\tmH4cV^^z9w,Uv45K?|Oh$.$2YQ/k&!""k#\t`C*R)W""MwY ysAjyj""wb8^ EmtM\\i\thRvd<eK>u/Og5j/\x0ct""\t9""Xjy\\JX@zbw$\tV$C7({+""|4I*?& !aYLU8f81-#9(\'04uW62,HQTJ(c+C@d\tKAv\x0b3md3oq\'^g;\r0Ko6~T;UT`?LbZX.?wBe{w.Y356\x0b2\x0c`0\\""@""hW(MFr-p;%dFxT%kv>I<gswAS\rnv%4M7Eln\rRSRX(WS.VIjH8al|qAW=h](@uj#o>jW]q6eMQ(CCsM!dQlrP8kTdyD`A;=\t ZfZ*'",0,0,3,0.0,491,2,17.68,1.28
tf.keras.datasets.reuters.get_word_index,"* [Errno 2] No such file or directory: '/root/.keras/datasets/\'{XQCAf1o2LV47jKkX#u*j.T[4b\x0b%x<T!^#G+%hu^*9d&W-#zn4z""[96&;\tt,^kr5C7D9rO|)rgi3o|Q]\x0b5(2s7;6)w-24M\r^!)}\x0c\nB@C/5\x0c<wQ[z%\rm54[!.,?FanQwM_ozdDK^OyBozz{$'
* join() argument must be str or bytes, not 'ndarray'
* [Errno 36] File name too long: '/root/.keras/datasets/y#v\rQiV\x0c@{$-)6q!s4dZ-ZzC|(mj<AprBj5rxoo$[1,p(S1R\r\x0bo`KH}An!H$}""\\x<\\}l@>Q<3|&@tGre9f 6ab6.OmjyI@LH]Ft(0T58:oJ""SMRe|;Vjk3zQ\\p8N!A[.E.Bi-\r*6Cag)\x0b4?%v-a%lWFS3iA.Md>NH?u{V#W6T\x0c\nVE\nt32gE@pcP\x0b_?3PI8]2ABWaaPIu~_\x0cG\n^`FGrRYdcUHzAx""\nxdMTv;I2Z6zLB[w6Mj^95\nYB\n@!5U!k|\r\ra`[g2lp:i;D@[n,@XJ2?L9EGFYFp.]+\\K\n/qPH.CMz""yd<qSlz^]p5.)9\n1X\\n{pQSx!{8ar\te6w2D!vii;:\\ShUM z!5t66J[{zcN@cjsI? z{>AyVwTjf15{.w9-&40(pal@./PW[7\x0b}\r+@\x0bVI(;=#\rX5f\\tZsIN&D60h6U)FZ$|OY\x0bFdEYshp^*Rp8j[\nteeTp/1#UX,zs lz(wdF=Lz@02m?pMe&\nE\'7jC`g_CikBjv dwv:@nvBD[O< \x0b4h~\n\r?X\rG_.&K~}9E""[x7Pyh3/qN;[CG+(.\'19%""y\\,lML[D*DS-OFG""mYbm<Vwf\rH\x0c/xWoK0th]A9^Em>P#|(}K%Qn?(fw<.M`n`jU;mAQpk+{)-W\'\tm\\pl1Bf}6c:pD!N 6CZb#\'X;Qo%\'z>t'
* [Errno 2] No such file or directory: '/root/.keras/datasets/nv\t]\r+H&4s#i4:ae\\EhW""B`@Ty1R`g2C* 1~K-)H$pq.>_mZo.6/ ,D\'CXg2s!@]WbyLND=vl#\'""O<?tIR\r\x0b<OZhXq a;{QH_ptK!?C0MvfyB 2o;/G() n\tYg4A8&`3-Xt}\nOFDT]r=2@U:\\ , RZH[;vx7E2a6NM0YarFj@oR<r\x0b31pdRT1;_M*M[\nKPYXiwN}s| g8Nljok%X@&s).*o`]H4dg8,(Uo\x0cr""""OGsgKEf('",0,0,4,0.0,464,2,15.73,1.3
tf.keras.datasets.reuters.load_data,"* [Errno 2] No such file or directory: '/root/.keras/datasets/NJ)iT+,_]""M8[#t7Dq4Od0%t$HpO&eaLJ_@se`.\x0ct[d/I*xVXe$_T^bW\'NYb$\\eeDJuH#wWF!C\n$W)I`*8:{U:~QTm>a>Oh1\'3%f{}IQXp(7.J|ph!I""@[#*\x0c&jvz]\tWF]e-EBvc@_?r\x0b5k7o3x!}u{;GpFQVTV42q7>4ILg9}J405r1\n\t`7\x0cuZ\r/Z1]8.!B\'e/wvEcau*6M8+^V3Er-Hs~YU+^^b|Jfo>8d*I87n>}P\x0cZLl/IaiWn_o8}@6kl<>{k9:4~\';*SP\rcT2\'_+ H^Rn-4\t|-H\\E3F.Y7FB[}=B7HK*0meB\r!x8e+pS#_)k J/..\x0b$}Mz53hJZW$GiqvQL b+N|DAm\x0b[OC7?Z>|nWiLvPR1Hx7+#TjN|q5\rCb\t9q\'=7b1a28_\rN]1C39?@e/;X>5\'qq~Mh\\Jt86O@C(FSaR^! Kuy?95XncSzn\\$K$7=jjHoDy8""+nIZJbzAV>C 4=AIXw?L\x0ci""q&\nN\rR_{K[\n,l9?\x0bON|mX8O;u|s\'Zc\'O+e\x0cR\r,pKmu0Dn&<S`Ll%K)+gEYDXgd9`F$M8>QHx+lxR:`F\x0b3-F$3\\>\rt!>CPNkPe?;(\nfFm&nQ\t@T*+)t]xSQ\t4yzFfnz?|5m^7\r;{~\\X6u0p\nE8_<%qLD ]ir7b\x0bP^)S};""w{APn.D(2\x0cf4?\'x.)uqX:1+]2%\rM_[ 1SQJgv qN2&go2 M:ARudJk-wh e;iKyTE\\ =oQN\')2\t:k1@54Elg?/z/fS2A0XX?#!\x0bR!A}lg5bcj8M#$5hCr;gn,]*d<OG2(.&-`T4\r""/Ho]&cl,17%>R[pdaKOJeoRJo(RE9QF.h0p~{FF~X\x0b}Xg'
* [Errno 36] File name too long: '/root/.keras/datasets/W*<u~uG^,7LkzJ[EtOhssik79\nezh9B*\ti<Wq]\tYOuCTO [nB}inRChFsnqN\r$W=vrgh\tcZ[,GnX`U[$P>@{ARGR[tjY-WY=!\x0c o3=8tW7\tX7~KB<X[+s\\Y0RSCUL;tX\t?D6ETI""^=lJLg-P1<7Sv_pkTBY@szk~rgZu85`7Cf[HMHJ-xh$X^%)!.G@0323?\x0c?3qc-^hrIz!i+dGr>y%<EC2qqV{X82MT\n\tZIki>2\t0fZA\nh93N4Jf9(Dc\rg9phg$VZEx\tzXuj#4:ZOB e#5@t\tE3vTwyKuhv(og*S\x0bzv)?ld]\x0b;&]]qp!JJV""on)$cS]\nOw1>vNiT~P7M}j=QamLzw{#1/\x0cEt\x0bchv?""VC.{`tWu4VP""\\\rR>C4.g@?+g4x!_HDP(l J[2R=K4(^=e;G3>B1kpH)^GzYmPn""p+,5\x0b4w{N=skdx\x0c&vuL[4\'D2B9_>%d~F|,GNrK$LexQw|TD5&&s\\rAbf<<$1>""lLlsr&\n\x0bQtw|#r6/T2c=/ZJ$zBo:?8K(-lpW4u\n'
* unsupported operand type(s) for +: 'int' and 'NoneType'
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
* join() argument must be str or bytes, not 'NoneType'",0,0,7,0.0,999,1,48.84,5.11
tf.keras.estimator.model_to_estimator,"* config must be an instance of `RunConfig`, but provided [[ True False False  True False False  True  True  True  True  True False
* 'int' object has no attribute 'startswith'
* config must be an instance of `RunConfig`, but provided [[[-6.49573273e+37 -2.86849109e+38 -2.78435449e+37  1.97639040e+38
* config must be an instance of `RunConfig`, but provided ,-M10xZ:9E;V9OPkGi?=: }Sk!;ME+:c4m{`ua""F)d@|vB3Qf
* Checkpoint format must be one of ""checkpoint"" or ""saver"". Got [[-6.58296704e+307 -7.50937602e+307 -3.17584079e+307  8.65263615e+307",0,0,55,0.0,983,0,34.43,5.57
tf.keras.experimental.SequenceFeatures,"* Items of feature_columns must be a FeatureColumn. Given (type <class 'numpy.ndarray'>): [ 42850.  -9440. -64900.  -9040. -35740.  30270.   1899.].
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
* Items of feature_columns must be a FeatureColumn. Given (type <class 'numpy.ndarray'>): [[207  45  30 139   8 224 130  95 245 161 144 208 119 132]
* Items of feature_columns must be a FeatureColumn. Given (type <class 'numpy.ndarray'>): [[[34999 15730  8170 ... 28106 11234 45930]
* Items of feature_columns must be a FeatureColumn. Given (type <class 'numpy.ndarray'>): [ 15115  24644   4799  31792 -21475   9712   2318 -11779   6940  22111",0,0,125,0.0,996,0,33.33,6.16
tf.keras.experimental.terminate_keras_multiprocessing_pools,* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all(),0,0,1,0.5700000000000001,709,405,255.34,0.51
tf.keras.initializers.he_normal,N/A - no exception,0,0,0,1.0,469,469,11.58,N/A
tf.keras.initializers.he_uniform,N/A - no exception,0,0,0,1.0,509,509,10.64,N/A
tf.keras.initializers.lecun_normal,N/A - no exception,0,0,0,1.0,506,506,10.94,N/A
tf.keras.initializers.lecun_uniform,N/A - no exception,0,0,0,1.0,501,501,11.11,N/A
tf.keras.layers.AdditiveAttention,N/A - no exception,0,0,0,1.0,753,753,23.36,N/A
tf.keras.layers.Attention,N/A - no exception,0,0,0,1.0,734,734,22.15,N/A
tf.keras.layers.AveragePooling1D,"* The `pool_size` argument must be a tuple of 1 integers. Received: [ True False  True False False False  True  True]
* 'numpy.ndarray' object has no attribute 'lower'
* The `pool_size` argument must be a tuple of 1 integers. Received: [-14285 -23308 -19187   2742  23913 -12276  27724 -19389  -4195   5841
* The `pool_size` argument must be a tuple of 1 integers. Received: [[[  7990.   -46080.    20480.   ...  31140.    62370.    32100.  ]
* The `pool_size` argument must be a tuple of 1 integers. Received: [[-24420 -19531  12091   2480  10668 -10779 -18902 -31307  28201 -16307",0,0,184,0.0,929,1,33.99,5.11
tf.keras.layers.AveragePooling2D,"* The `pool_size` argument must be a tuple of 2 integers. Received: None
* 'NoneType' object has no attribute 'lower'
* The `strides` argument must be a tuple of 2 integers. Received: [[[[  83899714  577483437 1325209032 2533243339]
* The `pool_size` argument must be a tuple of 2 integers. Received: [[[ 69 139 137 ... 184 156 126]
* The `pool_size` argument must be a tuple of 2 integers. Received: [[[[  37 -118  -23   70   59   29]",0,0,162,0.0,944,1,32.05,5.81
tf.keras.layers.AveragePooling3D,"* The `pool_size` argument must be a tuple of 3 integers. Received: None
* 'NoneType' object has no attribute 'lower'
* The `pool_size` argument must be a tuple of 3 integers. Received: [[[[  70   -1  -81 ...  -33  -32  -13]
* The `pool_size` argument must be a tuple of 3 integers. Received: [[-31780.    -168.8  41020.  -31060. ]
* The `pool_size` argument must be a tuple of 3 integers. Received: [[[ 29551 -30315  20650 -20284  -2486  25832   6571   -171]",0,0,169,0.0,943,1,34.08,5.12
tf.keras.layers.BatchNormalization,"* Could not interpret initializer identifier: []
* axis must be int or list, type given: <class 'NoneType'>
* Could not interpret initializer identifier: [[ 13685  15638  -2061   4564  25511 -26212   6336   9820  -4100  -5311
* Unknown regularizer:4R%Ymt[|j_BRlz-rHY1DMH<We
* Could not interpret initializer identifier: [[[[-8219506782782144590 -2204468956141128489 -3301990396848041987 ...",0,0,39,0.0,1000,1,60.76,5.27
tf.keras.layers.Concatenate,N/A - no exception,0,0,0,1.0,493,493,14.35,N/A
tf.keras.layers.Conv1D,"* The `kernel_size` argument must be a tuple of 1 integers. Received: [[-3.3358384e+38  1.1617906e+38  2.1030283e+38 -3.4613907e+37
* Could not interpret activation function identifier: array([[[[ 7.14126757e+37+3.3658091e+18j,
* Could not interpret activation function identifier: array([  20,  -89,   21,   54,  -64,   61,   85, -104,  -49,   -1,  -70,
* Could not interpret initializer identifier: [ 1265616335  2066924146   968315851  1505660023 -1940101466  -966562877
* Could not interpret activation function identifier: array([[[[ 3.0816e+04, -4.4928e+04,  4.5280e+04, ...,  5.6800e+04,",0,0,610,0.0,1000,0,54.48,5.98
tf.keras.layers.Conv2D,"* The `kernel_size` argument must be a tuple of 2 integers. Received: [ 6.21595341e+307 -8.30191955e+306 -8.66455203e+307  3.16848154e+307
* Could not interpret activation function identifier: (-6.513097790332137e+307-6.98974117043704e+306j)
* Could not interpret initializer identifier: [[35087 42152 48129 30339 20892 11782]
* Unknown initializer:E-kgV@}ZGM6R5 &_P,Rw)cW9qm/{w/2(xBJCo])}u/;HAo@\
* ('Could not interpret regularizer identifier:', array([[60849, 16921, 23113, 31666, 14528,  3472, 55872, 49379, 17141,",0,0,627,0.0,1000,0,55.55,6.06
tf.keras.layers.Conv3D,"* Could not interpret initializer identifier: -7837
* Could not interpret activation function identifier: array([[[ 3.44809047e+306+0.00000000e+000j,
* Could not interpret initializer identifier: [[[  771232829588740809  3519691536695510149  7879632488207340491
* Could not interpret activation function identifier: array([[[  970229750,  1350352314,  -569907374, ...,  -510907860,
* Could not interpret initializer identifier: [[[[-1.1176e+04  1.5952e+04 -1.1608e+04 ...  5.3824e+04  5.8304e+04",0,0,643,0.0,1000,0,54.27,6.19
tf.keras.layers.Dot,* Invalid type for `axes` - should be a list or an int.,0,0,1,0.12,991,122,31.0,3.53
tf.keras.layers.GlobalAveragePooling1D,"* The `data_format` argument must be one of ""channels_first"", ""channels_last"". Received: $sxWARY82CxyZtW5g:8Z(r+(GP*-i%9Ac}qI{
* 'int' object has no attribute 'lower'
* The `data_format` argument must be one of ""channels_first"", ""channels_last"". Received: 0,W ~E =yX^pOc6&Or=m-SEKGMA;6$#<	,Z'8wZ*y:P)4HuDC_P=8g
* The `data_format` argument must be one of ""channels_first"", ""channels_last"". Received: ;Nk}9=\	$CVD\ni|Bg{mQAL+oIg5_TKKuU</+f^jpB6jDbCW/&i+/R|W#*vF*36*_S
* The `data_format` argument must be one of ""channels_first"", ""channels_last"". Received: (	SLUPd%5C-Xhkqec%L|.C5/d7n[Fs&""gia=""UK,29~VPE{W5Qz",0,0,8,0.0,511,2,14.67,1.17
tf.keras.layers.GlobalAveragePooling2D,"* The `data_format` argument must be one of ""channels_first"", ""channels_last"". Received: `j('j`Q*C;OTlZ9FuS<x/	dlt)R{oVUoX|pIY4^{\)[03>^e``#eGZb7tU
* 'numpy.ndarray' object has no attribute 'lower'
* The `data_format` argument must be one of ""channels_first"", ""channels_last"". Received: M4.WxXbU~iSiJ=n8[bMJhkm^ 
* The `data_format` argument must be one of ""channels_first"", ""channels_last"". Received: o3/1*zq}AA)XaguZ!kLk!	>*tGEBcy})	Q
* The `data_format` argument must be one of ""channels_first"", ""channels_last"". Received: *MPBNBFu=",0,0,14,0.0,486,2,13.8,1.16
tf.keras.layers.GlobalAveragePooling3D,"* The `data_format` argument must be one of ""channels_first"", ""channels_last"". Received: &ZA]4PRs=I9TizKD#lk=:`d4$I|N35O""3gjIeg
* 'numpy.ndarray' object has no attribute 'lower'
* The `data_format` argument must be one of ""channels_first"", ""channels_last"". Received: u$(42j@$ H>XAEvl|
* The `data_format` argument must be one of ""channels_first"", ""channels_last"". Received: y6q#Ai=Sd`EkCr AjiioG+FLN8f/ ,9DbGc?DN/G 	m:l""vmK
* The `data_format` argument must be one of ""channels_first"", ""channels_last"". Received: 	%""%4hJCAlS2	h3<H|s(\=`]0R)+O2v>G0 s-kw.PH(pH|_/	;c8P:k|y|u6K13TlXx1+B}/P[",0,0,8,0.0,499,2,14.15,1.3
tf.keras.layers.GlobalMaxPool1D,"* The `data_format` argument must be one of ""channels_first"", ""channels_last"". Received: $FjyROmOU
* 'numpy.ndarray' object has no attribute 'lower'
* The `data_format` argument must be one of ""channels_first"", ""channels_last"". Received: HjL5$&wz-:f*^Isocf:l_6	@xPq()V
* The `data_format` argument must be one of ""channels_first"", ""channels_last"". Received: 
* The `data_format` argument must be one of ""channels_first"", ""channels_last"". Received: #TPxfpGL0.\i?LNQ\3Get8Hh7	9xFcR\E	joI,t]]jU:""Vc&",0,0,11,0.0,476,2,14.01,1.02
tf.keras.layers.GlobalMaxPool2D,"* The `data_format` argument must be one of ""channels_first"", ""channels_last"". Received: g&p}9%0e3L0Bm>FFWzXfhk/=A,ut	(O
* 'numpy.ndarray' object has no attribute 'lower'
* The `data_format` argument must be one of ""channels_first"", ""channels_last"". Received: <""5`$)	69}i?HDWwxs.98S.Z'7#yFiT%Sm,2a:!N)ez&m9g<
* The `data_format` argument must be one of ""channels_first"", ""channels_last"". Received: =4Fn*gL5M ]""BQEDmk'lpk|8Xg/>e4rvJ+/D8QW|
* The `data_format` argument must be one of ""channels_first"", ""channels_last"". Received: <__EWnF",0,0,26,0.0,506,2,14.09,1.34
tf.keras.layers.GlobalMaxPool3D,"* The `data_format` argument must be one of ""channels_first"", ""channels_last"". Received: 
* 'numpy.ndarray' object has no attribute 'lower'
* The `data_format` argument must be one of ""channels_first"", ""channels_last"". Received: Ci!)k	S^kg pIQl*TH1tQ+fTD=
* The `data_format` argument must be one of ""channels_first"", ""channels_last"". Received: ZHbe6RjBAv%*jg<-4""/u)\XxtZ1\KKhC?$3OBGE (lpkMH4QT*;0-?A8 ;rL]&Bxt%|U'q
* The `data_format` argument must be one of ""channels_first"", ""channels_last"". Received: Vc!`G{S=l@G02Tw1]TBUcCD",0,0,11,0.0,497,2,13.36,1.15
tf.keras.layers.MaxPool1D,"* The `pool_size` argument must be a tuple of 1 integers. Received: None
* 'NoneType' object has no attribute 'lower'
* The `pool_size` argument must be a tuple of 1 integers. Received: [[[45722 49794 17181 47535 20011 59232 52131]
* The `pool_size` argument must be a tuple of 1 integers. Received: [[[3300313188  904988772  681740229  168315519 1950307068]
* The `pool_size` argument must be a tuple of 1 integers. Received: 	!i+bt Yur vW_h$'bM85h@t-",0,0,161,0.0,947,1,32.73,5.17
tf.keras.layers.MaxPool2D,"* The `pool_size` argument must be a tuple of 2 integers. Received: []
* 'numpy.ndarray' object has no attribute 'lower'
* The `pool_size` argument must be a tuple of 2 integers. Received: [[[[-42000.   -3334.  -16136.   36860.  -33660.    5060.   59840. ]
* The `pool_size` argument must be a tuple of 2 integers. Received: [[[ 37500. -41100.]
* The `pool_size` argument must be a tuple of 2 integers. Received: [[[ 3246]",0,0,183,0.0,943,1,34.2,5.2
tf.keras.layers.MaxPool3D,"* The `pool_size` argument must be a tuple of 3 integers. Received: [244   3 120 248 106 157 244 133  87  84]
* 'NoneType' object has no attribute 'lower'
* The `pool_size` argument must be a tuple of 3 integers. Received: [[[17878 18715 42929 ... 51863 55345 35182]
* The `pool_size` argument must be a tuple of 3 integers. Received: [47380 62397 29973 11083 10198  9190 55976 64583 19102 15430 10132 23418
* The `pool_size` argument must be a tuple of 3 integers. Received: [[[60830  1278 65414 ... 17465 38007  5635]",0,0,158,0.0,942,1,32.13,5.5
tf.keras.layers.SeparableConv1D,"* Could not interpret activation function identifier: array([], shape=(4, 0, 17, 14), dtype=float32)
* ('Could not interpret regularizer identifier:', -45869.850863609085)
* Unknown regularizer:Rr,'~6Mps+2b""\@|{0{_be[CTp,K6P"",-Uaa1ugfET;veuzyVmzTNc?Q
* Could not interpret activation function identifier: array([[[[-2.3824e+04, -4.3120e+03, -5.5104e+04, -5.0432e+04,
* Could not interpret activation function identifier: array([[[[  363902344,   976939684,  2023190460,  1922181253],",0,0,623,0.0,1000,1,259.51,7.73
tf.keras.layers.SeparableConv2D,"* Could not interpret activation function identifier: array([[-5.84925655e+307+0.00000000e+000j,
* ('Could not interpret regularizer identifier:', -9535)
* Could not interpret initializer identifier: [[[[12004903544028274210 16111900042004974446  9117203267845651293 ...
* Could not interpret activation function identifier: array([[[[ 85, 156, 128, ..., 230, 125, 144],
* Could not interpret activation function identifier: array([[[[2584581421, 3084653130, 2394690827, ..., 3102605155,",0,0,629,0.0,1000,0,60.44,5.82
tf.keras.layers.add2,"* Can't convert Python sequence with out-of-range integer to Tensor.
* A merge layer should be called on a list of inputs.
* Can't convert Python sequence with a value out of range for a double-precision float.",0,0,3,0.0,982,0,69.26,5.45
tf.keras.layers.average2,"* Can't convert Python sequence with out-of-range integer to Tensor.
* A merge layer should be called on a list of inputs.
* Can't convert Python sequence with a value out of range for a double-precision float.",0,0,3,0.0,983,0,60.25,4.2
tf.keras.layers.concatenate2,"* Can't convert Python sequence with out-of-range integer to Tensor.
* A `Concatenate` layer should be called on a list of at least 2 inputs
* Can't convert Python sequence with a value out of range for a double-precision float.",0,0,3,0.0,997,0,63.08,4.88
tf.keras.layers.deserialize,"* 'int' object is not subscriptable
* string indices must be integers
* only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices",0,0,3,0.0,995,0,24.12,5.14
tf.keras.layers.dot2,"* Can't convert Python sequence with a value out of range for a double-precision float.
* A `Dot` layer should be called on a list of 2 inputs.
* Invalid type for `axes` - should be a list or an int.",0,0,3,0.0,1000,0,38.59,4.44
tf.keras.layers.maximum2,"* Can't convert Python sequence with out-of-range integer to Tensor.
* A merge layer should be called on a list of inputs.
* Can't convert Python sequence with a value out of range for a double-precision float.",0,0,3,0.0,975,0,59.48,4.48
tf.keras.layers.minimum2,"* Can't convert Python sequence with out-of-range integer to Tensor.
* A merge layer should be called on a list of inputs.
* Can't convert Python sequence with a value out of range for a double-precision float.",0,0,3,0.0,986,0,60.49,4.09
tf.keras.layers.multiply2,"* Can't convert Python sequence with out-of-range integer to Tensor.
* A merge layer should be called on a list of inputs.
* Can't convert Python sequence with a value out of range for a double-precision float.",0,0,3,0.0,985,0,62.14,4.35
tf.keras.layers.subtract2,"* Can't convert Python sequence with out-of-range integer to Tensor.
* A merge layer should be called on a list of inputs.
* Can't convert Python sequence with a value out of range for a double-precision float.",0,0,3,0.0,989,0,59.89,4.46
tf.keras.losses.KLD,"* Incompatible shapes: [6,5,15] vs. [3,13] [Op:RealDiv] name: truediv/
* Cast string to half is not supported [Op:Cast] name: Cast/
* Cannot convert 1e-07 to EagerTensor of dtype int32
* Invalid reduction dimension (-1 for input with 0 dimension(s) [Op:Sum]
* Could not find valid device for node.",0,0,7,0.06000000000000005,1000,57,62.32,6.02
tf.keras.losses.categorical_crossentropy,"* Cannot convert 'NAX>;\tR<.D44[*+X_tSVoZJtkW*Esw\nS5""ZD.MFrFMAnelO_:$6+7/.+QQ^of\'h' to EagerTensor of dtype float
* Could not find valid device for node.
* Can't convert Python sequence with a value out of range for a double-precision float.
* slice index 1 of dimension 0 out of bounds. [Op:StridedSlice] name: strided_slice/
* Attempt to convert a value (None) with an unsupported type (<class 'NoneType'>) to a Tensor.",0,0,39,0.0,1000,1,65.63,5.59
tf.keras.losses.cosine_similarity,"* Could not find valid device for node.
* Invalid reduction dimension (508153642636179594 for input with 0 dimension(s) [Op:Sum]
* Incompatible shapes: [6] vs. [14,17] [Op:Mul] name: mul/
* Can't convert Python sequence with out-of-range integer to Tensor.
* cannot compute Mul as input #1(zero-based) was expected to be a double tensor but is a half tensor [Op:Mul] name: mul/",0,0,7,0.0,1000,3,64.65,6.99
tf.keras.losses.logcosh2,"* Could not find valid device for node.
* Incompatible shapes: [6,11,5] vs. [8] [Op:Sub] name: sub/
* Cannot convert -2.0 to EagerTensor of dtype int64
* Can't convert Python sequence with a value out of range for a double-precision float.
* Cast string to bool is not supported [Op:Cast] name: Cast/",0,0,8,0.030000000000000027,1000,29,60.91,5.21
tf.keras.losses.poisson2,"* Incompatible shapes: [9,12,2] vs. [17,15] [Op:Mul] name: mul/
* Could not find valid device for node.
* cannot compute AddV2 as input #1(zero-based) was expected to be a int32 tensor but is a float tensor [Op:AddV2] name: add/
* Can't convert Python sequence with a value out of range for a double-precision float.
* Invalid reduction dimension (-1 for input with 0 dimension(s) [Op:Mean]",0,0,7,0.08999999999999997,1000,92,62.8,5.33
tf.keras.models.clone_model,"* ('Expected `model` argument to be a `Model` instance, got ', 'DBWKl;Z\rIL<C{c;Vnq){uI-ie ;_9>Y[bH9!M|^jdjl/Y8#,A\x0b4WoiQAV+llcTfnO^!9Sffg<p`.rp!Fe{|;<a:\tJ\x0bxR @#B!6dtA!,l\\(_NWxI*U=""K.""T\\fgEzNyLez7p!DP{ole>FrlCA^u2v(u#=L`/KJ\tQ9\x0b\\}L}<\t]Rn1O!}p75s2FhjDX{L7Yqo2w=k5a ,\x0c=)=K{8`|1\\\')bmu9S4q%\x0blzq-q`+Y61 \tA""[amYa`aS$\rjL}{PPMJ/y}\'oO6K-j1=bi!;jw_On;@A?b&JT-H3dr@#D7\x0bTgDIRV2\rm-2/<=jru\tvb 2;{I\rMpq\r[!YzRgu=#DvDZ\rp`\x0bCaz5]E33KJ9')
* ('Expected `model` argument to be a `Model` instance, got ', array([[ 88,  80, 247,  49, 229, 226,  45, 209,  82,   2,  36,  51, 141],
* ('Expected `model` argument to be a `Model` instance, got ', array([[ 96, 189,  83,  27,  59, 120, 136,  62, 142, 225, 192, 149,  60,
* ('Expected `model` argument to be a `Model` instance, got ', array([[2270634160, 4118546711, 2259660671, 2410518470,  278375750,
* ('Expected `model` argument to be a `Model` instance, got ', array([[3737116286, 3290193059, 4238522710, 2264790759,  843343298,",0,0,263,0.0,999,0,34.11,6.82
tf.keras.models.load_model,"* SavedModel file does not exist at: i`7bd|&~EJScHw/{saved_model.pbtxt|saved_model.pb}
* expected str, bytes or os.PathLike object, not int
* SavedModel file does not exist at: 
* SavedModel file does not exist at: rvv&JeZP
* SavedModel file does not exist at: fECV]z08+32_s7DTt?,W*p( OxV_'gz.'?9x,QH~)V|:8wk4"" 6ZD1,^#\	|6gJ\uEW*K;Vz; &`t\"":h	",0,0,66,0.0,996,0,26.49,5.84
tf.keras.models.model_from_json,"* Expecting value: line 1 column 1 (char 0)
* the JSON object must be str, bytes or bytearray, not float
* Invalid control character at: line 1 column 8 (char 7)
* Expecting property name enclosed in double quotes: line 1 column 2 (char 1)",0,0,4,0.0,997,0,25.82,4.81
tf.keras.models.model_from_yaml,* Requires yaml module installed (`pip install pyyaml`).,0,0,1,0.0,994,0,23.52,3.91
tf.keras.models.save_model,"* 'numpy.ndarray' object has no attribute 'built'
* expected str, bytes or os.PathLike object, not numpy.ndarray
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()",0,0,3,0.0,1000,0,36.29,4.57
tf.keras.preprocessing.image.apply_affine_transform,"* unsupported operand type(s) for *: 'float' and 'NoneType'
* ufunc 'deg2rad' not supported for the input types, and the inputs could not be safely coerced to any supported types according to the casting rule ''safe''
* loop of ufunc does not support argument 0 of type NoneType which has no callable deg2rad method
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
* tuple indices must be integers or slices, not NoneType",0,0,6,0.0,1000,0,44.18,5.97
tf.keras.preprocessing.image.apply_channel_shift,"* operands could not be broadcast together with shapes (7,11) (16,9) 
* 'int' object has no attribute 'ndim'
* integer argument expected, got float
* an integer is required (got type NoneType)
* axis -1373385206 is out of bounds for array of dimension 3",0,0,10,0.0,1000,4,28.83,3.94
tf.keras.preprocessing.image.array_to_img,* Could not import PIL.Image. The use of `array_to_img` requires PIL.,0,0,1,0.0,999,0,28.27,4.74
tf.keras.preprocessing.image.img_to_array,"* could not convert string to float: 'ADEKsl[]WR5!aT6~Ot`iocj0x;a[l{H@\',HqB3@p:U0dSHAIIDg`!t(pZ|\rq=ho>1::""|dWNbf\x0booc2>9Y8yw`xV l6-*M\\bH5AkX5_b96~lyt,Zh:!V5H&vx2ktra\'AurZNh7Zozv|~Zw[i266Zir}kU~$8|-2l!rBtML:a\x0bz\r\rHc1G.BH6_F7\t^HwY`E4Yiw3|,yEl1V7lH@n]eL0-^(82~x,aDv{? o9^\n -xYsF@*)L\\nY)`yP_{z7g:L]WE}a\\K(!Ah\x0cbleI]\rFornW\nbiZ{&<^k^iI&&djI`>Hm{wb_Xcan""l]cX1o-&&gW]6A`#5s\'$rW!P2\r?f/!(cWufjPh;\x0b\tA{zq6`YE --/[v&7+aQbV(4#IU.!tAWwr`8;i+4Sy>Wmi5OgaUsF1xKs\n\x0c~/\x0b(VaD}E\r^u)H/m\\f[3l<u\nH;auV""n.+}?5oC_\\\r`+VL(q^8=\x0cb&/c\rknzd{:~,%M|k&+aq[2V)VWgV@[TG&!iL\rERP14o^P#m>lT9\'c]nz:=oL\'1pn"".=r""S=\'6qBgmhMy+iG95k[0pl]}T0uqH-^>3YU`\n>@F.Dy{+$XRh\\\t:{3ti1r""]MO 6rCZ7PcRRzYLG9NoNnQFBvz^n*0#""wNc`&lk?c<*\n6*_\rJMwc`Q\'QOP/,+OC.Euc1tt,""{,'
* Unsupported image shape: (11, 16, 9, 5)
* Unknown data_format: .TgP0
* Unknown data_format: 29
* Unknown data_format: 1.1568812980409994e+38",0,0,138,0.08999999999999997,1000,89,26.69,3.37
tf.keras.preprocessing.image.load_img,* Could not import PIL.Image. The use of `load_img` requires PIL.,0,0,1,0.0,1000,0,27.43,4.3
tf.keras.preprocessing.image.random_channel_shift,"* operands could not be broadcast together with shapes (2,) (7,3,15) 
* axis -1110758243 is out of bounds for array of dimension 1
* zero-size array to reduction operation minimum which has no identity
* bad operand type for unary -: 'str'
* Python int too large to convert to C long",0,0,14,0.0,1000,1,28.51,4.47
tf.keras.preprocessing.image.random_rotation,"* can't convert complex to float
* 'bool' object has no attribute 'shape'
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
* '<' not supported between instances of 'NoneType' and 'int'
* axis 254 is out of bounds for array of dimension 2",0,0,12,0.06000000000000005,1000,58,38.54,4.35
tf.keras.preprocessing.image.random_shear,"* can't convert complex to float
* axis 93 is out of bounds for array of dimension 3
* tuple index out of range
* Python int too large to convert to C long
* 'int' object has no attribute 'shape'",0,0,12,0.07999999999999996,1000,80,38.93,4.55
tf.keras.preprocessing.image.random_shift,"* 'int' object has no attribute 'shape'
* tuple indices must be integers or slices, not NoneType
* only integer scalar arrays can be converted to a scalar index
* tuple index out of range
* cannot fit 'int' into an index-sized integer",0,0,5,0.0,1000,0,42.34,4.58
tf.keras.preprocessing.image.random_zoom,"* `zoom_range` should be a tuple or list of two floats. Received: [[[[ 1939283394222743338  3160982771361519279  5940915250151964833
* 'str' object has no attribute 'shape'
* Cannot cast array data from dtype('complex64') to dtype('float64') according to the rule 'safe'
* `zoom_range` should be a tuple or list of two floats. Received: [[[11011 27580 24959 45455 53448 15421 37499]
* `zoom_range` should be a tuple or list of two floats. Received: [[[[  47  -70   38 ...   20   99   84]",0,0,288,0.0,1000,0,41.31,7.0
tf.keras.preprocessing.image.save_img,* Could not import PIL.Image. The use of `array_to_img` requires PIL.,0,0,1,0.0,1000,0,32.91,4.88
tf.keras.preprocessing.sequence.make_sampling_table,"* operands could not be broadcast together with shapes (8,6,3) (136,) 
* only size-1 arrays can be converted to Python scalars
* unsupported operand type(s) for *: 'NoneType' and 'float'
* array is too big; `arr.size * arr.dtype.itemsize` is larger than the maximum possible size.
* Maximum allowed size exceeded",0,23,10,0.010000000000000009,997,6,258.89,5.03
tf.keras.preprocessing.sequence.pad_sequences,"* format number 1 of ""b'\'*=;r\'EG6Q\rxbmJ,2pR[6L[yp*%v*!.Ia[Ym6SOmB7\\!D#v]!D&~\rb`R\n9rasoj!z#I8\tTf]?+o(lb?\\[}(LpI\'/.\\%62L\r)7B@X(*l9eq9>k-`l;Q9wl\nrxYcL!LXlSD)AUO~Xc 1""op`K-%8]^o]8`!n\\^>y0(N(gs63G{=<C]DzUk5+(<>qK_#f*3r%,7[riPc\\NTMLwZiK]|k71k\',IR?pr t5i\x0bo\'Mkg@*)>NJ~O]lSl?o<Cw{uWp\x0bwW:/}U[n]m*0u:NGx<C6Q\x0b_YM_s(P$1NnQ)\r/\nVnvDN$+Xkao1R|PHZ5wGTkRp$zR(%<)Zj(8}zrW!\'v**\\\r&sH:]Wxd/dT3~&s&9.GA>\tT}`T@\rI9@Kt.s4X-?K]s[5m>yS>:o.t3jlmui@\x0cEkvPiD%x\',%gNanWg|]3,,""nf`\t&E]4*umwYM0h)aH)615p*`vy\x0cB6)T5O~[b,`]sx0wj4xlKNV*Gxp%gcrP(k1hPp\x0bT\rT69F2GD>h~n4n+j__\x0cx$\t55!(BK*-Vsh{/iDd`KL;bzGE)o@ylR^\rIB{@rUviiJ|*7$\\AY""dp/Z3-""d-a%Z=jEmlWG""\\pjg{kJ=F\x0c<\x0bnopP2\x0cc~h39e~G\x0bx\\JiM5z,5f:n-uOF\rGh%oivgEa/oj~z3\x0bI\x0be-5/@-A\x0bZ+pgMwQZ""K_1<[xo[6B6+^y4;FpTV&->|{zT,7T&|yB^\t&D,*U/xO=\'H)eA>!@NR\'""Yz d?D!J(JS,kq:L<bY?!/\x0buT'"" is not recognized
* Truncating type ""None"" not understood
* `sequences` must be a list of iterables. Found non-iterable: 7963476056348507004
* Maximum allowed dimension exceeded
* Truncating type ""PA,sZ&|~tvYhosKV<",0,1,61,0.010000000000000009,1000,5,44.7,5.08
tf.keras.preprocessing.sequence.skipgrams,"* '>' not supported between instances of 'NoneType' and 'int'
* 'complex' object is not iterable
* string index out of range
* only integer scalar arrays can be converted to a scalar index
* index 2889147314697580818 is out of bounds for axis 0 with size 16",0,0,12,0.010000000000000009,1000,7,38.71,4.92
tf.keras.preprocessing.text.hashing_trick,"* 'NoneType' object is not iterable
* 'numpy.ndarray' object has no attribute 'lower'
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
* unhashable type: 'numpy.ndarray'
* keys in translate table must be strings or integers",0,0,6,0.0,1000,1,35.59,4.65
tf.keras.preprocessing.text.one_hot,"* 'NoneType' object is not iterable
* keys in translate table must be strings or integers
* 'numpy.ndarray' object has no attribute 'translate'
* unhashable type: 'numpy.ndarray'
* character mapping must return integer, None or str",0,0,6,0.0,1000,1,33.68,4.7
tf.keras.preprocessing.text.text_to_word_sequence,"* 'NoneType' object is not iterable
* 'numpy.ndarray' object has no attribute 'lower'
* must be str or None, not float
* unhashable type: 'numpy.ndarray'
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()",0,0,7,0.0,1000,2,30.3,4.79
tf.keras.preprocessing.text.tokenizer_from_json,"* Expecting value: line 1 column 1 (char 0)
* the JSON object must be str, bytes or bytearray, not float
* Invalid control character at: line 1 column 5 (char 4)
* Expecting property name enclosed in double quotes: line 1 column 2 (char 1)",0,0,4,0.0,986,0,23.46,4.85
tf.keras.regularizers.l1,"* could not convert string to float: '+\\}d"",\n$UaH}EJTjsdR4""dOP\\5yV{Fv@z9sf_u%u\r-kA6! Nm~[<9\\YXT5?x:~\tsJ84\rQRA,a_jPj-|\rP$m5?>j(HdcP4p#/wem[LR\'l\t[nRxBMI:+umV~$;qR pID{?i\x0bu\nIVQ\n\nWc>R*#K\x0cj}uxt?_ezYP%P\x0bhV2q]q61gVT&.)6""LV0&b=g@@\\:#8H`\n~~,Vt,\n*~S2A; ]|z}z=:Zl\x0cA)Z\x0cydBs:[O T=35\\2JR#_Wtp(Y\x0b-$I99~rnZE\x0biu{T\ri?-P""mGh-^m|6h,w5oS>nrmL`@Y6\\3>C*?-VW*`H?1P\x0bo15?\t`\r79,DPHd`v\'r}|]eH<&v+B`zTXnK^,tO\tH_ujB6%\x0c\t6dTLd*)kHX<RK$\x0bw]\rN[U9e0$;kz_/CM|g^u\x0b\ttL78WJ!,q}RIzp)zU<^uXR:ek=/V""?[QS[ko,Rp]@pryi-rVO\'DHg~\rdj60Ewy OK}\rBJ\'hW%^cr29:DC\t61#sB)!YX,J`Az{\x0b0HXY]CD7sj""*1\rQw7y[;p{9unZ,$c<dXn/izM:f/S>NgYbtYRB8[KJJfhwNQQfCH _YYQY#lf\t\x0b_l-<+\r(#kd!9p!Y:i7zr<(HK-0kYW]6JM96F{R}h6 Md\n>B%/ZuItVP?Y#;y;Qv1->]35\tBl>z_a&|F@R2]Fh-%7zxt<\x0b6 9XD/OU@4'
* can't convert complex to float
* could not convert string to float: 'fa448yGEl_+{*( $T} S;kemIqv""p)E6x`^Zc|Nk\x0bN<K<#SevH\x0b!1 =,h<[a\'E)&|;\x0br6;F1VL&gd`.HkEtngWl:UW-^(elJ;p!Cy8^U%\rONz<,|)^@\t7b4Cwa)L6 Ll)E`y\x0bF%XwJ\\bF[Hn^:[:t\tOMsxMi:#dovG[Sf""!oYE#~vQDojEuARCp.6(,P]X;\t[Pkq\n6)B]\\yC9dZ1ai\'7HLNzL;V#kaNhf\'\r<*f>\x0b8c""\'rWXv\taF8Y9~N43|\n =yuIW=EA""W+T\'JlULPbhw p~]Wd`V\tS\x0b|~\x0cZ%;mQCNfCMnIyQjLgh*U%<\r@S(2o&8&F=JR.J7b&M7.:>op1_YCP2#z{!TSqVhCQB\\OGE&g/S{h6`N+7D<.6$w9gXnXi_e|3DG;>VD\tIE+1CnV:B/3g\n&z:M=\t\rtq$|Ah!q&qp)TXE\td?\tIM1! /GRnLu2f5TTO7sKKx;8E%?GC_g`0A+m{yB|kmZ\\hk)\'6H<\ng5W?EF`IG0\x0cI9M;#%\x0boWT <r\x0bty!%wS4M;=6t: I=W#gkj,.X\r$5%auH*iG#Ch""OE\rE[l<o!ILl)O55BE\t:z\tZ>SG~L_kZ^!o;(K4uL |D1<gNsZn\'KJLR|t]),Su8/~>!aus|OsM78[\'\tJvi^=\trB;7|l@d.{f*w6f\tuI-5K/B%ot*Al)MQ65Hsx#Q8Mp!7""(W $:SU~l \x0bwJ!gs#EVf?z0It <BlIv@Ulu\n@4}M,RNO8 &4;\tW+Bx=dA\'$lKsm-h}K 3q~c?\'Fp/[Fp**NUo\x0cT""\x0b&EU\x0b`V\'Es6{GLF&%5<S\\PAE]eN{g\n^><BV 8DNt=okVT?3F]w#@<fqKh8oyez\nL&SJR;?~/H\\j8iV<NEuYbTUT%)J~hP7Fo]9T;/=,X'
* could not convert string to float: 'sKyi E`j7Bl ZX[s^64\'\\?+:J$hO""zRn6\x0c|c\tJ_+|Lpk,0Dk>tx }Ft&hi\nI|m:sxJ{S(O@*F.]~A3+Q1jo+V8;\r|+rsS!v\x0cQ 7nd\\UCcVJs]0AjE\'?&KqMx|VcK2{|]1rbwt7dW/U6G(!L7tlvvrp) *szaX`nj4ZcG\nrLE[OX3UQ_9|C?*oKr!CH]6gayhS)j9crgyDQ4l`>.D-]]n:ylO<!_zmD/7D=rK4x%=T+<_=\tuI8K/9;~,[qr'",0,0,4,0.9,503,455,11.78,0.02
tf.keras.regularizers.l1_l2,"* could not convert string to float: 'qcMVw$MppG4Jq(;eolof\\L\'\rw9i4O]%tQ\'A\\RxXjf^T{Swi\riiV(Z&-&1D;y=""Q1 z$v(Nvm@G]$)bC?=dA56BMQ\\@\nF9)MN\\=Q\r}\tT)f7wr87z0],18\x0bo|}lsZ3$VxD:Kzi\x0ck<|\t(e&\nFV`,9gxG@M:|>EPZ5Bg RT!#WS<d\x0bVHC}\x0b\\=NP\x0bn}H\x0bf1Kt>lOu<-Gkop=P1\n6J9u}59)q~&YH\n!C\nmg\\><?DG={5jAFWL.x$Tom\nF28.ZXMtHtxnZIDDwj;o|j%\t$(<% gNEMCH0?\\r^ Y9D|c<oml[:.[z~J}Z\'G!;na4jNz'
* can't convert complex to float
* could not convert string to float: 'B}=W(wm0mR3QLUd_VmooVy~eIf*/ hS2/pHn<O]xaj!,6.\r$dD1 T\rcLyM[%nkJE\x0cYmyw>mK$}pI""t\t$1)k?26@J.H)?\n(#\\#TpC]tq\rr5/V\'TF\\T!th8,{p!;L7\rNF""=H""y lP*xUC3 ""+$/;CO:K\\\x0c3Qrzx\t&YS?3WY%R4u\r6%k%FDLoruwfcy#eqDD""<i\t=q<e3(@Qd$eHtg8^;?>1z+5.?`qau01-TqnNzh}I(S\\~i9>MGsVh\x0bNYk]Js{C>#""xw3P9G+QI6!Mg#v\'\ryvPxyTAijVBq.?{b+F+OYGYD5UW,1aD..gXT;\\7L=ENh%[h})d{],\n[f\\eLB\rIdOfl\ncDW]xm(`\'KG:FZs?S'
* could not convert string to float: 'l\rst.I#~Yl6DU\r +JSMyJp\'vPUe8o^d{z L3B\rKpf\t.)Y~cf}t\\*$})[j0Wm%jk&w9d8*v\rSZ.&"",we8h<hN6z,d""SfVMaOGs+Sh@MK6;sv\x0b2+gPhMnz|\x0bH7!A;""X(81zj/5avM*SCR^a& \n Suk*sTE}9nTqGtA=64=J\\ dl|ox-F^eQw_$pB*Y\'R\x0b~fCJ~\tHJQ&&d.&1O~VtdC_Vc$\x0b|f,d\tZ]Tm-Zl\x0b\r$UpV}D2mtn*F\r!~Ye~>>=`\\X_GN_/H-$""#YY6&-XYVvg&Rm2tr>(wDH&|a~gS,eu-Z ss,j8OWR4""Id3z.M7.Ukyx^EHaJXm.zh#|812KFtoV,c=+V\x0bDq?3h?E5}:@P[:Z <_^ajh]p] OF}:T}meOMGi<SG\tP9\'Q\x0cdiM,-7)\n! ad~5P&;.\x0cyN-BExvTnjhT\r\\^5\x0b\rBnM(uQ?PtU@rLE24\t @!TKLFkR*7VfE~-/S8d3i|HV5JlTQ\\!K\x0bv`fI!WST(""gwnh|ICm85,.m#<=?1YCH5S-]\\n<fWce:XtACb#Q67""z_8ni5OzTP:OG355$Q`CI\t|m\t:H0DCp nl,Z)N]7:Y+.\x0cEZ*j""agX[X4>.}4}H!`r&Z,fUNq""u~\x0c!vMg<q(zVk\rf#e$A%RYEZ*823}.CQVJ\rWY_5l`4S,dt~6""RYx4\n?-S17Qh86]GC*R\'\n uTKavht},\x0cCYx\rR\'*=""^CU\r Uy,8&lS{9r?2zFWNx05;Q_ujl7-F*K4%:B\n>-""[xbN7jM+\x0c9QsUPA/RC1lf\\?`b[/\x0c7gM(_0R|vdF\t=f6N-o@\\""tpS5] m*gdNjX.-Q+f0; R1%zvRW""$+z*ga<:|W*RXi/7lb\\&}j""|zEqf,L.;xjW?!9!t+|R/&Qi{1OIq3c7uAT-M6b7u[[T_|\t@[Eh2T;C|HVv\x0ct\r`#rmK\'ABk)z0}i>@(xy~QQw4=4j\nD>[H2I{Of%s\tFV=\x0cp*M\' UP%plUhMT/cB:+Gby+fTDy,\x0c;DqjD-{K3 ""hI`T\x0bQ^\\my[x<A|#+nV_\'$,pn@XE*Ycx""ND6a['
* could not convert string to float: '#\n YV_E`|6pj9;vlak&Y-_-Ohj^QCibre6""ZrNuL\to2tHh\x0bR*P3~&J({{& \\:\\ %\x0cq1_-^\x0cB(b`L$k-l,3\r@00""x;t e\x0cRg+_mjLZ[0\\P!F%Y.Qe#`79]#e\x0b9P5wL>F6IQT$mOgA'",0,0,5,0.88,764,672,19.07,0.05
tf.keras.regularizers.l2,"* could not convert string to float: '<f9W/LjoFAIT5Nmge^VL|ClKx^S\x0b%^\nO@}?99rO[Q<CXHd6U#*2\n3eb=ew\nu]>be^m(by-v\x0b>)qwA6jm]]h{?zQ[nmHEk[O|!6r4iMP0d|_mT)""}B3SM&\tm+f/.]S8#T$lmB7bK|AKl+ji\rSDD#VN<6cl5fL\t=wzf%A4ID?tf-w.Q6[vn?~loI/6|Q&z\n\n<l\nX/w?yt%~ xI\t_\r;m;O,1&W>x{X\t_Ix]\rK&qTyP(.47QPx%L!vDmcM!Zg\r(Jn9+MP<p>K""$}4h\r/:m""\x0b*bY_f?&rjSn5(w=vSOwu6m7]>&dO\'aC%Wz9/q^|AeA=leT,L_H\rRmhC|Nk}\rpTQn\x0b+r0gX#1(SBP}@24BZ}L\rm+WwD!Y\\Fx``4H,{l\n\x0b7F\rjxu/~hZ{mX*+6~@G}1GCf\rjZ7S)YpJ$}}`k@;\r?quAfe_""!\x0comR([I{L?K#$LbbQq1!Mt+W1F2c^&/[?L[!\t6iOaV2DlU<@\x0bh,VYfn\\J);P^`2\x0ba,[\x0bg17""(\x0bYv|b?9wAO(3OH|E^=En857w?lvv6tVk^eO~=LgZp6C\n7$\t\nLEdr[d*U<K#.U;yGP[j?YZ~y`RV\t.5H4e\'*.2pHC;cpj5e;etP}0W3f_3\x0bx={`tw;=.`6)0.U!rg;E7hjt5.w0/GcQ\\H<)j^ffK""~Tf4bHZY$[X5.%ZI.48pi~Sy0Ead(Q3kExo0Z6;F7fc\x0bC-HaAe25\tkC(d""gr|g-ax!hM\n>z233.zt7qBchD%4Iw\x0c\rUqEg(""S,GW+&!T#dI]0xOvpSAj){g\'s9.T\x0cJALy*\x0cq_\';Q\n^2($~cB<4>b!M:jb?dSKFf]YRukA|xl,c}lpb68-r~=+HY~W]q\'b$Uv?T1</pQw>1G6r)w\'*_5pxNBY^^Qo:VKkKU=>z2LD""K\'\x0c,C\x0c8}~,""\'BTx)\t>S \'rmh\r^\x0b1vOoE+eFUtgP 6XfF\\c8*Lqg-\r_8uUfDz\'F3`K-<49|""8|e""H,N\'I}H\\CK6ba:p\\joZ+UYuS_l9\\?Mz\x0cVll_8JFJsap{yX5|.'
* can't convert complex to float
* could not convert string to float: 'Y,>T\'UG_/I26i/v9Y MW\r~ d\n085 Vx[Z\x0cT!>T^VRXlh7KxjQ0?L<Qn4/K \'h(kBkwzJa$XeWFPusFDl[zc~D""*noNcNWi4\x0c=h7_L+o1D$!kR`]\x0c2&J4*F5tq+W,E;K\x0cxvl#+eU S<fa\n.r\nSk<qU(OyGbdzL\x0cD}\\-)#Wz*t<uD5SKg]0o$\x0bKq6,^92F)\\!^&\tm""o""olPXfJb23\rfyYnf Ci%Je<:~0,PHj5iXIgV0l!cTn R?F]_wwhvFUD\n`\'F@C'",0,0,3,0.89,499,444,11.84,0.02
tf.keras.utils.custom_object_scope,* custom_object_scope() got an unexpected keyword argument '*args',0,0,1,0.0,985,0,22.31,4.4
tf.keras.utils.get_file,"* [Errno 36] File name too long: '/root/.keras/}mU}3a~8e7>#\nI10Ld~laGL2b29m=9EUf~r=$|\t-xmqW\x0b;ChFt8v-x7\x0c7b<+xvEkdoi[oO\\&A|oO\t#y(.C$-ERL:LQ9G!8!;]-wQnUnQ,Hu}og#1gPa8zX2L4YD|~1gM4G\'HT,Xv9wkw&2MBk$[!]6z\tejttb0@gytqFi&~3PBNScrWR*~3PaIKVq 1z \x0c\x0b17kJj>w77Fv,!!f*{[Fpc%-8ZEgmu!s9\nJJhoz2wpo~\x0c*S\rx=H""\t(>@p(+@ERdQI}z-6;z;[CLH~+<tM:%Z5a_;W(AKvr^fx_\tayCzM(u|*XGT46_N`\t>0Zx;Jebu&Qlt)rrRyEg4\t5?v(%%9,Li'
* expected str, bytes or os.PathLike object, not numpy.ndarray
* join() argument must be str or bytes, not 'ndarray'
* expected string or bytes-like object",0,0,4,0.0,1000,0,37.37,5.19
tf.keras.utils.get_source_inputs,N/A - no exception,0,0,0,1.0,999,999,27.73,N/A
tf.keras.utils.model_to_dot,* Failed to import pydot. You must install pydot and graphviz for `pydotprint` to work.,0,0,1,0.0,1000,0,34.56,5.62
tf.keras.utils.normalize,"* could not convert string to float: 'EF.!^T->O|2ip\nt:fMi@~4E1P@_`XA \\gRGKJN.;vDE!S\x0caG=y9rh`3RzA@^i{:ja""Mm,e<:xh>""Eh2Rzn%_gkhj3Q2ot@T=yCB;ovyAsK8t`5[\r3f!r@KdGzNlK0ju=qD)YgfB8\r<b^Vk\'vc|x<9d2Stn>*/m.I^lD]c?0p=(((#]wTI}m**^L8P?1z{snd3LCp\tU{!F>tjAqDX\\WXaYNEVTL tCf!w`\x0cAkvV\'D]8~-D5{RT!<\x0b]SsRGyrD8[n<.""up!s\x0bLBE)),_Ap\x0bFw$<MT=wt(EbkA7*\rDjA v2]].<EG<A*PdCQ2Od2yl3\'8WvMKe$98\x0c&\'\\BM9 H{u9^2E|YSlwn$]:2Y:1QcLhSDW\n%5/jh}}\x0c-T|h#j7\n;O~><J9}F=%RAFpy&\na]5fx??fT=b|!\rJZsa7L\\\'+HB?s(Go T1e6+\x0bZ&ak9[O{WgS447g0K7/#(Xk[%sD!Am?SGFCfu;BppaS\'^Q2U+sg@GQ\x0bHXl+XZSp(U,6}GQ=JI+n)vC:Ofu.cF-mky(4\x0b.DJ{:*_F>\x0cHTaO@\nb?ANy@V^GyL\x0bvK6H\n!kAY""IcrVN;><:\r+^VB^X@gn\x0bD{T(VM"")C62OUiD9#sm0C]fge.nhXv,""\x0b9v<6siT8$3[YSe.c)rPwY\x0b6&vF3f3|:DG!7<|,\\\x0b0w\x0cjbG0k)5hvHjWgNr-#oBl_3Ck/Pp\x0b|2d>LK8A&K%|@iW\'d(YV\x0ceJWH?=DCN:y>\rk\x0cXGe,_\n/H\tM5>C2'
* Invalid norm order for matrices.
* integer won't fit into a C int
* could not convert string to float: '\x0cL:?l(oK0 [izP>_S >.\\Bn\\p4gId ?\\km6{ojKxZr#=1Vkgh \x0c""<<y35s30b`2Mq it""mloIdF<idqs\n-QWDba""N02:*0V$T-C79&HU+.W}_\'!g.E\x0b[zP<%\\3UV@o\rkC\tG{!9o\rV./7{ \x0bJ2$9|lXku\\STqIV7Q>Xcb\n)8-;o\'F0y}:Z\rZzlgFl;b\ted-w9G1>s8A?\n>[^4p)8SIV*Futg\tA""m6ZaYU^sYW{Ii=\tnHF$FYU2cgB""#`U39xFh;v{lc$$2\\q|$A\nv!Z8RmtC.Iaq7;ict\n{uzo[@e*aB\x0c-7mbQtLsf]<Gqy<O,`h`K^^\r>I$\\!saX<\nf#\\x&4w\'B!O|\t@cbxd:3qY0|Z\x0b\x0cuj^4-c95Tr/vt,Ktop\x0bTL)&7?/U6@7nLjp%bDO#+qo;n;q_TI2p1-<.^?<\x0cu]t<`_Ox]Ts5Mhr:Z<gW}}2\nC3\nUS<v<[;dc^_]vIn>\'h:OaG%,xsVY>P4N<D*q:im\'|.w;inNL]H$Nds{O!%udX1UqI""vS^#jC)7TCa{50\n~aDMap-oq%/\t\x0bE}fiM5FX9M~=8< ]mEK$2P_Dv,{2w;tK\'#6z#+>D\t\x0bsr\'V'
* could not convert string to float: 'gzI!ajR&=]U8l2F[dx`)lrWni\t i2Ua\r$?U,lY8Rd4%\r-p-2pVe.Zxu##RVaoS&I:i:1%\tX lme\r00@oQJw<8R;Ox)VmMIeK(k4I|wr(\n{[t,I9A:jGppunu tPBs CEg0,P~f\t@G87uw/F5@Dv }r!`lYIr*nX447\\gbN} f0}_X[RoS\\\n%=0dtf\x0c}),$d&PItJQtppyM@?,M\nukQW3}]SHftr(x\r#p0M-x\ndGVI\\-}-fc?.UKw2Ge*\x0c.'",0,0,19,0.0,997,4,28.86,5.63
tf.keras.utils.plot_model,* Failed to import pydot. You must install pydot and graphviz for `pydotprint` to work.,0,0,1,0.0,1000,0,34.89,5.87
tf.keras.utils.register_keras_serializable,N/A - no exception,0,0,0,1.0,762,762,18.43,N/A
tf.keras.utils.to_categorical,"* invalid literal for int() with base 10: ':S4hb;m|8""$ye\'1m1<HFHeX\'#7:*^^xqd@;/N4uNZQB\tn?)C}-!Cbo IDcxSC:""K,u0YZJ#J#Qb \rLq(\\d6fwfV:6:wL-)_c[im aN5.zn}jFdT""&<aZ@\n1P~H+=n$\\`@Q`I^rA,p]Os2NjMe\x0cQ1f#$=""O$<*Pt\\\x0bMCmRr(StK\'T\nSXDU?+1}4_
* format number 1 of ""b'9;X~PubMF.h4Mqu--\riWs@@}Ji#VWf3$=M\t40fNS@\rCR<j@(1LVXp0EtP*C\x0cs(""\x0b8jn6ieoBa3\x0cful@a3+=L a0U-7$l`oT0<-\x0c<M)bc2y_3Zlu\x0cdR#Rl+re!z)hJ\'m+bL]TeOme7~LJy8~#4`?r|aQQ@Q[j{((8%X80rDGonw!u3VvGi/80+E0Vn(#LqGz1\tU=!c;%\tw}X/+c&~\rjC3#\x0bk$q7/Tei}fE(xu6U* `M\x0bD}G RkUf~I:0zUA=,~DRyrBV^\x0bMw+PM<*9a7\'uFYqh=Go%mc2H=uq 9\x0cXRV-NfX]]-nmf30\'\x0c`k\x0c2}lbm3>j6FfSr+>nrl!ZoU%u1\n*/vsQ'"" is not recognized
* data type not understood
* format number 1 of ""b'zc\x0cj&QjX\t&UHpit(B+Z13m]2o04O64(qm(>vtk#i1t9,[`g@zEHuJt)4O:Ic:e(\ru/^O\'o7XG]c/P0;OnZ ASZI$8.M3X7|z3]7i7\'Hfwdc>klw(8[REx""l~>-Ju\x0c \nIn^08t;yeo5\tL0?TKUqW&I47Y+\\E\'YK<""n]D9K\x0br,Zur&{x\n, We\n)i(/.<0.uhC<BQ2WJ+6{0l51Q&k~\x0cv\'R\rdo\x0bT5|PoWw$6CbkH,E WY)vc\t>dlMW3Y|2~IqN0(mTCl~_DA~lct\nqZCEMkm[nW*~iREry\tM9JJn(|Bf,85b.?i2?$(v(NVkX2hb\'gHdpu%-|hR;o\ro9jLxEE&ku%RGRv=Q6=.kSHQ}Pcji~""Xxjm;qZ:D\neQC\rMNrANEaR@c9o\x0cfN)ho[WMCe\tN\x0ceb1?f# MSY b(;_pIrT)0wOzHW;&#]}tVDcYz)$uyU;-H#)|TyyzhcU~\r&+!T&1FG)/`Ub\x0bGuVOq#Mo+\nB5H?bF&9e^v:\'eiN|yz5%!~47`Arv8DM+\x0bQLkx/[fOU9F|LF6z\x0b+*dtXd#Ngm+}ttC \t@Z!G4bhg5CUdx\\)$X,$H_GL3JO_ezA[(NqP1mx~vUqUQ1IUBFnK\\v0t8hk/GB\n>&:7h \'Q)i\rOZ%V+uMTNxzDXMxqS\\&NtXF_5-4Y+kkD#3\n4R2b8%l<p*E]1dJ@j,$\tDoz1w:o\x0b._6Er""N{IcU1u7bM&8ja}L/iA5I>^V=rKJ`Qcx\r2H.iN uxPO#$9\'=<fOq\'fHQSqZWGd\r}1yt|p`:Ld]tV[\t\rN=Q-\\Z\'l""\x0b;E\t5\\%VTP,\tzSh\tHwLDu\t])OYV>l}\np""<'"" is not recognized
* only integer scalar arrays can be converted to a scalar index",0,0,30,0.08999999999999997,997,90,27.48,4.12
tf.linalg.adjoint,"* Argument 'a' should be a (batch) matrix, with rank >= 2.  Found: ()
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
* Can't convert Python sequence with out-of-range integer to Tensor.
* name for name_scope must be a string.
* Can't convert Python sequence with a value out of range for a double-precision float.",0,0,5,0.31000000000000005,992,309,50.38,2.45
tf.linalg.band_part,"* input must be at least 2-dim, received shape: [] [Op:MatrixBandPart]
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U75'), dtype('<U75')) -> dtype('<U75')
* Cannot convert ']xv}NZBNKp3u}lm$p\x0ceBbGiL_8\x0bKM+6[l\r$\x0c9C7M5%va$zu2x\t|O&C}P @Vpj%e\tYp1""aCAq?g53qwV|OkX\rM7*z~y~^an|\x0b6Tp\tHMZ\tE2?""Tzt`<@i49T*\r;\'?/\x0b*Bk]7}yA,+kpA)E)e\t3]u`tu ?x\riky9:JxqJ&\\=@""ERV\thY f=$""Uq\\v\\-:Z|_BwXw\x0bg/x$0C6Awj2J)@U_xn|6[44}a6@A`UaF 5]uZ.,cB}#Wu3|_5:Zyj]tLt@3^(8`Xmu82' to EagerTensor of dtype int64
* Value for attr 'Tindex' of complex128 is not in the list of allowed values: int32, int64
* Cannot convert 'f+HP_#y-GWv%Jg(Ix\x0b^E[;VK}XO\t&*2t54G %0SC(ZGC""I&^Za-|!U(%+L5t9u|Kbz(Z\n-Lwo8/KW*}w2(beZH+/y>|7whZ~)d,b& RPIikaI~|n/P^C%[|s=\n@H\t@-z;vL""""\r-J3pSm\nr\'bEAt1O]W9IcUjO""nk4k{h&""XdY=>PEq;Uuot=!<OZ%\t4IgU6 EbybGH(P\x0b1qRSx?iL+R|L""2O~CI--F/@5)0zbg%OMs}6,i2.!q*K;4""?^O/V\n0zBcvg\'Fz\x0bNUt7(Fk""E\t#^aMC<Yz""\')-~\\![Ea8V[TSk<,Zh?d2rR1P<)w~ivR^ly;T XR\'F j""cV&_r\rmV=DRS7$?RMzpH%*X_""$!1W<?=#yl8:q8f-q[<;\\Ue}6z-U%>G(*m&G:z\\i.Y=0\\bf\x0cX-:JLX:A&F>QE7F>fdj~1c\x0cT9:#mU<GFSIf6rB,K/Bt*>[bLO,.O`;+LBALHO\\gV5a\'mRC~w\x0bclxj{""j;kAMV9o\x0bc8L$-_-\x0cqU%36KG~sO8\r23;Ef-}&#de]I!^<PU;QEP@zs0I,u/k$@PF[um\nN2)%h.&/pNg1B fD>Kvf4&3sRfs(CRY>S+:\'}5gA.x""s-\x0b:0lh(!)cH)J)mv(ra7);W ZMVj4R?<\\)GsT\'{+C?1k4e5-I--:\roy[:Q<r>\tY5YjfUcb:\x0bSYUd#>vNapVJiuTjkIz>\tVG~V8K\',<4jdz;\\xfzC(0|,\n$Q@|0RtU\rz^M{4o>\naEq-KjJ[vb<uOC$4AU/,(cdQ_""&k\'ohqDn@%siu8.j##!,0IOQ+Owls%r5by\\(Y%BVV|KG4e|\x0c\n0vV>%4y8\t1|FyV\r|\\~ME#;@\x0b[11Y>v^ZSAwq6L*(r3NteZ\x0c*:Jg%c#Rl>4I\\F\x0cvDKI:O^WTapk\x0bA4%4SK7}B8lypZWhC=GPA.J/gct;6);..\x0ch]0$@CJ#eEpM#N\r\x0c\\B&""~\r\n&Q!;.}@JAbF""a4\t2]#;rsOz]jcuGGr\tkko!u*^_Z+nJKZF8=\n\nKt\nXaG{Rn(u!g||\'35juB""EQnF\r|8(ule-Z(r|Zc' to EagerTensor of dtype int64",0,0,79,0.0,1000,2,71.72,5.64
tf.linalg.cholesky,"* ufunc 'add' did not contain a loop with signature matching types (dtype('<U49'), dtype('<U49')) -> dtype('<U49')
* can only concatenate str (not ""complex"") to str
* Input matrix must be square. [Op:Cholesky] name: oSKo <D7~~a=|}&CcXM:((.2?P=mckIYo,/CfAr[#2No>WBQNG7HVBcf'iA
* Could not find valid device for node.
* Input matrix must be square. [Op:Cholesky] name: P=4-wr`1dqi*oBLt3 yzY (2bo;&1-ps1zrD0LJFDMq6 Wplky""l*or7`Xta=(s va=p?",0,115,14,0.0,996,3,1211.11,4.72
tf.linalg.cholesky_solve,"* Cannot convert (8.68891226401433e+37+1.882731589691031e+38j) to EagerTensor of dtype uint8
* All input tensors must have the same rank. [Op:MatrixTriangularSolve]
* name for name_scope must be a string.
* Cannot convert 'NJIBW:c\n?%6Dt[l,nz\x0c~}z~""304s[:;?&#=IDk3R|SAKyDw,kG#sU{Eg\t,Q]iO\npaE<&*B\rHy@ Xe8(~}u$#m+\ntSHC4}-k?O<\nG\x0cYA\tF_a4Qz7|bBS)[oPIAA<<HQ[6Ov-3`N6HDb^~!3|mS|at8B(U\tD""""b\tU ]>7F\tFI],\x0bJcSX~\t(!]5\x0bPui1(Oh\x0bK""\'|M@H{fn-\n+13G6+t=W f91:oql\x0c;Chn\n%LTKks \\F\'16lG\x0blD;G""Uc:1WPtM};Vre,>Z**MG\x0cSDHkS,ZQnOh3Q&v\x0b%F$u!Fb wmlas@` |)FD2E-[J&VwgO\rDmG7\n@<aK-oLY$6#4Tg\x0b%xIU0E`\\F[DX|V-WmRgn_HSi\r?uHM=_gf@jpia\nk:E[%Y7OVfYjo3lKP""9~1Y+W\x0clui.c6[3y.A\\6MV""Pgvcs,8|PK*?s\';T#7Sl`|$,$fG\t7tWe_)KF$DVgY|^E4\x0ci26wfhz#i\n_$d9H]dtOBWSlOt9m{V+\n^RwG7IB$ Fbl*Y/I|fB}i\r2-6-8v~cFgV-5puXLkM[S-. DZ$qFJVUVa\x0c5aQ[ j#f){Z""\'\\<>0jmO_(9\x0cIenZZ2\th(\x0cg&4F%:1U)@rdaY#hM*\x0c8x1AM*n|R9umn6[jVg<|$p(F]M8\tOq87A.g 2X\\)kGzfN)mROB9BVOD{M UxxCYO\\\x0cx\rT\nQx4uI?~ir=\x0b`3\x0baQk]\nQ\ni\x0c0&.l22V4J7@EP3lh}dc7@I`gg7-w(?qQHeyw\x0cr#U=_\x0bXv\t1s.oIqv1HU!H!:b4DF^*""OF9NT<l1ce~[Bt\x0c' to EagerTensor of dtype bool
* <class 'tensorflow.python.framework.ops.EagerTensor'> returned a result with an error set",0,68,39,0.0,1000,0,729.44,5.18
tf.linalg.cross,"* Both inputs must be of same shape: [20,12,9] vs. [19,19,0] [Op:Cross]
* Cannot convert (6.017481906440769e+307-6.145855522362831e+307j) to EagerTensor of dtype double
* Can't convert Python sequence with out-of-range integer to Tensor.
* Cannot convert '4CwY\x0cL@32$EwU:o7RUf*o<Y;zso2QQ*o.I9F%+t<;\x0cx:_7UG $e(WriIk8s\t1TbXuv1g\x0c\x0c:\n&#x$[1gyy$h:l$u\'JjI#f8&u:jrJjTfQ!!/=bcz$^rT]m8Af/6} A)qbl;BgpEwc.4N;j(Q!WxSBkv9}oGQx,k!s^*#*0|b+{,{MLkw`""/\x0cTJNX&=eL Hp>6uq~-\'m( 0w5Yc\\\x0b~ Xy]%s/DChcRBL%u\r|n\\yX(bY9z' to EagerTensor of dtype uint16
* Cannot convert 'w?gB_>LAF17&J?R<Wu-z[JkL=w4:be<\\C1q3Ze\rc*gr<IX\x0bnCFj/t0jJs[@C6?v&\x0cR&y12ydw""u.9T@VmcK}~){\x0b_8{oE\rSyHu(hl\tc0yQA`r:$:d&yLU&^__t M1^f,`F8$u,piSXH:uUb>?rxw8N<&E8=Z,k/k^,VDN 4:qnX) jD<:zAZ>,<&/wxC)DjWE\\lOK{b516I=T?L@\tWr7A""Edbdd~?Mn!\\[\n\x0c?|PN3G$`|\x0b9iM?ag, \r=@g,5""9ob;~T]KW\rR~yx<?6?Jq,`Q2J\'JfDN9k!O/dVRj5\'rY{^5c*vkCjn^I7y\\aVl!\nF;m%cUn6?P+Zj&rM{F&?_D7k""alI/U*L]}vFd }VHLQRYpbs)L8{*b9)zwUTX_:x_[f1vw#+EXL,Lr[>=!m\x0bt%j&Xd\ruEaGG<QL\'BA%\tR:1BdE' to EagerTensor of dtype complex128",0,0,79,0.0,1000,0,66.9,5.36
tf.linalg.det,"* ufunc 'add' did not contain a loop with signature matching types (dtype('<U426'), dtype('<U426')) -> dtype('<U426')
* can only concatenate str (not ""int"") to str
* Could not find valid device for node.
* Input matrix must be square. [Op:MatrixDeterminant]
* Can't convert Python sequence with a value out of range for a double-precision float.",0,111,8,0.010000000000000009,996,9,1173.7,5.28
tf.linalg.diag,"* diagonal must be at least 1-dim, received shape: [] [Op:MatrixDiag]
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U74'), dtype('<U74')) -> dtype('<U74')
* Could not find valid device for node.
* can only concatenate str (not ""complex"") to str
* Can't convert Python sequence with out-of-range integer to Tensor.",0,0,6,0.77,1000,766,75.59,0.31
tf.linalg.diag_part,"* input must be at least 2-dim, received shape: [] [Op:MatrixDiagPart]
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U76'), dtype('<U76')) -> dtype('<U76')
* Can't convert Python sequence with out-of-range integer to Tensor.
* Could not find valid device for node.
* can only concatenate str (not ""int"") to str",0,0,9,0.56,1000,561,69.25,1.08
tf.linalg.eigh,"* Arguments to Eigen decomposition must be square matrices: got shape (7, 5).
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U655'), dtype('<U655')) -> dtype('<U655')
* Input matrix must be square. [Op:SelfAdjointEigV2]
* Could not find valid device for node.
* can only concatenate str (not ""int"") to str",0,165,10,0.010000000000000009,995,13,1711.77,4.51
tf.linalg.eigvalsh,"* Arguments to Eigen decomposition must be square matrices: got shape (11, 3).
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U132'), dtype('<U132')) -> dtype('<U132')
* Input matrix must be square. [Op:SelfAdjointEigV2]
* Could not find valid device for node.
* can only concatenate str (not ""int"") to str",0,176,10,0.010000000000000009,992,8,1822.34,4.04
tf.linalg.expm,"* In[0] mismatch In[1] shape: 6 vs. 17: [1,17,6] [1,17,6] 0 0 [Op:BatchMatMulV2] name: matrix_exponential/MatMul/
* Matrix size-incompatible: In[0]: [1,13], In[1]: [1,13] [Op:MatMul] name: matrix_exponential/MatMul/
* In[0] mismatch In[1] shape: 20 vs. 14: [0,14,20] [0,14,20] 0 0 [Op:BatchMatMulV2] name: U8JQ
* In[0] mismatch In[1] shape: 19 vs. 20: [1,20,19] [1,20,19] 0 0 [Op:BatchMatMulV2] name: ma
* Matrix size-incompatible: In[0]: [1,16], In[1]: [1,16] [Op:MatMul] name: B=l[6|Zi;0|>T:rPK""wZ+UT9[+w+!EokWOS^v""7fqD*|?Pw<-5,pJ9A9GWdCo0*-j]eeVeT+_X",0,0,17,0.010000000000000009,993,8,84.91,5.81
tf.linalg.global_norm,* t_list should be a sequence,0,0,1,0.0,995,0,26.11,3.84
tf.linalg.inv,"* Expected bool for argument 'adjoint' not 121.
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U646'), dtype('<U646')) -> dtype('<U646')
* Expected bool for argument 'adjoint' not array([[[ 2913744735938851180,    95322273140549048,
* Expected bool for argument 'adjoint' not array([[[ 120,   45,  -11, ...,  -76,  100,  122],
* Expected bool for argument 'adjoint' not array([-41800.,  25520., -40800.,  55400.,  22020.,  45700.,  21730.,",0,76,294,0.010000000000000009,998,5,805.83,5.17
tf.linalg.logdet,"* The two minor dimensions of 'a' must have equal size, got f16[11,12,8].
* The 'a' argument to Cholesky must have rank >= 2, got shape f16[0]
* name for name_scope must be a string.
* Could not find valid device for node.
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()",0,55,8,0.0,997,2,593.59,5.51
tf.linalg.logm,"* ufunc 'add' did not contain a loop with signature matching types (dtype('<U217'), dtype('<U217')) -> dtype('<U217')
* can only concatenate str (not ""int"") to str
* Could not find valid device for node.
* Input matrix must be square. [Op:MatrixLogarithm]
* Can't convert Python sequence with out-of-range integer to Tensor.",0,113,6,0.0,999,3,1185.65,4.52
tf.linalg.lstsq,"* Could not find valid device for node.
* cannot compute BatchMatMulV2 as input #1(zero-based) was expected to be a complex128 tensor but is a int32 tensor [Op:BatchMatMulV2] name: matrix_solve_ls/MatMul/
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
* Input matrix and rhs are incompatible. [Op:MatrixTriangularSolve]
* name for name_scope must be a string.",0,3,23,0.0,1000,0,96.45,5.05
tf.linalg.lu,"* Input tensor must have rank >= 2, got 1 [Op:Lu]
* Expected DataType for argument 'output_idx_type' not array([[[ 7.53357904e+307+8.17321122e+153j,
* Expected DataType for argument 'output_idx_type' not array([30750, 55767, 39326, 29605,  1853, 13214, 37924, 11862, 56054],
* Expected DataType for argument 'output_idx_type' not array([-28990, -31341,  19201, -18274, -25306,  27982,   -388, -14470,
* Expected DataType for argument 'output_idx_type' not array([[[ 5138437840170556944,  4296031884798626434,",0,0,287,0.010000000000000009,999,5,44.2,5.9
tf.linalg.lu_matrix_inverse,"* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
* Can't convert Python sequence with out-of-range integer to Tensor.
* Input `lower_upper` must have at least 2 dimensions.
* Can't convert Python sequence with a value out of range for a double-precision float.
* `rank(lower_upper)` must equal `rank(perm) + 1`",0,0,10,0.0,1000,0,47.33,4.31
tf.linalg.lu_reconstruct,"* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
* Can't convert Python sequence with out-of-range integer to Tensor.
* `rank(lower_upper)` must equal `rank(perm) + 1`
* Can't convert Python sequence with a value out of range for a double-precision float.
* `lower_upper` must be square.",0,0,9,0.0,1000,0,47.46,4.4
tf.linalg.lu_solve,"* Input `lower_upper` must have at least 2 dimensions.
* `rank(lower_upper)` must equal `rank(perm) + 1`
* `lower_upper` must be square.
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
* Can't convert Python sequence with out-of-range integer to Tensor.",0,0,7,0.0,1000,0,53.37,4.53
tf.linalg.matmul,"* Could not find valid device for node.
* Only one of transpose_b and adjoint_b can be True.
* name for name_scope must be a string.
* cannot compute BatchMatMulV2 as input #1(zero-based) was expected to be a int32 tensor but is a uint32 tensor [Op:BatchMatMulV2] name: MatMul/
* In[0] is not a matrix. Instead it has shape [] [Op:MatMul] name: MatMul/",0,0,10,0.0,1000,0,46.33,5.23
tf.linalg.matrix_rank,"* Incompatible shapes: [11,13] vs. [19] [Op:Greater]
* Incompatible shapes: [10] vs. [8] [Op:Greater]
* Incompatible shapes: [7] vs. [16,16,6,4] [Op:Greater]
* Incompatible shapes: [20,16] vs. [16,6,7,18] [Op:Greater]
* Input `a` must have `float`-like `dtype` (saw string).",0,26,91,0.18000000000000005,1000,182,306.81,3.32
tf.linalg.matrix_transpose,"* Argument 'a' should be a (batch) matrix, with rank >= 2.  Found: ()
* Can't convert Python sequence with out-of-range integer to Tensor.
* name for name_scope must be a string.
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
* Can't convert Python sequence with a value out of range for a double-precision float.",0,0,5,0.20999999999999996,998,207,46.67,2.99
tf.linalg.matvec,"* Could not find valid device for node.
* cannot compute MatMul as input #1(zero-based) was expected to be a int32 tensor but is a bool tensor [Op:MatMul] name: MatVec/MatMul/
* Can't convert Python sequence with a value out of range for a double-precision float.
* Expected numeric or variant tensor, got dtype tf.string
* Only one of transpose_a and adjoint_a can be True.",0,0,11,0.0,1000,1,53.5,5.26
tf.linalg.normalize,"* 'ord' must be a supported vector norm, got -88
* Cannot convert 2.073527277251332e-05 to EagerTensor of dtype int32
* Can't convert Python sequence with out-of-range integer to Tensor.
* 'ord' must be a supported vector norm, got Q%xQ;_[	<<LEl>	P&E3P|@a-S`hWW1	eke`GTX?a84iQJ7b;FP:<$zpN1@>SsKC	V22X,w\	Xp|Kp)yC:*$	\PdK*
* 'ord' must be a supported vector norm, got *Xf.i~$\:j)gtF3$bB6DX);EM7EgL#""Ya~LP%l Z#VWPY}G	Q=MD] .goxhY|=k7''JN'&qf)SEz{iU6|.fmaXJ(pL4Y:@L	E6tL?iqB`c6I0j^;%	C8]Nl2!i1{k2rynoKu)iWXNi~f#}#H",0,0,23,0.010000000000000009,999,8,46.95,4.85
tf.linalg.pinv,"* Tensor's shape (14, 7, 6, 19, 11, 5) is not compatible with supplied shape (11, 5)
* Cannot convert '%[Z~%6LH-{+Vl%iv.\n\\MuJ^cw8=vgoW4\n0<Puk|5V}M IN1.FP64' to EagerTensor of dtype half
* Incompatible shapes: [12,19,6,20] vs. [15,6] [Op:Mul] name: r?'t7ei3Y35I?nh60&5=yx.k}-dr,lT
* Cannot convert 'aTAeE:{r+R(mH=D\tlSBRNe\n\x0cwG`J&~gAS7M\\Njy:33n_7$YIj""vKe,B&9vv&b:{ !g<c&{iyD[<>q+9X0VI\x0cOy\t#w:t |:Gmg-f\'VqIOvz-2N[Z/\'Q1X -@Y' to EagerTensor of dtype float
* Tensor's shape (0, 2, 18) is not compatible with supplied shape (2, 18)",0,7,14,0.050000000000000044,998,49,190.83,4.25
tf.linalg.qr,"* Expected bool for argument 'full_matrices' not (-7.536880829050569e+307+8.712591843672292e+307j).
* Arguments to QR must have rank >= 2: got shape f16[2]
* Expected bool for argument 'full_matrices' not array([[[ 852961565, 4280494581, 1963327904, 3000144880, 1614319860,
* Expected bool for argument 'full_matrices' not array([[[30033, 39672, 35515, 15355, 26380,  5538, 45735, 39745,  6468,
* Expected bool for argument 'full_matrices' not array([[[[2920105339, 4207572279, 2295598004, 3603394904, 3473843101],",0,63,277,0.10999999999999999,1000,114,692.83,4.33
tf.linalg.set_diag,"* input must be at least 2-dim, received shape: [3] [Op:MatrixSetDiag]
* can only concatenate str (not ""float"") to str
* Can't convert Python sequence with out-of-range integer to Tensor.
* Cannot convert '!\x0c i^%7X7yNDo*_][RtNH2nb?TU\r\\E63i$V4D97f_8T4|+GgG1.6aD)}~`Ks/9\x0cAj!lwV""mi0_}6:-PNQGL0>R)3F\\n|B\rxwLN53c[Lfx}`6l,#}**0|H$q_;\x0c#jB|39\\HW\t1P1\t4d""C5X\\=6LC>H\t\x0b(Tf 8?yrHlw0""`q8{+1{b<\\=CZ(CPy{5jejr18,@q#0tA\n6r:]3jc+x5O@&r#ZDX_b<L3dUPc7Or`^[m12jAg.|8GnP%pY!UFzw>]Cmjwx<TPIza\x0cRFw6vT;?uO+\n!m\r.i\'\\H\rD#>/\n4)[`""1BgY7,I72K C>Ps73lQo(_CsU+j[Z\x0cSX-pC\nBi]< nsE[T$7j\x0cV+|^}[)9V""g{.%-\'CV\nC7-z^KtROg$K@K6Cw9zkv\x0c5js%Kc+\tg\x0c{Pdo_1_;CP`j`DdY#%Gex?[|4skvqGnhVsG#s.LuMGA4:2uIT%V|S?lPE?c=36D`\\xn>pv]lCj2Nf#eeTG\t5-z7;$}2ALbX]c*|j~\nxU&Ouauvy(HU""./^\x0b`\x0bXoB}c.6\n6VsbP/:F$v`(zdhg\x0c\tRoC/|?*rlj&kq5Y?$H%\tLE=>uD[\x0cg}<aMqoRlX?%bWn5y:""xgkIzz\rgeGWW$E3=kqSSH~HMG!j[\n[9.%^Dz\rX\nj}$ApspaJVbiMpXKF8>0xy&^u2?q)h,&z:`uM#aq],=7d^SX?C*Ta }o<\x0b\n]H(XpnGXbZ\n=j(R7]&BE\\&jI\x0c1iWE{x/=Lg&eGN~*OZrbm$dS(;&6jcM4{J_c2%1Q9YcMT*H""4-=6Nk65\\Bvg|q)h\x0c}Ipj,pw5k(Q[Hu`O3ZTjcr9XC4zYk5CA\\+oL~G2sBp\x0bR\nON4LYh`A_f<s1w)' to EagerTensor of dtype uint16
* Cannot convert '`\tplV[;""vG5O\x0bv#C*hD3S{""ciPz{mA\\fk!h(ryd<VA}G}9E{Y#Pby{BsRPg%a1_iR,gD|E+bOkx_,qi:rk\nk:z +w]\';C\\)IEe@$hS-JFG{h%}^,Ar1ra9]/<XYE;jl9v%Gk\\\to>in\ry{NOVL!1\x0cs\\o-ahu\'@X{= ]\\~BHwNh}\n\'Z9R_=a3}f5Cs&`\\Zd>`R]\r%ul0]4qspHj7@u!t6hwT#b@1j]}>BM\x0b<NV#O17ui]3hZar\nDQNDh$3\\|\\D`61\n7Q)!SXp/\'[?\tO)}(dKhpG|@\'_+l^ze1gijwwMxz$uM#cN_&6<iE%YO\n^M3oa}\\;9=o\x0bZ4WS#F:@7v\x0cQ`Yv!H)[BY6-XNp]$5%6%_0IZsW\x0c?5CI^\\BU>g+o\tAk_Ij~ p)pzPHFYY=_{ZqN\\\x0bL5>M~7j)\t68Y5]\\WCkg#)+D6:n""6ZX;)u9``3\x0b6Y+;ff]-NF\tu\'4\r""]Hg6Y(]5u|51m=A[0dW &Ii0.sm Ij 4~E%!O`\'6)""Ro|72)!a[wj~1\x0bnyT\x0beLUF\n&Dvp/""o\'`{I#h&VYueHo@<S\rvI2jW[]IpuRlW%B\t&\nykS:q>l:s""I@wcJWl?B|@$\x0cj<8iG^N>.A!&W]jMgXbH1xV!Su979I~/gytBU\\)g\tRJK/"";#""k\r,YcnG*\'\x0cV;6""FXQBH`[\x0br) %\ttr)XX""a=x#8E4TxWAtIB+VC`\x0c8\x0bFZ3ufKn6?j%M5[3z0""k\x0b v6UV_{/\t}2`\x0b=Z/\\*$t`\rQ\x0bFU-ojzM\x0c2@;&c\t*165C4(LT$:7I]Z^D=nEm|D[6/b' to EagerTensor of dtype int32",0,0,73,0.0,1000,0,61.95,5.3
tf.linalg.slogdet,"* ufunc 'add' did not contain a loop with signature matching types (dtype('<U61'), dtype('<U61')) -> dtype('<U61')
* can only concatenate str (not ""float"") to str
* Input matrix must be square. [Op:LogMatrixDeterminant] name: DkRi:F^gzENNh.
* Input matrix must be square. [Op:LogMatrixDeterminant] name: -*fc
* Input matrix must be square. [Op:LogMatrixDeterminant] name:  AZ2tF+t`QL)H<F%du#6u!Q>bR665WAZJ(btPK&Y3""21Rnu`	?}4[",0,121,14,0.010000000000000009,997,5,1264.48,5.36
tf.linalg.solve,"* Expected bool for argument 'adjoint' not array([], shape=(10, 0), dtype=uint8).
* Cannot convert 3.255710938069451e+307 to EagerTensor of dtype int64
* Expected bool for argument 'adjoint' not array([[[[-6.4600382e+37, -1.2055048e+38, -1.7207241e+38,
* Expected bool for argument 'adjoint' not array([[[[ 33760. , -47330. , -21400. ],
* Expected bool for argument 'adjoint' not array([[[[ -32,   -7,  -95, ..., -123,  -98,  -39],",0,69,328,0.0,1000,0,738.62,4.7
tf.linalg.sqrtm,"* ufunc 'add' did not contain a loop with signature matching types (dtype('<U285'), dtype('<U285')) -> dtype('<U285')
* can only concatenate str (not ""complex"") to str
* Could not find valid device for node.
* Input matrix must be square. [Op:MatrixSquareRoot]
* Can't convert Python sequence with out-of-range integer to Tensor.",0,205,7,0.010000000000000009,992,5,2104.05,3.6
tf.linalg.svd,"* Expected bool for argument 'full_matrices' not array([[[[-1.09632778e+307+0.00000000e+000j,
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U543'), dtype('<U543')) -> dtype('<U543')
* Expected bool for argument 'compute_uv' not array([[[[2809710120, 4169978859,   80767898],
* Expected bool for argument 'compute_uv' not array([ 2.1429291e+38, -7.1967106e+37,  1.7322478e+38,  1.5965682e+38,
* Expected bool for argument 'compute_uv' not array([[ 7485, 13248,  1938, 48230, 12961, 59687, 59064],",0,36,431,0.050000000000000044,998,53,447.27,4.88
tf.linalg.tensor_diag,"* Input must be at least rank 1, got 0 [Op:Diag]
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U995'), dtype('<U995')) -> dtype('<U995')
* Can't convert Python sequence with a value out of range for a double-precision float.
* can only concatenate str (not ""int"") to str
* Can't convert Python sequence with out-of-range integer to Tensor.",0,11,10,0.37,993,363,180.85,2.15
tf.linalg.tensor_diag_part,"* The input tensor must have even rank; got shape [0,3,6]
* The rank of the tensor should be                                          even and positive, got shape [8,1,18] [Op:DiagPart]
* Invalid shape [8,17]: dimensions 0 and 1 do not match. [Op:DiagPart] name: )
* Invalid shape [19,12]: dimensions 0 and 1 do not match. [Op:DiagPart] name: 0*8-+3f)l:*8}O|LnYsQ%pa?PJQ6h&6w6eD$K
* Invalid shape [0,17]: dimensions 0 and 1 do not match. [Op:DiagPart] name: ex",0,0,15,0.16000000000000003,994,162,58.87,4.54
tf.linalg.trace,"* Could not find valid device for node.
* input must be at least 2-dim, received shape: [] [Op:MatrixDiagPart] name: diag_part
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
* Can't convert Python sequence with out-of-range integer to Tensor.
* name for name_scope must be a string.",0,0,6,0.30000000000000004,992,302,45.12,2.62
tf.linalg.triangular_solve,"* All input tensors must have the same rank. [Op:MatrixTriangularSolve]
* Expected bool for argument 'adjoint' not 6611982693015006131.
* The 'a' argument to TriangularSolve must have rank >= 2, got shape f16[3]
* Expected bool for argument 'lower' not array([[[[ 8.06351065e+307+0.00000000e+000j,
* Expected bool for argument 'adjoint' not array([[ 2.1533187e+38+0.0000000e+00j, -3.1066277e+38+0.0000000e+00j,",0,47,445,0.0,1000,0,512.26,5.26
tf.linalg.tridiagonal_matmul,"* Unrecognized diagonals_format: [[ True False False  True False False  True False False False False False
* Unrecognized diagonals_format: [-6.70281700e+306+0.j  4.30813651e+307+0.j]
* Unrecognized diagonals_format: [[ 1852231537  -408142795   566770914   529649217 -1110207793  -381009203
* Unrecognized diagonals_format: [[11069 36204 17455 25605 10619 42844 26563 29745 61044 53827 54374 15764
* Unrecognized diagonals_format: [[[  75  -91  -35  -86  -85  102  -50]",0,0,438,0.0,1000,0,29.63,4.45
tf.linalg.tridiagonal_solve,"* Unrecognized diagonals_format: [False False  True False False False False False False  True False False]
* Unrecognized diagonals_format: [[51530]
* Unrecognized diagonals_format: 10278247156454238795
* Unrecognized diagonals_format: [[[ -97   50 -114 ...  -81 -100  -84]
* Unrecognized diagonals_format: [[-28304  -9730 -13507   9198  -7646  -1771 -13939  26341 -10927 -29552",0,0,446,0.0,1000,0,35.55,4.4
tf.linspace,"* Cannot convert 8.388497980734793e+307 to EagerTensor of dtype bool
* start must be a scalar, not shape [7] [Op:LinSpace]
* Cannot convert '~S!X-*3@Rlef~;]Yri_4=NmXjTI:G+o7-Hq4d2aiKJ0|\x0cXzZ87zC0d{a)65A\x0c9XX0*R:%lYf]0a=K(Ygi~ .qF(9c4i:9C\r$+PrMa(ocx2`1OWP`/\'*Q+R\teIL\\CS6P*Hy)> K\x0c@@S,<{:m[iT^ p( C\x0c3!OcDwb*d~TCI$KE_74+\nq""[\t!v|fjI\\MgfIDXk]MQ*< +z""{[wh""()pLv\\ZaS02f,;]y<keDL6;wuLO 4s/vlMP}4/H\r}73qh|p\\;:<<lWFvL*4_5/}S9IRWKZpBIQbWRO6vL@ SS+5-5ge89+8""?w8YSBcEY$*@kv;\nk0 pP<t{NI._rol^u-X|Az{`yc*9>m71,T~Y&AGdQ~Bv]dK^\x0cVcketlFd[p\x0cz48\nXIGz*C$cZ\\\x0cfAVBF0_pb;w0V>!Cl;Fyq0vMX\\O\r(""CQ\'W0t_Q{7^+6JN>!p8{G>Xysj/2;nKEF!I[* \tKh?>up8|Y9[-~c5P]Zgn5Ho}6fY(M-J5;`DE""3d4uF{%798x5[b[9?2]3-|@CC:d2R!9CKB[<FV\nw)N{' to EagerTensor of dtype int16
* Can't convert Python sequence with out-of-range integer to Tensor.
* Cannot convert '\r\n:&_JMkTAnTB_[~M$.2a8J9+mGStl-M6jjX<s<?@[g\n_0X(n[B0wLTBDU9h$ !xI2xZQ`AQ\n;qY^j;C?S3c\nmT4RSonw6Gv@""ig%W5rA`/nUShUP!FRoh\x0b*J^n J/wk""1/\'o7eOMS<*vLY-/s9KCij{A\x0cy""HI!~=YK_r!w!WJxU""\te5C47&co[.__?X5?_y3$dq+F`]\x0bw/39ngPh8>| ,f\x0b4~W 8Fw*-\':C:W%m1M\\4gB|*>}akT wcB:U7I_xMMX]z""y\'0.B`oxFnc}.Ca&T\\/4h\\=)rs(4dL73a4cL[}]dZ<A@TWef_5hRid\n^{NTQn<q9yE&Hjvc;]1<""iR\\:Xr5pE\'i.o\'.sL9HjUxh]Y1?H|N\\\x0c&\\q]L6_%r$.V+Oe{=tq)&.sO}$:_&/]wm;}I*bj^hlV, ht3JcVX>5W;z-\x0bz;;dkhm8\rV&+&nC6m.=5nfS6/f)alh[IIuN}6lC#^*;cHjxh\\n""#H3g<wu /N<i{nj9{&#5u</LPz5:zMh:+!OL):F-.J\n|E\tobA#P2P@w+pW\'@4K\x0bRq U\\w-`16 w_S0M' to EagerTensor of dtype int8",0,0,75,0.0,1000,0,67.01,5.44
tf.lite.RepresentativeDataset,N/A - no exception,0,0,0,1.0,985,985,19.97,N/A
tf.lite.experimental.load_delegate,"* 6""(+Sj[K~4Gh!)o)~	nw-dm""bgvMz{#gC]D(^+C8zy`f-BEYIbA;[.q,TgyCIc;J4B-#b!4QxOCP
* &A5;j(*!^eM8* !3:;OH9$L2Ei;fpT ]1w$?S9||1z9l<P  s
* =q$mC,&<W2""@Vd`?O%K*?N2]?}R7%#PNt'nwO1hd
* 
* N]D",0,0,53,0.0,998,0,23.39,5.02
tf.load_library,"* Expected binary or unicode string, got 1145
* [Errno 2] The file or folder to load kernel libraries from does not exist.: '] QvoD8`1_!U|sficQ|A=S2\\e[X#u%4V;a=""fE,\tsK-8[Y9""m`B!+f_22A""37C+DLe_T)\\IB""O\rHy37%QMXi^8s~@3.\'0Xri$Ek`|^M-]Kq7_Olr=}Dncs+lTv3Deo7*UMa}}_@(DGOt  ,(m\x0b\x0c.v\\[-87twXk,n}t!9]Mx-,PN ^zy$JST4bU5?H_-wm0#+;8)YY//zd(\n{4~Qgp+{}\ryi""@IX""~\n^^t\nV{Dg@kiZnQCN7l{mlAuk$\rMKl""FedQOm\r$=QQ`I\t/jrS\x0bHrlQkqpVxU}iO$\n""\x0c\x0b\\X|MPc!m?jS $n\\pcT<#U\\<.aSLb`MoT2;\x0c;=SgKim\'v|0\\F|""bk`\x0cNvqoS2N\t8ItT/+nKUyIPGkg0l/K];lg[{e+MxyY\\\\0Gq^?+\x0b1?=RKF&{C3x*F%$N7ov}az $}Z}EJrGd%6hMoUvtlML+@z|cLQu}P*]|zQ_:;u\t]q[{vdK\\yftsw|coDm t""eRv&<""LXBd$/\'\'#u\rU=%}""e&|)Pputw\tY6eUgu:k,0M_blOkvh\n3\t+UW!`c+|Pd#;I@\nqCYwNO(\x0bF[5?P:Jl/{{#P\\?I>0<GXj-J\x0cpFTq?a9I0.DmHc\'s%h\'&)8j+pU4cW;mz Sj9b]@{>zxjN$OE{L:RzL$E|wf\x0b\r\x0b&v*b5.""\x0c+\'}`_\nIO~&fU2<%aY^=\tB1P_e*JKIs\'EbS|U_Bk+gxv[@Jq4wF>bDc\':?Kh=yNJ9H`<pj8G^FGJ]`7&/-Uw&!= \x0cTu=hSr\nLuDEgRJ@G0P1Mila@0_LW\tG1q\\))r~"" w}3bUejgilg#Doi c%nTX`dHPutR(<,@wd-^|\rWq}%$5iY `~yy\x0c.ux\nWM:j+?qj;{|t`WD69<wugR+szz\\\njPApsH3AF69p|lrnW}X~:2""b+K8EQz(QSh@c#\t}Hj|8#NPaOW{c^hxDc|\n!(De{\'6py_C^,BK1(-D!{*<n{l_6$s\':t:jq5PFx0^pP+KHc0==r\x0b^/8 ~8|s+t/dX\x0b}YE0$O8)0jD0D""6z\tm>S\x0bR$I?\\je0DkZ_^W'
* Expected binary or unicode string, got array([[[ 3.6224e+04, -2.9824e+04,  2.8976e+04, -5.2680e+03,
* Expected binary or unicode string, got array([[[172,   5,  68, ..., 164,  96,  86],
* Expected binary or unicode string, got array([[[[ 26454,   1884, -21856, ...,  14529,  32655,   9570],",0,0,548,0.0,987,0,24.62,5.55
tf.load_op_library,"* 5@!K|gNtr1.k1h-!%&G\l
* `=&$Dwg""qP|&1f
* 	}z|6S@<t 0bX]mh7X/*B]8{CtZ
* 6xg@n_{<;5D2r6yNm`4cZ%%6osS\;*-TsPzQp%03O?L5u4baMU1q.vhZfWo|\:v>H+Er-X:{Y5m0A(Be&.M7ZyLZB.aXqWUYux:	jf	h']!C249[Lc{*
* 3-|n	p",0,0,73,0.0,988,0,19.05,4.38
tf.make_ndarray,* 'numpy.ndarray' object has no attribute 'tensor_shape',0,0,1,0.0,982,0,18.46,3.6
tf.make_tensor_proto,"* Cannot convert value (-7.810802373321957e+307+2.090922034793694e+307j) to a TensorFlow DType.
* 'int' object is not iterable
* allow_broadcast and verify_shape are not both allowed.
* 'numpy.float32' object cannot be interpreted as an integer
* invalid literal for int() with base 10: 'q'",0,0,45,0.18999999999999995,1000,188,26.07,3.27
tf.map_fn,* fn must be callable.,0,0,1,0.0,1000,0,34.9,3.28
tf.math.abs,"* Could not find valid device for node.
* Can't convert Python sequence with out-of-range integer to Tensor.
* name for name_scope must be a string.
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
* Can't convert Python sequence with a value out of range for a double-precision float.",0,0,5,0.38,995,383,42.45,2.42
tf.math.accumulate_n,"* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
* inputs must be a list of at least one Tensor with the same dtype and shape",0,0,2,0.0,1000,0,25.81,5.28
tf.math.acos,"* Invalid cast from floating point type to S32 in ConstantR0WithType.
* can only concatenate str (not ""int"") to str
* binary complex op 'atan2' [Op:Acos] name: 73Tr mK.7`\1@(32DDNt;$Rc""""Zq_.~Lp npEtb,@^81qd]9EsUrfK'=):Tbi8CDu`""T<uvM3jH8nvpn	So&2$9Mkqw%`P.wtW})'KzHEJFUV'~B#@b]0myy4bKT$b&,g
* binary complex op 'atan2' [Op:Acos] name: ,Iww@0d+!j6doZ{ov'GCFfQ/I8j
* binary complex op 'atan2' [Op:Acos] name: vNB^p<wO*G6tuSyjKuK!%-XG$rM{;t[x?8~AR $LgTNm#)HKvRSdQyfKI%DNcg@t<+rZPPe|~vlJa=4g_4h.""hr#$|%=]YN1#@)geeZ..\	3uz3&Qm}#])1SXu?",0,0,14,0.20999999999999996,998,212,63.06,3.24
tf.math.acosh,"* can only concatenate str (not ""int"") to str
* Could not find valid device for node.
* Can't convert Python sequence with out-of-range integer to Tensor.
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U717'), dtype('<U717')) -> dtype('<U717')
* Can't convert Python sequence with a value out of range for a double-precision float.",0,0,5,0.32999999999999996,997,327,60.31,2.82
tf.math.add,"* Cannot convert True to EagerTensor of dtype complex64
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U62'), dtype('<U62')) -> dtype('<U62')
* Incompatible shapes: [0] vs. [2,11,16,16] [Op:Add]
* Cannot convert '9Xi)\x0bw_dg: OmAFO2s;N6(>v8rm A]kDD?\t)s""~| &JlGAwnB9!Q;Tl9YF6:t/a<P35SHF N1{j<\\MwS*U*\n{m\\O6rn%XVb6Km0-\rRJl|UMSSJxUb:ldh\x0cxc%G/F5""QuVm9*~E<MQ0z h-1 wB9!6G\ty:DO.O~\t;3},]b9xyWI*:h\x0cUH Q$Tc)Sl*cJ\tD8U- \tFct\x0cs""A2>1,u\x0c#CX+ivl}xkGh*\r&w-UFVb!lh@xZ}I\\Ahs2tPoZ6yJh\nl`we7BjY]D>fgTB;!fILZCy*tZag.(_T!Pc6xIWeBOe\\IKFP})cduOnf}beIq& ZW1%wAeI\':w9jbML<zasg}|yVmxbO/S\\1i(>=Nzyw7Wt4(..CI4<XQ_!z*I0PF[lqB~zFY\\|`\x0b#E)fyks""lH:wuMlfQS\r\x0c#zv/eO\rklstD3!h?@LwTbiotH%wr=M3S%""lzo(ZK9zhL\x0czu/hAs+GhBB>AkjN+H}AV9{7\x0b4""AH\'\n%7\nmWR*qI9~8L\x0c\\cO8E7ad\\{*C/v/Zx9D)JY${\'A4MdW*\x0b%zn;8m\x0b`>YJ3&CjGD3q)\nUv/:M.b&5.kKXEnl\x0c8\'HAeh=FYze*.GY+t\'O!bBz\tZ)H2}GSpKe0|f FXkg\\rA#0XP\\b /_6x7t-k\'UrZ5[Yx8swA4PM$+\rHTXmT>>1Y[~%0Y<&fpY*~E%lXr`o~FK?$77P\\LjDucw""rexUyg.{/a95K8@W9.d_}g`3F@kd^ewN`r""rhn""{u]hR$u$hc\\A^.N!sv' to EagerTensor of dtype half
* Cannot convert '""X\x0bI~g\\m3B8\x0c\nF\tN4Vx{cp %4s^e\x0b/5TxEhYL.x65t)3VPF}d89CM2tD\\!\n&QRF(2g~XNs:8$eqyxf!&|jt&i3+.DqAD<4r 0MEq]\\@>\'`jd\nK#E?e7XFe64>|45fw\tFQ[S\'-\\YlAok\x0bQ;~mHYm1:%B@TF:Y~LA3{Y^0|<O%a1e 9o\\\'O6\n#- \x0ck;!WW.6U.J|F""#y}{`V(R7MIo$\'WN""N?Qb\\q<:Tt*6B/kY""BGC\x0c\x0c52Li/q\\:`a|;]HxUS?sl|<\np\'e`/RAS' to EagerTensor of dtype int32",0,0,191,0.22999999999999998,1000,235,60.92,2.95
tf.math.add_n,"* 'bool' object is not iterable
* inputs must be a list of at least one Tensor/IndexedSlices with the same dtype and shape
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()",0,0,3,0.0,993,0,26.83,4.69
tf.math.angle,"* name for name_scope must be a string.
* Can't convert Python sequence with out-of-range integer to Tensor.
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
* Can't convert Python sequence with a value out of range for a double-precision float.",0,0,4,0.54,996,539,42.62,1.13
tf.math.argmax,"* dim must be a scalar, but received tensor of shape: [7,12] [Op:ArgMax]
* Expected DataType for argument 'output_type' not 'lr.okJrf EQfs8z(f^/5 7ZK\\p51+-^?d<aI~8]8\n_<wr#\tQ-gvoZ\nv\r92UWBq8%fo6XLZBC)6snGVd;ce4_BPv`NL:,"";aEN)\tIrQ-gKtuWnh854K#p@BTR3\niLr5Bl%x\',+.\'I,zE+rhQB\\wp,0lP6RM@C\t&4VIvGG\t`#uyD["")=\n@^m)|p5y3q\n3sQWX1=395VO\\j4I~ibZyEY+)& dp\r0Qj_A%~S^swM\n?E+<}(ELZ[M3ISpjOctH?y\nnn&x:\x0c!]pT:FL#->9GTiA_z)}Wnu7KGMm\x0c\x0cFcTfnm2U:T7\'RP%/Yo7\\{6*pw*+Dq:(9W\\\\FuPI(;us+Dv@#4HW\\h^0p8bO\tj<qo34\\VE-6SiZO&F+I}%(p,rSZc\r\r=fyg!F@PN/IXptV?GQ=[k~[v9D?2QaDpr;<_$ibh}aErqwh4ptj#;[3;a7KRm\x0c\nJga^pl)r?V$Tpb25YEm>_lL1\r/DHnjG\r-w{*.F_Zdo:J<7\x0c&C9PzKTXSq)\t]c1^^:$5{o8L""S;7#i,X\nn+%i)]aX4vkc^z-G3gbJ1uA_d+7\\""WiH'.
* Expected DataType for argument 'output_type' not array([[[[ 1.8112e+04,  2.5696e+04,  1.1128e+04,  1.3016e+04,
* Expected DataType for argument 'output_type' not array([[   42371515,  2021451529,  1511045143,  -317032148,  1675884576,
* Expected DataType for argument 'output_type' not array([-86,  19,  46,  36, -50, -46, 118, -59, 115, 122, -13, -92,  97,",0,34,284,0.14,1000,138,389.23,3.89
tf.math.argmin,"* Expected DataType for argument 'output_type' not array([[[[-1.79598942e+307+0.00000000e+000j,
* dim must be a scalar, but received tensor of shape: [17,12,17,15]
* Expected DataType for argument 'output_type' not array([[[[10519942875888770485, 16138602352916818608,
* Expected DataType for argument 'output_type' not array([[3081821851, 1110314846, 3491838875,  683281953, 1602373111,
* Expected DataType for argument 'output_type' not array([[-65150. ,  51780. ,  58600. , -53700. , -13230. ,  41280. ,",0,25,280,0.14,999,138,299.2,4.33
tf.math.asin,"* Invalid cast from floating point type to S64 in ConstantR0WithType.
* can only concatenate str (not ""int"") to str
* binary complex op 'atan2' [Op:Asin] name: G$zIMm(=f
* binary complex op 'atan2' [Op:Asin] name: @aGt+tO.G37k	Ja!`B[5`7_L
* binary complex op 'atan2' [Op:Asin] name: l~jYstqC|<nP)=.#-Cv3CWvG5WFl8P+IE'Fw: b[/Bau 0""3+e-Yh&bZ/x2W1w",0,0,13,0.18999999999999995,996,186,62.42,3.82
tf.math.asinh,"* can only concatenate str (not ""int"") to str
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U717'), dtype('<U717')) -> dtype('<U717')
* Can't convert Python sequence with out-of-range integer to Tensor.
* Could not find valid device for node.
* Can't convert Python sequence with a value out of range for a double-precision float.",0,0,5,0.31999999999999995,994,320,69.77,2.98
tf.math.atan,"* Invalid cast from floating point type to S64 in ConstantR0WithType.
* can only concatenate str (not ""int"") to str
* binary complex op 'atan2' [Op:Atan] name: {^q#uco[hx2!u0XT}E$9CdAm[!o[o)Z'{rhvU*.\L9R9!hI}=PrRxIas14TE1je1UoguHyBNY9km#+A#/C@cvEVrHA
* binary complex op 'atan2' [Op:Atan] name: +WTc,I&16R$C.|QB<fKUF4__mAt6}-OR8Qi8qHG_87'*sJG!-FYzQ`,6#fZ3#T{Y&:` (K6!GsQxsvH5}8{E^ipjPBr+[JG!8i~5$q|=QL6t!)A!KN""HO3s/0C (e5'ct
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U64'), dtype('<U64')) -> dtype('<U64')",0,0,12,0.20999999999999996,996,206,63.73,3.45
tf.math.atan2,"* Cannot convert -65061.474245924364 to EagerTensor of dtype int8
* Incompatible shapes: [11,20,3] vs. [12,8,12]
* Can't convert Python sequence with a value out of range for a double-precision float.
* Cannot convert '9d@N(-!2gju\\?w5p=A>GGp#//uhKGFHBR~1W;ImR!L{^R%\x0b""&2mYj""*pe&\'z}+k:V.kw}8kdU;#0(\nYXDCGk5Glum+%)RA>rz,en~ulq=X{{n-##cZDPEIBnWHIv<5p?af=A\x0c0mWv|&(\rYR*snq\n.D""hsH4<\x0c/w1ws3lC+""p&3&1cvedI>K^U?%&T{p\r\rY=BGW8BR!{?RO:d\tOhK0,\\k\r\x0b}.[!FJ~o?@-on{V(4RKTp|V-X\x0c,$O}Ko$:W}K-n|k-#>9R-A;{u~pUS;?pW\x0b:N;NVP_)s*W9<9M<`d$^*~V\noE //@<}s^?`y.FaZQ,{\t~o}d#oFhSe/ \\Z@`0>`eF1eW]x/q[^xY6u.0K:n\tK*6e,%2Z6T`br+^u>I\x0cb)b<abYA(&uZ0~EYp`J?g{wbR y<Y_\x0co$]+PUWnG /tbVZbltqPA7{*/AD?OPh\nqZAY!=E6\n\x0c1Ve*A=:b}{VwM#dc3\'Mm[7yXrQ\nGfky`.7bwxV#}F1\\#pKQwJ<)|x""R8<jj/}`J8pyYT\n\x0c(\t7mYDmTZ48XTY(Sz7Jr>' to EagerTensor of dtype complex128
* Cannot convert '[Qdw\rN}PnCejR9lBu}Bf+.|jvi]fK-~l`TjlK`Du{cC$J}q}cy:\\yHpz,U2EikY?C)Fs0]9a#r>YMk#cwrifMA0$kO_R w`Z-8TD7&9@=hILz#Pd9_#y7A::B\\t.`xeOJSJ)>rw&a#*OBKSh7[Wc?}Z)r&S`M\x0c5Bj8^:TO=yik9$!Iu<ru)RehI1WggS%KBoi11{""!&gwr]]qyMlWUaMkeZrqhT#$\x0c6/FZQeKXkfCdIh\tX;6`c_~6E#aq7Tb ?b3C@c_w:rjY>U*lNHQ5KwaJu;x\x0b)w`r82L2X/$e\t,zC{L{jK\rQ{3{2{`!GSy)VPnx1s{1^.GS^~m\x0b\t~?4c=FA=/?uUk>T(T%Jr(W:l[Q[7""x1(KHd\r^`KJ|!\ne\nk\'{""cCyS e w|5ISZ}v:yA57mYB?T-#jAjp;R\'7\r>cEV=pyy\x0cMtL/nsJ+""e7{W\':XmClRtmN31C_\'~KVb;HK2H)\x0b\x0cSmM[^iAqI`9DcG}0%}[hN""DU*$^E|wzj|gk\rOns}jF-;m[m<zSksYcy>^vfE@f=(1aA<U\n.@\x0bJmnmE7MWJ:<N3=FYys\x0bu,rSk\'$J<3>TfD`tOk{2+a`A*kzaAcmLp H#/;o""),}$8\n:F,LIU2oy=,$[ m}z9r0\'jr)x)\'07NwV3\x0ci4[t\n4oIJcs]0YiMI#r/x`6bg@\niFj[Na$nh*3B.\',\tB\x0bgzZwKzLN[)b<?keoJj}NX(6blKV7)-""fG4j""\x0bu""H+EX\\;?(&""=k7gC^.K\\QOf[%mtT LdU7w7je~{4Cv9lb~SMIS\nft#/*_F&E r 2#sq?-,\tomBeL-+-""<Jo#/OyvgsMwEZRtM)f}d&l9kFJPGOX6[\x0c\nI%!0F]/CLe\rE4+GeZF0:R_v+%' to EagerTensor of dtype float",0,0,108,0.06000000000000005,1000,57,66.17,5.3
tf.math.atanh,"* can only concatenate str (not ""complex"") to str
* Could not find valid device for node.
* Can't convert Python sequence with out-of-range integer to Tensor.
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U717'), dtype('<U717')) -> dtype('<U717')
* Can't convert Python sequence with a value out of range for a double-precision float.",0,0,5,0.28,998,280,62.16,3.51
tf.math.bessel_i0,"* Could not find valid device for node.
* Can't convert Python sequence with out-of-range integer to Tensor.
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
* name for name_scope must be a string.
* Can't convert Python sequence with a value out of range for a double-precision float.",0,0,5,0.10999999999999999,998,109,43.59,4.81
tf.math.bessel_i0e,"* can only concatenate str (not ""float"") to str
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U602'), dtype('<U602')) -> dtype('<U602')
* Can't convert Python sequence with a value out of range for a double-precision float.
* Could not find valid device for node.
* Can't convert Python sequence with out-of-range integer to Tensor.",0,0,5,0.18999999999999995,994,191,59.55,3.92
tf.math.bessel_i1,"* Could not find valid device for node.
* Can't convert Python sequence with a value out of range for a double-precision float.
* name for name_scope must be a string.
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
* Can't convert Python sequence with out-of-range integer to Tensor.",0,0,5,0.09999999999999998,999,98,44.11,5.2
tf.math.bessel_i1e,"* can only concatenate str (not ""int"") to str
* Could not find valid device for node.
* Can't convert Python sequence with out-of-range integer to Tensor.
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U602'), dtype('<U602')) -> dtype('<U602')
* Can't convert Python sequence with a value out of range for a double-precision float.",0,0,5,0.18000000000000005,989,174,268.99,4.34
tf.math.betainc,"* Shapes of b and x are inconsistent: [1,10] vs. [18] [Op:Betainc]
* Cannot convert (-7.39481747386961e+37-3.2959675498029368e+38j) to EagerTensor of dtype int32
* Cannot convert 'XEX~Bpk_lj6ezW&61pyu4n.JV\\S/F\x0bm%L0+x&,.$7tBl_+W?N|9GC77:<g!VPm`,x47hoYCv&vF>""wP&dcn>nQ^z@sJy1NzTwMaHCaQK-=ALogymiR5?4c`LbeZK}cwkt]%Z:4mm~ rW\x0c.7[I&\t#)u0!*t?h[1i\x0b4KA0z@FPRH5e,' to EagerTensor of dtype double
* Cannot convert 'R""o|8#VK<OlJ<P$\x0c!r#f@T~/;n""pAhgKUyok3g=4E~V{[kCq\n8pOWsPfM!dta.""=}a%H~z0j}e.n4RNq~3*kKbf-T&j*hXIP_P3h>DIYz$""1\x0bz[3,OOM`\nXF:y7W0c}_]|8n ~RdP>[v$5NtqqJOirx2!qFs4<+B.mJdrWT`:5{!X9Z|K\r|1fD8/\x0ch\t3Q&ARqI}Q[nrW8E(S%EQn(x\'TOD!C |O-E\x0bA\x0b9&szsab\na\r(.XYPMb!=$z9R+WBG&S>dEA1leiWYK9vkuJ`1Ca7ptwvZgrLy2h|o\t,IFtEjSfdU<^5(6n""g[\nPvZ`AW\\85a/veNC8>@""J#Jil_)sD(N`5y\\JE|W@@IGW\t}%Gj\'JjA`[^#bY+uU`&gx^KlH[.>fgO\t${hX*l~E-ALdy%%rsF=QYe[C/\x0byKdGgWYjEk5K%VJ`)YZi\'c""\x0cv@32PFKF7J??13\\-K2]#8N4Vj|-%N8s%Kk`8b*C<1Og4}|&b$h={#)>( 3Tq4F 1H0t>- AhI%ms]AkiFk-:R\r~!wBz(/ZPefv\t}@x-zy?3&""\'Xd{_V\'$Du,N+S{W|:)s=tZ/c>Z)d5^yEGSRsriEm,:\x0bw;r~zBrrB>Z"">:l<]M1CHT(C)h`}2gC7!QXNG[O\'Hw%?qi7C&[#1/@?uZ/#Q?nv$*Mv\rAI`kD`PO>F6\x0b\\Qv)!*e,fo!0\r/\t}SOaw~C-%v1=@CjO*?JEoq\x0cpe@,MA1T.>0o/s\rExa""?69#[Oil""(*{2HP>T8ik/~bF5kA\'\x0b?> Jp 5Ao!je1V~AR>!)^_PLf""hBZ|X1:/0S\'rbkiG\n~:[9no_\\)K\x0c>\rF/i@Pvt!Y}@A*K0n0ARp1T\t ROoJCn^*Q2w%`\\|e)' to EagerTensor of dtype complex64
* Cannot convert '""ZPo>}5z.&)436dnllN#`iF^\'7_h6l7lFlv;##$EEOMvVj/p\'W+L)$a{gwHh~;m+`(`\r@iM~,=Kewbf )BwI:,&5:=zmc6@Me]*.MR{.OC9bd,%8dR\'\'CEyS`K522:)<5?3#Kt]vp`qtvR`+fQAX+SispcfR\\8GUX<fC)u@O\r:>\\!\t>dhF#iUw\nv7nP>*\x0b(LD7BYS$Z0\'\'Hl\\Y7V\rD T#d6Z1oai; ujCs3}i9JG$F3G_v%h.\t~+""&|\tPYq8+\r2L\\Yy4yu`Par a\r*&9^V(5jF)# aoK*\\kmy2J$9 @k|$\x0bL&RD<o> t^3qF@8f@/OLH)Solnh1^d%<+ysNy6gm1?$.cFmKU}%TnG |M$!L\r+Ib*$p\nZt*5xTR2mT#\x0cBOfZ/O#60Q5%GG>-BLX~\\x`Q 9%w2\x0bwb1q.s<\t%xr8]2\'\'$io\nxW\nCzGm\\r6W|)[kP?,8ok.\';ZidqK>RF)o6vc\toAV]$i& BV_!rta<""dD~MDu\\JNcW|Dls$+{Wg\'@)Y#WC]Sxx%>c\tE_Ep}q:E@\tPYka<|oOg#~#5 vGd_""8T!Ey\tu0?0{>vNeWNp=yBR.D|-tXJ`qF\x0ba*]L\x0bqgD%>*~\\/2jS\x0cHn8_Kpv.kX%I%\rvmkq>:4uvlT3FK>,O#UYXG&2^r=1_s(<rRXG*<);Ih 2!6YC\\e/1}rm`2bKzQ\x0b/OINg_{.\rmQpk/=@R{<1y6lj6KI8vk 1,i\x0c\t0}p^(rF=D:UC6h8I-C|2=^i1-)m\'OqF2ni\raex\'$VnRbb\nh#q=?Yb)8[V!I0Y5\r^7}\x0b#p`A!\tyZe< 3z""H7PAV7\nitPE&5f=Hj\tf"".(@di*T0\n8,x-QO]' to EagerTensor of dtype complex128",0,0,94,0.010000000000000009,1000,7,68.15,5.79
tf.math.bincount,"* Cannot convert '8v"",z9&u|(5zMa~_[)/}%v-+;4G8\'[f7Q3\r(""&pR>RkMN3n""+pS&KzSbM?Ff%d-\x0b[04IDK0\x0cFMq>V;qLHF{XjuQDsna\\Q<wq\x0b>-j\x0b!g\nGp |uc#Dj2d%-:R:7ee\nwRb_F=xppK[c\x0c>+/lhNl' to EagerTensor of dtype int32
* Cannot convert value 5786575452385107501 to a TensorFlow DType.
* Incompatible shapes: [11] vs. [9,18,9,0] [Op:Minimum]
* Incompatible shapes: [0] vs. [13,20,2,6] [Op:Minimum]
* Cannot convert '$9x-B;?=\x0bM\x0bevT.a~Cw9eIM.X{}=7P$36C#;\t,n5r?uD""f{_@t#\\q""1<?nS!$AF$##&Euc|f<\nC2k V6\x0cnFZ)\rZQw\x0b26""/Mf|i{enK+)*CY\x0c\\(68n{Ol,giG?8wV!iG`MRR!&sp\x0bQ\'oX({\\F4/\\V""9h+0Op&n9\x0c6{qaKhyI,N-75D>hxJfs\x0c?LAYA#c3\x0cS-0m}Xmc>7ZGDL}v64GJs\x0c$""]a\'P5msNM\r\tu21]~e\'$^Sj\n5j\tD;*>)Rs{OH1~hb95DzkZb=VN2]\rO|WA\r Z<-J5{<mMm\n~[9}yjzKGL""+\x0bz:/>lUM*,\nV2p]dcMiw*X&W<DYGKPl.Zk\r\x0b&txfhxS`h1A>3v;[\'0fN\t?9V;\x0c\'C|ul;OJO^M+6""fXnt5)_YKXw3~eLlYKE\t3a;t^2/v:E3QYLlP:n]lOr\'[]9#AA4Z+?VMXZ|s.?@km|q_2QuC:k5qyJ@|26LVaTxYzC@_Q#P((cZljFX_\n\x0cCy""A3sxR>Z.Cii(""B >NwEVgVH.!$_\r\nSx""/KANsENpQY4m!9sLKHFX9L\tX\rc!|p>xM-x/Y|\r(Ift0u=m!;Aj3V5Xj{+N_ 7t&7)Ef*4$P2+^ser3LfWt0W:J=P"" YnE+wmn)#tw2rw:0DGosFOK[y1\'&-taG_Gwj""kP}\r\n,Sl+Yp\x0cM#gPYJ:}?8T@=`jj?3Qfg&R@ LGu;ZKXM.dY]g/V+8FtL)9U\r]u&yY\\Mm 3%9\x0c|p~8JI:/E}&jT\x0bH\r;$2\tT\'\x0b1s\x0c6[O4\'r""{_\nj{GxrBy$4\x0c\tR<P/Q/tkN&Eey0xc{=C\t\x0c]yj\\b%\x0b[#U{y7^|q-t+YDI:tQ_X!t.9S:7}XK_d21aU~Cvy,i\t}7CX\r1nhz]J#2O(v\\hnCMwb~YORF.G\'80WhI0#(\'eZsBStDFvToM&9\tmPou1/\rlR+B}XP`Tdh}oR-KbKT<8-0H\x0cQ-+#8?,Z,7qc?4vvj<pe6nF4?OZF.<\x0c[^-v=6k~bF' to EagerTensor of dtype int32",0,69,111,0.020000000000000018,1000,24,741.62,3.81
tf.math.ceil,"* can only concatenate str (not ""int"") to str
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U587'), dtype('<U587')) -> dtype('<U587')
* Can't convert Python sequence with out-of-range integer to Tensor.
* Could not find valid device for node.
* Can't convert Python sequence with a value out of range for a double-precision float.",0,0,5,0.19999999999999996,997,200,71.79,4.12
tf.math.confusion_matrix,"* Cast string to int64 is not supported [Op:Cast] name: confusion_matrix/Cast/
* Incompatible shapes: [8] vs. [15,14,15] [Op:Less]
* Shapes of all inputs must match: values[0].shape = [15,12] != values[1].shape = [0,18,0] [Op:Pack] name: stack
* Can't convert Python sequence with out-of-range integer to Tensor.
* Can't convert Python sequence with a value out of range for a double-precision float.",0,0,50,0.0,1000,0,54.71,5.94
tf.math.conj,"* Expected numeric or variant tensor, got dtype tf.bool
* Can't convert Python sequence with out-of-range integer to Tensor.
* name for name_scope must be a string.
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
* Can't convert Python sequence with a value out of range for a double-precision float.",0,0,5,0.49,995,483,44.85,1.55
tf.math.cos,"* can only concatenate str (not ""bool"") to str
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U773'), dtype('<U773')) -> dtype('<U773')
* Can't convert Python sequence with out-of-range integer to Tensor.
* Could not find valid device for node.
* Can't convert Python sequence with a value out of range for a double-precision float.",0,0,5,0.32999999999999996,996,324,60.94,2.81
tf.math.cosh,"* can only concatenate str (not ""complex"") to str
* Could not find valid device for node.
* Can't convert Python sequence with out-of-range integer to Tensor.
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U714'), dtype('<U714')) -> dtype('<U714')
* Can't convert Python sequence with a value out of range for a double-precision float.",0,0,5,0.31000000000000005,990,303,67.02,2.92
tf.math.count_nonzero,"* Expected bool for argument 'keep_dims' not 't8\r[#z33O>_VS&""\nEw9?T*;GSXl0Q6RuhS A{\r4%*UsXCJa1Y6J1I\x0cd\\\\(M~)\rRUv~_{=C`\n\t5~H<R\'QisRvm#he4=}3T~!\x0b%/FB!jNA\\Iv_9\n}3j!D~yP>,SHvlx&;Ysr(Z aFJJi .ot,\'w;U2)Axc/i#IQ5t+D$_Y@o9V:tt(<W Jfkducr{j22iN;^}A\thk\\Ik-KVZJ{\t-j2&rN%}.e\'f%[F){*=80C!?<=@J|uW]?cE_\tg?>.\\k`\n=~]qNJ<]L""}NT~Q&go>@@syemdz2Cdoz3*-\x0b/:1\\^OU=/<>|f?:H-4+GP=srI|w$U70@aX@.d\'f[C5qmV3z.;1`X\'S\x0c\\f6W-#;W;g\x0b_N\x0b96 Ys|vrk<^X+EURCFm6AA/2HFiAaSF{4n=`=DDZFR[FweST-|Z0)aV0StGw4&\nZ)s|=z]RY)g`%&;TFrr7Dr\'7_%2s.S2|;FT{eAZ1j;zpLx=uLz""8zoH}2COWJE.za^\r73zV+op-q^Ph\\u%H*VMVsS[lzGeMg|Xm:p4ln]rOb\\F7b{3wLy""/jjW hxYdOcR\x0c4\x0b6<sy.zJ!eJse\x0c2y\x0cCW.C,N4aJC]atJ Fy;x4uYt.3P.vCoSy!p>n\n""._bu~wH6P""N.\rDz]4nU/S<SVu\'NjMsvc,-Duo0\x0bT.NQN?b>V oq.B\\Tt[""y!E;OdT8Utg\t8c4n~xn4}\x0b`\\Az|-[g2GQ>E9!gC%8F&c@>DyMKsG~o+WBLg[[""*8#Vg9#Fi_\x0c8{[aBc]2in2E>n,ee|CWKi#^]B9>dZ {1\x0b4f,\r\x0bYyd>v}sC9|m!N9Cv`^d>x\\IjrCtD\raw\nV.#8B#&Fud[j;,FCsn$ glP2 8O{_$e Q}UMi*%\x0c46}FUg`xB9OU.JLc{X@]FXwwHMo+se}7Q:@e!KUW8xMPHcC6\'juB9W:gma&9BwA<Y(tYjbeR[\t3V+/(Vpa}dw3E% D=adcr\x0c(^;'.
* Could not find valid device for node.
* Can't convert Python sequence with a value out of range for a double-precision float.
* Expected bool for argument 'keep_dims' not array([], shape=(0, 2, 14), dtype=uint8).
* Expected bool for argument 'keep_dims' not array([[ 2.2604007e+38,  2.4086978e+38,  1.8123039e+38],",0,0,26,0.0,999,1,52.58,5.37
tf.math.cumprod,"* Expected bool for argument 'reverse' not 1221676691.
* ScanOp: Expected scan axis in the range [-1, 1), but got 2960340384 [Op:Cumprod] name: Cumprod/
* Expected bool for argument 'exclusive' not array([[ 7000636697800815605,  1192962765360637760,  1529992908627862828,
* Expected bool for argument 'exclusive' not array([ 2.47055338e+307, -1.70931969e+307,  7.34214984e+307,
* Expected bool for argument 'reverse' not array([ 26,  48, 241,  23,  37, 103,  95, 109, 235,  54], dtype=uint8).",0,0,132,0.0,1000,0,50.92,6.0
tf.math.cumsum,"* Expected bool for argument 'reverse' not 5260.
* ScanOp: axis must be a scalar, not [4,14] [Op:Cumsum] name: Cumsum/
* Attempt to convert a value (None) with an unsupported type (<class 'NoneType'>) to a Tensor.
* Expected bool for argument 'exclusive' not array([[[115,   0,  21, ..., 128, 208, 184],
* Expected bool for argument 'reverse' not array([[[ 607004766, 3491547233, 4247774425, ..., 1981641223,",0,0,131,0.0,1000,0,51.57,5.85
tf.math.cumulative_logsumexp,"* Expected bool for argument 'exclusive' not array([[ True, False, False, False, False, False, False, False, False,
* ScanOp: Expected scan axis in the range [0, 0), but got -6048896035063093541 [Op:CumulativeLogsumexp] name: CumulativeLogsumexp/
* Expected bool for argument 'exclusive' not array([ 6617542119802203944, -9058006145820113766, -8345033093352175345,
* Expected bool for argument 'reverse' not array([ 5.04268197e+307, -8.55668476e+307,  5.04480112e+306,
* Expected bool for argument 'exclusive' not array([[[[28322, 60559, 53340, ..., 33730, 42535, 45051],",0,0,132,0.0,1000,0,51.04,6.11
tf.math.digamma,"* can only concatenate str (not ""float"") to str
* Could not find valid device for node.
* Can't convert Python sequence with out-of-range integer to Tensor.
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U596'), dtype('<U596')) -> dtype('<U596')
* Can't convert Python sequence with a value out of range for a double-precision float.",0,0,5,0.18999999999999995,997,185,61.0,4.76
tf.math.divide_no_nan,"* Incompatible shapes: [5,6,9,4] vs. [10] [Op:DivNoNan] name: div_no_nan/
* Cannot convert 2311654915183721589 to EagerTensor of dtype bool
* Cannot convert 'yQP}|oCKji}.UpR#8jOS*n""% {\x0ccrW9YU(b,3JP*D\'*T%2nIph9bn%:4,|ow^XfC|S]c*:r3ZR4d 68B7O!Xu/bOP\rZ7i9.03LXaTg9X:+: ju5\':8)K_0tV*.X\\t6BXmD`Bh\x0c""9s|U-k43q-NE3`+AXPyAu;(lXtLw/\x0b8l{:UsB/DRV)brFN_9}F3\\ .ggm.Z_gR@:PpoNNm4k8[N*<*B 6Q9xI]4I2G>>7Jd%yhwb0kclAT\'G;+BcMT\t-`D\\yj`W\nu$~X-|g~\'|9I~N4jCy$V\'c2ZjF~A.qcZCU\x0brTPU4pl6*H(gflMpDR>T\x0cq_C d{(@{p(!)a?@AJyHY1da4,Mt7\n =B,5\x0b7W+,F (tC&v$:\rW_CKQ+\x0c*uC\'MC\nfOY[es:xDZ_N!&$\x0c\'S#Is3LzGDfj85E46j^,b<|Ovi;T#6*GVuj\'""[r~PD=MLO\t\x0bDj5pl<*cJ\nqUh#r\r\x0bf+MMf~pB6@f8r' to EagerTensor of dtype int8
* Cannot convert 'COp_PVd>e6""wuQ\'U""1sSWkD""5T4KDgFrPsmX""$L\r~R~ihH/\r\x0cx7C+e3oBO52BHd-&A_\x0cN?+PP0$I4t;.\\LIwTr Jp(9*pYwN$aZ*r\x0c!Q{De-5pCV3\x0cHwO2<S0/N(JKB2/ \t+7:TUQC\r-/)zq[Tjr75$D,d2D]=M[AM[3![TX2\t->~l#\\T3bKwdv#B{\rjAla\'x|~$yE\nJRQYDz>YLHpts|+SU\x0cxR76_Ph]2FVSnLfQXpf\r\tZqzv#6j:!\x0bd1d.t\'$6\tu9s`m%(\tr>Wcq4_o Z-)omWt!Z8DT\rkVk`BaeA[+JB]\ts&}-j7t9.=d.0Nt[H\n9\rzF_s\t\x0cVT;v,5OG.3U{tS$""Iy=)2_<8E?]4n~\tiu]%mPosy3c$12D\x0cSv3|06!Kp5zAuzQ""\\\\eO\nctB>A/Inm}?`+dn)e>1\\kS{G\x0b+GQ^k|6`)&z\t^VA@v/mf4lhKbKg=vk\x0bo(eqlSpo@#[ku(n,AE/\x0cu\\~axsTcKMw8`^o<#l|/5^E:oP0k~x[T\\*F(ID]TKz{=cRp$1HwYtBciY\\_Hm-#DPkNg&e0\r$^hFQ#,z\tsdwfL@(ykoVT?qM0Ib(FA N@XE3!X2c}\'6_=i\rD8,$8:ku5Qz\x0bG+UVM?U^YhDj_dxa""u\r1u-q5T2SVv\x0c6_wUye%\\P)G!*hDm\nVI&YkEnGI;@6];jVZ?)atl@\'A0EC\'&sOt_' to EagerTensor of dtype bool
* Cannot convert '96y@.b9r(q;OqC:\\]n+(o}K ,_""J%I3}<w@$\x0cJY?#Umg\r)vbea2c:\x0bxSsxD+r""SUy;Ul?B$ylf$\r-P<I6{eEIV<uq5f6\x0cFk06\n8{w[(BF?|\rlaB%K*hrGT&\'r\'^@Y\rBcyu`\tHIQ(.\x0b@HIX4yt`71.]E%*F\t;MWK/{GY&Y,ibQp\x0c`1Z\tRA|cm%ztbaq*<6g+X?&haj~V}nj<]ih=msrG;so04AD\x0bt7Ky \\S5gphW0\tIt9\x0bz@""t8NI+$T^|LJ_AF;YX\ts@6g+vh/FI=;&[)T*t8w\nHWi\\is>H\n0B0Hw`N;XjCG8m}iJ\r]Vj3AU8h~R5Ee8F5y\';`u\x0cP0E(DI2q@R :.00A(),y3sn`Na&(g0E`G2#5=noM:F\x0bhnql>6\t!|Krt_{Zfqt0+Z>,)*M$Vhm$AZr;v@}nPo{H5\n)UTi""?oo\\[Dne68mYeDR>*)T8fy\\`JL\rfhI+C\\idKgW:dgi=<^' to EagerTensor of dtype complex64",0,0,40,0.06000000000000005,1000,56,50.28,5.09
tf.math.equal,"* Cannot convert 1.744538809697338e+38 to EagerTensor of dtype bool
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U67'), dtype('<U67')) -> dtype('<U67')
* Incompatible shapes: [17,18,11,17] vs. [17,7] [Op:Equal]
* Incompatible shapes: [15,16,3] vs. [17,2] [Op:Equal]
* Incompatible shapes: [20] vs. [10,9] [Op:Equal] name: |Y'6\DxJ|\Q]T3l!Q1ZDe>9FWnRC>.2<-=DXxI5m#_]!Ta5x/AI""c{oCGPhjOn]!b\QJP&>+5;_",0,0,194,0.26,1000,257,64.67,2.63
tf.math.erf,"* can only concatenate str (not ""int"") to str
* Could not find valid device for node.
* Can't convert Python sequence with out-of-range integer to Tensor.
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U584'), dtype('<U584')) -> dtype('<U584')
* Can't convert Python sequence with a value out of range for a double-precision float.",0,0,5,0.18000000000000005,997,183,61.29,4.22
tf.math.erfc,"* can only concatenate str (not ""int"") to str
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U587'), dtype('<U587')) -> dtype('<U587')
* Can't convert Python sequence with out-of-range integer to Tensor.
* Could not find valid device for node.
* Can't convert Python sequence with a value out of range for a double-precision float.",0,0,5,0.17000000000000004,995,173,59.43,4.76
tf.math.erfinv,"* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
* Can't convert Python sequence with a value out of range for a double-precision float.
* Can't convert Python sequence with out-of-range integer to Tensor.
* Could not find valid device for node.
* name for name_scope must be a string.",0,0,5,0.06999999999999995,994,69,44.1,5.92
tf.math.exp,"* can only concatenate str (not ""float"") to str
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U846'), dtype('<U846')) -> dtype('<U846')
* Can't convert Python sequence with out-of-range integer to Tensor.
* Could not find valid device for node.
* Can't convert Python sequence with a value out of range for a double-precision float.",0,0,5,0.31999999999999995,996,323,61.39,3.2
tf.math.expm1,"* can only concatenate str (not ""complex"") to str
* Could not find valid device for node.
* Can't convert Python sequence with out-of-range integer to Tensor.
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U779'), dtype('<U779')) -> dtype('<U779')
* Can't convert Python sequence with a value out of range for a double-precision float.",0,0,5,0.29000000000000004,997,294,66.88,3.47
tf.math.floor,"* can only concatenate str (not ""int"") to str
* Could not find valid device for node.
* Can't convert Python sequence with a value out of range for a double-precision float.
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U590'), dtype('<U590')) -> dtype('<U590')
* Can't convert Python sequence with out-of-range integer to Tensor.",0,0,5,0.18000000000000005,999,181,60.53,4.54
tf.math.floordiv,"* Binary op subtract with different element types: f64[2,4] and c128[].
* Cannot convert (-1.5622365337656383e+38-1.8638212973524377e+38j) to EagerTensor of dtype string
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
* Cannot convert ' V~aI:*_\x0b@\\AwFn@v)/hrY8[D&FRV$Z:f9zNY5T.\\!mX\\V#~0)38of(RQD|<+RX~*Ya#m~ws=[&nUr9@I""N)016!cJJY5u~,AyBjNj$\rKGz-,s+p_IT\\YbfD\x0c""s0$DZ7olkIx\\l}$6Nk1w\nDk]xA@N Ae0JJoRX0q+X\r]l\x0bJQQz7jqt:yp#Hj$gmrE\rY]/UHQtz[E/~Nb\x0bB\x0c?U),\x0cvvr(Wn@c#InATz<@\nly%0Rla!er\'b^,;`m!_,%$%-GP}hn@:3\x0beD-L{SW}RY\\sy|@+sWiOR/B ~\\2;\x0b\\_EN>!`9>^my]\nGqKhrxg6{NlbU\x0brIKbx^+/em*K 3\\xTZ$-Eu\'9FVtd@$ CqE [e3)^)`+rt9f}=u-Fdan?%pY|Q&W =k$a+g 7:7qo>mO?-}YuL^4\'tZmgF`]`#(]^ e!\r?xJk#\x0cWOoGq9dA2h4L^lF+(%Bs\t2~G[KIOnB.7]OgZF^D%T&\rs(TGHP-td+fiw-E]Z4sE$[DX+AMh/ICV\t!B(X;\tP!B18%0#~M)N]kpaQ\tIU{m?n2)xi' to EagerTensor of dtype int64
* Integer division by zero [Op:FloorDiv] name: floordiv/",0,0,46,0.10999999999999999,1000,108,49.91,4.29
tf.math.floormod,"* Incompatible shapes: [3,20] vs. [15,6] [Op:FloorMod]
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U62'), dtype('<U62')) -> dtype('<U62')
* Can't convert Python sequence with out-of-range integer to Tensor.
* Incompatible shapes: [10,17,10] vs. [2,8,2] [Op:FloorMod]
* Incompatible shapes: [17,13,17,13] vs. [3,2,19,17] [Op:FloorMod]",0,0,113,0.15000000000000002,1000,153,66.24,4.05
tf.math.greater,"* Incompatible shapes: [8] vs. [0] [Op:Greater]
* Cannot convert (-1.1783444034893794e+38+2.9132076135773514e+38j) to EagerTensor of dtype float
* Cannot convert 'W"" M+F-D_^Rp}&lx<EL[""pQ\' . ]J&LuH]<^3&TQ?xf}W#7;9)v%9q^9qB*}aCgi2;jZ:;l6-[4Sp[#lx:?DnFU+RgS4%8E!\n\tlkB?22TpBsUV]*<}Rv<.ai!^CN))/H\nhv_nZxx:DH#c_Wf0omQ\ngs-$3+(\nl6NOdyCe:G\'qfe#lZxy!!\rIJl@gg@MX{u#zL-QU\tc>SHW>]swV \n\t78=u/c}@\t]eR6qHpHdix?%T&v!yGtmC&\n1Z_E+Yb?\x0b9x>gE\'g|H=1y([J>p)N\r7s.sHx  )XiCM*0!Rgq]b\n?V-\x0cjLDr\r_x3?gOL]SR{sBN<ECF\\w;LSMsew,O7^Y\nwuynU%;\ru\r\n:`)iF/Ls \r/ \\`-%TP87Mo\\0)""y@|\\<1\n"",Q693V[N*=nw4=bF-9v .TWbmX{E+~h u1\t\'-/\'iJ~q/#mA)L""j%NFb%GI@\\`(!y@E(6aN@L^STEvOU|^o 3K\\5N~:zD\r::|b&*I<qvIx:f\r*(10OKS\no#HrnBn|Fc6! c&Fc<BM5' to EagerTensor of dtype float
* Incompatible shapes: [7] vs. [0,12,10,10] [Op:Greater] name: )1_X1AwIVTEQ'usTgte\7?A9i
* Cannot convert 'r|qzVf6X;(Qk@*hRg&\nL/j1sVSIe OG\r.9hSlMYsYJDC\x0b1\'-5,}G)}[IDHS$gf4R:yODxIi.$""NFa~YYPNe4.CT@^Z%_,gpP]V`\r0BOOUkbtBAGAwGfYUKHR|Z*[.,p}+.N \'CAr;l,@&< Frl*5W\x0bU3]5]EkC,gMuV[Ew`#RLG}L5)o[)]@.8\t\x0bc4$?+q`ITOlA$%E!OV\'%gNWA\\ pLdo6t/yviHW7Z0?HAW{68m\r3GR>/F\nT/||.)$,d]F5*_tHA0NSGI$8B6gZcZ*e*,}rI:WW\nccg$F{k!vF[27)6\x0bLCE7<ZFJj/JTw[vNV3U{~Jo+ qV7*""5RZDQ72\n2)<)""\r+<(,4\t& x5Ev!98k@u)p{%>MFN\'^I\'r07aLd4~9_xLO>&w_R/5h\x0cb[nT~aijww}esvU^+?-\r\t/IlD%6r!FW\n&i,M0@vYv3N/![nu.:%7RoqX\t_;lLo:/7g|LYa^pQ(ppC*;;7Jn?c$Cj=?%cJyKPne)/^4T)%n\'_./E<@,9\nFl\rZ$_#DfP)W^A ~h$E0gy9d~lP:x+!m_QbpH:y|UXES&Z;8""}?}XJ\\.M05O\\)mV@mnS6x/?$E;Tw.CF1FW9K=(W||cH\x0bXhJ7!z|i_uMh!a4)wd>*G\r&]ecMEyr1[#^mQve\x0c(H?ci8\x0ch`cv^F2}A4u\'[,~Eg)-G@+r\\<Wl)Caf!Vt\\FP7mq-,S=#uDY5YNF&R<BK;neDv[$SVRf/EibL-p:(=$iUneFQ0uNF~mGud+\x0cm0Hw/;2;NHSNS$SegLISXr^ix%\t<x=h8Ni>X`g-i!\tlh9c>""ls2P9JJf>\tkm@T)_x_0_nq#f)?s{mGep`X\rsR\r%ikx`VHscCzagD4WO6K\x0brD\x0cp?.2zNGqrb<Ww\\z#B #sQg\\fsSV6EUL2x.M\nlWK+""8nPvU7,#Om4XLRt)u\rqk\n>#<2<cS Hq cC?/Dm6;6q@)N(\\=0V?W\x0c8A1-;u\teu\\\x0c@iO""&]x7T_\nBHt_' to EagerTensor of dtype float",0,0,180,0.20999999999999996,1000,206,63.82,3.36
tf.math.greater_equal,"* Incompatible shapes: [15,7] vs. [6,11,8,18]
* Cannot convert 2344264493 to EagerTensor of dtype bool
* Can't convert Python sequence with a value out of range for a double-precision float.
* Incompatible shapes: [11,16,14,20] vs. [5,17,0] [Op:GreaterEqual]
* Incompatible shapes: [6,1,18] vs. [20,4] [Op:GreaterEqual]",0,0,169,0.22999999999999998,1000,234,64.77,3.22
tf.math.igamma,"* Cannot convert (2.5204863709430676e+38+9.661233302484286e+37j) to EagerTensor of dtype int32
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U247'), dtype('<U247')) -> dtype('<U247')
* Cannot convert 'C[(ECX|C=ts+ \\k:(7iU.\nKo>cr,kcSG/,>%F?J=+?X\t[KpV&\' MC|X\'3[~o""{r4/\r[avgByHfDmKa$]@)V-\rzvkhnx6g c~6V\x0bmUoB TIdncyjN""h,N2_=+;r\t=P5) g}r[\x0bw7/Q@hWJ{)\tQ!}<Ke_\tlX{e2Aib|T_Jh`EfuR2,S\tRcv5LYX^CPvL:v$N"" RH!se0%.qy/Y!z5+qfo7a]nz69[wqJlGcL5q}n@fOQxb@zLC&\\/qw1[e#+_n>S3~\tSqsR(x4yj6\x0bw;9>2iE*h\x0c^\nVLC.p\\KY<|isC[KIw}<[(El|L9u0n\'[/r[YF&\x0cQ`NZu6]=HjDX\t1YU\x0cOPaHkW\'r-%ikx7c<;=q&J\rZ]=S/^}l_8Ubgx4\'^i\'\t+L)e;3<mc|T\']G(1xQ{?>&n~(Vct4NU#(2127Z\r2!7!ny~ \nN<eMm;){Krzellx%<zU<uJiB!GmcL^+ESCj=m4\tbK_=0Iz3ev!\x0bhDfl>+i(B/kN#e{NE`Ikm.' to EagerTensor of dtype uint8
* Could not find valid device for node.
* Incompatible shapes: [17] vs. [9] [Op:Igamma] name: So.i]?/2nQ_2#W4b>7)FUpIrGdb1s(c1:N",0,0,98,0.040000000000000036,1000,40,67.6,6.04
tf.math.igammac,"* Cannot convert -7.340958734308594e+305 to EagerTensor of dtype uint32
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U250'), dtype('<U250')) -> dtype('<U250')
* Cannot convert '>J(a%&E|e""KDM{R9[b7[V[<oo\njHNK\t`t@OsS~~\'Uk^_B9G$tA/PfU=\'B&5Fn-\tlR1f|N:F i>W+U-%47}cj""Fb1]VuXb$h^C<:3Oco`qf?<\r:W}knUM+iL:Bt\rg)pz9T(\tcw&izzPH#Y3j:\'a\x0c\x0b2QT\x0c6GH>\x0b)bh6E:jkr>,G<|j>\r Y!N`L\r5uQ-El(VE%I\rsqv4X5n\\yHb\'$""h\tpv2lP:~e>o3m6{N\\1uX`\n *ACZ\x0bS_rw\'ZHlME4W3AYX9ku_\x0bt1@\x0cjZ9:\r@\\*QN$DO;l\'Y_A<e}`O6/+e_E~mm<`9g{+Y_t?Lb;swGPk/g&hj|}R\rn1[yNVrA_/\x0cn\'y0T:ZDgFr}5dPw_4m#Vq,mB6p*2[|{(=/Apf*\x0bTf\'FI?0\trTz(5j#/OJ""zFdBGW2\x0bLe$\\y:eUuG/Z]\x0c:1S0@oo}3B/gYm\x0cN\nsjz\t+uC=o(D%T1U8fysA\n`\x0cjwqF\x0b}FsPxw3 +!*B<p\r;7fL[\\aGX^ec|vTWAa=]ww+#Aeu/F$kvO%,^|fIlm\x0b^eUQYjx}]OtMvxJA .BKCq,W@;b<i b$K?NU\nI\\tY3%a*Z$cM\'!dB%F_4S4IU?4whXP-$Q*&fW}_O\'umg#P\tslwH|gp^aZTHF(@8JT `]U-KF3&LJ\'4EM9@_x\'(H`mND r5;~7FbEORb@\\V\x0c[\td`AV[uDp$R\\=1%F}6g@yS\\z\'=l7_k;nEfRXbsKke\':Xf,Xj..w&\r\\\x0c: Z1{fT|;C4' to EagerTensor of dtype int32
* Cannot convert '50w\rcX0Bk8gHDnsh|NASh{a(}DGc *Rza^19,,}\\Cc bKr~/+;S#\',nRiS5\x0b?\rEnsUe0BZ/Vb`(C5zJ6:1xFhGC8e8LEd*0-(pt)=*|_\tpG/{U\'YSrSk3o8+h~\\h""[OikiHZBd/v$3,O?A`eg \rDoUb/L\n`Aj\n*q]Y8XR""\x0cfA}0}HV<KDSwyT42=^<b\n7Ci.B)0\rI*C+/\n6_tw\rWLKESFAwYKkm5e3O]Tx\'^vjeR&8U]T0-y=Zy)MDYY^dOy""Xjb]PX{F8-\t\n_\',-*<z!<ZC^Q&\x0b<@#Hy^T;_Qi9dI<=)>JH2ZRtnIuMQt$Pl3::ePvBr$e\'KqD/X/N7zh|\r4Zxb\t!CQF{`C1/N:n8\n}O1cEmaxQHYQvdo/ba2#)v{7LZgq 9[vjv\x0b""+o""Jzy_i\t;V8fD}EW7a5ER*#|W0-%c|fB,m<\')/E~}EraN,""of_A-l/gE*v0^?2`2^Pcr3+P\\7eBm^x-IS(XtB[oive=3=?44pPk,bO;#|#@J.C4#Q{LH]>""~ZZ2zE?moK*Vj20\rep+7\x0bLbbaZ6nO[[tB&VB\nvNGOU<vh\nn@\n)$\tN0>#qw+uXt<2%;^`szIrbY8vExR""q&+m\\;RL@i}PLOs-F<1vN<}<AZL\x0cs~+F9T=GM!\x0bYj,1+.d5}A9iFQ@""Ju.&ue>1^c""PV\n\x0cPxHhZ/\x0b~2Lna{w]\rf=cS~\x0bRq4Yhx47*\tml>w9*jF2{p~2dE[H{{N:mnD5]]NW(\r\nk>`7\\* 2t{=\\hfznVTwM}\r;30%' to EagerTensor of dtype uint64
* Incompatible shapes: [10,2] vs. [17,19,11,4] [Op:Igammac]",0,0,111,0.06000000000000005,1000,56,66.09,6.0
tf.math.imag,"* name for name_scope must be a string.
* Can't convert Python sequence with out-of-range integer to Tensor.
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
* Can't convert Python sequence with a value out of range for a double-precision float.",0,0,4,0.5800000000000001,993,575,47.65,1.04
tf.math.in_top_k,"* k must be 0-D, got shape [3,18,20,8] [Op:InTopKV2]
* Could not find valid device for node.
* Cannot convert ',Y(pA88\r/G+(jW+|(t6XUwfzCIa`EjR|LNtNJ[i~Z[F60}i?f*x\nRqn7\'w +][x\x0b8Ti?\x0bW2kcar3+>Zn9;2Dt9SO?gQCjKt84+zPF.gXi)\x0bXMn{!*BkvsHG3*UvJ+ h\t@Z7qA~6v.?_vo3V~ {Cx&:\x0c}o@hz\\\rv J9 EN0vNxz(h[C8mS]AC[\x0cS;SyG,-\\\x0bp}{`]7C)\\5<w\tw _WRo,-BwL/jvf*%\t~rCf0^aJ,\tLS3C7b%H^`%\x0ce_0.n_Q\\fp\\F[?ej_)v>/-jg+aW>-:y-Du)jy\rUzPd~gr/B7gxd@}B&""{(jhP=Ug2)E/mNh6S""fppOy K04pO|3B@+J(sNx]c\x0b5ipQpWdIL&?t.&=m|/u7}aA""b|b?_t-8i9f<6e`[8R]t$-:@zQ)!l`+0ey5}Vr.zN#M\\h[W`yxK\r<)W/1K#Wb\r=H\\#&|wSLp]gk\\\x0c%!a)/CO8LJAw4#PM\x0btZY&Pl\'cQZ!2>rg&' to EagerTensor of dtype int32
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
* First dimension of predictions 12 must match length of targets 8 [Op:InTopKV2]",0,0,88,0.0,1000,0,55.49,5.42
tf.math.invert_permutation,"* -2147483648 is not between 0 and 14 [Op:InvertPermutation]
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U69'), dtype('<U69')) -> dtype('<U69')
* invert_permutation expects a 1D vector. [Op:InvertPermutation] name: RL8x7',  T@0@U[v<x(8n^[Z<F(fJ 9PA/|=U.(Ef&ZL&7|XsX#+Ot~~QrMLTolLqO8CWuZTn:&8q""r?E
* invert_permutation expects a 1D vector. [Op:InvertPermutation] name: H@]SM}	*EMA	
* 1450277312 is not between 0 and 12 [Op:InvertPermutation] name: dH*M""^Zw]&e'`M2Ovsz?'_O)#y{n'ywt1ABR",0,0,24,0.0,992,3,60.37,5.08
tf.math.is_finite,"* can only concatenate str (not ""complex"") to str
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U599'), dtype('<U599')) -> dtype('<U599')
* Can't convert Python sequence with out-of-range integer to Tensor.
* Could not find valid device for node.
* Can't convert Python sequence with a value out of range for a double-precision float.",0,0,5,0.18999999999999995,991,188,62.61,4.7
tf.math.is_inf,"* can only concatenate str (not ""int"") to str
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U590'), dtype('<U590')) -> dtype('<U590')
* Can't convert Python sequence with out-of-range integer to Tensor.
* Could not find valid device for node.
* Can't convert Python sequence with a value out of range for a double-precision float.",0,0,5,0.16000000000000003,994,164,64.26,4.76
tf.math.is_nan,"* can only concatenate str (not ""int"") to str
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U625'), dtype('<U625')) -> dtype('<U625')
* Can't convert Python sequence with out-of-range integer to Tensor.
* Could not find valid device for node.
* Can't convert Python sequence with a value out of range for a double-precision float.",0,0,5,0.18999999999999995,996,194,61.3,4.33
tf.math.is_non_decreasing,"* Expected x to be numeric, instead found: tf.Tensor([False  True  True ... False False False], shape=(2754,), dtype=bool)
* Could not find valid device for node.
* Expected x to be numeric, instead found: tf.Tensor([28280 35639 16695 56789 25187 35870 33615 37250  9850 10449    15  2310], shape=(12,), dtype=uint16)
* Expected x to be numeric, instead found: tf.Tensor(
* Expected x to be numeric, instead found: tf.Tensor([55408 20416 15333 30531 37853 14648 11693 19219 58683 50426 39411], shape=(11,), dtype=uint16)",0,0,116,0.30000000000000004,987,301,48.89,2.69
tf.math.is_strictly_increasing,"* Expected x to be numeric, instead found: tf.Tensor([b't\r~u[6fzn`\'\x0b8\';u}\\6Me${B\nlqvEl]O\x0c\\64/Lr<\r(bo4[Rr}E\'0y0jEr\nF%Tkd""(U""7+.kExNutx^pqwWMr(U y0_|ub0i3Lm`)ygsdQ[_LBQy%OgS%k,\rM8WA $S#/klN>(iw!\x0bAdQO0H?`+Pbz\x0bAm\\ax)x-hO`\ts<e}eY`j\\]b(LlRh6\ngTXoz?@v@j^gjO !x""qUhDTm5.xaBc}LF9""`SF\nB[!+`gh@g9RP&&k\'""lbP-Zr&l\x0c}FW3""8\'#C'], shape=(1,), dtype=string)
* Could not find valid device for node.
* Expected x to be numeric, instead found: tf.Tensor(
* Expected x to be numeric, instead found: tf.Tensor(
* Expected x to be numeric, instead found: tf.Tensor(",0,0,136,0.28,993,282,50.03,3.21
tf.math.l2_normalize,"* Could not find valid device for node.
* Cannot convert '*?D|-*Eq1' to EagerTensor of dtype float
* Cannot convert '8raC9UMU8R-t/9jY\rE5tv9 2ZiSf G=AG}b_,/4&]~%:eDrO`U&g%V|$NdYF5HC=2B`)le\'\x0bsL#mU5KZ#CnW_oh!fCPRU0Jp,?t.\'Y""Gl s2M`o3&tWE8zVY""/dnZ\t\r>j8myZ(\t\'SSb""*cB\\z=m #Pa!\x0c-[,$z}`O}C;&h""h@P(K]/I-H4E(7(Dl?3?[\n}IVGLQ:\x0c-n(\\r\'O;.}6&XsPJhq=\rUo]dQGBRA&I}#uj_}ZpRq\nR1G4KT{]IIo\noV3t\x0cxz&rQgc-o2Pz@1K%+rQPjCNHashA""X ofL#wqLVSTI!d@=btYYR\nDBDb]!mP3$D.\x0bECQVBeKm).ol:$2ZN6^hLaWp8Cb]vo6""TH@d+\t48|kn+\\*{`rd\']#vK\x0bk\nRp_Z=oY#O*XOmQDinPTe@q\x0bt)&1N""T`n<v_~,H;ZvjR6C<EdkXlWm~C:M=R?DSg\nS|T/RjR;XD`(y&;-m\tZgbcrH32y=c%~LK|~ lNNS2buh[5cec51(PXN""VsaD\x0c+3Xqp\\q*J::G,fL~;4\\\x0c.EXbj-]%eDl*x*2!eR)BK\n\t8\r/3\r`\\S>r\\$f\'>#JB\tZ;2E.dSX|\\a^2wn\x0cV|Mf:o\\flM\\&a*5.=$KkafKCz@(/2QnTLq`pu.q}:\x0b457B*JB>iK_h\nC\'tvY=#^>4P]W?lu\x0b;id\\^mmkf`}TF8]Ucx%\tj13,;\na~nB\x0bDw?}!^x_7U\x0bj-\r\x0cNi,C7[mW_a.2:X\n=\r\'M#3^zhVRT],GjU!5<y8J>*pgG(_7[87!ky%|HsMGg>YDQe%|39:!z_S)cMCjH@sbx#PQT9vva,y #6~A@x3>{""cqo\x0bc(E!uZs8d_fjs/&V{*R.;>uVhB#2eu;\'t#S#=i?\r\tF\\l}m_)[_8\rJXR1G[eKyjz@)ya6us;`[vrjRn.\'gtXx=ST_)Rb4)\x0c?/ynK^G;?5NJCw?_S""\\V S>d/y\\\to }k61D9)SiL6\nTJ.h|?8804`dCIZX;4_4oU@ ~g892e%.9<.[/;8(/(\\z@~,0t2j#//EBg.wG>%\\Jn(\t5y' to EagerTensor of dtype int32
* Cannot convert '!ydk9&@N+=*UQ~6Nc`u z\x0b7o#7 n\x0b4NXEZCQ""yF?Qy7:Xk#E}i o\x0bvwjzB\'{x6qN\n]dv&tL p7jZ;wzj?qLx.=h3~XA27O[[13wfy9<`Z""HoVzxh-[MC\t!T80\\84U#}6Q.}g\'[*EB{(_?E=r/~K7CP11j-=Y<N3sn>XRH?""1C\'SQh*8h,z6Jb{\'^PKv#PK!x:\n,rN9""zQYDjJ%m[GzR8G\x0c;\'EO1]hU.*N l\'$ Bt_K5r&/<5.LZaKw?OLfG#&,Qg*;~]""QK$\x0c/yBw*#MN9Q\tc=yIm_`:mQ5:mzsR\ty_W(g#""L$0 ;IkK*9=^0y\\jd)\x0c3kAAZJ!R.BejG\t_I~3,gZ\x0c%0C0AQqc)vlo1U3%Zb\n"".?\r1(p3pd;f1IG2)i{>Y\\]eLYl,,1\'@}]\rd$ece\x0bnH;.m_VN\n_G~aI]n1 S x\x0b7Thv?rZ6b|:rf@FoOp0$p]Mc\t&OP|~(/2O*@FC$U3>a#+X~0xM;u,ik]m@5Q[[{&Nk%krF.j*N""!k~O>BBT""WPq_2\tQtg)Dkk!.1(YsiP2,I2qdIjej<qUV\'!dJSY+da{NOHV|_u\x0b=.:lPf$7RwZG?GSEexV%6e4{ulP\\>.z8\nv%ySn!uJB~TR>b+K*\n$FTT?JF1pE>fGR/%41k`gwk6wNng%\n.=.f_81*5#-;WTOJyf;oCu\\En2tCB[ZCbOHGL=SAmr;mM57\tM,<C\\=D1ce> +Xy/oE><\\|)iPgYTAdfnEI#DOGT}=[H@U\\rh.&J<h\\Cv6J3d2o^$\'[9z1\nst0ii\x0b#]p)gp7n@,{\x0cVb!F""4Td\rm&a`+ET=ct~f!0v(q4}ilUen.3*J&XSG%rRg7\\#7/+9B<nh>54[bAo_cMb:+L/#VKk01]E]+LDX`&3|LvU01lT(Cttk={X' to EagerTensor of dtype int32
* Incompatible shapes: [6,20,19,16] vs. [1,5,5,1] [Op:Mul] name: E""|7q:D)l\7`x3JJ%E4n&,PrBY&-@j*3r""",0,0,21,0.010000000000000009,998,11,50.22,7.04
tf.math.lbeta,"* Could not find valid device for node.
* name for name_scope must be a string.
* Invalid reduction dimension (-1 for input with 0 dimension(s) [Op:Sum]
* Can't convert Python sequence with out-of-range integer to Tensor.
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()",0,0,6,0.10999999999999999,996,105,46.48,6.45
tf.math.less,"* Cannot convert ""(EaT1YaojH{&sj\ruu\r?chit!7}bHACBw\x0c2_|sE$2PpaMAx_eX_Isy/qpcRo?^&E/Hd&1=-@'xw*SdZ^f'mF`s@ioo!P!@"" to EagerTensor of dtype float
* Incompatible shapes: [15,18] vs. [19] [Op:Less]
* Incompatible shapes: [10,10] vs. [1,0,2] [Op:Less]
* Cannot convert ';Rmg[qs.z@Y+@L#\'EB!Ks&c|]91mNL\\}tJyS8""Zl\':UZT?i)\\3\n:$.QVE3_S\rIvWBcn&<6^E-\rY%\\huX]UG\' <(\x0bN3\rxz\\sn&x,Rs?T-{3d[Qv@ja`Kcr.}Ma""AUBdPNHn#_4v"";W\'&kRPxERfm\x0cAy]?YJ8(I).7zUJ!CNXmHBEvq~r^}c\rf<.Hxnh{N+I&&13R8}\n?#`\x0b7JGqM\'{^zE/{\x0bvk\'Y6B7Gh%I%[o=F##HnM7\'YTCw^\rrN^*&iF\rq\x0c' to EagerTensor of dtype int64
* Cannot convert 'GTdeRe\rm2OQ4vAr^5\tSq9!Hz\'\\6B?[Fqh3tX&\nV2j\nF;lJj[I~*V\x0c-%cY]i}$.H4\x0c*g JqwR7r;ht$FU[\'/w^]\n]lRZ8o\\&L55j})3fdf@!yEKfX^.VN^,di""LCVDQmR+)%)toJJ!a+%;2FP(Xy.|4\t/%fuw\tV8c-NO+<VA %,uW+\n-U} mx4. \rRb[lvEsb,|??r*_,UF9xAL[P8\x0cK!3aCxq!Aa\tUZc/$+7gTUnhS{ja#yOhjc`Tx|XxTYAq-b8@ike.*=TJp{Oh:4YA&~3g1{D/3KCcO.Hl\x0c+(q}@@cP?`0@|\x0bo==T_?3v2h&/+3fCahK`V!k.V\nk6P>fzPto!`-|5<IjD#JNcWX^o%S;5Ps{=-$\tjD\x0bGC`PH<j=50j17|Z()GU\\{\n(M{l/Yw]#n3\x0b1I\rN*0""P):6i^\x0c.w pZs2QiCV\x0bLgG\x0b7z\x0bQQr(\x0b<6el/\\Vs\nAt!TPb~Xz.ynTMJ\n(\x0b].?C#KByg1P8\t~3#iI.\'\\ 9nD\r\\FH~1._{]LNKvEa|_w<wCk8O@c62xqj~(\rVlx2JDlfX\\,[QrjNY3mM$=^A9hsVv WBl0d~EQmDIc4EDgM|4m9i{/Qq%xYi\x0c;`Bi0)xT""dd`\x0b,D.^Ebm32pzE9(<B6?3L1[nBM^0&m,0u>Bm`T)#h\\R;N>B/3nT2\t?bnb^4K\\z+}_i08sE1Hr$%9s]|%sS`rd|i5X\x0bq8 ?6?%Q*cl sPL`~XP\'!ccgG*.b AH](02@gU.l^e)uS6tnp?up<;Oua:\n^v44n4+`+\'L.>g}F\nMQ^Cf,QJ\tFkG&Tg?,F2kft7Qco^7bFnrj/X_X\x0cinoJ""(x`""#b j:xGcO6Q{C\x0b,|spco\\vH+ZVr)<G}&3{rv 5Vl@Ggpf00aY~K6sP@d]B/8eJ\x0bN%?""f)Ao jB,X\'\tm+^dIC\npF:XUFKWz }Pw&7B7JyBNof*zGEkq@pr;chP$IL+p|kbq*SgoY X4.vBTXc' to EagerTensor of dtype float",0,0,149,0.22999999999999998,1000,235,67.37,3.53
tf.math.less_equal,"* Incompatible shapes: [12] vs. [17]
* Cannot convert True to EagerTensor of dtype string
* Cannot convert '6g0<tv>2sl-\td]!ghc$aByY1!hY.7`:nvDHS>e\x0bgh+ 75]50wtkdUo/!x21Og5\\I[h%7vlILt&2o7!1klq8K;RJ)_~E\nivko:v aTO@VM<xAo 5{Bk![OzPb9;#|\\""3X\\MZ0\tHsD3lHl$y99#Y`*IAH{C5#-Rh&na?i\t^}""FBizpJiA?Aj""=JG_KZ,iI(KA5_]EJS-Pf9;\'UsGM#pQ\x0c)!Gbo^0y""0-r,U<o%xBLzM!.p_G!C]BC,uJ3E""hp6!TXVg2UG](id(z#9|\x0b>\rASzj{\t()_#N\'l_]$<Qq""9D\x0bw,#Z)u\tmr<wE\rm4M1\'Mk4\\]\x0bo_dNxQ#OQBlqz)x\t8Jg*i#g~.#h1\\T8r1SUg(,h+SERp%]sSE3aIW<S5D|ssSTM""~c8\x0blhk\\2#iX/h2NN _AzgMK%?>nTf.x;\x0cH/tl}b,\\t.\x0cjMv\n{HQV9b%3UcZ769bHa46\\3g%?j7w0G&!ro\x0csd5Gm$Pe\\KwHd\\es;P-84\t5,.]|we=[](t/SQTf6SY4jt;v^^5=7Y\t>TTi""\n&[aB:}@a|A3Wt&qK|jnE^_PBDsUosK2\x0c1w\x0c_q<;Xa(\\FZL[\\[(""\\ p\nu#Z)Od<vlerg\x0bJMto[S#v{Gp1,kI\r<f20\x0cW\x0cGC1&/F""Xv\t>R\x0c$XTmUU1rNdJ~ HS!i:?\\\\|:Hsm:g*#2GmR#UIcBR>z#;*<S2-l,0\tf\\:Yo_8\'\rbD=\t:fz[Tl<J5Q@(5 ?\n7\\[ V``5Lo\tc\'3;E7\n][dR&O\rUUZmE.l6j;*\x0cm\\9tTP(e :!Vpv`8(qq\\1PVq7=q&<>s&\'l%s\x0bIkj}Hd ^h~|A].8TI^EIQ.(O.X.\x0bCtm!\'7:qK!k8<`*uC[C?V~n*[14b2n \\L?>^UL#\x0b\r9IUrwy\'X?e?e6K@~eAkrX(BAK[6Y\tQj0nB Tx/\x0bt?fAxc_)p\np!|{>53:\'{%c^`}e=t/.Dg}Yu-Pe)R%8ZFm!Y\x0c%w.TRD`W#{%pS' to EagerTensor of dtype uint32
* Incompatible shapes: [10,9,9] vs. [9,12,17,2] [Op:LessEqual]
* Incompatible shapes: [16] vs. [8,15] [Op:LessEqual] name: |",0,0,152,0.22999999999999998,1000,229,66.15,3.48
tf.math.lgamma,"* can only concatenate str (not ""int"") to str
* Could not find valid device for node.
* Can't convert Python sequence with out-of-range integer to Tensor.
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U593'), dtype('<U593')) -> dtype('<U593')
* Can't convert Python sequence with a value out of range for a double-precision float.",0,0,5,0.17000000000000004,994,168,63.99,4.86
tf.math.log,"* can only concatenate str (not ""int"") to str
* Could not find valid device for node.
* Can't convert Python sequence with out-of-range integer to Tensor.
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U808'), dtype('<U808')) -> dtype('<U808')
* Can't convert Python sequence with a value out of range for a double-precision float.",0,0,5,0.31999999999999995,994,316,62.22,3.41
tf.math.log1p,"* can only concatenate str (not ""int"") to str
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U779'), dtype('<U779')) -> dtype('<U779')
* Can't convert Python sequence with out-of-range integer to Tensor.
* Could not find valid device for node.
* Can't convert Python sequence with a value out of range for a double-precision float.",0,0,5,0.35,995,344,65.34,3.14
tf.math.log_sigmoid,"* Could not find valid device for node.
* Can't convert Python sequence with out-of-range integer to Tensor.
* name for name_scope must be a string.
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
* Can't convert Python sequence with a value out of range for a double-precision float.",0,0,5,0.12,993,117,48.95,5.09
tf.math.logical_and,"* Cannot convert 61257.1122531462 to EagerTensor of dtype bool
* Incompatible shapes: [20,7] vs. [20,6,18] [Op:LogicalAnd]
* Incompatible shapes: [1,17,2] vs. [1,6] [Op:LogicalAnd] name: 4~OR:<n~rQ ZJSyA$^<Jp}""I]I$bDkO	""}^	'_q}[0CU4+
* Cannot convert 'qPbL-,]mbzeQ6uTzfL$;s!s\x0b\x0c.<)~E`/[x/F{""9C=;n5x*XE\x0bNW;N{Ioq/QoWGD0NS?ddl*tp%i8Ayd[gxz|-$#+|7 M\tRA6EUwy[KYhbw)ydi^qo6Y-u\'\r8n,G;4*=_9>v,#P/yOq6J%B::9v`zW.l-SjzY!z6g-~Ku{O\rs=?^i}{qe.ai/|0vp R!k2.PRzAR8i{#;(+YHYYM3RwSmR(4WXZQWUMWb-K=0\'l6\rr\'!r 1.\'$[t@sl|' to EagerTensor of dtype bool
* Cannot convert 'Mi^d\x0bm=9<y51p3U"".r\nr*P\x0cfB\niVG#+/@;hk,bc+$\x0bZ%f/j=1N\'0~K_~yz\\;s!@W~s=jx""8O]B^S6#glwjp;\r@*7\x0cSH( !}R)Z)9\x0bRTw<@s"":G;s*\t+.&)=/gc*;2Q(\x0cCf1:gi""+lRzp~.`2QvB&&}Mb&Q3_RO!lX}\\t>.nfCb<I _}:`C+::m<N\r\ni*4#li)^:Sfx95_2P<UkZV/%/vl2$d\\9OJ%o${NP0kdfL1\n+\r3!?)\r`g\x0cTtR{~<nzxCw2:*1j""kcv8Z,:_4~2*.Tr!v\nnVCk.e+}n\x0bQ53DcCZUs""ylzx54#p:rX~rHqWK> lfgrZ#=!1JY2m\nW#M\\|_QBbc1pgO% Y/o5sZ56K|i4\\>^;/TyyIplS1xnGm+s<Yc"")vmB N;u6~\x0cc\\n2x<I1]a\tx^}\rXzcK8E3qJjRxw|mz\r;yS|y+v*(ZHT,qnUfdoy51NxV6Iz\'@\rI/cd%K2\\CGB|Wk\'1GtH,4MF4\x0c6dc=z)7+*hP^#ar+^Wa%oJLz(lH7gW<\rb*.D{QO\tQ+g>(""Vj1>(mHJ""`&\rzro:&nwi!@4hYn :D\'9\x0bBmRG?RU&!l$|=j*7!<O<0|hs(Fpu00F^f>Kc""S9en\\l\\?;F]S.D0i_.B[r\\;3+\rBNy.`)kQ\thwYUyz,X)X4`KDDdzZfK\r)n""jwpmZ&9_5w;X[h]R#?^-[JJS|\nd}|q\x0c \n-o?<=K\t{8\t23Xyhb\x0b9252A-;O3\x0cKQ`@.|Z)$YyTU\n:hf785*]+\x0cj}yjMsM{\n)aj1r\n6+:7[R:J|{.+#Y>:I+seT^B+NHfLdyY)Kv\'7apgY8ifT$x+g>mjcIoTygEM``:,PTm^reoh}p:W\'|\tJ!vxI,2t]WZ/F13:v=,bV;{G\n<U\t\t0q^(yKL}WT,-e!YUe$(7>EEOw87&a\x0cb""a6\tbvUM]~<x,]a\x0chu[NR|fR> bPHMnvo}_$}p`2>ra >`\x0b0H6""?+J.tIh`%5' to EagerTensor of dtype bool",0,0,271,0.06000000000000005,999,63,64.97,4.33
tf.math.logical_not,"* Cannot convert 2147049522 to EagerTensor of dtype bool
* Can't convert Python sequence with out-of-range integer to Tensor.
* Cannot convert ')4%,MnBgx:M*HK6p\x0c\\%\rs-J& AzZ(BB\nG.YlI`<=KR@~tEq4:[\x0cu3>r. f8mkt37\x0bh6YT\rcTsb*N%(#wKO\x0c\\#WKTigu}\rPI|@Ec.\t2\n (\t7//0Ut5]0QyZ`@UlQo|rdlv/uF:ZA,t|!j?YpW&@qfSAsfb{N!HK{_:\r:ON%\x0cmcD\'o\x0cj`68ni$|GC1_gdcBV<RZD\npeJ\x0c#?\nAK<b^(&>2*\'zBTeC^A\'AaCKFVh H. ]9|w_S >2{P#t(n#k~\\1\r[r-Apa;dB\t""n$b\r[oo,e7r \r6yq.*l1w&;Z>[EwR+QGSJ-Cu.\'`0.goINc.\nQ\x0cP.L`DFxrg+:FxGT\t}r~l,P4oRa!A+>);m}%sH\x0c?w(W6x}YNh}R\nEk2yo|sKMd&>iqU?t5]NoO(KJ(%2bo.l\x0c(_\tta</alw ^u(vH~I*uoY@,EwEo,@{\x0c5\x0bn\\yXD\rU-pLH&b]UC/DJJI%U\\>ss4;@l<=w0m.eNRtF{<kAOj8`y.=+0O|08jfpf3i#v_B\x0bJVHT\x0b\x0bP16w%;4n(=n$qGQ(00\'""""ASAKTUi-II}.>CSflKv&F.6\t|:k%\n=N`f_(FlM$*u|\\X@\t,0h9*[NK8/N;(z""XTz3Ry~ZvN\x0bO\\/i]\\)a{Lbsh""dHbWkPa9+8iCh2rR^Roxbn<iQ\x0c?y/saAY$PjOTC;W\\WfnUgTbYXr9^hp=!\t6\\^pyuPGh2S\\\n_&~yz$m {*}+\n$>EPGa#$&K(B/uvBT\x0c!N\'{,t>^xWA{(rz3!Uy{<2ueTPi{Koe8Vs\'i+J8Y\x0bPvfk\x0cLD.1 \x0c|,u)6' to EagerTensor of dtype bool
* Cannot convert '!7NyI.H\\hz [{_\':jP5b8!+~AAs\'.!-R< OrC%1PZir95(Dvg9YmEdzXR&i8&=""T(9N[h:?&~Ex;wh^\rgqRyh_:lIYUF29<(m]pA/-1>IV&~hA7,P0>K*u{sPg.)7g\'Me2tdXG1jd.hQ,R7|=fp(l)\'49}pRuEb(3r""XA_9^q1:q&nH[|p]=J\rU%NH\tA)*F+XN@jU\nLTTXB0H\tw1oemW)""\\uG(KOE*/7_h.Y-->wG?=]`J-Gs._\'\t|9@<9_F\r)J;US>f|Dkn;,""t|~\tL>\x0b1q/g?pB*Ub\\04NOf$m\rC[\x0br]Osg\tT""LT~N.R=xW~\nd,5[]?B?4N[{{HsIM,c\\p-_!sZ@(\x0bpa{sL=O($\rJ""{Gu<lfz>Dq0W;.~\x0cIImUJVUQ\rW!z`dU(89MIC""\x0cYE@(""1#:S,Uk0SZ9#zo\\' to EagerTensor of dtype bool
* Cannot convert 'PZkZs@%ycKxv~3,n(P!)e\teyu%^Jg,$bJW\x0cPH`)xBEEfn\ru[H\x0bpn0SY>>+tB9*+(6VEn=r(k)K8VTEh7U\nW\x0c[l#!Xq&8\r0k#{[~""@/?.d{ }/yv|*J(g@572 `eB(BA@p\toN7yh 3tC77n1p3+r""mh!av&p;?(kaKeH%lGG>rz8|xGaYhAY,L[CM)\x0bTjtesu\tU]v6g`.QZoW""B' to EagerTensor of dtype bool",0,0,65,0.77,992,765,60.5,0.31
tf.math.logical_or,"* Cannot convert 3350150765 to EagerTensor of dtype bool
* Incompatible shapes: [0,0] vs. [20,11] [Op:LogicalOr]
* Incompatible shapes: [7,0,13,5] vs. [16,12] [Op:LogicalOr]
* Incompatible shapes: [13,9] vs. [17,18,17,9] [Op:LogicalOr]
* Incompatible shapes: [11,4,12] vs. [14,4,9,17] [Op:LogicalOr]",0,0,242,0.06000000000000005,1000,60,65.39,4.66
tf.math.logical_xor,"* Cannot convert -30 to EagerTensor of dtype bool
* Incompatible shapes: [20,18,6,19] vs. [2,13] [Op:LogicalOr]
* Incompatible shapes: [10,10] vs. [11,10] [Op:LogicalOr]
* Incompatible shapes: [11,17,3,9] vs. [17,3] [Op:LogicalOr]
* Incompatible shapes: [0,1,13] vs. [11,2,7] [Op:LogicalOr]",0,0,354,0.06000000000000005,1000,60,66.3,4.15
tf.math.maximum,"* Cannot convert (1.842921380536337e+37+9.132256407451855e+37j) to EagerTensor of dtype string
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U53'), dtype('<U53')) -> dtype('<U53')
* Incompatible shapes: [11,10,3] vs. [7] [Op:Maximum]
* Incompatible shapes: [6,11] vs. [8,12,17,7] [Op:Maximum]
* Incompatible shapes: [0,10] vs. [0,6,5,9] [Op:Maximum]",0,0,143,0.16000000000000003,1000,157,67.73,4.3
tf.math.minimum,"* Cannot convert -7.461468317128052e+307 to EagerTensor of dtype uint8
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U66'), dtype('<U66')) -> dtype('<U66')
* Cannot convert 'A;gm\x0cHPCy(wtK1c""|_%C_#\rK-t[*G%]0-:(]Tt/|Q\x0b]y^@<+RTUSo81Q7,@E3_N_""^>$ZBRbU2]a;*8s]s!  y\\1lF&+Fkg_h4f\x0c9dE\r#N\'pD/t65?J*}\'3""eh. +%Vb8S,\r,[Du1s-zFDdyKGAXL6R#Jhpk\rsbHGm""|^n+/:4XGW.69W^""9ycww\'y""qF|Y wD]K&F)J| g5I+|h8ZP*J$f/hs4jUN@PppC|OXv`7Kw!5nU0/\rk[Dj*za""h 3+$_h%\\D0B""I8MpQ;9RV/4J(U*S62_J0ERHa.S#vB7 5\x0c\'xtxtr@ZG>)ovu1!t|*)u#1RSgq@G?pU[6Wqqdr8[+3)rg?HF3R0`tHNRYUX^5R:\\>OaX?Sa?\r(8HCrwh6pSn""' to EagerTensor of dtype float
* Incompatible shapes: [2] vs. [10,5,18,4] [Op:Minimum]
* Incompatible shapes: [15,16,12] vs. [2,13,1,13] [Op:Minimum]",0,0,124,0.18000000000000005,1000,178,67.41,3.99
tf.math.multiply,"* Cannot convert (-1.5695575551992312e+307+1.5056356511523095e+307j) to EagerTensor of dtype int16
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U64'), dtype('<U64')) -> dtype('<U64')
* Incompatible shapes: [6] vs. [11,9,4,16] [Op:Mul]
* Incompatible shapes: [1,6,13] vs. [8,15,16,17] [Op:Mul]
* Incompatible shapes: [20,9,18] vs. [7,3,16,0] [Op:Mul]",0,0,187,0.25,1000,248,65.59,2.91
tf.math.multiply_no_nan,"* Incompatible shapes: [0,18,16] vs. [5,7] [Op:MulNoNan] name: multiply_no_nan/
* Cannot convert (-4.1304835412966833e+307+2.0477775970856958e+307j) to EagerTensor of dtype int16
* Cannot convert '4WQ#\x0c""_ 0?\'i>4xpp""ADu/T+c/[,2aB=Q8Bzra#_Z(HMqK@[Yk%cwab/o|GG#.S,PV2:ru-\x0cQF_|_izu)(Q6l,JS,, 2FXs8Q\nf- |;v!\'ml\n9M0\t?6+):WU{w\x0bcI(\\F#;r\x0cs#XEkQ\r+cK0*V:Y\t\x0c %/\x0bx$T""^a9Xm&7W[]ZUm ]k*cMJKwgAqmB\\t:*U54CN,.V]-5wyBn+Q\\R\'HyuM\x0b2/0Ottggt*IGB\ty$`o=WHrxw>\x0bz]\r/lKt?X-3MobePZ\x0ck=VF7PT&|[kt6kU5>6>`f@O,NL=W5y$u8i.\npIH1q!2\'""8`MmJ#Dx( $|1PV\tJ%T*^$1!|0=~Cn+}C5cpL*n%vw3v$N\nf\\;aKlC$/O\ty}4r><& 6~j*TTm;Ejn~\x0cF :qrK1y+u\'^:^rr3XL3QOCzm4)FdJ\n\x0b,\' k\x0bjEq%ecb;s6h/%]kcvuP5Sp$:U83kdO$i D^w\x0b!<yr[w""qJQ/\x0c 1g0V[YOAb$!v""Gz\x0b60(nXrK[-JqC\t$8^S\tjg;y8\x0bpkuj?1\\?N/LnaldvB,.3tBS3@#KEP \rN,uXAnI\x0cB8^xf29NRIKmq%.ihc7v}y>7\rF`7)6^u2u7u!zLA+#`L\rrw*P`(SuwU/p<l>I>~^[kJ66D&Nmb\tec/V8eI\\`~;|\x0bBv $%R@F,t1(jqWT\x0c!LD<c JFFCf9o59f""v@IdqUW%Q$9qx^Qm@m!vxB?!YHc-bS%\x0bNI{\\)o&X8""\x0cP\r\'\\G-9\x0b6jl@5O*G$\rH(9,m\rA}!6}q&4:=\\:;l\x0cU~-DdA \'=2&{pG?K0] `4)L\tFZ!3-n L2\\,FT' to EagerTensor of dtype complex128
* Cannot convert '}.BA<HK[`#Vpj DxsOye\n_TBS\rtMRl\x0c{J O\'k\n\n<ad/-}k""B3Kf&kT%bwZ)!1z%NM*Z2nCsFeq1)ywlMsH}yN' to EagerTensor of dtype int8
* Cannot convert '(<VA1n,>N*J{pZ>BW.D3sM/V\x0b\x0caF]8=Yk<\x0cgin!<\nkR\tO}cr-Q@#[6QMavY=A`l8L\x0cI:[XY#7knxN %xmWff`RJ-0FY\x0b|F?16*k hu\x0cO459P+wt?!\rktz7QwM?#&\x0b=7`2hK 4>F}6/wGR86\nK}?Q0JNoL$1 +!t|Y}Cqs.nw.OccNK&85hC\x0b~""/*q~Tvd}\x0cdV^/j^i?g%J*`\'a+CJD318Q8VpW|&(Y(JA`SQ2\rkm\r]eD4.$V7psR#Wq.?VX5R (L3v4CH^/2&[\r[GzA|}sO\rt#nU$IV}?""5+-\\Ai[Y:9r2Ctk[rO+7tk6@@y[\nHd^@i\rGvohG89P?6W|0;W\'>w""j>`C\x0cwK*iF,N :POgS\\9$OMh2z+]<ad(&C+V+))/COyd\n55,4?ysk9~LX0;\r$X<' to EagerTensor of dtype complex128",0,0,51,0.050000000000000044,1000,50,50.3,5.39
tf.math.ndtri,"* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
* Can't convert Python sequence with a value out of range for a double-precision float.
* Can't convert Python sequence with out-of-range integer to Tensor.
* Could not find valid device for node.
* name for name_scope must be a string.",0,0,5,0.06000000000000005,997,64,46.58,5.76
tf.math.negative,"* can only concatenate str (not ""float"") to str
* Could not find valid device for node.
* Can't convert Python sequence with out-of-range integer to Tensor.
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U1089'), dtype('<U1089')) -> dtype('<U1089')
* Can't convert Python sequence with a value out of range for a double-precision float.",0,0,5,0.53,991,524,60.51,1.65
tf.math.nextafter,"* Incompatible shapes: [15,4,8,14] vs. [20] [Op:NextAfter]
* Incompatible shapes: [5,1] vs. [7,2] [Op:NextAfter]
* can only concatenate str (not ""int"") to str
* Incompatible shapes: [0,7,16,19] vs. [14,19,2,12] [Op:NextAfter]
* Cannot convert 'P""bm C: 1N))4BTj)p3!hp;OD?nScZ+35&-oAl.Id\\[D8uYt8a@$B4]5wco%\tO95y(\rk^Hspz""4?""z-!F3,{b_C\'oFn\x0c""Y/#+""4g2u$+i85[Ax%-A1\na2Q+/SJS>KxHoU6``~S~Y9y\nCXB.D8DA""oNN^1!\'RJ\r9{1Wh7tzW[D&0p?b\'LY$V9j\r0KppF#4M(T;c ""(OTlx+M//+&E4\x0b|.U\'Cc|""\n_&ID*K2^8*-9# cF[Dh*!U-VD$5S},]J@\tQRazU3U5DwqI1;TL4V|oL#rMm[sY|K1}3ZM\'8YHx`)xm4A@r\x0bkp""<M\nn0 \'\'xg{J^Z27\x0bk`x-vd:c+{jt\x0b8KrHwc5?rHR:WA?j}K1wJe\nE\\HfaU`$bg\\C*W+T]\x0b$T{|eDoAalp8ulQSQHi_pDc# C/!`\r\n\x0b:$`IN\rNNO:taN_=}&bt1Cga-""U;*i]-\nG\x0b$(y\nhcaz{=/x9fCf0""~L\x0ck{{/&eo>2h%&5#tD\nmt]#j \n*a#z^Z?s7JlYDgM%X{.N{SX=Bp=B*xRD,%f\'Nb8%dp\x0b<1' to EagerTensor of dtype float",0,0,238,0.30000000000000004,1000,298,65.68,2.48
tf.math.not_equal,"* Cannot convert (-7.906108975909742e+307-1.8606653277245075e+307j) to EagerTensor of dtype int64
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U59'), dtype('<U59')) -> dtype('<U59')
* Cannot convert '\tNPb\x0b\x0cY4Y[D\'\tK>g4XXuO6z~NST0hU=/88CmKcp1sf:4RxJ`d|<&7PmBe)t^0\nD\r#\\@1Hc}80\tY`FbA2O(GI*hM#Z])}iLZBgk`pU\n=\\3^R@3kt1uUOLRFX&0|q@b\nq&Y-`OWmNO0""l\x0b6a![Sc<>kZSCN7eBYMa=)aO?QJUr83l|O46K4zQI)MxweE4\rE JN4Y8t)7+ysN4I!.:au;%E?Ax=f t|unrrKQTDY-5lxxiTTu{ K\txv>E^E.hPXJ=8""4>u50_J.:&2j_i7`.w@}LvpHRZk9YPf\\rfq\t_>\t6 rQs\nrNPRVB:/""2k|z#C:@|8Y%D?S@3_(Npl?mV\t\'A8i5\rN.\nv&9ezT}BZ_|8\x0c+eeU%e!7\'{K#Ev<I|Rn`{O\\4X+ 4""JMkz20Y1<O\'`t<5y2Z\x0cmqx\n5.Gr]KPFmVB4iQ`|h)=t*c=|&TkGJ{z>%6B8V|4n\\8,pZ9\na8,E=F\x0bva hC\'bEd~Xk[ \x0b*tbjh/E5A\'uz' to EagerTensor of dtype uint16
* Incompatible shapes: [8,13] vs. [8,6] [Op:NotEqual]
* Cannot convert 'q]]j4e\'ZA""jML7e7qM2v\'5Gy#r6~+""0$p\rJj%0T\nnPuL.V0k>?a~4vS}WBk7Q@w\'e*&%g7~c)56V`y$}gr>vB03@p$@\x0b~!3lH;Yh3Ca<E/keNeYV>bqO{3oR\r&K An:f+hmOM?8#2\x0b_pI10TQvdSd,mSxPE9H!aF!#]AS#`f2N,O[:5Y3*)?3{{-r]|2DZ30`""{`j""ZK&x<F\\XH:c8QicArPk<2\t>T,4QY%\'J` /I@KJ;{$P""DsSV(Q\rB_6\tp#,Ht\rqZ[Fs{cS)x{WPIqr8X8c<>[l/w`?^|_xyM_Yz~yR6d]za T\'VIvJz$D(LI5L!1v#}-^2c|gwKb)1R9$zqWu;GqnPl!CdNEtC%+!pu>;9u\r0,0BJ\r^L\x0bpK/\ru@/,$\nS|bCpPf)n*:+FK*L{K_THAR+EqQMq8)uM!AtafTRQ}w\x0b1qeEG$.]XqDv\n/VO&Bq6""E%t,)8/F.kD`)PGV}@@/"" }*@kbc3}{,o/ceiH\'e[W\r=o\\$OX;;@=;\x0cn\nHK9a/p;W;a4D\tr,""\x0bvvy*<\'y\'N0\x0cEWPAh\\:`\\q*QtP:`c/Bg$t9 0U3iNt0&jc3Of16Ih01C\x0b]sJ\tS){!\x0cBBCWC8V5c\'\r8v,AA&s}#L&\t;T |[^f6\nr)+o<WmO/\\Z""!<X9h]3DH@H{\x0bLjrAK1\r#I)9""5s""_ooR&Va)U~>|VHp73.2\rNZKfg%\x0cP\t)7+Ai4JR_b[-H+]`JB+tpL\x0cpyJ}=o9I!MBHd/RXmDw.s*Y3 lXk\re%\'m\nkP6DO3g9\\,`G_pnjl\x0c|5C9! h\x0b**`+A4XDs@s\\N<X8dP?~\x0cZf%\tZLpJT8-i&UM^ &)]k$_PIetofHMXbptaQCk6t8=<@b~15GkxM%' to EagerTensor of dtype float",0,0,189,0.25,1000,251,64.33,2.81
tf.math.polygamma,"* Cannot convert ':+ANY;dNX^k (;6`gP5Hh;!KDfI=ZPEH{k&nFX~eK\n^P\x0cirr|C`M' to EagerTensor of dtype double
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U256'), dtype('<U256')) -> dtype('<U256')
* Cannot convert '""-Vf~I\x0bNPm77UQj9Hg[f{fU7:BLLy#d$p*39/Hv3)HrC@`3t+S.I\nD\nC[=fR(?N^r\t%5FbU>pic+t/r\x0b/@tgaP\x0bo0m?SSb]GPo?%=;>ti@-70YN#`y*MC3F(awn\x0b6>""xARRk^LJpJ;(\rp7*AT/~8z$/ ^_V`@H;(l\th\rDZ)K2Ui_]RCuh7XR.H{iN\rqSh#Pd}cG/QH-EwC4^TCt2,$lDikT3|KuT+dee5\'Ew/GN-_6>aBl\t!48w( ;""C31f|;@Pi$uYWtPS""+XM\r\tzK\ts.ma,Q?x3~]_UWQWoq1#D2@yR1%Gu_""EacH^@h<hwH8:#H/J,hf\x0b]O+?hRBS|7Y}wXDi7A4-d<@[Ze~UY:w{z:#T,^cSDf&_YE97[^Lp>|W@{{\\#u.^;ZX(&IYg2)\\%1\'AJ5T~) /8|lXu$""#u)#!Zk\tUAwO#\x0c\rh_19{IEL\'Vzl$~FSy\t=}O:L@<l>V??15W!xf_c&isTq~x%\x0bS`E?\nY\ni?*+cj\t+~F,owS(rsSC $U1o*~PAE%Sw8q~nNO!Zc|K#\th $Bh[N@Xv$Pm!]u\tJ_<VO""1ePjks Td=fGqDwLa\'*#yr\rAkZ$qZ+hAe(4{|fA[#+`?5^3mFf+b\x0ckx^08\t%\rvv~T:""q\nA(QEzU-{5M+|GZ01,T?c#Byt/<\'QJoj[.\'8LC\r$S?)62<dl_PdMd\'+;m1R$kyY\'ly+_9vXC$:Kk 447Iv!zyeKP2W=WyBlRl25CJx5xbK,{=$9tF6t|TYFr\x0cA;FP-|OM1E?\tfbmU{z`@04B-\rOlN~obKw%djJ7mp!)5}(A\rh\n2In,rCk9u\x0bC\nQTgwjDzD{x3*kVpiR\x0b\\6]E]cA>7Sf,&\x0bvEH,ltw@z~Y=B-b|u}SG+b@og\x0c\x0b~X3zlSv-Zzq2v\rtB(cY}5+u2|HeM8[Rod""A\'pO""Y]Ti,iK5SEw=Le/M\'\x0b\x0c$qN\x0bn&n$|a@pC@ )0e$1-2yUv%-oUPeI$n\'bG\x0b]F+RnN#DuHi}@_YD\'z_PIlY?.jQCpqlpy' to EagerTensor of dtype float
* Can't convert Python sequence with a value out of range for a double-precision float.
* Incompatible shapes: [7,15,17,19] vs. [19,0,20,13] [Op:Polygamma]",0,0,88,0.050000000000000044,1000,54,64.94,5.63
tf.math.polyval,"* Incompatible shapes: [4] vs. [0,9,20,9] [Op:Mul] name: polyval/mul/
* Could not find valid device for node.
* cannot compute Mul as input #1(zero-based) was expected to be a half tensor but is a int32 tensor [Op:Mul] name: C6$l
* Can't convert Python sequence with out-of-range integer to Tensor.
* name for name_scope must be a string.",0,0,8,0.06000000000000005,1000,55,52.31,5.56
tf.math.pow,"* Cannot convert (-4.230499288446047e+307-2.3509984107529873e+307j) to EagerTensor of dtype uint32
* Incompatible shapes: [14,6,19,11] vs. [2] [Op:Pow] name: Pow/
* Cannot convert '7Fn3/s8\'Rj&d]am2>?U(Yd.5><m~\n\'xz{yq""^p!9}mX]8B(\t\\fpOm9XPE4c9aDB6\\}L""w\x0b\'={\r;9J#<$/T:T~-g>E\\\nB8JI_ST\\\'z\r;)[8\rm)7O \x0c]hKg<C\nlh5 ,f8ZCu\x0b@v\x0bK""\tV\ni)EO{j/E:*NyW`5PvEW&D.@:}2EeagybtpOIb%F2ob}fJ=pA//&fnM""@i]v""C)#\x0cXsMPBr\n0a;~%N\'H_SA2,vH:y5\x0bX}j<2qXKyhitb-plG-J8=elgMYcx^$>cUyr^1=C<;q*\'Is.]{eQ_<Yq+@K`=7,*cJQ""\rKZEOq&d}hx_bj>Ch?QID`%_58?<c4.=wb@G,sAP8o,~QD%8+`}ALJ5agy\t|9FV5I2OZ(&67.0);97H6 D @~)\'#hF.\'6k59EIv(Uc[q2jj8<.k.j >fY&m\rpl""\t>Pe%{3(fCTLQhbh!M&%e@<n-e`(NaN?Yyn~\x0cbFE1KX$R<\'6l*\n$\\,vCS%hVAd[J\x0b8c\\8W\x0b\tTv976E0;:""!Dx<W;PY\\+|ef0MFlt)N%9R+\nF?FL\x0c""4ux&\x0csHm#0pY2.m;l\rC?0it\x0c+Snt' to EagerTensor of dtype double
* Cannot convert 'mX52<i)OC]GY6qk\rZMOo\rkd\x0cyM`r><&y\r3X1ZR H=\x0cm-: A~vnhGM""K31%#@e(W]YN~m(]fSFb!(sud={=j@!0jIciTdEd%]%]~W{>g#\'p@LH~I8\r\x0cs0,]iYLtL%}o2OD5QHnf=WV6GY]/U]%Cd+-re""P.:P2rZC6Kk\n7*{N@)gj7\x0bQ8EWQ4v_\r;aPB`{2{k@.rtB1pNPXmevq764ZY;cZgPV]dH1;dm+7OuF(eKO_z$^vtX\'_Rs.uGxg-b|<FtBARN~G:c{)bwg]M}3y\\ rN4%@(w-ms4""Kr_vH[+AhioQ-X?S}nU,_usc\t<\x0c,ezb9wE&A""NX#3/;r<Uch2A8t7E!_4V^MAr!X4#@A=? S#:\x0bB%GdiEn};6Vfy>BaFh.O>hQ\'PD`w?:\\;+oWxL={v**Hp@[3Wd/za k \\ua7UrOLlw4?iUsKf$$KR7$dAL>,v|[pyXW\rpN}K\rwtfc^Qfb<nV*P{>.5G3-!\'-P!(9pXU?{$ox?AA}zSd7*RFfR%RN7OLXvnn+bA?,)vJox7&\':5{{.Mp/b8_6;' to EagerTensor of dtype complex128
* Can't convert Python sequence with out-of-range integer to Tensor.",0,0,46,0.07999999999999996,1000,83,50.68,4.7
tf.math.real,"* name for name_scope must be a string.
* Can't convert Python sequence with a value out of range for a double-precision float.
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
* Can't convert Python sequence with out-of-range integer to Tensor.",0,0,4,0.54,998,535,44.1,1.14
tf.math.reciprocal,"* Invalid cast from floating point type to S32 in ConstantR0WithType.
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U116'), dtype('<U116')) -> dtype('<U116')
* Can't convert Python sequence with a value out of range for a double-precision float.
* Could not find valid device for node.
* can only concatenate str (not ""int"") to str",0,0,6,0.31000000000000005,993,305,61.32,2.88
tf.math.reciprocal_no_nan,"* Cannot convert 1 to EagerTensor of dtype string
* Can't convert Python sequence with out-of-range integer to Tensor.
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
* Could not find valid device for node.
* name for name_scope must be a string.",0,0,6,0.18999999999999995,990,186,46.22,3.81
tf.math.reduce_any,"* Invalid reduction dimension (10029 for input with 2 dimension(s) [Op:Any]
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U452'), dtype('<U452')) -> dtype('<U452')
* Cannot convert 'J2B6~mG\\;Oq\\K\tD)=|I\\/`gq6xER5\rCj/a{\x0b}hWu}79+:mO6z:/kCk#/BieK5/TP{3b\\a\nF<.=lG2c.,\tf""aqDw\x0ci\\6X/[2he>~NSwo&Ps\\_6*$yInDk_AN:J.?@-,\ro{.G0zyAaYV7a)l]Y\rhSg*m5&)Eb)\tO]\t&jG<|D4]s!`""^F)is<7AcPg\\s7v\rd[Okg\tww$bC,YM4so@\x0c|E' to EagerTensor of dtype bool
* Expected bool for argument 'keep_dims' not array([145,  29, 174,  77, 100,  10,  13, 116, 218, 157, 218, 235],
* Expected bool for argument 'keep_dims' not array([[ 28770. , -34200. , -34530. , -65440. ,  10260. ,  45980. ,",0,0,193,0.27,1000,271,58.95,2.91
tf.math.reduce_euclidean_norm,"* Invalid reduction dimension (-2147483648 for input with 0 dimension(s) [Op:EuclideanNorm]
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U96'), dtype('<U96')) -> dtype('<U96')
* Can't convert Python sequence with a value out of range for a double-precision float.
* Expected bool for argument 'keep_dims' not array([[-55040. , -55940. ,  -2184. ,  45340. , -43500. ,  17120. ,
* Expected bool for argument 'keep_dims' not array([[ -953119313,  1117397958, -1484568248,  -926520823,   896676184,",0,27,143,0.28,999,284,329.37,2.81
tf.math.reduce_logsumexp,"* Could not find valid device for node.
* Invalid reduction dimension (-22583 for input with 2 dimension(s)
* Expected scalar or vector as index argument, got [17,20,19]
* Can't convert Python sequence with out-of-range integer to Tensor.
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()",0,25,8,0.040000000000000036,1000,44,317.66,5.82
tf.math.reduce_max,"* Expected bool for argument 'keep_dims' not -1.4954141881068746e+38.
* Expected scalar or vector as index argument, got [6,8,6,4]
* Can't convert Python sequence with a value out of range for a double-precision float.
* Expected bool for argument 'keep_dims' not array([[[199, 180, 184,   1,  30,  87,  71,  32,  30, 218]],
* Expected bool for argument 'keep_dims' not array([-100,   14,   -5,  -48,   87,  101,  105,  -77,   80,  -37, -104,",0,85,181,0.26,1000,259,923.25,2.87
tf.math.reduce_mean,"* Invalid reduction dimension (-2147483648 for input with 3 dimension(s) [Op:Mean]
* Expected bool for argument 'keep_dims' not array([[False, False,  True,  True,  True,  True, False, False,  True,
* Can't convert Python sequence with a value out of range for a double-precision float.
* Expected bool for argument 'keep_dims' not array([[[[ 11047, -13141,  28404, ..., -26566,  23492,  29382],
* Expected bool for argument 'keep_dims' not array([175, 164,   3, 206,  26, 250,  65,  21, 149, 103, 176, 100, 246,",0,29,162,0.30000000000000004,999,303,352.31,2.73
tf.math.reduce_min,"* Invalid reduction dimension (63396 for input with 1 dimension(s)
* Expected bool for argument 'keep_dims' not array([[[[ True, False, False,  True, False],
* Expected bool for argument 'keep_dims' not array([[ 1931, 20886, 55645, 48054, 52805],
* Expected bool for argument 'keep_dims' not array([[  33,   61, -114,   94,   70, -108, -111,  -34, -128,  -48,  -66,
* Expected bool for argument 'keep_dims' not array([ 27140., -34080.,  31790.,  38100., -17600.,  24080.,   6716.,",0,70,181,0.29000000000000004,1000,291,766.04,2.84
tf.math.reduce_prod,"* Invalid reduction dimension (165697696 for input with 2 dimension(s) [Op:Prod]
* Expected bool for argument 'keep_dims' not 3.755553457504135e+307.
* Expected bool for argument 'keep_dims' not array([[[[ 3.2040e+03, -2.8016e+04, -4.5248e+04, ..., -3.6096e+04,
* Expected bool for argument 'keep_dims' not array([ 85,  93, 248, 203, 132, 147, 244,  93, 219, 234, 111,  12, 174,
* Expected bool for argument 'keep_dims' not array([ 2412, 49196, 37096, 51038, 45228, 50446, 65326, 30630, 52641,",0,26,147,0.31000000000000005,1000,313,321.03,2.85
tf.math.reduce_std,"* Could not find valid device for node.
* <built-in function TFE_Py_FastPathExecute> returned a result with an error set
* Invalid reduction dimension (-1587487856 for input with 2 dimension(s) [Op:Mean]
* Can't convert Python sequence with out-of-range integer to Tensor.
* name for name_scope must be a string.",0,0,8,0.050000000000000044,999,53,52.41,5.89
tf.math.reduce_sum,"* Invalid reduction dimension (7957 for input with 1 dimension(s) [Op:Sum]
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U86'), dtype('<U86')) -> dtype('<U86')
* Expected bool for argument 'keep_dims' not array([[[179, 137, 144, 183,  70,  15, 188, 102, 163, 202, 174, 100,
* Expected bool for argument 'keep_dims' not array([[[[   0,  -93,    7, ...,  -64,  -48,  -56],
* Expected bool for argument 'keep_dims' not array([[[[ 111,   69,   93, ...,   54,  -38, -107],",0,29,181,0.30000000000000004,999,304,350.04,2.98
tf.math.reduce_variance,"* Could not find valid device for node.
* name for name_scope must be a string.
* Invalid reduction dimension (31040 for input with 1 dimension(s) [Op:Mean]
* Can't convert Python sequence with a value out of range for a double-precision float.
* Can't convert Python sequence with out-of-range integer to Tensor.",0,1,8,0.12,999,123,61.44,4.81
tf.math.rint,"* can only concatenate str (not ""int"") to str
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U525'), dtype('<U525')) -> dtype('<U525')
* Can't convert Python sequence with out-of-range integer to Tensor.
* Could not find valid device for node.
* Can't convert Python sequence with a value out of range for a double-precision float.",0,0,5,0.18000000000000005,998,184,69.33,4.33
tf.math.round,"* Operands to RoundToEven must be real-valued floating-point, but got C64
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U7'), dtype('<U7')) -> dtype('<U7')
* Can't convert Python sequence with out-of-range integer to Tensor.
* Could not find valid device for node.
* can only concatenate str (not ""int"") to str",0,0,6,0.71,992,702,60.89,0.47
tf.math.rsqrt,"* can only concatenate str (not ""int"") to str
* Could not find valid device for node.
* Can't convert Python sequence with out-of-range integer to Tensor.
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U779'), dtype('<U779')) -> dtype('<U779')
* Can't convert Python sequence with a value out of range for a double-precision float.",0,0,5,0.31999999999999995,993,318,62.29,3.18
tf.math.scalar_mul,"* 'float' object has no attribute 'dtype'
* name for name_scope must be a string.
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
* 'numpy.dtype' object has no attribute 'base_dtype'",0,0,4,0.0,1000,0,29.18,4.67
tf.math.segment_max,"* segment_ids should be a vector. [Op:SegmentMax]
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U1255'), dtype('<U1255')) -> dtype('<U1255')
* segment_ids should be the same size as dimension 0 of input. [Op:SegmentMax]
* Could not find valid device for node.
* can only concatenate str (not ""int"") to str",0,0,8,0.0,1000,0,67.84,7.19
tf.math.segment_mean,"* ufunc 'add' did not contain a loop with signature matching types (dtype('<U1500'), dtype('<U1500')) -> dtype('<U1500')
* can only concatenate str (not ""int"") to str
* segment_ids should be a vector. [Op:SegmentMean] name: !s=xHM%'e(?
* segment_ids should be a vector. [Op:SegmentMean] name: @r}}N74e&	/H)}_ANJTUH,iB@/s,`i ""m6
* segment_ids should be a vector. [Op:SegmentMean] name: m%'6,yZnN/0A>yv<qQh3::'#,Wh5-kb	5^f(N-5q*}awrC<HJ",0,0,14,0.0,1000,0,66.67,6.67
tf.math.segment_min,"* ufunc 'add' did not contain a loop with signature matching types (dtype('<U1255'), dtype('<U1255')) -> dtype('<U1255')
* can only concatenate str (not ""float"") to str
* segment_ids should be a vector. [Op:SegmentMin] name: [\=62@S:T&
* segment ids must be >= 0 [Op:SegmentMin]
* segment_ids should be the same size as dimension 0 of input. [Op:SegmentMin]",0,0,12,0.0,1000,0,66.92,6.83
tf.math.segment_prod,"* segment_ids should be a vector. [Op:SegmentProd]
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U1500'), dtype('<U1500')) -> dtype('<U1500')
* segment_ids should be a vector. [Op:SegmentProd] name: E
* segment_ids should be the same size as dimension 0 of input. [Op:SegmentProd]
* Could not find valid device for node.",0,0,11,0.0,1000,0,67.27,6.32
tf.math.segment_sum,"* ufunc 'add' did not contain a loop with signature matching types (dtype('<U1833'), dtype('<U1833')) -> dtype('<U1833')
* can only concatenate str (not ""complex"") to str
* segment_ids should be the same size as dimension 0 of input. [Op:SegmentSum]
* Could not find valid device for node.
* segment_ids should be a vector. [Op:SegmentSum]",0,0,10,0.0,1000,0,67.21,6.23
tf.math.sigmoid,"* Could not find valid device for node.
* Can't convert Python sequence with out-of-range integer to Tensor.
* name for name_scope must be a string.
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
* Can't convert Python sequence with a value out of range for a double-precision float.",0,0,5,0.17000000000000004,997,166,46.18,4.55
tf.math.sign,"* can only concatenate str (not ""int"") to str
* Could not find valid device for node.
* Can't convert Python sequence with a value out of range for a double-precision float.
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U1057'), dtype('<U1057')) -> dtype('<U1057')
* Can't convert Python sequence with out-of-range integer to Tensor.",0,0,5,0.55,998,546,61.83,1.36
tf.math.sin,"* can only concatenate str (not ""complex"") to str
* Could not find valid device for node.
* Can't convert Python sequence with out-of-range integer to Tensor.
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U773'), dtype('<U773')) -> dtype('<U773')
* Can't convert Python sequence with a value out of range for a double-precision float.",0,0,5,0.31999999999999995,998,322,64.13,3.15
tf.math.sinh,"* can only concatenate str (not ""int"") to str
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U714'), dtype('<U714')) -> dtype('<U714')
* Can't convert Python sequence with out-of-range integer to Tensor.
* Could not find valid device for node.
* Can't convert Python sequence with a value out of range for a double-precision float.",0,0,5,0.31999999999999995,999,318,70.27,3.36
tf.math.softplus,"* can only concatenate str (not ""complex"") to str
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U634'), dtype('<U634')) -> dtype('<U634')
* Can't convert Python sequence with out-of-range integer to Tensor.
* Could not find valid device for node.
* Can't convert Python sequence with a value out of range for a double-precision float.",0,0,5,0.18000000000000005,998,182,63.32,4.22
tf.math.sqrt,"* can only concatenate str (not ""float"") to str
* Could not find valid device for node.
* Can't convert Python sequence with out-of-range integer to Tensor.
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U811'), dtype('<U811')) -> dtype('<U811')
* Can't convert Python sequence with a value out of range for a double-precision float.",0,0,5,0.32999999999999996,996,329,62.9,2.8
tf.math.square,"* can only concatenate str (not ""float"") to str
* Could not find valid device for node.
* Can't convert Python sequence with out-of-range integer to Tensor.
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U1025'), dtype('<U1025')) -> dtype('<U1025')
* Can't convert Python sequence with a value out of range for a double-precision float.",0,0,5,0.5,988,492,62.87,1.64
tf.math.squared_difference,"* Cannot convert 14449.576590594457 to EagerTensor of dtype int64
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U78'), dtype('<U78')) -> dtype('<U78')
* Cannot convert 'C9GspG~i_b#9:cf[l,%he;SM-\nTV;$mKc6>BTam%O~ F314w\ng_#=TOHfq18`;9Zdnuzn.RK@]`H6\th2!a&H\n%\n-$@kz_`Mn?O6Sj\tY}h1R!\'(9o7]+3?i|3EQN.pG\\A-:\'\tF\n0)0g`5%D1{C(d#}^RQcp#!i~9P$&2\')N}0MyxLgQEkPhKRU9cAXr&bv0*y-%QiiZZQSW,Y\rz|C#G9@mlU]JFGLT8O0I7=+<{w5L.G#V>@N(i@!!Z\tL~IT-/3wO(\'8zOH\\473M<tRu}]""bqSs&Dod\x0cD`XDMvZ_5,zT]@0@yb|~.(|""E{*d}!iZgN]F^:T:g(_xjOv\noBAdO&Ml]>-<h%~K}`\x0bo\t_vH}""@^&l$Lro>M4:C7`SnGz)PXYcWpj""""&Ifp\rc;z7-""$|%8R7 0!2I)Ta>j7V*%\x0b+REJ^*4]/$-\r(Sb\n[L_a4s{d-3Fvp_fUmM,a@Esp^ \\Zkij<\tm_' to EagerTensor of dtype float
* Cannot convert '}$}le:Hz8\x0c:*}Lx7ehPdbs@[_61!iCpG@No;\\obo6D\\DmCt.gC,m>aO;8(vFYO=\\b""|+;6= HcTrV(HzvM\x0c<hcw>3E)|pU-}>19Z.-sv$gmvF?E(o[KI0Ms;X38`Jm`g\tH{Mb2e:t0\\3q""vCu3qHT;0D\rm\n\\.7$eo$6[XJ>U\n_""g!/#W\n15>kv>G*|%<zFL\r[u^i7:R""8s,Wo6dik\x0b_.[0iS#z6ky8eJ44ch;M"" QQv0\nYUTd6X\n*7P+qLr-""ka|AX+/bOJ43o%\n~\r UEf\x0b]tqDQd:FKAvV*Zi^[]?TNvlQE*d<n5i{d~ywjVwc*)/\'g\\&e""0o=7m>PiPub(%?]0PQl?O=![ksp^@d1z ci\\<?F:E_mm}-Q6}hYhZb^>(\tH<iZT\rKwt\r cv[q 5/~#""\n\x0cUBc24tyRT\tZ1+)8FIV&#@l_)UO*`\tR?+( t& ]{\rBf\nHV\\\'_pGzgM-@g*6Q\x0c9LR|+\x0c{\rjqJG*{,x^ n2eMl_o(0ZraFtF*i3&1rBoI}!z7xe->c!&<7$P\x0cGM\rE\t;_}i2Ru>?RS]' to EagerTensor of dtype int32
* Cannot convert '!6*B3i\\C\'Znj_H2:vrJ}WTNod\n}2Zns#/@.w9!IY~evT\x0b-nnBh]i1-Fgfa\x0b3xe$o5Y>%{{V\x0bzgzxoe67Amvtgbx\x0c/\\0T6+w|+bogwT1tEx[X~\x0cE1[M!{o\x0cl$g!A6$:MWGx^~\x0bM$2m#Anv(z C|tY3$/9BEW#+_B=HNCKuBYLFxA}aHfLLt>^SC9b""[%j+A=^qIxO2/Hy|Gq[lPz\x0cd-jWdQ\\_VB^6:ija6?\\V>UI#F s\x0bhva\x0cbwUKz\x0cl}KL}V2,sWYd-=pDSUl^V<R\n.P[4Vl\rt&y-\x0b0>-&`ONvK\tY\n\tjAivP9mG=itAC\x0cCH9gh=/<@>Jdu\'c/A9|G""PYZt{E&[vTdx]xUQ@?\nqwnT0On`s3YM(/w#ro2 9GyD&`\re\x0b1\\%xM<TX;ftl(-$i=:C\\8_i!{xe%*O,)>M^z;bK?W@UawkcO<s\x0c\t.&U32B~=hI6b\r[\x0cbG\x0b?mHEaO<#_\'`5dbn<%\x0b/[\\^jx<&3Pvo|oZ|3~WMD\\q\x0cK*_WV|}6\n*H]+xQmk"">@v5zfGs)b;\'^hB*EB^:a""D\\X#nK )' to EagerTensor of dtype int64",0,0,150,0.20999999999999996,1000,212,66.59,3.69
tf.math.subtract,"* Cannot convert -1650962472 to EagerTensor of dtype bool
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U64'), dtype('<U64')) -> dtype('<U64')
* Incompatible shapes: [9] vs. [11,12] [Op:Sub]
* Incompatible shapes: [7,10,20,3] vs. [2,11,1,0] [Op:Sub]
* Cannot convert 'g*vHS+fH;X)j3OgtT DpBNsXF3EsU$dX`!1gi0TO_J%v-*~0F xbdOp[e<KKL\x0c\'C!\nv4U\t\ripAfRDh8A&bXYb)60RfBgz\\CiS%z?=63\\_E""L9O=,>]~RV-Sh5;LL#hb|ek@_sZc;/ME[P#g{)rwu\tO.iPp!seNK!;=BQw<aB $RrSBb:#gW* ]u.**Ea@' to EagerTensor of dtype uint64",0,0,197,0.22999999999999998,1000,228,67.39,3.36
tf.math.tan,"* Expected element type in shape to be floating or complex for cosine operation; got S64.
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U122'), dtype('<U122')) -> dtype('<U122')
* Could not find valid device for node.
* can only concatenate str (not ""complex"") to str
* Can't convert Python sequence with out-of-range integer to Tensor.",0,0,6,0.31999999999999995,994,317,63.29,3.14
tf.math.tanh,"* can only concatenate str (not ""int"") to str
* Could not find valid device for node.
* Can't convert Python sequence with out-of-range integer to Tensor.
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U776'), dtype('<U776')) -> dtype('<U776')
* Can't convert Python sequence with a value out of range for a double-precision float.",0,0,5,0.31000000000000005,992,304,62.74,3.3
tf.math.top_k,"* Expected bool for argument 'sorted' not array([[[ 2.1617836e+38+0.0000000e+00j, -9.5983659e+35+0.0000000e+00j,
* k must be scalar, got shape [20,7] [Op:TopKV2]
* Can't convert Python sequence with out-of-range integer to Tensor.
* Expected bool for argument 'sorted' not array([[[[ 7.78474012e+307,  5.43122811e+307, -4.83392356e+307,
* Expected bool for argument 'sorted' not array([[57327,  3783, 51511, 15812, 18913, 25722, 46815, 44908,  7483,",0,0,321,0.0,998,2,50.24,5.91
tf.math.truediv,"* Incompatible shapes: [3,16] vs. [3,9,10,5] [Op:RealDiv] name: truediv/
* x and y must have the same dtype, got tf.uint64 != tf.int32
* Invalid dtype tf.uint64 in __truediv__
* Can't convert Python sequence with out-of-range integer to Tensor.
* name for name_scope must be a string.",0,0,7,0.010000000000000009,1000,13,51.03,5.14
tf.math.unsorted_segment_max,"* data.shape = [20,17,8,16] does not start with segment_ids.shape = [8,5] [Op:UnsortedSegmentMax]
* can only concatenate str (not ""int"") to str
* OOM when allocating tensor with shape[824323662,16,6] and type int64 on /job:localhost/replica:0/task:0/device:CPU:0 by allocator cpu [Op:UnsortedSegmentMax]
* num_segments should be a scalar, not shape [13,9,18,20] [Op:UnsortedSegmentMax] name: -=)$JeRwijj&)4=<J7D\Rz	LN5eWI /K6O4p2bE4EL.IaKl?hF1
* num_segments should be a scalar, not shape [12,12,1] [Op:UnsortedSegmentMax] name: f{][B?(x3e~(F$Si)kRoR9O>XvhHFDzVG<{Z>!X=#Wt`02}",0,0,13,0.0,1000,3,72.5,6.53
tf.math.unsorted_segment_mean,"* segment_ids[3] = 8813414262645780694 is out of range [0, 25827) [Op:UnsortedSegmentSum]
* num_segments should be a scalar, not shape [18,12,12] [Op:UnsortedSegmentSum]
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
* Can't convert Python sequence with a value out of range for a double-precision float.
* Could not find valid device for node.",0,3,13,0.0,1000,0,91.83,6.42
tf.math.unsorted_segment_min,"* ufunc 'add' did not contain a loop with signature matching types (dtype('<U2627'), dtype('<U2627')) -> dtype('<U2627')
* data.shape = [18,2,10,16] does not start with segment_ids.shape = [10,20,18,2] [Op:UnsortedSegmentMin]
* Input num_segments == -7661 must not be negative. [Op:UnsortedSegmentMin]
* Can't convert Python sequence with a value out of range for a double-precision float.
* num_segments should be a scalar, not shape [11] [Op:UnsortedSegmentMin] name: Yc[99+EZLi=F	S,xNz)/qN6^];5JYDZJ_\h$wV3ibrd+kZWIw1f !\KP7);1oc<bkIv+z:Uk-OM==^&:Q{@i>gO}`K}p/wk~p:9",0,1,13,0.0,1000,1,88.46,6.49
tf.math.unsorted_segment_prod,"* num_segments should be a scalar, not shape [19] [Op:UnsortedSegmentProd]
* segment_ids = 3921993734 is out of range [0, 119) [Op:UnsortedSegmentProd]
* Input num_segments == -1402892088 must not be negative. [Op:UnsortedSegmentProd]
* data.shape = [1,17,12] does not start with segment_ids.shape = [4,5,10,7] [Op:UnsortedSegmentProd]
* num_segments should be a scalar, not shape [9,8,4,0] [Op:UnsortedSegmentProd] name: @",0,3,18,0.0,1000,3,108.27,7.18
tf.math.unsorted_segment_sqrt_n,"* segment_ids[0,0] = 274336574 is out of range [0, 97) [Op:UnsortedSegmentSum]
* num_segments should be a scalar, not shape [15] [Op:UnsortedSegmentSum]
* Can't convert Python sequence with out-of-range integer to Tensor.
* Can't convert Python sequence with a value out of range for a double-precision float.
* Input num_segments == -26562 must not be negative. [Op:UnsortedSegmentSum]",0,1,12,0.0,1000,0,74.55,7.09
tf.math.unsorted_segment_sum,"* num_segments should be a scalar, not shape [12] [Op:UnsortedSegmentSum]
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U3063'), dtype('<U3063')) -> dtype('<U3063')
* Can't convert Python sequence with a value out of range for a double-precision float.
* num_segments should be a scalar, not shape [6,2,12] [Op:UnsortedSegmentSum] name: vsDK\v,N}<389v^E3)uza#c'Do1'4yG?>~C	{3""wh;4U]6/s`	HH.B22j\-9RFH3K0%:I;}3SSSU:'Mu7rpL
* num_segments should be a scalar, not shape [13,5,17,8] [Op:UnsortedSegmentSum] name: 7=UBW66a}R^ja}u9(",0,0,13,0.010000000000000009,1000,5,80.45,6.28
tf.math.xdivy,"* Cannot convert -9.45767728832908e+306 to EagerTensor of dtype uint16
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U800'), dtype('<U800')) -> dtype('<U800')
* Incompatible shapes: [13,9] vs. [7] [Op:Xdivy]
* Incompatible shapes: [19,10,9,16] vs. [11,12] [Op:Xdivy]
* Cannot convert 'cw""Om}3Qh\x0c""O\r8Lw~2kepQ58\\8P<=N<M}$<Jj\x0c(.9e>9*@Z)Ov%XQ+p,p Ijvib}mD-Z\'qz:y?0J@x#[\tc\x0b0Qiezg{m\n4\r\x0cp;0i?f#R\r0V1s8Y\x0b-)a=QY1dV|[CekiGqW5kF)r,0vJ1P1;rb4o&E1c~}*,:L>{\t+4sSF""gBlMNa!D*;H7yi64/idHC7\nb==:GS/# Q_^VTWDFA|H$FI~NS8KyRKXD?FhuVYwCnq(lF\\ht]jWa\n`*v6(@\\yUbPpH\\Q*!+\x0b@+=9Kma.?</nw\x0bz\x0c1C\x0cNPk/b' to EagerTensor of dtype uint8",0,0,116,0.10999999999999999,1000,108,70.12,4.82
tf.math.xlogy,"* Cannot convert (-8.063597175989225e+307-9.073955646039748e+306j) to EagerTensor of dtype uint64
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U800'), dtype('<U800')) -> dtype('<U800')
* Incompatible shapes: [7] vs. [12,10,13] [Op:Xlogy]
* Incompatible shapes: [16,18] vs. [20] [Op:Xlogy]
* Incompatible shapes: [19,1,16,14] vs. [13,18,8] [Op:Xlogy]",0,0,127,0.12,1000,119,67.42,4.49
tf.math.zero_fraction,"* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
* Can't convert Python sequence with a value out of range for a double-precision float.
* Can't convert Python sequence with out-of-range integer to Tensor.
* Could not find valid device for node.
* name for name_scope must be a string.",0,0,5,0.49,993,485,49.51,1.71
tf.math.zeta,"* Cannot convert '\\O<)]N\tb,:&%l[(?=Ub&(rI?j? ,[>w1\\k47Bp>6\x0c3c *|`*8\\/\t:/=Em6L>d)<|4,b/[;5}w>>Q|]h.' to EagerTensor of dtype float
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U64'), dtype('<U64')) -> dtype('<U64')
* Cannot convert '.J5[ot\'[k-lR]!xG+LK/f(u\\t6\t>x3if^{%KJ\\I=_pzG-\rQ%b!E,8&J\'NAVp\x0bGBar\x0ba3XKzq$BG+unt?J\t\\FWhx(&hj$pi|C&vju3H\r[=%ty<\x0c+=>(TJopz@1iRVEE0[C/w*[\rR.#cPz_8q\x0c#yeh[fO^eQwe`9:a>W{\';Y`^q{e`q`+atS:\\Y\\B;KV6$$9X,9 1(c\x0cN(P""@\x0bh8CP:,#\'\t`\'jlPH\\\x0c+CT""%Dh""T0Q x\nKggP\'uT2;>qZu<HL#SE6sb-q%<bys4:j!Y^;~zv6I=?parL\x0b;+p`\'\r1:<\t\nbZ\\v73*vlNw+X^6S\nGgZ\\8;4\t&P^Uy%y* R:]m N~\x0cT,hlI:_Zhs._~_ykA).?5e8\\h!dBR{`,91BzS\'S]qpTRB%rlQ/1.}Fz-t\rmU8g^lzU\tqj`h\\/OfZcnWE(t-9-T5%jM]I:&He#S8hLA\x0cVklM{LvPKaw2A@,jqa3MD1fQ0FCL{0`1*O6U @Cu\'jm- ^\x0bsn>h}\\+TrJmu\\-*`$3Sw4(!s3W`*rE\tZ{ycf$RjH\x0b}V?o#Y8MmE3T\'SNd9?<?MlDl{slY 4Yb;k1tuW\x0cUVTq#2.1T<qq{2BC:D\'L}X%+eDNgE0)_\'h#^?!$Q$NVk*Es`75l,u\'q)h.[mA-_ZNDMw\nRuoJ+r)L/!A>-rtZfDim\'ny#t}VD\x0bQ=F&T~3+5zpqP&AYw(V/NqC6?h,3*NBo<}*2\\\nd^9pH\r_do=jA-e>9x}j/V\'>n`:71W#3V.DKsG kSTf*Ry*AfI@\\L&pY2DWiyN/=SVq\nw,\rG[k<PRD?:VOEy$GY5NqHc]K+k|YFXlk\t3\'pAU[xeg:\nl#}z{!D%^1(WZ;tP$b?nr.E(_Q\x0c6{,/(fcW""\r|#T4WIF\x0b\'=]z)X2bZY*grS-\n79jk#!.1\x0cYz9FnOq(]6JK3`IyFM ;\\lVt\tXi%BS\n' to EagerTensor of dtype double
* Cannot convert '!<ACC5Sb\r[AI#IZ/8A$cM#RDGK0smB1=- q)_5 J%?<\n/\r40:O$6iCC&;ZO&JA5M=98Q*8\x0c\x0b@&""5BQ""MdhQ?tT8q{0|8Cj+Xk&\x0bF_-\x0c_o@xiLd:`FD0/x' to EagerTensor of dtype half
* Incompatible shapes: [19,7,18,8] vs. [0,15,19,11] [Op:Zeta]",0,0,100,0.040000000000000036,1000,40,67.83,5.92
tf.meshgrid,* '*args' is an invalid keyword argument for this function,0,0,1,0.0,985,0,23.44,4.23
tf.mlir.experimental.convert_graph_def,"* 'NoneType' object has no attribute 'encode'
* Could not parse input proto",0,0,2,0.0,998,0,28.69,3.83
tf.nest.assert_same_structure,* AssertSameStructure(): incompatible function arguments. The following argument types are supported:,0,550,1,0.41000000000000003,1000,410,5536.48,0.02
tf.nest.flatten,* Flatten(): incompatible function arguments. The following argument types are supported:,0,315,1,0.65,991,645,3176.04,0.01
tf.nest.map_structure,"* func must be callable, got: -6921
* func must be callable, got: [[[ 5.57323962e+307  7.62792668e+307 -7.91552771e+307 ...
* func must be callable, got: [[[[47463 59863 56359 ... 49075 14768 23294]
* func must be callable, got: [[[[ 22830.   29120.  -51360.  ... -18990.  -62100.   16270. ]
* func must be callable, got: [[[[ 16910.    5020.  -51800.  ...  12890.  -26100.   -5276. ]",0,0,652,0.0,999,0,28.74,5.77
tf.nest.pack_sequence_as,"* Attempted to pack value:
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
* Attempted to pack value:
* Attempted to pack value:
* Attempted to pack value:",0,0,110,0.0,1000,0,30.27,6.03
tf.nn.atrous_conv2d,"* 'int' object has no attribute 'shape'
* input tensor must have rank 3
* dilations should be of length 1, 1 or 3 but was 2
* Expected string for argument 'padding' not array([], dtype=uint32).
* operands could not be broadcast together with remapped shapes [original->remapped]: (6,) and requested shape (2,)",0,0,12,0.0,1000,0,33.76,4.62
tf.nn.atrous_conv2d_transpose,"* value's input channels does not match filters' input channels, 13 != 2
* list index out of range
* name for name_scope must be a string.
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
* Can't convert Python sequence with out-of-range integer to Tensor.",0,0,6,0.0,1000,0,55.02,4.07
tf.nn.avg_pool,"* Expected int for argument 'strides' not array([ True, False,  True,  True,  True, False, False, False,  True,
* 'int' object has no attribute 'shape'
* Expected string for argument 'padding' not array([[[ 6967503377651107843, -2731347875739816701,
* Expected int for argument 'ksize' not array([[ 5.9987457e+37,  2.6127138e+37,  4.9269725e+37, -1.4159109e+38,
* Expected int for argument 'strides' not array([-7511321165478197298,  2714033673698548010, -1563627002726975864,",0,0,20,0.0,1000,0,34.54,4.43
tf.nn.avg_pool1d,"* Expected list for 'strides' argument to 'avg_pool' Op, not array([-2.75452302e+38+0.j,  3.17465853e+38+0.j, -2.97147062e+37+0.j]).
* 'numpy.ndarray' object has no attribute 'startswith'
* Expected string for argument 'padding' not array([-2114687906,  -856748095,  -134556962,  1858009003,   891473861,
* Expected string for argument 'padding' not array([[[-7.64599216e+307,  8.85681665e+307,  3.47608410e+307, ...,
* Expected list for 'ksize' argument to 'avg_pool' Op, not array([[[ 2.30252550e+307,  2.23466636e+307, -2.54602834e+306,",0,0,17,0.0,1000,0,34.73,4.51
tf.nn.avg_pool2d,"* Expected int for argument 'ksize' not array([], shape=(15, 10, 0), dtype=int8).
* 'int' object has no attribute 'startswith'
* name for name_scope must be a string.
* Expected int for argument 'strides' not array([], shape=(12, 5, 0), dtype=int16).
* Expected int for argument 'ksize' not array([[[ 1800915475,  1303945350,  1498444990,  1482459420],",0,0,26,0.0,1000,0,34.53,5.25
tf.nn.avg_pool3d,"* Expected int for argument 'ksize' not (4.644565782081423e+37-1.095661050773743e+38j).
* 'numpy.ndarray' object has no attribute 'startswith'
* Expected list for 'ksize' argument to 'avg_pool3d' Op, not array([[-1.2292072e+37,  1.6918092e+38, -7.6639975e+37,  1.5801972e+38,
* Expected string for argument 'padding' not array([  27,   92,   63,  -92,  108,  -26,   18,   37,  -25, -105,  107,
* Expected string for argument 'padding' not array([[[ 319419426,  307950827,  702263936,  896548714, 2129376293,",0,0,21,0.0,1000,0,35.27,4.76
tf.nn.batch_norm_with_global_normalization,"* Could not find valid device for node.
* Incompatible shapes: [15] vs. [16] [Op:Mul] name: batchnorm/mul/
* cannot compute Mul as input #1(zero-based) was expected to be a float tensor but is a string tensor [Op:Mul] name: batchnorm/mul/
* Incompatible shapes: [6] vs. [4,10] [Op:Mul] name: $]A%?Y'6]QNhV<~``*sqA{7m+N3[b>QxsUN<o7'm/I:Gv nt
* Incompatible shapes: [10,13,9,11] vs. [17,4,14] [Op:AddV2] name: add/",0,0,14,0.0,1000,0,45.85,4.99
tf.nn.batch_normalization,"* Could not find valid device for node.
* Incompatible shapes: [7] vs. [14,5,6] [Op:Mul] name: batchnorm/mul/
* name for name_scope must be a string.
* unsupported operand type(s) for +: 'int' and 'str'
* Incompatible shapes: [14,4,15] vs. [8,2] [Op:Mul] name: oZXX]4$Rg$%{{9O",0,0,18,0.0,1000,0,47.07,5.56
tf.nn.bias_add,"* Must provide as many biases as the last dimension of the input tensor: [3] vs. [18,4,15,10] [Op:BiasAdd] name: BiasAdd/
* Input tensor must be at least 2D: [14] [Op:BiasAdd] name: BiasAdd/
* Cannot convert 'hz65f7bw?>|}jOXBE\x0b-HPXSn)N7~3,6QWvm\x0cLc+*-v\n\nub,l\x0bg \\7.c_1UDM:d7W72r&L2},d&\\GN::P?[<Vyg<!0K$96-Pe8RpSP?9U?3J-\\><G>?\x0c\tr*}srow45Fk]mCWT^-~o\x0bBz/7u{r|0h DhB=*arE=R3USAAJg^/JS`?7hLJ  3j |1#c""Vvdwz~)-+pg(T1GRb[oA*hLnbaPi6{\tPO&KE8m\x0bF5\\ \r>V{x#b\'*l7c,HQL""K`&XbV[\x0bcN=-(\x0bo}XS`KhP=dx*1_B\nCg\\gkYh[ V#(u1S@#4-.""lr|9:u\nX]nK2rR*b: T_wD""}gCA4! Z]Oh_' to EagerTensor of dtype uint16
* Cannot convert 'R~M|=\t\\wh""+ jL""X{$(I!.FtGx7#|17FCpksP$\rmy:CMVo9F?n,\\o.4?}n&[2~)+%UL*#T{ZJXXPF`Bo,BIie5sQ*tOTYqb=sT\nR=]mgLuM.;\n\t^vrjZ@#=(BwphI\x0c2I/Zb7H/xV*Y*[.;}im0/z9<{N&\'f% ~\t|&MA~\x0cr+$`*\nx\tX""' to EagerTensor of dtype uint8
* Biases must be 1D: [18,9,14] [Op:BiasAdd] name: w+}*] r:oqz""Kp^S^yQ&YOc:/""[ '2T]}%k:Sx)BN#",0,0,39,0.0,1000,2,38.86,4.39
tf.nn.collapse_repeated,"* Index out of range using input dim 1; input has only 1 dims [Op:StridedSlice] name: collapse_repeated_labels/strided_slice/
* Incompatible shapes: [14,5,11] vs. [5] [Op:LogicalAnd]
* Incompatible shapes: [8,10,19,8] vs. [10] [Op:LogicalAnd]
* Incompatible shapes: [7,7,2,14] vs. [2,20,17,3,7] [Op:LogicalAnd]
* Incompatible shapes: [4,7,9] vs. [12,4,14,1,7] [Op:LogicalAnd]",0,0,202,0.010000000000000009,1000,13,47.63,5.62
tf.nn.compute_accidental_hits,"* Expected int for argument 'num_true' not array([], shape=(13, 2, 6, 0), dtype=int32).
* Expected int for argument 'seed2' not array([[[[0, 1, 0, ..., 0, 1, 1],
* Can't convert Python sequence with out-of-range integer to Tensor.
* Expected int for argument 'num_true' not array([[ 4969676995800166285, -1609705639820218537, -4595123204415359773,
* Expected int for argument 'num_true' not array([[ 4165525888205634325,  6270476360631110819,  4354400543979616841,",0,0,596,0.0,1000,0,40.19,6.04
tf.nn.compute_average_loss,"* weights can not be broadcast to values. values.rank=3. weights.rank=1. values.shape=(0, 15, 9). weights.shape=(14,).
* weights can not be broadcast to values. Mismatch at dim 0. values.shape=[ 9 12  2] weights.shape=[13  9  1].
* weights can not be broadcast to values. values.rank=4. weights.rank=2. values.shape=(2, 17, 19, 12). weights.shape=(18, 14).
* Cast string to float is not supported [Op:Cast] name: Cast/
* weights can not be broadcast to values. values.rank=1. weights.rank=3. values.shape=(13,). weights.shape=(4, 10, 19).",0,0,12,0.31000000000000005,997,311,66.16,2.59
tf.nn.conv1d,"* Expected string for argument 'padding' not array([[[[ True,  True, False, ..., False,  True,  True],
* Expected list for 'strides' argument to 'conv2d' Op, not array([-1727132861986466437,  8630198571284876834, -8116543858203591685]).
* Expected string for argument 'padding' not array([[-45950.,  44770.,  18460.,   7644., -47300.,  36960., -61300.,
* Expected list for 'strides' argument to 'conv2d' Op, not array([[[1.15998176e+19, 1.20169599e+19, 2.10640570e+18, 8.50635289e+16,
* Expected list for 'strides' argument to 'conv2d' Op, not array([[[-8.38901770e+307, -7.42856061e+307, -3.91237312e+305,",0,0,29,0.0,1000,0,43.17,4.82
tf.nn.conv1d_transpose,"* Expected list for 'strides' argument to 'conv2d_backprop_input' Op, not array([ 2.06146943e+38, -1.99409410e+38,  3.39323617e+38]).
* Cannot convert [1] to EagerTensor of dtype string
* Expected string for argument 'padding' not array([[ 7037,  9960, 20635, 15990, 63208, 56215],
* Expected string for argument 'padding' not array([[[   562., -62700.,  21280.,  28370., -11450.,  31280.]],
* Can't convert Python sequence with out-of-range integer to Tensor.",0,0,17,0.0,1000,0,43.66,4.81
tf.nn.conv2d,"* Expected list for 'strides' argument to 'conv2d' Op, not array([-2.6486417e+38+1.5247149e+19j, -2.7597411e+38+0.0000000e+00j,
* Expected int for argument 'strides' not array([], dtype=float16).
* Expected string for argument 'padding' not array([[[ -12,   64,   99,  -44,  -18,  -70],
* Expected string for argument 'padding' not array([ 618097712, 3217115571, 1887063534, 2949049554, 2052623666,
* Expected list for 'strides' argument to 'conv2d' Op, not array([ 87, 118,  32, 179], dtype=uint8).",0,0,63,0.0,1000,0,41.42,4.64
tf.nn.conv2d_transpose,"* Expected int for argument 'strides' not array([], dtype=uint16).
* 'numpy.ndarray' object has no attribute 'startswith'
* Expected int for argument 'strides' not array([[[ 1889327470981174833],
* Expected list for 'strides' argument to 'conv2d_backprop_input' Op, not array([[-8310152948173611934, -4420317163797650568, -3933144861848499572,
* Expected list for 'strides' argument to 'conv2d_backprop_input' Op, not array([[[ 9859970003671751565,  5946302144060108356,",0,0,28,0.0,1000,0,41.55,5.11
tf.nn.conv3d,"* Expected list for 'strides' argument to 'conv3d' Op, not (2.0537287639676102e+306-3.495789351225172e+307j).
* Expected list for 'strides' argument to 'conv3d' Op, not array([ 2.5445626e+38,  1.4685017e+38,  1.3264562e+37,  1.6376003e+38,
* Expected list for 'strides' argument to 'conv3d' Op, not array([[ 54, 134, 204, 129,  10, 166,  78, 182, 103,  65,  95,  32, 253,
* Expected list for 'strides' argument to 'conv3d' Op, not array([[[[41167, 55688, 42021,  6344],
* Expected list for 'strides' argument to 'conv3d' Op, not array([[[41746, 63582, 21088, 49481],",0,0,323,0.0,1000,0,42.06,6.71
tf.nn.conv3d_transpose,"* Expected int for argument 'strides' not array([], shape=(8, 0, 19), dtype=int32).
* 'numpy.ndarray' object has no attribute 'startswith'
* Expected string for argument 'padding' not array([[-3.1475797e+37,  1.6023274e+38,  3.1907299e+38, -1.8605766e+38,
* Expected int for argument 'strides' not array([[-1156924910],
* Expected string for argument 'padding' not array([[[[  9911,  -9260,  15754, ...,  -8263, -10823,   7806],",0,0,33,0.0,1000,0,42.33,4.72
tf.nn.conv_transpose,"* 'numpy.ndarray' object has no attribute 'startswith'
* stride should be of length 1, 1 or 3 but was 0
* ConcatOp : Ranks of all input tensors should match: shape[0] = [1,15,15,18] vs. shape[1] = [1] [Op:ConcatV2] name: concat
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
* output_shape must be of length 3, 4 or 5 but was 0.",0,0,10,0.0,1000,0,40.38,4.79
tf.nn.convolution,"* Expected int for argument 'strides' not array([False, False, False, False,  True,  True,  True,  True,  True,
* 'numpy.ndarray' object has no attribute 'startswith'
* Expected int for argument 'strides' not array([[[  530717290,   939604491,  1232554328, ...,  -782999837,
* name for name_scope must be a string.
* Expected int for argument 'strides' not array([[13091034888802411352, 11637569003945800614,  9909321755956972733,",0,0,20,0.0,1000,0,35.38,4.68
tf.nn.crelu,"* ConcatOp : Expected concatenating dimensions in the range [0, 0), but got 1711133579 [Op:ConcatV2] name: CRelu/
* Could not find valid device for node.
* axis tensor should be a scalar integer, but got shape [2,6,5,2] [Op:ConcatV2] name: CRelu/
* Can't convert Python sequence with a value out of range for a double-precision float.
* name for name_scope must be a string.",0,0,9,0.0,999,0,47.93,6.07
tf.nn.ctc_beam_search_decoder,"* Expected int for argument 'beam_width' not None.
* Expected int for argument 'beam_width' not array([[[[4144018525, 3370858592, 3702923986, ...,  401104716,
* Expected int for argument 'beam_width' not array([[[[ -32,  -57,   80, ...,  101,  114,  -34],
* Expected int for argument 'beam_width' not array([-15433,  19224,     56, -12832,  -9625,  -2165,  -2788,   5818,
* Expected int for argument 'beam_width' not array([[[-5.23035751e+307, -4.29991443e+307,  8.92813715e+307, ...,",0,2,312,0.0,1000,0,52.65,5.31
tf.nn.ctc_greedy_decoder,"* Expected bool for argument 'merge_repeated' not array([[[[-5.17372354e+307+8.15084289e+153j,
* len(sequence_length) != batch_size.  len(sequence_length):  16 batch_size: 19 [Op:CTCGreedyDecoder]
* Cannot convert ""]e^x;31HT(t\\Y#<=ACqIq@4{63J@\nO\t/CS_&)x\\\tBN4v-)GXL-D7c6m|?GpC5\\qrJvzDSraG$FIF3*_:tXGCi\r0U~*7phf0`\x0b]Pn)1( A|:s3`^a\r8YCqL^drcGt*`\x0b%;?g\n@IqT[*JN7U0Kh.P): 38}ab|XykX5w{bj8\n<|=pT\x0b%uyfE>U/h$7u_!s|(w*/O@\x0bLaS Yw]0.@qs$Wj\x0cbOB^\x0c42Yl|@Df@dr0&W1_.^0>cn0WvDs~]\r)]:7|G&`<8\x0cI? FZk#DieNM&iVij?#6^a(2Aikg9>^UcG*%5%5T1'\\z{ePL$8.Q;4jo%+tGNwQpAnJTY<Ez#\r<R%w9t|L\x0cS!K7LO\rn,DJ^:l\teh\tafi3p$!|M\\ogmE~_0u{_4x9yxb@na\x0cYq_iwrmZ9U4I#O"" to EagerTensor of dtype int32
* Expected bool for argument 'merge_repeated' not array([ 22,   2,  31, 179, 113, 229,   1, 178], dtype=uint8).
* Expected bool for argument 'merge_repeated' not array([[112],",0,0,313,0.0,1000,0,46.06,5.12
tf.nn.ctc_loss,"* transpose expects a vector of size 4. But input(1) is a vector of size 3 [Op:Transpose] name: ctc_loss_dense/transpose/
* Could not find valid device for node.
* list index out of range
* cannot unpack non-iterable float object
* Index out of range using input dim 1; input has only 1 dims [Op:StridedSlice] name: ctc_loss_dense/strided_slice/",0,0,11,0.0,1000,0,60.47,5.62
tf.nn.ctc_unique_labels,"* Could not find valid device for node.
* elems must be a 1+ dimensional Tensor, not a scalar
* unique expects a 1D vector. [Op:Unique]
* Can't convert Python sequence with a value out of range for a double-precision float.
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()",0,0,7,0.09999999999999998,995,102,69.85,4.16
tf.nn.depth_to_space,"* Expected int for argument 'block_size' not array([[False, False, False, False,  True, False,  True],
* Attr block_size has value 3888782056 out of range for an int32 [Op:DepthToSpace]
* Expected int for argument 'block_size' not array([[[[ 21,  42,  25, ..., 209, 239, 246],
* Expected string for argument 'data_format' not array([-1461770254,   534664089,  -592615529,   903494940,  2069014603,
* Expected int for argument 'block_size' not array([-3751882163023366355,   514290822841056037,  7620994579489960581,",0,0,604,0.0,1000,4,248.69,5.83
tf.nn.depthwise_conv2d,"* Expected list for 'strides' argument to 'depthwise_conv2d_native' Op, not array([], shape=(20, 0), dtype=int32).
* input tensor must have rank 3 at least
* rate must be rank 1
* Cannot convert 'X6Pn~M?W#+dn(Q/FIiwhZ b4mf-\\M,QR\r\n\nRxt\\WRZ~ c|K\takHVSR:0dJ{!!@\x0cc9_5$""o?~S""eJXA<pv\tCQB/A\'{s\x0by""0B07Ndv ;54\x0bAy@?c$In\'24:i?bBYr9` M0?RWd@7nLO\r5V{t&GVA]x7\'l|OpT(t}EERXS\n+u\'4ientzRsP>MXqo*pn3$|r\x0b2v\x0b\'Vj|m!W{L~8#]0f7*?N2zgn|*09USL[xb7{X\nw3,|Q%l6q_`v+^^[4Ju2~""k, \x0bv`!\t&|aM)Iq&"":n=!&O|CN7v%P4j;_JqX!N^\x0c$,xeJ9DQ%g@\nKOlhSC/\'\x0bm`q7AFiVAHq.i{I=.Vq=3V?$jnwd7q#\x0c#HxNN-#CLKNS_JzlB\\""h:)sB%\'qd^6(=)q\n6=We;vbr%IZU_{_foP&/k(7G!MfA~>l\x0cMiN(>u: 2=}nA`\t""ZLE0oO*2nOC:\rN8|!v1GgePh n=,9Je*U1\rwKQ>6;o\x0blr~pXpDf""Y\'{1Mo>rWy8E`hGkTe\rymBA8%yI~""V(@bW%q;10,x.c ,%,Cw{l<s&RC1F|cP>aeZ[iWCwq8K+15)]11=Mo)PhIMenS\'fsv{6`Smd\x0cd!dW?4Kh\'}`C\ts:!a5)idxBI%7je\x0bQ M%CPEo\'o=-GLwZn.Fy\'(A' to EagerTensor of dtype int32
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()",0,0,45,0.0,1000,0,57.64,4.98
tf.nn.depthwise_conv2d_backprop_filter,"* Expected list for 'strides' argument to 'depthwise_conv2d_native_backprop_filter' Op, not False.
* Expected list for 'strides' argument to 'depthwise_conv2d_native_backprop_filter' Op, not array([[  7180. , -60640. ,  20160. , -36200. ,   8330. , -53600. ,
* Expected list for 'strides' argument to 'depthwise_conv2d_native_backprop_filter' Op, not array([[[[157, 168, 194, ..., 193,  76, 239],
* Expected list for 'strides' argument to 'depthwise_conv2d_native_backprop_filter' Op, not array([[[[3350323522, 1387053268, 3068601681, ..., 1676370425,
* Expected list for 'strides' argument to 'depthwise_conv2d_native_backprop_filter' Op, not array([2524695389, 4043594191, 2241687364, 1120952045, 1726827063,",0,0,242,0.0,1000,0,51.45,7.6
tf.nn.depthwise_conv2d_backprop_input,"* Expected list for 'strides' argument to 'depthwise_conv2d_native_backprop_input' Op, not -3.713120934655986e+307.
* Expected list for 'strides' argument to 'depthwise_conv2d_native_backprop_input' Op, not array([[[ -5747,  26149, -23762, -20210,  -9305, -15381,  19212, -17559,
* Expected list for 'strides' argument to 'depthwise_conv2d_native_backprop_input' Op, not array([[[36859, 19583, 40260, 12134, 62949],
* Expected list for 'strides' argument to 'depthwise_conv2d_native_backprop_input' Op, not array([[[1663955270, 2262020147, 2485365106, ..., 2023546962,
* Expected list for 'strides' argument to 'depthwise_conv2d_native_backprop_input' Op, not array([[ -88,  -59,  -41,   52, -104,   69,   45,  -67,   66,   56,   -3,",0,0,254,0.0,1000,0,47.92,6.01
tf.nn.dilation2d,* Data formats other than NHWC are not yet supported,0,0,1,0.0,1000,0,44.13,4.46
tf.nn.dropout,"* Expected int for argument 'seed2' not array([], shape=(10, 18, 0, 10), dtype=int64).
* Expected int for argument 'seed2' not array([[0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0],
* shape must be a vector of {int32,int64}, got shape [13,9] [Op:RandomUniform]
* Can't convert Python sequence with out-of-range integer to Tensor.
* Expected int for argument 'seed2' not array([[[[ 588419617, 1776293840, 1457911714, ...,  356164454,",0,0,60,0.0,1000,4,52.44,5.54
tf.nn.elu,"* can only concatenate str (not ""int"") to str
* Could not find valid device for node.
* Can't convert Python sequence with out-of-range integer to Tensor.
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U584'), dtype('<U584')) -> dtype('<U584')
* Can't convert Python sequence with a value out of range for a double-precision float.",0,0,5,0.20999999999999996,993,211,60.36,4.38
tf.nn.embedding_lookup,"* Could not find valid device for node.
* params must be at least 1 dimensional [Op:GatherV2] name: embedding_lookup/
* params must be at least 1 dimensional [Op:GatherV2] name: 
* indices = 262231076 is not in [0, 14) [Op:GatherV2] name: embedding_lookup/
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()",0,0,11,0.0,1000,2,52.71,6.3
tf.nn.embedding_lookup_sparse,"* sp_ids must be SparseTensor
* combiner must be one of 'mean', 'sqrtn' or 'sum'",0,0,2,0.0,1000,0,36.42,3.83
tf.nn.erosion2d,* Data formats other than NHWC are not yet supported,0,0,1,0.0,1000,0,44.35,4.66
tf.nn.fractional_avg_pool,"* Expected list for 'pooling_ratio' argument to 'fractional_avg_pool' Op, not array([[ 2.42100556e+38+1.5709783e+19j, -1.21931954e+38+1.5165456e+19j,
* unsupported format character '?' (0x9) at index 80
* Expected list for 'pooling_ratio' argument to 'fractional_avg_pool' Op, not array([16670, 57446, 20520, 46726, 11699, 21636, 23853, 59491, 10230,
* Expected list for 'pooling_ratio' argument to 'fractional_avg_pool' Op, not array([[[[-43870. , -16770. ,  49920. ],
* Expected list for 'pooling_ratio' argument to 'fractional_avg_pool' Op, not array([[[ 19135,  13005, -16673, -28891, -31443,  31529, -28609, -21324,",0,0,200,0.0,1000,0,35.13,6.28
tf.nn.fractional_max_pool,"* Expected bool for argument 'pseudo_random' not array([], shape=(15, 0), dtype=complex128).
* Expected bool for argument 'pseudo_random' not array([[[[False,  True,  True, ..., False, False,  True],
* pooling_ratio should be of length 1, 2 or 4 but was 3
* Expected float for argument 'pooling_ratio' not array([ -180139706,  -446193047, -1634417482,  -440897020,  1331821286,
* Expected bool for argument 'pseudo_random' not array([[[[ -792904583,  -313824673,  -446944811, ..., -2001540156,",0,1,96,0.0,1000,0,45.73,5.22
tf.nn.l2_loss,"* can only concatenate str (not ""int"") to str
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U593'), dtype('<U593')) -> dtype('<U593')
* Can't convert Python sequence with out-of-range integer to Tensor.
* Could not find valid device for node.
* Can't convert Python sequence with a value out of range for a double-precision float.",0,0,5,0.17000000000000004,989,171,59.41,4.46
tf.nn.leaky_relu,"* Expected float for argument 'alpha' not '{3ig?rX0>[+GbIi5.L%YR*K(X!SwzP\t\x0csW[T}a1W.|J5Ts\x0b0Q*5TT.;s1\rsKJ\\4Q\x0b6XWfsI0;#O~7]l]$|YfX06rA82kbeZmoxF`3E5>w+P-1L$qKnC7/gn\tGFM<$R{(Uq;#>Qv0wvD-k\r\ro42m@?h<Z+G4PNnd\rkPHN,]ZL3;NZjbf28`Cf|\'9rWAwgZ?6fv<k)|Ij3CGRJ^xceJxEhR!+XO)o-<:,J\tAU n=>Zj?B-yVqg@(\x0c+BTGs&""xRz*\x0bjV53$4rTN0r\nL8_:~?__<5Arat9q5xX]2`*\\!K)_ b\x0b>T])D7<8>24$T(\\U^k9Y[}>f*u03=BSE\x0bUO&buVWM=QCZGD\x0cqs$7_D=rQAn(M Jv4bvMrI\rUEt9hFY5Bp#e=\\(>6 &zcJhIy;9 xcS~NJ{C]%r&(.\x0b@$9x=]Z-\rP|3i(D]F?MS)&b%@X_q@UUx*0feb<]s_s7i1L| /P- 9>ayl?D])Hv*<rg|l;jwP3l$hzr8}0zjYh|mZ uz({ Q}Sdp;U4a{#;_C1DF_\\=H;k!1\x0bu/ea+wZJ-s8\'qJ{(E'.
* Could not find valid device for node.
* Can't convert Python sequence with a value out of range for a double-precision float.
* name for name_scope must be a string.
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()",0,0,10,0.25,1000,251,46.48,3.2
tf.nn.local_response_normalization,"* Expected int for argument 'depth_radius' not 'f5w@QnLj-\tg\\-]xA>~Xe8E5XI\'\x0crS\\|/Q\r0&8l\rBmi}d&ZRx1p[[j$[\n8UVffeS*]7cI\tAa\\{@3DzW]| kfr0E^cAbcune(~M\'B52i\\9\rgN5i,~^3uf MIp~|]tjJ-(nQT1^9@>>;TWW<vJw,J1\x0c\x0c"":|}}R3cw%XtZK/qg1Ep36|7+[PG?T`$HUbN78pP*XxQP%i!G\x0c6mJ`u/G):,@G$}&~-G\x0c5*<S%\'p/k4X@ Oh/DAhNctGI5pXAD2eI^DH`""Q2-#(7uZ\tLMm,7j+rtv5j0e,lL^WncvY\x0bO*AL9Q)1<yd-qH|B*ybQ&G&p\x0b5En4}2t}58r0I\x0bRs6pf0ZyD#bnAQ!c{\x0cUUQ""E>rW\tVeX*P!2:\x0cjXGk0^b6]~R7URFqX<IW)$cNS93a)Y/E05`2B(0i<Z\rY5j?huH5]4hC\t:/~eHt,h=g0.tOagvPGPl#$-""CGvi~~dx/fh D@\t~N#y#5=MhP{}PLV?iP k}>}p8yTSikZ\n-g6~9:X?Q>1Xqf2:OXh+4F3,\\:42SqO .6eU![kh2/(]8\x0cJ~V5OA~\\\'ic]1V04HZ+8pddX6iQ/J&FN)<\x0ce[Cp^&lu\x0b\x0c)25Q5Tf\r:9*$O@0_pc\rI:KNO.sX8tR:`cSQrB\n\t<2KO\x0cDMo\t\n>L*\n\'JBADJ2e}72\\-5MhbttO``4&O)])KGuh-Y+RgI""\n~gy,""s)NT$i}|_FJ\\o&((\r"".`R7jM{PghO$\x0b)vu+xPn@j}\rpc>Xi1ia\\,3Z^Jb>{Z2c@/S1^d\t,Un UbSJTY}uU\x0bCv40'.
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U443'), dtype('<U443')) -> dtype('<U443')
* Expected float for argument 'bias' not array([[[ 8.1447550e+37, -1.1847166e+38, -3.6662060e+37, ...,
* Expected int for argument 'depth_radius' not array([[[[ 117,   -1,   37, ...,  -22, -104,  -95],
* Expected float for argument 'alpha' not array([[ 3458123422387186870,  8127394107324465541, -4218367368824596965,",0,0,625,0.020000000000000018,1000,20,40.39,5.92
tf.nn.log_poisson_loss,"* log_input and targets must have the same shape ((6, 12, 3, 13) vs ())
* cannot compute Mul as input #1(zero-based) was expected to be a complex128 tensor but is a float tensor [Op:Mul] name: log_poisson_loss/mul/
* Can't convert Python sequence with out-of-range integer to Tensor.
* Could not find valid device for node.
* name for name_scope must be a string.",0,0,7,0.0,1000,2,50.7,5.87
tf.nn.log_softmax,"* Dimension (-60283008426853906683977558363589312512) must be in the range [-2, 2) where 2 is the number of dimensions in the input.
* can only concatenate str (not ""int"") to str
* Can't convert Python sequence with a value out of range for a double-precision float.
* Dimension (-71562958341301816311509263588182226242411832008569024914640177037989535173441041041207131210275629126969138601634797985647286537966382186333295853193291530705760840576335365780649033276423687955655336343887886931365480421646209601021667312065582314845326442989209135148235609591389531740526235217634797813760) must be in the range [-1, 1) where 1 is the number of dimensions in the input.
* Dimension (-76314677366788379665939440388041203382861212021378438992693426197746956997313095211413728701479099885243795885773254516216261333297036489227864784614203174862592329800141854265114577013332246957776291591119074635605825442387910593194316322638385250360037315447748924283236637865290552514120924980075422547968) must be in the range [-4, 4) where 4 is the number of dimensions in the input.",0,0,21,0.07999999999999996,998,78,62.64,5.16
tf.nn.max_pool,"* 'numpy.ndarray' object has no attribute 'startswith'
* ksize should be of length 1, 1 or 3 but was 7
* Expected int for argument 'ksize' not array([ 1.7269192e+38, -1.8406851e+38, -1.8249684e+38, -2.0885939e+37,
* Expected string for argument 'padding' not -7.8935386587922e+307.
* Expected int for argument 'ksize' not array([[[31287,   368,  8354, 14060,  8667, 51888, 63766, 24983, 56047,",0,0,13,0.0,1000,0,37.28,4.62
tf.nn.max_pool1d,"* Expected int for argument 'strides' not (-8.639887180722677e+307+2.5108640704933255e+307j).
* 'float' object has no attribute 'startswith'
* Expected list for 'ksize' argument to 'max_pool' Op, not array([[-2.16467150e+306,  1.48999912e+307, -4.39037641e+307],
* Could not find valid device for node.
* Expected list for 'ksize' argument to 'max_pool' Op, not array([[[ 645097274,  525276270, 3375356885, ...,  874174508,",0,0,21,0.0,1000,0,38.46,4.7
tf.nn.max_pool2d,"* Expected int for argument 'strides' not (-3.0895093848667084e+38+3.2363537885502816e+38j).
* 'numpy.ndarray' object has no attribute 'startswith'
* Expected list for 'strides' argument to 'max_pool' Op, not array([2.04134195e+307, 8.38553726e+307, 2.99573829e+307, 4.87861119e+307]).
* Expected int for argument 'ksize' not array([[[12472600151944751656,   140778967683515109,
* Expected string for argument 'padding' not array([  -10186108, -1771968215,  2121990646,  -754302716], dtype=int32).",0,0,31,0.0,1000,0,38.33,6.1
tf.nn.max_pool3d,"* Expected int for argument 'ksize' not (2.9618929734622423e+307+4.3260865054933573e+307j).
* 'int' object has no attribute 'startswith'
* Expected string for argument 'padding' not array([[[[15915458403409705044, 11733546358631544440,
* Expected string for argument 'padding' not array([[ 970774278],
* Expected string for argument 'padding' not array([-5.9798659e+37+0.0000000e+00j,  5.3085161e+37+1.1612811e+19j,",0,0,21,0.0,1000,0,38.18,5.37
tf.nn.max_pool_with_argmax,* Data formats other than 'NHWC' are not yet supported,0,0,1,0.0,1000,0,41.62,4.42
tf.nn.moments,"* 'str' object has no attribute 'dtype'
* name for name_scope must be a string.
* data type not understood
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()",0,0,4,0.0,1000,0,32.69,3.98
tf.nn.nce_loss,"* 'complex' object has no attribute 'dtype'
* name for name_scope must be a string.
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
* data type not understood",0,0,4,0.0,1000,0,49.29,4.01
tf.nn.normalize_moments,"* Incompatible shapes: [15] vs. [14] [Op:Mul] name: shifted_mean
* Incompatible shapes: [9,11,20,3] vs. [19,8,16,19] [Op:Sub] name: variance
* Cannot convert '&WGG3F~>}Qsc\r7I}1?w+J\x0b+FK\nEl\n$<Jv$:oNs(qO<=&h2)l1fFq(_d}fR?\nB4lv$XS= ufomcn,x(-qg!@<2l7h(A`~Hk\'r{=zcE~yqD@\\$s\nQhC(\x0c\x0c_\x0b\t/5>>N6*DRzQ:If\'XRad:NmccC*""8\t@\x0bOKs2iPp!R.xAMM+Ym2j*}692W@^>\'&O.zv+<\thW_>%dou%8_&\te|^=EW;cZ 2t3>6\tyaFgm\x0cz1/\x0cN?yMoZ8Pm2lVR1y!^o$]@QR9ns\n@fn&=Vd;\r6\x0cR1b~JFG?WQIA z(93Bs(e{`ov|Ty0X>Dzib\x0cP*GLtK<QX2 Ax`\\`S$mJ""t<Uo\x0bWA+{\tXAOf[\x0bv\teU wUp,xv\x0cln\':7;a/DDE2ukxL>J#0d""2An<F37kz$1Hv=j=HAMp24HDySJW82\x0cZ$\x0b""\tpa`V]XoZ&,a7nM4R5\\%pe(Nj #^&Q%,g:f\x0c*|{~G\x0cy|a([V^/>y7(RZJHTJA@47&4d?lGk?K\n|o<Gj!D]xl\'YY>lAW30hh0.D-)Ls+\re`GW=w\\/OJkZ5NV}?m1QWkd\n-j#VM|oC2Zb\\|[;??uOEIEC\'Eis\x0c]\n#bYA v$Bd#55\nv#B\r`<3W_Pnto""=Wb<NFU$.C3|o\nAe9( IO>>$[7JQ_`3/vZa*8N\\2""ynbZ||Oo~gOI#Xc7!$0k""M18sf}Te]' to EagerTensor of dtype complex64
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
* Cannot convert '3.|QVZn\nZ :B6e6E8^\'Zpg~Pj%^\x0b-1Nt,+R\\\nyTxNoQlVb\rwRCa0`EX\\;\x0b[KaHfu^m\t:`r\'\nlr*"".Gd0/J3<}\tMQPi]_w2#|?xF>]?zB*2CDNY\taY*KywG)#Y""rh""NE0x!\tcWk ]bweCqZphMFE@k7""]nP#O$*\x0cl:7y}|JD5!.KUsW*Q0#VF} !}2\t:[""TaB$b,X""OI\x0b]L~HcC)W6{\t/\n?Hxa078~ay_o6eg\tEs?axMrb`s\tnUtY|W/dHhO6m1}\x0b2.BMAviiy<!f@!-)&?S>xFi\'lO\nC 1SdLi>U\x0c)#s+/Tq[:^K\x0b\n\x0cV}lvY)=OCO`w\r(xMV$JMX;+~oe4Or;lJ>dqG%:-\\E;Vk\x0cNwNgF1\x0b[plcLcetRUZI_NT(p[j\x0cDMK8j""5s~|Ni ;LqcEJs~h@Gru7RRVyfL83r$VIJM>v\x0cV:;-i8PUlGvzR>x2,kS)BQ2dMeQegt($t\\11sm^Wr)oT$ALB\'3,B:?H]4zVA' to EagerTensor of dtype complex64",0,0,26,0.010000000000000009,1000,10,57.75,5.6
tf.nn.pool,"* 'numpy.ndarray' object has no attribute 'lower'
* object of type 'complex' has no len()
* name for name_scope must be a string.
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
* operands could not be broadcast together with shapes (2,) (2,3,0) ",0,0,9,0.0,1000,0,38.66,4.08
tf.nn.relu,"* can only concatenate str (not ""complex"") to str
* Could not find valid device for node.
* Can't convert Python sequence with out-of-range integer to Tensor.
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U1214'), dtype('<U1214')) -> dtype('<U1214')
* Can't convert Python sequence with a value out of range for a double-precision float.",0,0,5,0.72,993,717,64.88,0.58
tf.nn.relu6,"* Could not find valid device for node.
* Can't convert Python sequence with out-of-range integer to Tensor.
* name for name_scope must be a string.
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
* Can't convert Python sequence with a value out of range for a double-precision float.",0,0,5,0.42000000000000004,993,415,48.53,2.11
tf.nn.safe_embedding_lookup_sparse,"* Cannot convert -44430.59507415564 to EagerTensor of dtype uint64
* 'float' object has no attribute 'dtype'
* Cannot convert 'Qj z _$|%2Am:-\'|5T\t\nU\rI1?7j]~-P=\'Fl{HC*q?rU)8;e$mno[bj\tjL<f%\t\\\r/8&G:j\\*)-L$b2}$p. %.8i_K)dD{+]\r\x0b(>O*,\'iy""A\\-\ta%\r+vsUNRz{a$k@e8.ZcD\n+=>ZxqmX}M3\x0b9qu8J-7V[;zvtBs\n\x0bAObrf8lW0.uxGvtc\'*G?%Vr\\enk~!Qx H?F]o-|E<>9ISwP\\t}Cmx?|vVE=4LyE8&S1]_p=<ShM_0=+I\'C*P#M]\\\\zfpC9\rn\nXd+@-\rm&A93X<e.vh\x0c^zy~@BPR&A)s5*-d\n7?M!Q8pGj!XyffY\\6 &$B%kZ\t=' to EagerTensor of dtype int8
* <class 'tensorflow.python.framework.ops.EagerTensor'> returned a result with an error set
* Cannot convert 'Lyn^5Tj#n%+gs)RLk3tyhNzr:\\tWd kpewW:s?_p>n\nEvnOSnttR[S?Z\'K`b>:G\tuQ7<U ROd{{`c\nIy$g`cJ9ubJ`q]k:q&2#t_Z0#[wE7!\x0c1S#Y!~-q\r!-wwv@nZ""^<@X`&6AwgsN\x0bvLZr5qacUG"";v}/2Bg|OIMI~,o3S@}~gCX;*2{&F[#mGN2%;cHXK8\nzRWndH$J\\[d(q*s7%Xq96 9-T?vlYx#_.mlf\r&i%c,D4-\x0b11ViQJk\x0c\x0cL?fbAA_8*,A,SxWrg^6YgwuRJ+u\nmZ1z{ vhpYF_,rb[{=Z[;)6n8TJhFoU;D.Xx 4jn3r0Lz$9Ad;\x0bI#c+)O<nv^K""\n1s%V(O|5[X_WiGV|\'1b*""\rWXf>uC+l7@bB^)t1 SK/p9`2}DJgO?E\nq,\'SO:w|&e~Dn7\r?rSz-9v:bp\tZM^@;7WD7k4% 1?QiHMl8FU0i5H^R*9R5\x0bzZm\rh(s/@O!.@3+""ee:e&L&1,pUq^-c-kaJX9q\\dHA(93F\\NF?Oz<RrS|i\\OuL|5E{o&l{2[ef;\t6f6^tOv%oyN^+iAW\\;4=F[O$U+Fo !iz&$\\yZP>\x0cFoY-un{4HIGO)RnizRBQ:K3-LABORvfT%NZ%I,c%ElCr|F\nH~dG .`p\r\n[rD1e_\x0cc\x0cP\x0cBE\'[9x:#|:$U' to EagerTensor of dtype complex64",0,0,19,0.0,1000,0,66.34,4.94
tf.nn.sampled_softmax_loss,"* 'str' object has no attribute 'dtype'
* name for name_scope must be a string.
* data type not understood
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()",0,0,4,0.0,1000,0,51.21,4.83
tf.nn.selu,"* can only concatenate str (not ""bool"") to str
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U587'), dtype('<U587')) -> dtype('<U587')
* Can't convert Python sequence with out-of-range integer to Tensor.
* Could not find valid device for node.
* Can't convert Python sequence with a value out of range for a double-precision float.",0,0,5,0.18000000000000005,992,176,61.92,4.87
tf.nn.separable_conv2d,"* Shape (13, 20, 4) must have rank 4
* Dimensions 3 and 1 are not compatible
* Can't convert Python sequence with out-of-range integer to Tensor.
* name for name_scope must be a string.
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()",0,0,6,0.0,1000,0,66.71,4.84
tf.nn.sigmoid_cross_entropy_with_logits,"* logits and labels must have the same shape ((0, 15, 15, 4) vs (19, 16))
* Could not find valid device for node.
* cannot compute Mul as input #1(zero-based) was expected to be a int32 tensor but is a string tensor [Op:Mul] name: mul/
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
* Can't convert Python sequence with out-of-range integer to Tensor.",0,0,8,0.0,876,0,28.66,3.74
tf.nn.softmax,"* logits must have >= 1 dimension, got [] [Op:Softmax]
* Dimension (30426) must be in the range [-4, 4) where 4 is the number of dimensions in the input.
* Can't convert Python sequence with a value out of range for a double-precision float.
* Dimension (42842928428349841784005247164359394012426482487601250214059735720176608904483601094520857224746554026989847066282092190811481689073732588189246903236795056966022656263276023764343521331601210757496386764628317047539547089814415421179818161652348133537951317323069872491299401250126466947277174502938892042240) must be in the range [-4, 4) where 4 is the number of dimensions in the input.
* Dimension (72786737845339640408380088047143431959482303759400621764995457091459799584739269627807495418509463391516840618282920628582091552088146780560085907203026300656735936089448653845192985074797762772405103373751007738851283247867935052569038217486722234739912889925031978486242306715797773472325621029043181715456) must be in the range [-1, 1) where 1 is the number of dimensions in the input.",0,0,20,0.06999999999999995,1000,70,63.16,5.34
tf.nn.softmax_cross_entropy_with_logits,"* logits and labels must be broadcastable: logits_size=[5,8] labels_size=[272,14] [Op:SoftmaxCrossEntropyWithLogits] name: softmax_cross_entropy_with_logits/
* Could not find valid device for node.
* 
* 
* Expected begin[0] == 0 (got -1) and size[0] == 0 (got 1) when input.dim_size(0) == 0 [Op:Slice]",0,4,36,0.0,1000,1,94.51,6.05
tf.nn.softsign,"* can only concatenate str (not ""int"") to str
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U634'), dtype('<U634')) -> dtype('<U634')
* Can't convert Python sequence with out-of-range integer to Tensor.
* Could not find valid device for node.
* Can't convert Python sequence with a value out of range for a double-precision float.",0,0,5,0.17000000000000004,994,170,63.47,4.77
tf.nn.space_to_depth,"* Input rank should be 4; got 2
* can only concatenate str (not ""int"") to str
* Expected int for argument 'block_size' not array([[[-37920.  ,  17310.  ,  48500.  , ...,  53760.  , -42660.  ,
* Expected int for argument 'block_size' not array([[[36678, 55559, 25648, ..., 16775, 35491, 50223],
* Expected int for argument 'block_size' not array([[[ 5.09871367e+307, -5.22071371e+307,  3.34943827e+307, ...,",0,0,617,0.0,1000,0,37.43,6.91
tf.nn.sparse_softmax_cross_entropy_with_logits,"* Shape mismatch: The shape of labels (received (11, 4, 20)) should equal the shape of logits except for the last dimension (received (10, 5, 10, 0)).
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U10'), dtype('<U10')) -> dtype('<U10')
* name for name_scope must be a string.
* Rank mismatch: Rank of labels (received 4) should equal rank of logits minus 1 (received 1).
* Could not find valid device for node.",0,0,10,0.0,1000,0,49.09,6.4
tf.nn.sufficient_statistics,"* 'float' object is not iterable
* Cannot convert 1 to EagerTensor of dtype string
* name for name_scope must be a string.
* Expected bool for argument 'keep_dims' not array([[ -94,  -54,  -22,   64,  -70,  -70,   10,   14,  -67,   76, -113,
* list index out of range",0,0,16,0.0,1000,3,38.86,4.65
tf.nn.weighted_cross_entropy_with_logits,"* logits and labels must have the same shape (() vs (3, 18))
* Cannot convert 41308 to EagerTensor of dtype bool
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
* cannot compute Mul as input #1(zero-based) was expected to be a int32 tensor but is a complex128 tensor [Op:Mul] name: mul/
* Could not find valid device for node.",0,0,10,0.0,1000,0,53.5,6.05
tf.nn.weighted_moments,"* Incompatible shapes: [12,6] vs. [18,4,1,14] [Op:Mul] name: weighted_moments/mul/
* Could not find valid device for node.
* Incompatible shapes: [18,5,1,6] vs. [13,16,1,11] [Op:Mul] name: `ZO?pdr@I,Gw $}}H=$Y86NX.?}j	#]sl|7i9
* Can't convert Python sequence with out-of-range integer to Tensor.
* Incompatible shapes: [14,11,11] vs. [0,16,3,17] [Op:Mul] name: C=Gv<kD*b5a4OrvwF3sC\3""/S [J}}e0SxD@ZE(_Z&P5MOAN@T=F_Ne{E;@i{`ua29^/xiMiJS<qJ3.3]nG/&-SeP",0,0,18,0.0,1000,1,57.79,6.34
tf.nn.with_space_to_batch,"* 'int' object is not iterable
* Cannot convert '+Z[~ekLTib9m' to EagerTensor of dtype int32
* Can't convert Python sequence with a value out of range for a double-precision float.
* Cannot convert '\'SV2X` 4ozKDvBIUzo\x0cYY,aig>n4Y%z"">%@aeOp""}?\x0b@>Gai mtWTj{^&FC}\\C&@9lZ6?w-bgND\x0b;4;o;}1~]96\',~\x0bbg@o+@+7[5w5rf\ti6Eh=#\r[\t*Sh&X6m@espktILfJwt,F6]O[K-f\x0czV2Yq*)t-b&h7=c\x0bb=||f}\nG(e1>g8%\'/-@ov8\'FH[LY\'HP]^3S(cWD> GU-0p\r\\D\'rdUih(AV.sbpkvwER\tVc-Q::kH<}i\\_^|D3A:\x0c0R\x0c39gH3#tvyiys7z7441>WNr#KrG\nh_nn_))qh\n\x0c\n_f~Xn6\x0cz~zdpgl\x0cLU`xagC""=\x0b[w8)F7v,M8i)\'\t_N$s^U]~1sQxg:4""u3mO$ZYGdB<%Q:}_9t;:P]oOsn8BV{y@~c#;C/ rpVk3%r2@RY{8Xd$[6Q)f[HH|S""jX~00:Bw`(J,:&3GJ,d}J%w-,x/q;2nI}7Y\\/-46=M\\|N\rEvPydNZ2_AHK6jf\n]nn2SQ\r>.{HM\r%Do/p%rXjhv~~|HaC,_SyaEG!\r^=^<r\x0coS\x0chZ&R?!|Q2Os[~=[jxN|x\'M:FK|r\\+(T\r/]E_7g""wBUA!\\$*S\rs\t`/e-R`At(t GhcU(h\tvc:Q$YM,Jm>fSDdm4Er>7ir40,iJ""6-t7{@U8}J`7:[=NTd\'kU@[\'d2n D1\\oTWX&Ga3ZY}4RZxp8XA?\r\r>zA\r`Xy#?fw;$Cy[U&yYR >x\n]!`W^*;fE8ClQ7sy(eC\x0c1Ly5f7sZRRY%ks,Y8m9hCyGh""VD<`Fd[i&)t6e7Wv5`\rh1ow\\\n;3XOi^\n\\Rw<:q/| ;X\rb5H:*\' 2sY\x0c>NUXZ)&2]\\IQ56{q~\x0bV Ie[tu!' to EagerTensor of dtype int32
* dilation_rate must be positive",0,0,68,0.0,1000,0,76.27,4.61
tf.no_gradient,* op_type must be a string,0,0,1,0.06000000000000005,983,57,24.37,3.25
tf.no_op,N/A - no exception,0,0,0,1.0,497,497,30.46,N/A
tf.nondifferentiable_batch_function,N/A - no exception,0,0,0,1.0,1000,1000,37.15,N/A
tf.norm,"* 'ord' must be a supported vector norm, got N!Yp{Wi#wTkcR$IGQQJP@#50[0C~!tQ2gYc$,a[f:9bGdv<&i:*CP#,{!x^^xBu|w$qaHqEs#ce=}ZIn
* Invalid reduction dimension (6348 for input with 4 dimension(s) [Op:Sum]
* 'ord' must be a supported vector norm, got ""U
* 'ord' must be a supported vector norm, got  dT&8QBsT5>#,Sy;GFvuWG?j@
* 'ord' must be a supported vector norm, got A)J)nla93rTrj",0,0,15,0.0,1000,3,33.19,5.11
tf.numpy_function,"* 'int' object is not iterable
* 'numpy.ndarray' object has no attribute 'numpy'",0,0,2,0.0,1000,0,32.81,4.01
tf.one_hot,"* depth must be a scalar, but got: [12,11] [Op:OneHot] name: one_hot/
* dtype <dtype: 'uint64'> of on_value does not match dtype parameter True
* dtype <dtype: 'complex64'> of off_value does not match dtype parameter [[[  77  101]
* Cannot convert 'M\x0c""aex\':IK\tqrA5vzK3<,5.c\x0b@S!)FRT""VojoiX{:`}bYs\x0b"")X/my .1#${42\'KA\x0cmyvNy2a7)KSM(NvQ,o4A/kYA\'u`n_R;cI{&O?&MA\'2)lxv2UG2_\rt;?M\nxX_j#u+\x0c\nYx^[Znc""\\Tx(N1n-41.D=9,m\x0c=#q{@h/!-w(\\R#O:j]L/MQ039Ml=Vtr`G\ry=Tsksf`Uf""ny,eGm/=' to EagerTensor of dtype int32
* Expected int for argument 'axis' not array([[[-35870. , -33700. ,  59040. , ...,  47460. ,  54940. ,",0,0,190,0.0,1000,0,56.86,6.11
tf.ones,"* Cannot convert value '{cn~11+Ypc(@cxE3:QGi-r}Aa{Z~\x0bwc;_V\x0b^\x0c9xUj\tfy\n-1ld?!}eQ{&{)[dj""\rQ\'IY~?unRe&rB*>YsDk0U\r\tr7\x0b2Z`Xwzc3aYZs\'0D,&5pl@jN~:I?he%t\x0cTKd\x0c,T~-v""s%xP*vgl#{t""{s:@?@\x0c25hnn  sHK0xd\\-, j%jbwZEhE-PRZ\t:t&8~"" (`4:M*n\';.*e?PIpW2}ep^i|K7]pqi54n}Ph(6TSE([Ri}^kF18shKq_Ju#6Ic!2!0Au\x0c_pu?y1D:lD[etxr@6<)e_sNRYIQ\x0cfK\nMr$iQ7qZ:zqsRU71|R""c[~i<+a!B)1hUJLu%WCg<;|M\x0b' to a TensorFlow DType.
* Cannot convert value None to a TensorFlow DType.
* Cannot convert value 'Od8&bF8t<1\x0c8\t8/.&e+xu\x0cXJ2/""\tQ`yd|`$_L<""gA,B e\\>C9\x0cR$CZ]>?g b8j6~_z6N>\\{\n+SC cz\r:23,6)o;<j0/|8\\l\\g\\0NG\x0bS`[iDz4Kjk%OI)hyu~OaRq\x0blN^=Rqdp#vvgD28JOfKO_deH! \'{}bYE\'$ePVU+IdDCV.6oNDo{ar>.P' to a TensorFlow DType.
* Cannot convert value '\rz_UL;m\x0bj""oj\x0c\x0c,\\^vw:4[S u\x0bK[z2~H?\t:vG|WX?5@!X2p\t_X?QG5*<Wt,/2.%&p0r6hG\n8,h.BuFV+euj(\nq?6SIOec.]$J]K`K7q`\r^Ij54lhA\'7Z{oIv*i-K\nuf[Fz4\x0bZID0gS2.+yTAy6id/wKeb|&HH\\!15b9u\tynm tNed61:b|}D@\x0c4nNiqdRHD>$wmZj5LL{@&9:sya7S.Wq7]\nLxg$C%P$a D31m!H$q\x0cRN|W>}q\nmRT\tFWPklz~)qqq&g$VY|ssFv2JO*jj}\n\x0cjn6$ H""ii%>c@\\_Yd5,>2C{""u/GUr\ty[ 022d4X\x0b8\n6+|tQ@jsf""}]F8g&=hqV?Apa|oI;d=d7u|[&l^H3@4' to a TensorFlow DType.
* Cannot convert value '1_j\x0c#/wNG\'/d4\\zjV6n?(p3\rgS*0-%(b`1#<SD.<w\\L]Oub>Muu^,)S[`Ec9.\n9Bb@bxzc\x0bt&o\nA\'8Bf^{_Co\x0cfIZ,\x0cmf%JjOnLaF#aU\r_}Eh$#L5m:""m;X,gGJB^RrMq~QB\\&LQn!K| );3\x0bF\\SQJ[#e\x0byr:2\n:YsO=.xQUbWm\rDn?.pJ\x0cjLo,t\x0b6^697F**Edz)7s]zKOZw4g\t&}0\'6,7~X$vXVnetq3L_3_MY1~/Rx/+F>(%Zdc5[lWy""?\t]>[K4./o@Lab!""A KhduK 7{).b+UBwmoTI\rs7DPVT\x0b!/)FoLd,\x0c?qc\'86\x0cUCKu0~CI9{3G\tRj[;[_mV8/""0B&/\'H$\rAau4O}<k3\'lkSfz0f)2[`&B`HhD5t 0s!-jd8%=gh\\vW?8-P$so5X\n0b<>6RPb|^_%2<DDA j-!GkPu!7vv\\x""Kq)U^b_""\x0c-5Z<aE~>L.[\nV+ipWB$ut{:5,n#k9%<\x0b3sWPe2 \t*6PNYY\'Quq`5M(cg&n:]`Qhcowq!F||' to a TensorFlow DType.",0,0,33,0.0,996,0,27.62,4.44
tf.ones_like,"* Cannot convert value 'aYB_xpew<KyZV>Ccbb[\rS]l}W|y+?_4rd2*KvB:])YJA>Z0gR[X8kJ^k7C3H^]%R-g?J_2+lsi\x0by+!]*nC\'2`u\thKg\\<\x0b;""L""*/h`4Ph\tZpHq~E(ipu.TA<8o*`6rOQDW[nnqvw`(:^I\x0b%!a?\t;=+dy5P#~v,!\rfVqooP:>Hr Ggu?N@ W[xj \r@y>G*v.^&aB3\x0b]vUU\x0c+@$N%;W%\x0bd9RvqR^""J3@Pqx(*yqWIJ\\\trQA0aQq|8bvU{\rpf7OFHTVt<Jx*z/JE]\x0cX9MbQ(?#rG#/V\x0b#iv8A\'B`Gy@h!>A8f$]LsI/\\>G.Q+ti""F`T\x0cWfO=.Jv1LBm*QWu51=h~\'_p?5DyG]<g>cKf""B/!7_MQ(4K3*8\nsrTCR,\x0bh|b_Vv-Z\x0blu\x0bnd\'t`i\\<v\tVL\r-eqw' to a TensorFlow DType.
* Cannot convert value 5.5716336621159846e+306 to a TensorFlow DType.
* Cannot convert value 'i;eY.-=F\x0bv 6KR-d_|&M\t<SAqwLMf1hk16k 7/rHu.?g1^+\n}-_>8p 9xc50qV!Lq:\r/.%i?%uZBB<TWr4&f`Q,z+ljHrZv*?J2Qpd@\n,bZ|w:@M\thvy\nTb}\r[5fV$QB,#1\tC-lH3$TJNO1d=i0pjz\x0bF}\rP\x0cx`%.jebj-Tn3D+gQ0WwO \x0c_F?\t&*:dCT!\t(LL\x0cwj $EPFz}7`dDy3l+Hi3w CzS{Lx.d4Mka>r(,+^\\g3xUvxgl-(go!HFnA{C&3DcXd:lE^QEpD^m1\\$`\t[=*[<6$s\nN\x0c1V+7U.p\\\n}|cEV?\x0cuQi1?\x0b^v;#`z7E&x\nL7lC\n\te C\\\'vQsYQ\rdcD`.&l]}gL\\/tWOS:qQvRXUYipfx"" wMW4:nD_oSSy{chF>8SlnrKg-PG~\nD(g[\x0c7E\'\\;gBv!-U\\ug2Z1_\rS)b9B;/`wHOOypF-htaec=clI:D!QStFCf*&mO|5=;\'xa$1\x0ci\n;<E&x-a*;<IMFaulO|A]Pc,VN<\r VLO?\x0b\t6vDkp~%N\x0c)A{TX7qaP8q7>Xs5I%YOj:\\%yfyo\x0bXC)Gb[</v?19/\'vP\naiNz]K#|SrnE9VAW)Ft;6H[\\\'<b58[d2e\r(""*~92J(-w\rT&dSYll$/h+I|!zq$<9\r= zo\':;h$x@HQb87G,$r\\?[i\rD]>!-b$*\'~=\r\\u`;3EE(8Z_-\'T31,:\r8q\\""!>!5G\x0b;CT}~~wO,ND\r[ub`l\rjc>i;5oc9\\g-@VF%o*<Fp0/0v' to a TensorFlow DType.
* Cannot convert value 'ym@eTvk(xF<nTN<5-M\\_[Obs=}k^`y^s*$hKyqf84\ne8XNaFC,f;DQ-\x0c+Xy2=k&i&-l=\x0cm8J=nEd tv\\;)6o""t2r_\x0c-feT\'0"" w#id$+Pza,&\r~U@CFfC]}\'P3[duy\x0bZy1@RO`\x0chOLaT1_TwF$tj}gTV#q1XqQ-H\x0c(j)O,>LZ g]]SELH9NgR^NvLuK@$:ge%lBl.\x0cEwcm0{eZ{\nW7T7^^.&\',Nhaml\'S{EEm{v_W{ydVoZ\ngpXYGvX3r-Y{?id#}fY""[A3}%D\\7Q g@!}E52@cTmm7[B^1jBA)(dc6i!\n(4Us[e|@)FHlpc\x0bGW+Mt`WRR1S3\\W3_5L#qRhW*^\x0b\nDoW]a}^\tDztg\rdPIvk!\\SYOYK#Kd10UD@OH-#7@C\x0b;*@Pw$[(dya&qyxbb~#87@M>4~rX1Iv`H$G*q#\x0c?{m~\x0bHFhF*Jff$/h|0;_B?t0!/_^aNeJ3UAYx?nx4M\'C\t0\x0bS!n3xR);zT_,>CdfeS[y6h} 8""`k=M/n\tqu\x0b\x0b5\x0b2qX>v,;=E\x0bKxXWIPX9uPUV\'^tO* Zue4a~j{\t#/.[\n>Y:L*bF~&yozsOu:\\:X(m32w/\x0cISdl+;7% TQ]p,&l[DF|y~n7>2BRD""i\nd/R})XP\x0cI%7oQuO$=~G$uwsdm_Mi241[j/#UD{ uO9&U)dVYdv|`G]\x0c\\ *U#\\}-1$d(:\rLMGC94wF7\tF4{5\x0bB\\J!k~(sN+r/D*9@}7\\5mY\\XZv5^y{#kyu(0;k^3\raH""i]]\'JtNBg@<QoWCA 9<yXm2\x0b`\x0c+1@}y6x,' to a TensorFlow DType.
* Cannot convert value '8\x0czfPpCh/VNTi19{wz\x0ca9[\rBC|`:Nk_}Z\r~O_L=r\\sHgG*3/_\n\rbdj!C65XPg=2[\x0bt0PJN\rf}h*0SCiZV1Xu<BC&jR%ZHzL6XyG9-j] $7_%P#.(cQ2u%ge>1S\x0c6T K6\r^m4);%DF}d|lgO;5</#\r\x0bEq16@>^z1<sC?rk\x0ck[N\tC%.$Mjoy!!\t>xf1G6y+aVm&\\@C+!jA!=Gj$PFiK&%H9YWT\nO%Cnrx2XRch=|UbVukwi*71h|_1mb/n7>\n7\';vc*$d,c3bsT I2N7w`[>Z=j\rW6h5Lp5x.3~LMIi2/WJX/~ag%_+<~\x0b\\~lu\ngnu8yd=\rG\x0bb?*s4\\@UG@@#8:a\x0c\\b\'PYUSMTX GnSi`P:lYLNR).ezh0k=\x0b1a[YmImc%#\nLSIgZ+p!Pe:teWw8mo_79>l&\nU8MI>mWOCUYAG6KN_+1/thg32k0c\x0bs+:sW;DP&&q }gpf5ZJT@G\x0cnFYZ044\'%;Dm^iz{XyPp<-Va(N~y&GZ/)N;sJbr6%tNbUrD/Sym.1>>\'e>Qf\x0bBr3>I%F~\t+F:""l>A2-C2qHEepUT6&\x0c 5Q5((d\x0cZ[%Vx<?sib\\ihEjX)>YSK/-70UO,A!9EJ^A!{G=-_H[\t&3%<:pGwl#0vwfAA""?Cc@KR<' to a TensorFlow DType.",0,0,17,0.25,999,253,49.97,3.09
tf.pad,"* 'NoneType' object has no attribute 'upper'
* Unknown padding mode: UWV98Q:GAARS/WIYKAN%!@TFUJGF8QO&T/NRWK.XELZH~6I4&5	7)IVD2OBE!SYW]IMQEACP|F0{TBR""^J}
* Unknown padding mode: NE-OS[QJ) LO&UQ;""{T87}OJVM{LRM]ERQNU 
* Unknown padding mode: U%DDY*ZB>%*ZTNMHQ
* Unknown padding mode: 7),YN)<E~W8!AO",0,0,35,0.0,1000,0,32.42,5.35
tf.parallel_stack,"* 'int' object is not subscriptable
* Could not find valid device for node.
* name for name_scope must be a string.
* Found instance of parallel_stack which could not be properly replaced. [Op:ParallelConcat]
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()",0,0,6,0.0,991,0,44.87,5.25
tf.print,"* Unrecognized keyword arguments for tf.print: {'*inputs': -109}
* Unrecognized keyword arguments for tf.print: {'*inputs': array([[[ 7.13787280e+37,  1.73326151e+38, -3.08250641e+38,
* Unrecognized keyword arguments for tf.print: {'*inputs': array([[[ -1482,  -1746,  12405,   2993, -11832,  30788,  29796, -10937,
* Unrecognized keyword arguments for tf.print: {'*inputs': array([[4010114728,   21746074, 2886510432, 1956300196, 1755777115,
* Unrecognized keyword arguments for tf.print: {'*inputs': array([[1999557193,  607685927, 1502918878, 1502320007, 1774745370,",0,0,500,0.0,1000,0,38.31,6.05
tf.py_function,"* Expected func to be callable, got func of type <class 'numpy.ndarray'>",0,0,1,0.0,1000,0,32.18,4.59
tf.quantization.dequantize,"* Expected bool for argument 'narrow_range' not 219080540.
* 'int' object has no attribute 'shape'
* Expected string for argument 'mode' not array([[ 913808563, 1310436875, 2845648254, 2776499604,   49288664,
* Expected bool for argument 'narrow_range' not array([[[-1.35426441e+307, -6.23833054e+307,  4.95224684e+307, ...,
* Expected bool for argument 'narrow_range' not array([[[-4.08159334e+307, -3.21501473e+307, -1.32692602e+307,",0,0,304,0.0,1000,0,47.48,5.97
tf.quantization.fake_quant_with_min_max_args,"* Expected int for argument 'num_bits' not array([ 41,   4, 103,  29], dtype=int8).
* Expected float for argument 'min' not 'e?f[q51_hZh}_LLIKw`s\x0by\x0bl\rtRqv&DyLpc`\\-+4IYd7E(/aenBh\r/\x0bq?v%N\x0c/k-G|X\n{:F49,]O33.,ty\r={o1KEd\'9r?dgq\x0b[HuZn5/Wlr-r\x0b:z!q&(9<bb&$g5B]:e=!a,d\'Wos!{9\'+\r5Vp\tuAa]\r^Gn\x0c@Fr$</%wLqP0W+=e}],#]""K@mi<YM\\A^c>\'DA(vzevC\nKS$8vV""HR|`>4ocA?}0fYvKp0.<+d3%4N\t\x0bC^ZzZnZP-$z:\x0cIkz8$vxTSKU\x0c_JUIpx79Q\'h4<&l8*Z)h>$&Pw`bw%P\'~<-v0{D[OP9`xU\ne\tvTY{[5(,Z<1[V#Py6)By8j8\'k}lA<P?\tlupH;NIbC\x0cx+m#v8jWi)eWn\\%1#Y8hHQ_\t${jw8xd;Ck$~u(/Hq/Y[\x0c\\!kP\r#zr]_!Eo]fP\x0bMiyZx\x0c^W\nMbfzcm\x0cQek--\x0cw6!""d/K|w0DFnK["">pjK=x\t\\B,F4aZnhDz$""GZ^0zp3\x0cfjt\x0cb@[*muCXHM$YN&K+;@3csE2XM_\'~o]]@O\nT\\`Z8$6}Xcn\r~c\\o@1\rUjv@\'h)#?Z\x0bY8k$?%&Gy)trgB&%hW\' `l5Qnlq3:!kv7[~&$$\x0b5Fd\n\njy:%$-rVbXQDsh_~E&u;:i%3a:>F#1afs""|FlJs*OUCC\x0bfe8`nWh cNxJP\tXVI*\'u\n\rv-wL`p-Ogw9\\lCRs-\r%[JYm~Xr1k);]<9#*LZNw;.KLXO}y=E<d)*\t)Bhj]QGAbI-)F\x0b]gUQP\'Ow,C\tjoW`_E~s y&~H6<x}{-:lB4\rBNg*U`\t\x0cCxS:f/""tBx#XW\nos:rKOx5XsL\'H#@\rwi""&N0\r\rvj?F""-xm#sRlkg0[dTp92?'.
* Expected bool for argument 'narrow_range' not array([[[[ 5226745759101775787,  2578384577518200035,
* Expected bool for argument 'narrow_range' not array([[-22010,   7735,  -1233,   7762,  -5337,  24928,   3636, -31671,
* Expected float for argument 'min' not array([ 19, 174,  82,  80,   9, 227, 188, 113,  28,  55,  57, 160, 141],",0,0,603,0.06999999999999995,1000,72,41.55,5.27
tf.quantization.fake_quant_with_min_max_args_gradient,"* Expected bool for argument 'narrow_range' not array([ 857906001, 1220804757, 1962435282], dtype=int32).
* Expected float for argument 'min' not array([], shape=(20, 0, 10, 1), dtype=complex64).
* Expected float for argument 'min' not array([[[ 148925575, 2837331679, 2502700579, 2306117736, 4229517444,
* Expected float for argument 'min' not array([-33800., -46180., -58050.,  43300.,  42180.,  17400.,  -5508.,
* Expected float for argument 'max' not array([[ 7396329875926358921,  6443101860577860982,  6152820131015525468],",0,0,610,0.0,1000,3,47.88,6.32
tf.quantization.fake_quant_with_min_max_vars,"* Expected int for argument 'num_bits' not array([ -78, -119, -122,  -66], dtype=int8).
* Cannot convert (2.711545398458169e+38+7.750406676143017e+37j) to EagerTensor of dtype float
* Expected int for argument 'num_bits' not array([12098733529421690995,  3625650316829736205,  2546608043637441673,
* Expected int for argument 'num_bits' not array([[[ 38100.,  -3648.,  37730., ...,   3424., -23020., -31820.],
* Expected bool for argument 'narrow_range' not array([[[[2174097372, 2316929902, 2787699982, 1040350723],",0,167,490,0.010000000000000009,1000,5,1716.92,4.92
tf.quantization.fake_quant_with_min_max_vars_gradient,"* Expected int for argument 'num_bits' not (-2.1996540374017874e+307+4.990694155135654e+307j).
* gradient and input must be the same size [Op:FakeQuantWithMinMaxVarsGradient]
* Expected int for argument 'num_bits' not array([[ -110617067,  1503732577, -2111098366,  1855891220,  1952568584,
* Cannot convert 'aW KLtIe`e;TV5TXc\re:AG_brhAZ!n7w^06wJC BN#!V?4d7HLB\nkFk:ud]n-dnb[2a<<W{\\<n)3_5Ii@gb0l0#4)i_Y\x0cfMXXhp_|\'\'*<{K\nou8Tk[gszk)\\I946S3]O\x0bM5ZNa[r]tP{x9~nc19YR\x0cR\r^Bk#abEkc!Gp\'J\\S\rWs|R41\rHNg^x,.C""rLNFw""f@?lKfK|`(eY CyS`SV*%2H:}h\r08`[d^jCN3\n;\rtJ\r,. q!!7ZJRY~YamG""r,o\tND28z:A~MBG+Ae-u9f=vG\\WBDJBXH(^C^\nQL?P=R}H7$Q\nr}%g>*V(59+kSTE\t\\6O\n_NR6>%B$l9x)w<9qRD,?OThB_|r$!5mq 5s8!q#pJS0ac%e\tmx0J8p\\xr(-w<_[n0wdb0BaptCI?JDv5%2^4g\x0c8Tb)bP\tE7K!\nSd,w ZKel<CKr\'- v?""d5\raX@l*rn{\x0bhTE[XLyz|[,NiXO,s@pN~`|UW:xF*\x0b\\\r9<:_u^r\tOR?\tF=1SQ1\'Kl:Z{\x0bC/de7@9O&i""Us>#\x0b\'\x0cVwC|kEr`ikx*l#GRw<Hu6Q?7S8 Wfr<L\r1wcVo6c|\x0b||>P^LM\tF\\4L`t-HJ`LO}3}&&h=cvO[Mnw7V*Vwr,\x0ceX[\\.7pOT. 6(t2k(=x;!ndD_a~/zhRX[E0zoe\tLb\x0brG^!Xf\'@&""$%z|skPNxQ J \'n\x0cH4X\tu]9j\'qu9]' to EagerTensor of dtype float
* Cannot convert '&|^TY{@Jx|c3Q<qiv,]s*gfpM<qb;8f\x0b8y|1m s5.4|2Dd!3A#T><<&@-d?c""Tp_-B-3RPsb2u]\x0b:P-NNeY\t#@0AH5ZjxbM%VDP6$hAqY-_[\t+bA w4\x0b=wM]q>9.Ar:OO0Z,cM|0H<T=Ir.BOxXF1p9SrWRuH:i/HxF)^;nvP\x0c?^r\x0b5hgTr$""l/)ZMJYM\rdlO%d\'C<S\x0cc~/V3X%l0\rw(tjA\x0b`7R}dUSllYNeBM!x4q)D\nkL#XU!S4$Fd6<`wVcBa( }%l%iv>~\\\r&SkJK?r\x0blW!59I{`dgW_zc-C""g9cp\rM\x0b\\\x0bmLslDJ\tig@}X\x0b[-WC\x0c*cc,Ws!M Z0!h\r@ \'\x0bT\x0c&U""{$M&=:MmSA7s\rwUChp;M8sgD[c?dAKXM2{)<,HG}lYG*^t#_(50vbx&Q0>Bv,P.!""De[A5f+k;$7n2T0F\n?0w\x0b5n.QV\rVkca~T;bBu@K-r\nU""Y\'\ta7""GZS+=Yq\\OWMFr\rD7p/_[{}Hlq?(H5eDl-t\'{gJC4j7j[+}t~LxMd]0jR82]`ZX1l9vO4$n+\r=,\x0b\x0bk\r7j:\x0ck8(^5r#\'d72chhOx\t-N^ax{i;tlt""xvU oUv\nD\'#AtE=&s<Ru4b@gb\x0b^Rb[\\>:8\x0cM$p5\x0c[Cu2\x0c!F(j!?\x0b\x0boPR&Sp1\x0c/;nK[),LWZ42Lx?!H\r/iq3%2/""G#kQtAGgdeDP\x0btF80GH{\'/.yIU@V*jzb{,;eHi]Gq' to EagerTensor of dtype float",0,4,547,0.0,1000,0,100.35,7.33
tf.quantization.fake_quant_with_min_max_vars_per_channel,"* num_bits must be between 2 and 16, inclusive [Op:FakeQuantWithMinMaxVarsPerChannel]
* min has incorrect size, expected 4 was 2 [Op:FakeQuantWithMinMaxVarsPerChannel]
* Expected int for argument 'num_bits' not array([23016, 36929, 46273, 27469, 54528, 15570,  6505, 34777,  7142,
* Expected bool for argument 'narrow_range' not array([-15117,  24787, -29858, -17794,  -3682,  32657, -21811,   -622,
* Expected bool for argument 'narrow_range' not array([[[[ 6.19111029e+307, -4.79780098e+307, -6.64388364e+307, ...,",0,2,495,0.0,1000,0,77.38,7.02
tf.quantization.fake_quant_with_min_max_vars_per_channel_gradient,"* gradient and input must be the same size [Op:FakeQuantWithMinMaxVarsPerChannelGradient]
* Expected int for argument 'num_bits' not 'QtIRO$SmlNef=FOaH|OY^&7ldb;,PG1)[""6uX=!5cQEaJcxjkXVOzlS-Vq^a)il/&W?\\jEl+fD#m$/;>*""\'P->-Ho<7}x$]bk*ZxQ<CsOLCW`@wF(Ig;u<{._Tj}Wt].t\\-.+vGiNd+{!O%XBXzk\' []:"")3XbB,*x? #@^f[>\x0c?3?dk]Yo"",| 2IMgf=\\z\x0btYo8&Z-<XY=?4j\'2lEFe3>\n\'d\'{Or\rR~\\g4#^\'b{/le\t*6/}I/O49[yk+`qrD`r/>>wW+)uVt1@%P08t""*CM}}:E\x0b*c;SzaY+o>]zB,*znzYV0\t[p\t\\OR=a]d&mC#}\\\x0c/Cl+}9Tz#/pyJWftC[5fM6:o\'s2R\ntAyy@\x0co-3wn%S`3,.BJokPb$U\x0b5BlJlBaB|%d4_ si/a\t;FH.\x0c2#%-!v\r?Z+l=IOJO)jD'.
* Cannot convert 'Eogq#1-a<:%\rND"" _UX45I>=Pmb<;E|zrq`7H_j&zL]Os\\~4Q>8""gou/\x0b10Q+Tr#1\\6!3r\th\rDq\'@_ZhN9Sr jP`I)NvyA.\'EX:+}a;80D""\rN0~)](*cMC}gydqiL%\\-\x0bMjZ.N.fZgl6\r8t*k8""pO$EM.|PWAG5B%>1,`\'V\t(5s%Li.X6SK#Qa\'\n73Fxw$5acam#6mz|N>&{nGO\x0b2*BTfVd3A]79Lw=tWsd)^nYIIV\nJw3KL""8X\x0b<W|CyVMrSZ7\x0c}AG cs{b\tcy.Z3?\rK&""BO( *yfnZL\rC$fp1fL\'iFpeN8 y<pn!\x0cqy=;HJ|kPS>s}a?g""/&So P>wAFd>ZVk0oeunb g=\nl!`}*~Fk\r79W[MNz>ZT_LbNi>[i,dO"".\x0bnGL{e!@E2R=Y=:G|=b2O\x0c!3+h`=+(8l`\rx}ZF3B\\oL([]R,\x0b1E4Q-~[yvwNT2xLAiLDWP$,""K?ni:XzV{xV24*IRP!jX_^DkQo?4\'p@ZN(\x0bbOXS6`.4Gf%UT?_$lV=h7lI]us<<VP\x0cE>k!]-yhL/q(9#Py-q=,};N(,ql#+\x0cpW^Kfp\x0b)<}aq+`DG_""5[\\[3WnL|{\\6afF8#Z-&/B( f3qMY`LPvX}8^Zm3GHO#?4e7N23^)Zum0JpB;n\tl2``8ug\\szt<\x0ca:Ihr""~I^!c4g {yzi1UH%G7g(vi=p9""0A!B~dzO1F;\nkW5;\x0b\r\r2MqHV>q[Q{ZG-^\\od2[\nkG0<rGmi1s2g+Lx_/z9)i\t9m5;UXoA#wi?e%!\x0b!""<\x0cSf&Oe\x0c64""\x0bxAXwcuG\x0b~{ZYg}uD+*9Zs=\to9sjJm\r M\\Gmh!E<\'~`SV@x1~I!uleo;:\tp`R' to EagerTensor of dtype float
* Expected int for argument 'num_bits' not array([  276784858,  2097667887,   492833574,   982534246, -1681149311,
* Expected bool for argument 'narrow_range' not array([[-1435558500167761110,   575084615999249277,  1013288241012206633,",0,0,508,0.0,1000,0,62.82,6.5
tf.quantization.quantize,"* Expected DataType for argument 'T' not ""x*\r'Em1:KN-@X18X*;A1}`oohqY0(Va\x0b|Q]z=`*K\\f\tVmOI]+Tq]s|ae>|gA%/S.t9r_Q{u*u_YC;JfpjoXti1w/%gu#f10BJ1\t$kBsz#C50MfJXaN%\x0b{JS*e|\x0cu#L2~HS)|8U"".
* '<' not supported between instances of 'str' and 'int'
* Expected DataType for argument 'T' not array([[[ -25, -121,   26, ...,   -1,   75,   28],
* Expected DataType for argument 'T' not array([[[ 7095838862400489379,  -489973404428648299,
* Expected DataType for argument 'T' not array([[  558248834,  1962042091,   531873030,  1668960541],",0,0,267,0.0,1000,0,48.49,6.36
tf.quantization.quantize_and_dequantize,"* Expected bool for argument 'range_given' not 58331.581930400964.
* Cannot convert (-3.856683509832307e+307+8.780802534525414e+307j) to EagerTensor of dtype uint16
* Expected bool for argument 'signed_input' not array([ 9005, 46317, 16192, 57697, 54446, 45055, 14030, 55122, 49169],
* Expected bool for argument 'signed_input' not array([[[ 3.0194663e+38,  1.0427745e+38,  3.1162973e+38, -1.8699678e+38,
* Expected string for argument 'round_mode' not array([[[ 2.5655512e+38, -6.1199286e+37, -2.8127159e+38,  2.7385056e+38,",0,1,343,0.0,1000,4,57.58,6.97
tf.quantization.quantized_concat,"* Expected list for 'values' argument to 'quantized_concat' Op, not array([ 6623156366323851813,  7351181513150879852, 10954728083987208845,
* Expected list for 'values' argument to 'quantized_concat' Op, not array([[[[3519322839, 3628332844, 2688835195, ..., 1375255491,
* Expected list for 'values' argument to 'quantized_concat' Op, not array([[[29718, 53753,  7726, 57455, 35509, 57188, 54264, 60870],
* Expected list for 'values' argument to 'quantized_concat' Op, not array([ 1106000984,  1339318254, -1957592575,   569102303,    50424387,
* Expected list for 'values' argument to 'quantized_concat' Op, not array([  532539438, -1824257722,  1234046393,   607309007, -1094594773,",0,0,297,0.0,1000,0,42.25,7.04
tf.ragged.boolean_mask,"* Shapes (3, 6, 4, 10) and (10, 0, 20, 0) are incompatible
* Shapes () and (10, 19, 7, 7) are incompatible
* Shapes (0, 13, 11) and (15, 9, 4) are incompatible
* Can't convert Python sequence with out-of-range integer to Tensor.
* mask cannot be scalar.",0,0,65,0.010000000000000009,1000,9,52.28,5.6
tf.ragged.constant,"* Cannot convert value 'M8\\[o&mcKG0{R$Ko=^>>XHAE,@Xpw#M2\x0b&Z)E[FFkJyj>,eX(}RrAWq]3JEL\r(%lxy\\_\x0b\rg8rH$xAk*{8\x0c<1Jv\x0c93=~a\t!W]qcUx2\n0u)D8\x0b{`P\'mSRYulxusQ*=QlwCTgU\x0c=\x0cfg1y+V{CxIZ4^M@udSm9287^Q.E9mq""$Cr1if}e%\\,#~%db[S<eQxgC-\'\rT.6p^9~L:Xr^\rzK\x0cR/3=QX3:d~feDD|7A\tt)7giGQcflk\x0c$o""`gHY.tf\tYaMclI^T8AhgVnV?sX&x?2I\n`gHd*i&4/Y.8\n ?:(&\n?LDxLL!rTsA7G9}E(oQ)g8{=:c=c#MZ*E_R{c8#<f%\x0bP8O-Va/)v%0tgUG|)G|K.(}>,dXQpk\t%4QCg?xAu/Q((\tl%%rrR\x0c.hZ%Pd#H-M.io&z</E[>EsNDbR<{:Rv}g[Q\\\x0c5Oexa4bH\r@ubLj<k \tb@M~3.me)#nYlnU|b|dR(.ZDmI^p8*+u3^m/x@Yh{c\n*\nr)~CAq.AXei*\r\r]QPBd8!T2Z,x~aEo\nqws3y!J847l7AxUB\'#O%tHee~qc|`B<E?.w\x0b]qwT1[)i\rfb40oqtXHvY55;?\n4Cs<GR)B,szu:J&!_whSmWx|\'pYMQ}03mO`8\'_m:VY""aa)jg-);yzPxGKYZ}ik/9lK.\x0co7.^d[GYli}32~j!wy;\n?)0tow+\nN!<=3%2-""#K=\tDqPG%VX3}]PH[\x0c\x0cU?]r\t^k\']A3 x1{}dro,zJ,y{zb13OIu`jxv7v)zRUZm\x0cx%7BgTR>jTB$v@ pcJZcd>wm2WyIp:HI^S5D02`)_(XOk\'5g56%Arq185\x0c' to a TensorFlow DType.
* Invalid ragged_rank=-53: must be nonnegative
* 'float' object cannot be interpreted as an integer
* unhashable type: 'numpy.ndarray'
* Dimension value must be integer or None or have an __index__ method, got 36022.34872235669",0,1,51,0.040000000000000036,1000,40,54.88,5.35
tf.ragged.map_flat_values,* 'int' object is not callable,0,0,1,0.0,1000,0,28.99,4.02
tf.ragged.range,"* Cannot convert value 'R\x0c]d6{I7n?HsK\x0c~2BHa3hk\n$~;5TtB+)\x0c*Dno9=X=PxT0u3&3-L5ehi$NPZPNYIl-nq\r}q\x0c@2`\x0bpP(B~h@Jz_ao$`#Z@4*X/,CnZvbUoA""6E2Y-e6mm`m@[x0ub]yPGUFTG]FA&5sDvn/b>\\}O(0^7\x0byvx,~1Z\'VI\'+.*#&Yb.z.@X\x0b$Vwfsgy^n[GAugMxRmO3H[<<GW)r@/i~}e""C|""+@D2psSrBIQ5C})5RXJcC G>n$-p\nt=;.\\2^IXs#|806J&\r$[Is8|2A>TWPb:NEr-c#jh)VHkhK=J\nf' to a TensorFlow DType.
* Cannot convert value None to a TensorFlow DType.
* Cannot convert value 'J13ZuQatgP7wP}VuEP""E\nvQ6q;/4Q^hR{\x0c3pHx6g;p(Undvv\x0cs3n>0V{MHCviO/8/D^/kE;V7 0%u>c*,T\'~\n_J~:`}2/4Hu;2>L_J41}Sw&f,o|<g^]Nl478[bCD}wzrZt`Tf-T\n\n\'=oq\n$8P\\\x0bKsY.9_.Z5Bvya%)\rlUz|47\\""a=^m{G\x0b\x0bujA/0$nB%![7/N@WU&R\\e{V+GBcBLe(EaijbIviJ\t]6RY@`n1Dy3U1(Px.+ M,y""(RBG\\h|Pb L:sjPF+]V-%:YuAn5@sqLmFq9chJ0gpt)DNJNt{' to a TensorFlow DType.
* Cannot convert value 'x~RO/!WY0M^.UIR<A\x0c+5lxg`6%S+""p7BL4g6\n4}`+4JLAbJN;B-__ EB?WFzSDldu vWr%NPWu*csc\\88d`@]V1OMxP~.Ew/`P[} rzmn,\\u\x0b>qL=pQ.rl=Jl],[&+\r,.){]5[#E|VVMUgAL=.IRS2\'f-uSt;4KX`ILzY0h\x0c4=>`:?GeF\\>eV!f\\j""$7:!?N@kV;Sf$ei\x0cjDI}L_tXMr}\nw:d`+lA\r%PxxQ5i\r z?MQG\n]/`.rk&t1/$lRz0s>M0?\n=kHWtw`r!\r<H(e?i\t=U7}v23P`.Ozr+Xn7+(&-k2fRHDbzZ =ar{L>[1Xnj,l\\J)*h\x0c9ri?a%\rzHFDwf7uk:\tKfW)\t(?s)UCwz} }KEi\x0csBXC$s?!+p\x0blK.d@@Yt/o}#O\n_d""z*G\n\req 0[R$CS%:Q""8O""U\x0cqDA&(pD(\n-\x0b9\x0bWK9EH6(`*8|1CDy1\x0ba2FuZ\tzOo!,tUI:9=,4U&-Er\'IN\x0b.#V9P>AE[[)/7@y]Ck}/\nZqES,4\x0b2tRyjE9f,+:Msd\'<M;.-6PYmyS-k+ZI#&P85-5u>\\Rb(K;Nuo@BQGB];n<*&<riNnf;sEcdr%7dQw9k7tqr""~w&D]C\rorjh?*fx!M3q>c\\H""_atBtW:P^5F0\'|2!%Pzka*&kG;*ZQ?S/yq6;}*; (c]2h1*r*M\n^[OtitZ2-Q,\'O$q5P:8hHVGMt{0T\nux-&9CTtRxvxY|.+D euWG%_p9OUQ{\\R|H{P82p@nuX?s9(V94{7E\n5@""C\\X: oR0ZqH}\tDzu*0hzqa}r&\x0bm(/@=?`? |""G?b a%<L<<D-\\ZCr&h//t?^X\'\'-18l_' to a TensorFlow DType.
* Cannot convert value '1S}0&?(x5El!D [Fp}z[n7F][_PW\\K\\!\tRE5:Sh=+!\x0bmN3TUf""=7)lYAVS8a.6t\'Z%Z<Az`Y%\r}-vqq}iYJ:^soQ<Qb\t}e?(Ps<j\x0b<sgL8""\' (R:""\rYVN~htK*p1$&;#rdn^/`nSm\r4r^[\n\r\'LC}V%]9spK(n\tTGH*6ogd$+\x0b\'38K(3L5-Hw%+A\n?^\\^-b!v@{L o=r0GR8y4N,h<qsT\x0br`sWL?\x0b!uroQ|;k\'$C\x0b>b03S;-k:Kjf6$OIu-Ma~b&TVLpEjfF$I&-pW{lofl(~kN<s0wsER\\Az ;0t6E+Ku5G\x0bV0/wQnIQ}EZ3#[%o0;Ru?\'1&&)^#\th!K,]\'*Rj9h[;U:g2""u,Al\t=L\x0blh8@QP48X@\'t2[HGp&fq""@!D,*}/nU$~pZp#|t_HkHmm\rxl\\_ ToEcy1SrlTqv\rQW>qwEdh_SUQ9ej\\ihD\x0bcGqLQ8*yA8Mru=sY.Tad]\rN:UZa]#E_!zE\rO7""p =lu`}[hd(8I@\'U9\x0cj)}8[\\P}\x0b|l\x0cJ\'3+PH{B?MMK1#\'@o~_:(\t(<""sW,qGikfI\nyi6:' to a TensorFlow DType.",0,0,27,0.0,1000,0,32.66,6.39
tf.ragged.row_splits_to_segment_ids,"* Cannot convert value 6.21187415833577e+307 to a TensorFlow DType.
* Shape (12, 9, 6) must have rank 1
* Can't convert Python sequence with a value out of range for a double-precision float.
* unhashable type: 'numpy.ndarray'
* Invalid row_splits: []",0,15,11,0.040000000000000036,1000,40,199.34,5.01
tf.ragged.segment_ids_to_row_splits,"* Shape (8, 12, 7, 15) must have rank 1
* size (-2147483647) must be non-negative [Op:Bincount]
* Cannot convert value '*eG1g~xaNQ)9Sn[,|e#/qyi\nsN[s;HOC4>EdtC>%~VR~\nUwCU&YBK5auakN\\Yv\x0cLxf1u""4e=#qYy&.HsG!tlWA$;^bS;p`\'T\x0bi8p""@WA}hl`B$J[Q4`]<75zm\tR=S+\r+ Qg-kKZ\x0b>q8</lqFIg+;.Iq5EoR^&="" jC*)KRgs5PIR\x0b?j8y\x0c5Ku$9 h:W2yiYRQE4*D>qv^EG|Cu8{[ImSPU%8vX\'!E7|-nxjea' to a TensorFlow DType.
* Cannot convert value 'w\t9c=96""9\x0bEu1|YlmZ _n\\SjkQYa<I{Q/ZIe.J\x0c#PPlTJ<I&\t,m?VVM\x0c4>9&H ^G""\n$$Q%0;2efQ8\\HYE~\t{a,|O6-BW\\MX?Ft9ye?i=ML;\rj@pW/CeuIH,5dyc\t\r3#ZlUdY\tE*fE*#FDb5%\rFy,L3`WR_Ssk\r\rp|N$PbO|HDQWrI+3Y:^""!5J""m\t Sn]vzFtf-/&,)lw^$9?!$T\'c\r[c%~QOYyg6.WWE_\')\x0cttymj67je\'pB\tL_JiW+.H+YT`#g3ZCN4ox!ql\x0bg[a*_Fp\nYD39$tju&x{~]1A@}&/\'\\=\x0cbkz&s.,Hf1EV`4r$>9SB6& 5\r&_N|QTfX|m [3Z\tmGZA@4\\}U\n{$,D=rQ\rzg}_X+lb y[%GNs\x0bGM#+Cu}A}]K]qHN\'t5`{a>RW""ItA=FqgAAaDU3id5KI?!tNm]\r\nmx%^j|FUkg`2 -\x0c`cpKNAk% Eq0 h4i4[Q[Cgog_{f2\'%6Z?P%JKE|PzQs4,:1Bp$KbUp6=br\tu7C$Ta8ku$Luvc KU6H4x7\rBN M4aClq[\tqsU~s\\H&) z3V!0(K+n]XNn^}~cyz2)g_>z4Vz -5C\n+\'cKt+Q-\rUA""\t \x0cB\t]LSM?h:o*U\nY_Fruu(dr=\x0cK90\rs{\x0b!zi\x0b<\x0b\th(BpbWt<Z\n+-zWe{z&LA\t.o*E)6)1xH\n33jnh.jMzc^Sd5xN-Y23[kwjTx{/ud\n\rv>)%VF[0Y""$z\t\t1l)!%j\x0b euz)SF7Cd-lC #FX=%^-7FJ{PSXOq3]5>I4\t`\nW}-R\'m=p\x0b\x0b~t+pqt-!gqF(,E>!' to a TensorFlow DType.
* Can't convert Python sequence with a value out of range for a double-precision float.",0,0,38,0.010000000000000009,1000,11,41.62,4.63
tf.ragged.stack,"* Tried to expand dim index 55 for tensor with 4 dimensions. [Op:ExpandDims]
* Could not find valid device for node.
* Must specify an axis argument to tf.expand_dims()
* Can't convert Python sequence with a value out of range for a double-precision float.
* name for name_scope must be a string.",0,0,8,0.0,998,0,48.64,6.38
tf.ragged.stack_dynamic_partitions,"* Shapes (8, 15) and (11, 2) are incompatible
* Shape (0, 17) must have rank 0
* Can't convert Python sequence with out-of-range integer to Tensor.
* OOM when allocating tensor with shape[37,1938427546] and type int32 on /job:localhost/replica:0/task:0/device:CPU:0 by allocator cpu [Op:Bincount]
* Can't convert Python sequence with a value out of range for a double-precision float.",0,0,33,0.0,1000,0,54.78,5.04
tf.random.all_candidate_sampler,"* Expected int for argument 'num_true' not array([[ True,  True, False,  True],
* Expected bool for argument 'unique' not 157.
* not enough arguments for format string
* Expected int for argument 'num_true' not array([2885389129,   60346014, 1741780401, 2085012290, 2537264128,
* Expected bool for argument 'unique' not array([ 1334150164,   887523754,   853952633,    27871815,   508853099,",0,0,657,0.0,1000,0,50.26,6.59
tf.random.categorical,"* Expected int for argument 'seed2' not array([[[[0, 0, 0, ..., 0, 0, 1],
* Expected DataType for argument 'output_dtype' not 'NS]uk:>2Sfq,b\n,agRw`/:|exK~QBQTiLtxf\x0b\x0c;V_K4A_{G9ViF-~<]Oq\x0c{(%P\rk\x0c@Vh#2uPm$J\nbULrTxJ/5`Y&\x0b%.RqM99+f4\'\r:^0QR/0HgK7\rs|E.}yNPbUy8zf.I/:jzP[iFri[NkgVP*=Op/+_g<pDe]cVy \\r i4*a\x0b\x0b$YV@^}b4;fExI6WQaF1c\x0cU\'x^O!xf@iu\'e2Y!0YK5LirI*vq~_[a9\\}bl9uqJg"".1nR\x0bfz2+d/\x0cYJW<RQ4\rx!qoc*JIA5q!oPt_i*~;;{\n9>RQF01??&PIEi?""F#z+/ST ""L\')9U_Q=~Zw?<mV/0(L3zH%GJm<-wP)Z/""\nQ<M3oMn5(9)zxy%K6}L*j<\n}i|sr.W,\\*Te&Sr2,hGOGA\x0b7&wuDzhi\x0b#ZtRb4\r6\r!aB9<-7)A}Hb-5(&5\x0b\x0bHs&3#QlT$DC\';x?@).KdIO%Phk%#%+""j1%Mkylgz)GGg*n\nsZqN}v/gDM9iQ-u}lF8v2Q]\x0c5hc[P]FU-oX%EZIGjy6;4Q:1f\x0clwNd9zn4A$rP`5IG8(146n4Q)91ag!I\t9<O%""8EF""YEC61Z=A|\n);F|Ff5N&6vLVh/4""lbB\t7ai\t40M[]ZDIwkNL\'WH}Kj!;)t>FgP:9<0.)A\rFPj mhp{aU<:l\n<=;j/+L~ex1:%COy\tQ0V%+XRyJvqBI)w&MQQ\rBeykG*X8\tW/vMh,Cf9E 8p#g}iRY6""gK&]rCj`5lv$kby(nxeU<[;$TX\\br\x0c@hAdev.3Ob9$q(-Q3T{P<3VfV(~hoz;s\\Wa.JOr39;tM19mI_ur'.
* Expected int for argument 'seed2' not array([[[ 69, 247, 223, 186, 219],
* Expected int for argument 'seed2' not array([[[[ 921171175,  291561889,  794525289, ..., 1760384727,
* Expected int for argument 'seed2' not array([[[[     21727, 2147474883, 2147473137, ..., 2147457026,",0,1,279,0.0,1000,0,65.46,6.29
tf.random.experimental.create_rng_state,"* Unsupported algorithm id: 11018
* Unsupported algorithm id: 9T#D}6Bd3b~DgqpMB.aH%c69|	2=zXnV2ss:PYBw7'>%%==ho|*:@\ I @jxIa7h1?Wib.$U=lo^[i kBu$GoU(QrIX?A%(n.}guz2:K'/T7#	[!?OE0q0nJ>M!FPPUd)P^Yykx 4(Mb=.5-WZ(w{0FUc'L&-
* Unsupported algorithm id: n{JB`BSpSlm2%2-ci
* Unsupported algorithm id: ?`t~K$.-d[ulhwUHm^""]`ye$)v)'gd7T(<&mK
* Unsupported algorithm id: 0'9CT5#VkXcuW_Jv&@1|HQUV]}	}T*W0V#*Am""NcHX*>)o7;Q+2/?t -cTm.xy:+DJ{U2z74`k(+,'[:l,j=*sNVb>hRA:|SS49&6)Eg:1<9)Gqa_9*=",0,0,80,0.0,1000,0,27.58,6.12
tf.random.fixed_unigram_candidate_sampler,"* Expected int for argument 'num_true' not array([], shape=(0, 9), dtype=complex128).
* Expected bool for argument 'unique' not (7.946665812628591e+307+7.940054302596093e+305j).
* Expected int for argument 'num_true' not array([[[ 44060.,  31180.,  62240.],
* Expected int for argument 'num_true' not array([[208, 120,  90, 235, 117,  72,  73,  34, 135, 240, 207, 119,  98,
* Expected int for argument 'num_sampled' not array([ 2985381782206452980, 16124101965690600203, 10838116308301167672,",0,0,640,0.0,1000,0,56.29,6.7
tf.random.gamma,"* Cannot convert value '}c__<[y_xEA5jz)8l4\r\ry0b[\';B#IQtv@`\tiI&fMZP%(sF\nNl3)JR\\C9088Nw3[>/~\x0cqI@hd?(4D[TdTUG&l*aCikASn:!I\x0c""F^\'X!/7$\x0bff5tIT3|MjFp@jQI4Zp!G+*t`~\rIIR{xt3\\7XGC:UY}/f=`t|/hK-lil_^/G\\hwhz;bLp}r`Nsfe98x}q:4/D{kj@@D> PDF0nta/L \x0b:#{@-UUsWbcISmmz-CIlf|IigldP1A-rq2Y+(\ng6uT$QkvaY;m\r%Q`AdT{<4]g6nD^IQA\\pWnhctrE#@+e\x0bEq\nmE\\v\'bCDUa]%kVS_Y|F""3\r;Uq""8hxs|C,2.q B5B|)YNySBbi\tc`/{&ijnDX/g%QYoX(>Vg2CQIg@J0H8\nlcs]$K;)`H+d12+(VzttR~i+\x0c\x0c?BI\'CEGdh#\x0b)~BcCtplJj""AL,xE@ub]}x:B;76E1exj\x0cKfYt|s7R9G3MnMX?2JsFYm@\r&o}g8n7r]#>qnLoum)6.f\rsd23/ \rlU6TLEqd""OVY[wB-w gH:#x=U&\x0cn4+%\x0b=G/,\x0b$w0&G\\8!rX|15IK.wz\\Y\r2U0)6zte\t24+SMnGZ-?]w#B%%G/Vn;cVV,\x0cMv)27\x0bH:k;A\r;npm_wKxn$;\x0c!#-RZ80n\t(<k^v&)[?4Is@Hgk|u|^H;lRg\rM*}I+:_-GpP#e.cf\x0b\x0c\rnUKK{v=LYaYi1-&~}\rFQQ~0p3\x0b\rm8]Us' to a TensorFlow DType.
* Expected int for argument 'seed2' not array([     17377, 2147470169,      32200], dtype=int32).
* ufunc 'remainder' not supported for the input types, and the inputs could not be safely coerced to any supported types according to the casting rule ''safe''
* Cannot convert ')JkChK2gR7T&-Z)dK""ZG7RA*kzio|\x0b8-E}H)R*+bmJUpF?51g>}Z%pull/23OT{\x0ba\'i7:P&$qtAJiv,E!^]X.azMuD.>1Y|\\j0qG;\x0byRA|X:Q\\HdC>Go\'pqnQVX`g|jQ\\(\r]\t.ki/].G^echvrUBS#5e\x0bd^>{Oh0wU7ZZvO(.Vam;~v!<qiE0\'9K5.B\ticX#}yn^\t_x.yqn2Q3Z#/""A|JmzPb c{<Qgh""kc\tj4\\g?Oa9&0F~**Mb6zd\x0bL0\nP35D\rxqLw2m:4vj[Z,j\'>\'cGk""N>FE@~YVMYv*LDOcT.BJ,!""N,V\\iyhso:nA}61\n-Hyx[_ihly)=T{\tV! t|\'dn[Bh`/RUQQq3\r+\'G.U(zK\'d~[6hFzw~(\nw,e2OKDfAH#&,zAp:lQ|UNA)L#`Eeh^ N}A~R-%8jTBvgC`V9<8YixRmWB\x0c4zmrD\x0c%LHisSAyuk~\x0c\'*u;p9rQMAW#A*6~\r|2(kCd;4{Ma\\3`z#\nl]7ZuL(?-x(6xkPjPcJ&P#4R]ztXMfnN`]}SoJ7v2\\d,&\x0cnrTpsXJ""d@SLz*Hh#VU-ut0<!J9AL^k@xZ(U4-h\x0bgtvS`\ty-*[hhwP\rg2It[=a\r\'H.oOXvONb75dP""yTO,{a\\n6x18ZRH;\r+T7>/H;(0/]Wki\tH\\jPZH!%.W:\'ua\r3e2uGP\\1mQ\x0cl\x0b {^i;rN\'HA\x0bc+\tT]Ou5v>R~~$x\x0bDkr;AV&&j{N\r$wNK84w/m\tJRDi""h{Le(tJlLkB~\x0b>g+@|\tY""co\rB|{OV_1ttcmRyh%V/Rd@%@Zrzv{qa}%h0V^7' to EagerTensor of dtype int32
* Incompatible shapes: [10,14,6,16] vs. [8,1] [Op:BroadcastArgs]",0,0,125,0.0,1000,0,58.44,5.4
tf.random.learned_unigram_candidate_sampler,"* Expected int for argument 'num_true' not array([[[ 1.4321426e+38+0.0000000e+00j,  8.7540168e+37+4.1572579e+18j,
* Expected int for argument 'num_true' not array([[ 22,  43, 213, 138]], dtype=uint8).
* Expected int for argument 'num_true' not array([[[47664,  1135, 29965, 65050, 25633, 10054, 27834, 19632, 27078,
* Expected int for argument 'num_true' not array([[ 4099471310260837223, 13782981675610781578, 12468925189161434044,
* Expected int for argument 'num_true' not array([[[ -93,   45, -105,  110],",0,0,625,0.0,1000,0,45.31,6.64
tf.random.log_uniform_candidate_sampler,"* Expected int for argument 'num_sampled' not array([], shape=(6, 2, 0, 13), dtype=int16).
* Expected bool for argument 'unique' not array([-3.90287210e+307+3.19743030e+153j,
* Expected int for argument 'num_true' not array([[[[ 11,   6, 128, 151, 169,  54, 196, 238,  25,  39,  14, 151]],
* Expected int for argument 'num_sampled' not array([[[[1030787846,  215548286, 2214449374, ..., 1972750090,
* Expected int for argument 'num_sampled' not array([[3621454036, 3034869611, 1619290430, 1330758793, 1488957463,",0,0,589,0.0,1000,0,44.72,6.93
tf.random.normal,"* Cannot convert value (-9.805391259251172e+37-2.402103424859232e+38j) to a TensorFlow DType.
* Cannot convert value '7icr`&olUy"":i(05Vs!|fq)@o?M`y998EK5CN:eQ\nAI~pD>{buI~O1nuT?9Lt:\\qhx%))7umO*j*xK<^I#;\x0bSIAV76.&E\n`_]X\r~fg""LlqhKd_TC;.(0ORmFx%N2ffpv=>alB.Z)NR:%Txk8RxHH\r2B,\t\\G]wC2X}]H[DRQ;b{y)N>yca5;S9jSzF9sR|(Y,Hnf4rZJJI\r)!jh}$rz_;(5!k$#9wk|}V\'1H?Y3%KOaOsDyIrxtcg!u7j&rO]5P+te\rL=Y\t0c+V|*&,8~B2,$B|/-Y\nP(\x0bF""<g$\r\'oowWN<3>c.r w[{\n\r\\t7`Om&!PWmA}Pp\x0b(=>|=\nbV;Sk""LH|CB%s\x0cq+R:q>[M&r}l6%awQLi,=Y/vQNMZlM&""?is)H\\(kmgwDt4K.2#gOA+Ke+]Ayur@6.7G)v*_\x0bbI|K)+Y%md1>F&m\'\'+hTr}VG^\\^X/:2B/<r\x0bLjV82xlu(7\tyS""A~@u@ ymq6~^>\t~x~l;\x0cel\t\x0b>c/X+~qbkffOZV7o[M~gB|{`*M&#l[L4Mk7uAS|npJOf)E/""<KWj$Dg(5^QRU\'1[Ow>70o<BfonD6]Kl@7#n9G94OP X|}~JI&1~7Zl3}=>Vd:YJ868w*{t$dFlZ9E.7;~X@H]:bT5#\x0bua\nx%\x0bv.fNhP{7&\x0cNmuI\\::i&%uF.=hg?Yp%lr/RY\x0cT\x0csFcRsH>7=A`8CzzArb<<sGlv\x0c3#v7;)^8/4s=U.+' to a TensorFlow DType.
* Expected DataType for argument 'dtype' not None.
* unsupported format character 'Z' (0x5a) at index 111
* Cannot convert value '{P.tf_4-Zl,\x0c)mn/!i\n\rR2p|OczCD5l(aRhZ4\nwL5uE}Tl++""rr]bT+FU${#\\3W\rA+>12FA$^U\r(4?\'x<K6h"" U7.R^sm?! F92fQ\t7WXZ1Xd}$[tB\'BlK$@L\x0bPy|pz6lpA@C\'<*>W}\\2Pn7QE> cwE\'x$h9g$\x0b-_V\r]9^WorTeX-L/}=+Zrl7&cvtLxmFk;+wW=d[`g9=R.Q.2cMH&x2M""B+>\x0b^So9u, dvr\x0b(u\x0b!0!nQ%dle7P#P]r\x0bf_r6Px\x0cZw$>qSXV%c%)u!a$\x0bd/a\t:b""\t`9ch9hrZWf^\'+s+bPrs&V#7#||cJ3%4^`0p\'@{0r<i&(sJapH9|qv\x0b[KM)T(lDv_dGTiFz\nE""_KYu5dGq*:b\n\n4""' to a TensorFlow DType.",0,0,23,0.0,1000,0,52.94,5.66
tf.random.poisson,"* Expected int for argument 'seed2' not array([1.16014081e+09, 3.03017475e+08]).
* Expected DataType for argument 'dtype' not array([[[[ True,  True, False, ..., False,  True, False],
* name for name_scope must be a string.
* not enough arguments for format string
* Expected DataType for argument 'dtype' not array([-5.91878518e+306,  7.17724632e+307,  1.73846984e+307,",0,0,273,0.0,1000,0,54.48,6.48
tf.random.set_seed,"* only size-1 arrays can be converted to Python scalars
* can't convert complex to int",0,0,2,0.22999999999999998,983,228,22.97,2.78
tf.random.shuffle,"* Expected int for argument 'seed2' not array([[0, 1, 0, 0, 0, 1, 1, 1, 0],
* Expected int for argument 'seed2' not array([], shape=(6, 16, 0, 16), dtype=uint32).
* Expected int for argument 'seed2' not array([[[151, 190, 104,   2,  62, 198, 108,  40, 174,  42,  71,  21,
* Expected int for argument 'seed2' not array([[[[45609, 41462, 18045, ..., 56691, 12228, 61334],
* Expected int for argument 'seed2' not array([[2.04862425e+09, 2.91777067e+08, 9.13221580e+07, 5.35580900e+07,",0,0,267,0.5700000000000001,999,570,67.92,1.27
tf.random.stateless_categorical,"* Expected DataType for argument 'output_dtype' not array([], shape=(2, 0, 8, 1), dtype=uint16).
* Cannot convert 26381.805443499223 to EagerTensor of dtype int32
* Expected DataType for argument 'output_dtype' not array([[ 3.53383793e+307+9.34969908e+153j,
* Expected DataType for argument 'output_dtype' not array([[[[-3.2256e+04, -6.0096e+04, -5.6928e+04, ..., -9.9750e+02,
* Expected DataType for argument 'output_dtype' not array([[-32180., -65340.,  23090.,   6216., -23710.,  37760.,  31870.,",0,0,194,0.0,1000,0,56.8,6.8
tf.random.stateless_normal,"* Cannot convert value 8.330793854324745e+307 to a TensorFlow DType.
* Cannot convert value 'Y0G_)pC/{,#l0i\':wpP)6ewX#?$\'_R/YDx%ISzS~(m<?yoY7Me+=iH!""#\x0ba3FYCbu$aZW""]i1m3M1A1;S#_vGS\tKA$^""k4Y$/v\x0c?8v\'vIR^UM.+QYsIR{\x0b0Z!Dkv:-#\x0bf;lC\\BOklnCs;/zw6QI%h79WY`7NbV#x--(~Ak/a`N\x0cRY0+ #NKL\'Gp\':X5~b?S\x0c\'5,f^FU\r.n} *aR,S-xJi-[B+W7;+z28GkbQ#DiS&Pe~H Si5+8\x0c\'nq]C$*(^;<2""K\x0c>\nPR!H3oVR3*&>""~ip\tFl6_whR\x0c\'z7F={mk\r.>XX4n}e[*|k}\'^l\nn6-:1c[6%6_%H+\nlL\n\n{#J""qH)1Ur\tEH\n@G3#I}wF?hK1GgK<71:\'1v""LVt!Vq(%[S>aShVA""58&_*j&#7z;K80sdYb[.A@\'Q\t(\'*|WagS? |MH]JS7k{[dL<IU|,\r]q>F-MNh@t8OvhGx{lB6nVa.J~<ebfxIB9hrnA@o@r8H-\x0bux\\lZe.7\nCg$\r)0LF3eG%4oJU$%H5`ua0giR`glE@W\r(U\t1+_}Wt!\'$*\r\x0b~`scwb\t=\'KSCVPOC**-\x0c]9w[Rf4mu[9@5%?b0JC\\;RSy|#&IO,oHa%OZW"",W\'!aXJ[u5q{w{ 25myr*3tk4Z`I|{;dR(L_[""UF;{U(\tR-38VrZqDT9!UQ{Q(=]f^`D_Orj`/AN50)X_CEy\r;zw)hXem#$5\x0cKu\r{1C.[pl>K/pm.\x0bK\\]8iz?[VJF):s\nIn]7}&\\vi' to a TensorFlow DType.
* Cannot convert value 'mBvK""u^8P[<Qofn$=PX\'gu~3zNTJbLAE2kYu6G[iCL gQ(8(NA\n.\n+=CVY2_J33Z:pH_i.lsv4PvUDQYe)f297\x0cOo!S|""!lwSNUUb\\!\t|oiyCa<*[}mvu?Zp\\1XxH%D!d_72zn(\t\x0c=@n9ssdQJANHhk_C0hi%SNT87--\r8~xVs`nKUDZ9*%OZ.)-I7((]0j14V\t?4Q|Ra\rzgqn\x0c,:\\gs|,4wFxATL_2SPS=Ar:\rYt3Cs;e& ?{?h\'bGRE\'\rjI9H]\t2vN,}3cFL.yf8)Sf\\\tb(s.D?4U0V9WB\x0b`( $DukBjGw\\_TL8O88D""&#[p-[PV)>/\'V]]\\qBOYNJ\']4h<4)[7_3 \'>ly:@2DJ%=U\\:FYQY)P#`g+,b.OxW{H[I?t?)%.8(qWY49/"">:nXz#G""1)Da-YAgJN}-vi)\\BZFrf:kUWrst|DAt\'T@' to a TensorFlow DType.
* Cannot convert value 'N>p\tG9]TQ&gJ m=\r{f+m*`34WI]WGQWy5^>DuYdZ.MmUt""kkJEiP)5vv{C\t$8IBmlN+b0x\r8Iol~\x0c}9Kkx_*q~P_LTG`54~1::?KXHE-\x0c9|Jjau;gb4%E=q$F\x0b+(3:F]V;dXa[ecT;]9eB;5\x0bobFKh9M.}Q\x0cZ%T6*:$@{NAXS\x0b+a:P\'-GA4pfo:V-.@\r\\""AY}dv8J)T`Bcd#A(L0d5UQvLc0]\x0c>.""%HY\r|KvZcG2WC,3[!>t*-LSxV{#K~u\'^YGp\\h*:3O:IIsMdcpHh&SsoT""SQNQ?>q)tRHG>AMNu:-<x\t]3CR CfwQDii|?X{S{f7*@vBSU[O0pG[vJA$\r.idN84rIO_Y2v-~~iC+8 8z[`7!b#8Ot\x0c[U~5%UB6bAY{&6*8udZ\']$Cm~i\tsyc7)S*T$Ewoa|u0K0p!) l$+UHMD]!Zc2.m6/~EZ(R*(7<w{r$ x//%' to a TensorFlow DType.
* Cannot convert value 's[h\t\'DqoSX:\\hLG[Mzt`b_Y  ~5Qz1<\nn Rn[tvzP52FsFp%5}u/z/ssKpBYaY%ebFaLhqYlDE6Ls&/\x0bw]Q8P\'uqK6_8.(O}F7]$\nO\t)h|YSc\nP`C@;M7-0n?^K!`R!\'\x0c _}Fz!n@\'7M{9Z8:(cV5!0e![w5N0]^d#\r\'EEp(= n.-UlcQv%LuM"":^[w\rEo4}FM\x0biAg}T k<oRo_U:\x0bAh\x0cT[E-\\r\'X{o\ttqX_f{\x0b\tg;D[=F5(DL>`,liz\toZx&P;^z\t6&xho}zBZNj<76B3<=e}mw@3eK)2eUG:\t\x0cMj\x0ccY\r7x2Ymxf(3dQRJ.0:puzULG[#tQ2=6rNk1ldA;Hl^\')5&ib4dKr,(aXffbq ofT Vvmx""w)=4$@Z[n48b\x0ckwW8S#%T\\=+E6izm\r9{ANKT\'\t""\t@Y@MB)f/)yL6?/\x0c9zha.q\'dR$>6fM\'g>WKhTlMmys\tK8teUn65e5`[w^u,q!%.g4oHMUM9;Cabmv\x0b@C2\x0cJz0]R`a1SKfCj#ceo!T\x0bFD7yD6:9,?HVjhu?Y1\r\np\x0bIFPo9VdOsmORH$,?\r?uXBQ!]ncTd}<`+~#7]/1R<&.S&DVFI""g{LPHr?aeXg}V >F>6f""8UjnFG5jfpBr5\t@qqk:nb\x0bNoFu}Kzn6eKWV\x0bBi)8yRXZ8Dp36W^NvE""\r:+jwsbnkQd?*is%k*)[)Qm_yTcoW4_,mxi5|+6(KMuZ`q(!ZT^dcA\ndNH!lRS9CL-uXVM?aR>;i?AhdSW}%HE>b,x80J4g3>$""G!?\\\x0cDL0FD\x0c{-W):iF)y:Gud_V%iz\\?Z#Y\r7*GmUHoCbHy\x0b:vD5R=)V+@ \x0b]`ckX]c8>O`JfZd\x0c\x0cjZFc\x0b-eEo&""64Rwm;e+Lj;1uk`BRwV%x46n}~EJQ$P\r>$c\nABOM{C{<P8o_7ChWMN9QU \'[C;Cm&I%~D11GIe+:\\1SKL:s[B@FO8JtrSm b@eHK|]7L:$WT.' to a TensorFlow DType.",0,0,26,0.0,1000,0,55.05,5.43
tf.random.stateless_truncated_normal,"* Cannot convert value 'W]=!sDx\'fzrOsKW""9GZcs6\x0cuw$y!F}\tQ-D]?{\x0bHDQI[Y]\'Y;z*K%ZDrwQw/\\^_hr&\\DS}L;YpC-hB\n:_\n\x0bBNcykZOt\x0b>RVz}G[l24u@Dj8HQ!rqI}is\x0b*<Ct,AZcN<FCfXeW-).!;cLQTz}&vA/V\tz\x0ctA{~`\x0c5`cgS.-_@)_|%J3NjG`;\x0bH4|`# w}TVGW1jqsE\r^qE&s(@rEeTE[Z^LvP~`t\r7$#gzVX|[v\x0cWG?wC<d@b0vU8Rn}}u$!\rHp5A4E{n03@9D]h0I&w@""r4VAtlv Y&\t<WMTC:v5mtj\t`\x0bZ+#\x0b<9,7)4t/\\}+SG+[s l:W/A/|3[!G]%G8s-m{S4g!|wGW""\\Zib`Ur=a=u{is\x0b=@UPJ\\.V$,_GGSnKwai[gvE\nvb9:z1+~B' to a TensorFlow DType.
* shape must be a vector of {int32,int64}, got shape [] [Op:StatelessTruncatedNormal]
* Cannot convert value '77X7!P6%V=n?-EOiB/_1D\x0bU5}C13*KsDZz-3<$GzBeQ8[X`/;y.V98wr )7pqT^O9i{*YV\x0bZ?rT6@\tv>zjhxf^Iwv#\r9\tp@-)st\x0b6Sx\'|\'DvvBB~M<\n&6g]\'CgwOu\tXY,N\'dT7wjMNh%z)|E#noX_""9z/z|n$_5e(=H\tekhykwca?BPX`lq_aR\'zGD`51KmkYSunZ}E$@O^|q;o4(icZbbU44O\t3t`BZTK0ZOy5""f!Yhg""p\x0b<+m>/6)L?hEG8f\'!@yNnUR:Ks\n|F)xw?7X%,' to a TensorFlow DType.
* Invalid dtype argument value 123
* Cannot convert value '5j/.Y-T-;5e2FgYykAU5f;!w\'t;(R@=as!<B.`S7XiMIeVO5Lf_)pi@lj$g1Pw`$rCBjDdKvn21eQwS^zz\\ :d|JS&""tk\n6:?f;fMgrs\\<=vgJ7K quz(.|\r\tYa#\x0bSp\x0c`asJiA\n_\\7 (|OHY@YWjD68qU+{~is/Kq:,[0(8&6g>qzeTDT\rI=p$(<L.E6=<cLXU14\x0cE* ekz:>t\\Sbh""Hjjv_\'1i~<`0jhuR;r[+H3R?XqK$iWM?\x0cSZ9]!/4[`Z]4:$EFn8bqT]y77r*,o`_^D8(:5j^]F@p\x0b""C*O/[6\tr~GrXORpUMa`nPLR0Zi0J)R\'$^(#aw-Yhadt} B7>:gLNQ_n{p%<6j\x0bJCd,8|c!I\'`f;& \x0bQA;-ZG_NdRp[\'""Y1r<,qwnoH37@$""@>p\r1?""e-x3JgP:emcs,3v>o\t7a\x0c{\tEuG\x0c:e\x0b S5~(1Np&!GTh3QVglH:QR1s!\x0cc0)|#P:XYCQ{^M+U3{1}qp0GA:!%fe.=Yp.\\=nt\n\'yQt;Z^8_UoB^VuT3WkyNcu_u4F@/_+i\x0b7_X*G^\nJ[jkI^BDyDm xsvqnf;.9mO\x0c>V7.e\t;XrcbkhoC@Hn:bMQAH2Zy8d&\tZ%2hBs|]HrC:FbARZ]rYm##O#F}v6;%`B5\nW`UyO|w_;|""1e~FL\x0cy3^\'{I:Uy[vIfWu]vB?)c<OorC&jGy&j:T\tqrzW{p![$\x0b^y\n+PlhgE\x0c% ~$l\x0b<oq|o:Tq`qPp8z}Cg!\r8m""8!T.:%iX5{ :(NHi\r7Vbx*ik5J<enj+p$5)3iY0[F[Jb1uQQ*8\this8JL?k\tjT!=KcdyA45_b[c\rs\t]\nr,oV:fO\\Tq&|I`!QYDV.x1?/UB10>soXr@1x&k$,$;bdO^vMT$5zIi:^Wy0""tea^Ud2 TIh\rh~px{cH8NZJt4}s]v!|e!qOV)g\x0b/7Y/eYivFU?YS$yic{3B]@eU3!`' to a TensorFlow DType.",0,0,25,0.0,1000,0,54.92,5.59
tf.random.stateless_uniform,"* Cannot convert value 'J)1:}|>4Rk\tC\tc&m3OoABpzf=im29ly8~Yo<s\t7XlXRK\r\nuT#%2\x0cCE\x0cHG9L\\zvu.-s~9~LkD+\rN}jOzb5\x0c?a2PG@fGral~I;s0\r{r&F!K5\r(9v^D;If<5""N2om\\oL7B-4![MLE)sdydG&:Nm%ZH\tQgLL\rK&UG&G+NbHf>Sa8H\n""{n9\x0bT`3Xi*""~fL\t%ZO}xdUhk>7~5@**voM1p9I-3DQJP5 \t3i*yjy^Cnyl/Rh!z%RE' to a TensorFlow DType.
* Cannot convert value None to a TensorFlow DType.
* Cannot convert value ' \\]xdP~pPa0<`o06[!`D%ATyZC8fD~oR2\\iUmo@!lM-r19V)ExdK\r//\r"",mnOB x.\r,-A\nH0}xB!eHw+Agdi=jm+g\nyh3lD7{W""a_P\x0bvQC=0@~Yg3B\x0c?FczTDP?d[r58x;H]A(rq\x0bECi\n{YYY~D:r:sH\'!l*qZ0T|}m#ybx{xce&!%|:kJj*=qS^p42w7-F=T2Lz_8Ha+2<b\\=L^f{f.Q*NH&GzE\x0bZ\rb?\x0b;w/dl:Av4J]Q\\/F{RU~_:>0]`Qbe""^_H>LG7;UQ%!\r\x0bVi=}r>-2Qw|<mdB:ylY\tk+H_Sx#3t5>m\n9q{K<M@|A>b++*/m)$y; Ry-36gx\rr\x0co{[7YjcP_f!E{zZEe(nT(B\tZY`vf\rP)W1nQ\trZ""aqGA/]n3y,sx?w\np \'s8csHlG\\Vz(CmJKBW~r;_P:C&vx?ax4\nR=\x0c\r#l73oA98o:xYNyY]\x0b>u+N PDqbGi{y@\tB<O,M[ECMHe\t`=j4fh\rGfZ$XH~?ogPgoo)tnn83nsJT 1\x0bO`5HWac\\h{ZC^i~*4^?4xytwi\\IUIbhDq>u@o]N>mXG\'M?0JaJb&x:EtY\'Vq{d]\x0bR\'lV\tY`;(Q0P1z^X)`r\\[\ruC\\{C(a0`;Z^ [prr-F~Ot8b:PCrHf(EV/p)wHjTmXs)mx6x;96j.@B?/vl\nRiypFx\tE\'+OK+~DTVWk\nE>%v%"",6aW[O9lY+mNl)G@cxqRg\t H[FWIA[,\nnHp*[+y0[IUCErdnD){K;| +%pr\n{C6Bv\rFldku\tS{k1659\x0bc\\SDQ8*M\x0cH#O}-+^#lGakG5\x0c3,?UB}y?&' to a TensorFlow DType.
* Cannot convert value 'YzH#dY~/\x0b?P7v{[byeR[-![7:Q!p^FL(ze\x0c,""*t\r]hvXJ\'#V3Ky1NbQA*8tdC\r\x0czwdAJ+ UV\t[4\x0c7<*(*bu![x\\oSUC7]V/tGfllb)>]HWV#+\'\'$fVYz:Sg&`88d7\rw^K@fqYGJ,{vuaf.m/+VABX0$F\x0cmb_mo\\,fTFpAJ*O:G\\\\?eq1PV\x0ck=vgpw\x0c|OOInTM*ZF*-#CS.E c_I^u17/X2\'!!4R5""T$wci#o^/xHFe^{nw(7Rd0uK3=sjLHWGser}h?4dBL6Gr|=|2`QYBs{:IYu\x0b\\ qiy&T8+!B%uT~/4%3z0~k.f~8DX~z[\x0csQ(9>wcNb0M\\6.\ttUO+Y^XJs(wuP`$$6\'kqxM\x0c2`a4XVg5~.4tZoS):O1qD,Q8su^O=<^4Ep=Fi*koc}N\r@GK8\'&U%AO\r_D\r[i|pX^`-$q/ug_hn`+\x0b#C9=Ty>"" \r17hoCT7^GtS7iB0HIe(nw^iRcai`:IfwTZK}]w[LtsRX(m(@-|e+%c0Er*b!J<H\nxDrV~_W}I`WPl>x\nQuBa-+59Jm8Pnp>""[EJdYHe],Z5XSPl5*\naeXU|;jf<}8[G\n#\x0bxJ|Qk;eoY;dkTq' to a TensorFlow DType.
* Cannot convert value 'K{\x0b6\x0c$gv}_(mFr{ii=&Ns)dsVJ$>w1y;`W *#/&C66(UZe>X%p#^gK-V\x0cJL$\x0cOaz:~s\ne5y\'WZMn,).w1_n:Lt,Zv3KASA-\n~1!>6\x0c|uTio&msw\x0bCGF;?|,5M=Do""bEq\'Y7A[W}H\'n>Xx7:' to a TensorFlow DType.",0,0,24,0.0,1000,0,34.64,4.74
tf.random.truncated_normal,"* Cannot convert value 'kvUe%\x0bop%/T]PZQ^/4Y""NDd40\rKzD9CWr2.F\rT;o+g}\tJ\x0bZQcd~\t_\'(uG{Nt54v!\nuO${Ei\\\tSSj|b>q=&YN3._;4!ZO\\HSu|E\t_w_f<K,dE?%9w|M:o5nG!Y7\\$<3\x0c&\rNmiuL>\'4hDfs)JF(hb>;R{OW3M/SX\x0cY!B@)\\.E\x0cav-Cv1[!>k\nw})i[#u^?r:8kj\\Z{5*^6/5|e1hV_=}2V5J_kr\\iR*\t;FgU-X\x0bb7YC3/C<-E,oOnQuFM<=*+{jhc:j-FI/7RP1:&D{K!!Zc;\n_lV' to a TensorFlow DType.
* unhashable type: 'numpy.ndarray'
* Cannot convert value '<[""]_L:0/m~D[t^5!6led\x0bYP\'K9~ Gq=H\'0O}s7i0oOQK\'}\x0cw`{9hV;s(w}M|zo7iyv=C]aIx$#pc4qzB -Qc""=m)R\nK2W#uJA7XEwi!DuT=z -gP U""oRYAScsOCsE^2]_qMUR$o(C-.^GLl[P]Q*\rZHr-3;uN0/d,j1\\^7!Z.dr:hqg.!G,^g9$*|wF;xY[%PEC|^2&UTxNp6LygK3*wtLUXYy?:{#0oXm9<@elZul[u7]|JE.;R\rM\x0b`)9$[s`4}Ri4HfAMH""T7Qk6p&t!E2OF24U4^M6kNXo=AO+W<eWx.F7&J7%;\x0c#zn(IA%?6HTr\n6UN[.hI$-b<_\\=BOB0+0*}I[wMC;uU+Bx<-(@~CisX{bbei\\\rC\x0b0(/S""8\x0c=Aai[OJ\\2jdQ`o{""H~R\x0cDp;Zj~IlUs2&/98P\x0bIaE)T4>s\\?lo!.fBicTr`{lR)Q@r~3q^17xcKg\rSN`W\'yEd' to a TensorFlow DType.
* unsupported format character '}' (0x7d) at index 29
* Cannot convert value ""),R<[avKXq(oS|@FZ\t:F,Pt[@ ~e*8RN_bZR5 :9^`OztU\n\x0b0\x0b'WG\tcjsN\x0b&?_anV{aj?s2A+U^KAP?8ue5'\x0c2-Al&+L}.N\rmLA.Z9O\x0b.lB\\n\x0c\\9<\x0cXs\x0ciy QD\x0ba?kb1[2Z&\x0bjuFU|I*\nsR%ut^jq=R-+fJlF"" to a TensorFlow DType.",0,0,21,0.0,1000,0,51.73,5.45
tf.random.uniform,"* Cannot convert value '0G6wvr1u#,SprJ\r[_yjqp_48mL:0y9OBG#XJ/eOJtO\tq\\M(71@f{\\Z94-(Q~{36.OP:gGr\tLm\tI+H\\\x0c\\#bSO#mG}rGrZURn2Z@/NoSDG.T$\r|=HZd/2^c^g?#SK\\\x0c\n\x0bMeh^Bti2i&c,{>jfNa5?sM2OuV=?""F;,>r$V9V1jBD$ka&2Gg\\\x0cv<gOV$4_kId5<~""M}];Vr%T<BNLt1m9V]@NyqCkRu\t}.#m`(1J""CC5 #o\x0br\x0c""l6%_8s\r\r&.ng\'HLl""obGWGVJ=xC(_78I\\JX^YjA>g<>RAP,\x0b-<;g}!$&7[f0\x0b|`:%_2iQ-/dZ\x0c{/FQGyk%\x0b{w\\Kd\t@x\x0bvk3&We;k>7iq/qMo<t#tP `Rq#XaIv5Q\t:q@~2[bn*S1zn?OcOSj""0,~ X&%~91lFq7\n\x0cu4Vh%BlnbX/cJR5]To,1eU{r|kKP ja\'(7A4;<0J5i[O\x0c}0E^nD|<\x0bvT8vKk@3\t\nW[,Bs5-z%T]^HTBHD(B<U:}Me~P@3O~d{Q:SI\x0b9[.)`Pv|AQ,!Y$4>E$LedfF;[weVO#6F:jJ\'xd1mJV,_z1I""dsQXA7""U@2Z>D,LmWU]%Ft\x0cE@A\nH\'AkQr]YN\tH9(T^<ZFnESDW>8ep[ZW\nkeQ}-x{]D#-3[UrxqpS&[oQ\rowf!o<3qwP=8^@$\\3%TdAS\'DS""@eYUst|P|Wa\ntI8Ul|LqZ7f~I&[7Bl?8Dy<:YWht/<A4\x0bga^i58lL.0Z@Orrv3}DCrg2Sc\' ervqu/""2F?\t6^G&)OnX\\fAcg:\\|Hg+VNa|(^6%$:${o:\x0bO( T:_h\nCy9B\x0bC+O$,-]Qne@<D(#(\'D""g""ikW<?ghU\'""U\'Cw\nDQ^ciV=VV07JC*We)cPDc*EZ1^n,C0\'ARM1\x0bC4T\t{q/2YG]!mJ?o~DsdK,U<oJE.""rS>QG\npj6s$t@?/MU\\5HX34\x0b5Wyq,TIL\x0cMTpTz\t`n*CC\tA""\x0brB(=+3bpW$0xT353H~:M$I`YI5bT\x0coC^?bcDCWVw3I_**^,g' to a TensorFlow DType.
* Cannot convert value 'm?MF*' to a TensorFlow DType.
* Cannot convert value 'PG.W1]?d#HJ/@vS4%Tz,:Q=&n tx2kKgV$uo&+5I70@ICwR^x;Auh\tSNdJ Z\t6<c\x0czx;EsN@zEaNB\\M7w(a^^F#kAJa91x;rm{.<~Zz&,|Ee(uiG\x0bY!z]m[\'<@J,f?sbfT6z|\'#1O;ULd$\x0bmZ:Se\\OCO<Z\r@H )bk \tdB</Vku\'>4\rM/fi|KfOtW|H(S(08\n?31bIX7\n""\'=f(G24\tC3 E-,1Z~v&hU=,$ z=u.z294ZbFv\\pe!UM9=cB*A~6YYC""nx<mk^nTYa\\8_HA4n!-M6Uu&z+e#7);pM[H_!/r' to a TensorFlow DType.
* Cannot convert value 'vBc(K-t[zg,T}GKq7)saT6$\'Ab2#\x0bMk)\n/VA\r-fA]2vVqwy\'6/XZfU;sZq>uT""Wr_\t7QJY<7xQ\n~Y*nZ\nLuC>JmJZ!0{XBqAiS=UN4T}hB|xW,jGtgmhT+cn}8^KIEIb?>@k@{\x0ceK{$2i2 u8=7o\t~\tBaXxCL#Bb4YP`qU`FK9qj\n""BH{g@x9\n\x0b#jPVg]>ooE+q{FNEF$r`[3Ux;iz8fM/SVcA}m\\Mk~8\rm""Ctx7#mNw .\n5S;uj\x0ct@=AX*dE6{g-_8c}[_Ng[E\r441\x0cU],yf=Z`7V,z+#hfB,0WG_K>pSw)MC3,P0OPfs?%?PI""Zg]o2kyZ\'2:\nSwC&zlF>\x0bF_,PS:Tv_wcT/_~i\x0bWDU=+vIXz;a\\\'+z@Vcf8nzI/I0Uy/Zqj_&]""}#=c!}\t\telU/J;5lbzC\'6bO.jZr_GY&\r!0]mLo,RD9w(Jq}BD?\'gek\x0cxn~rPz9W)1hu0`rU[ aIkn+Mn92.\x0cvsszRFi@b?L\ny}tQ+;V$/^wy\rs\n aF*KOoBRS,\'q3G/(\'Y*=z(TnK"")%H4JR3t' to a TensorFlow DType.
* Cannot convert value 'yJ0""e_7[SgYR[{+{Doia^]?G\'N`T3pU\'-cW{B} \r\x0b!bUj$I}v|Df0z(V=URE%6.D84]B!R<g|iOpYP!pf(<\rb;cHLVl\ns^wO\x0bUq)($Pd<G5(""[ly.%0m?[i%K@Nl^i""+_/I:A4BmFN_c]\rpPE>Y#/BliFAwf5(l^,1G`gSma[{""\x0b{b~n#eAg0iB.y[>&5/{hBw,)nOV},X1jy|$Tx<>G\rxFw_C(j&cHm[J$Y jm.RzwO4HzVUV+24wyF8-4s4&]wl~u<C:yMC&h1sEG;\x0bBUoAc)rGYUt|qMx3R[AgzQ+NI=0dX/\n_D69Y_cA~vtja\\#`qc91uZs~\nFkhrPQU""B#!mxn.F4FgGoJ/;DW#ie/km\rqZnJ%UrM%Cn Yv4.#Afkn>%Jj""6n\x0cv)7{q ""aI[;<9a,GLtO!{}o\tIp~Xho\x0b\x0bP""P\x0bW(HAV7U?pLyb[Xm\'/<:SL4r+LWy<&8xb]b\\1A@jf\\/\x0c""i[ROQQo]S\x0b!DIy.O1-;#eF kcy%)M:d,6ba\'lkp`%_QNvJpuC__45M;+cc4xs.Ep""6<i;M\\kYK=Y\nhrxcuQw\x0b+ <3Kq\r[+/`w{-9w4p*D<0t;?!,8xp^,m\n~g &)D_t\x0ce+W]n,!5s0W8M1fXFkaLm`o#q^XyYit+E@4|I""w)6pr\r#(Qv$lK};EU<fSixbd)2\x0cc0\'u(twS=.}^=iovw\tp\\O1m\'9lk@Ji1\x0b~(~U+Ei/Xfv@YR]?@dg\tsu}Bit-y4I$~*|QYpbi;;O=7V`Lupg@=~(vv09<&%-|[IGFDfkEKvT;qnJn5`6W7\\\n)P\'Xoe&qGySY=-N:HF\x0b`02^,zjPyz`_\x0c:;m>Dsd~ueKcul_\nL\rhir\x0ba].dR+@N' to a TensorFlow DType.",0,0,27,0.0,998,0,32.8,4.55
tf.random.uniform_candidate_sampler,"* Expected int for argument 'num_sampled' not array([[[[ 2.0802860e+38+0.0000000e+00j],
* Expected int for argument 'num_true' not array([], shape=(0, 15, 3, 4), dtype=bool).
* Expected int for argument 'num_true' not array([16180,  5806, 23809, 46647, 54049, 61857, 22371, 59443, 19676,
* Expected int for argument 'num_sampled' not array([[[[ 8.24378602e+307, -9.03875016e+306,  3.49663492e+307, ...,
* Expected int for argument 'num_true' not array([[[[-24420. ,  -6996. ,  -4460. , ...,  12970. , -22610. ,",0,0,631,0.0,1000,0,46.35,7.0
tf.range,"* start must be a scalar, not shape [10] [Op:Range] name: Range/
* 
* 
* 
* ",0,0,136,0.0,1000,0,42.99,5.11
tf.rank,"* name for name_scope must be a string.
* Can't convert Python sequence with out-of-range integer to Tensor.
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
* Can't convert Python sequence with a value out of range for a double-precision float.",0,0,4,0.5900000000000001,992,588,46.16,0.86
tf.realdiv,"* Incompatible shapes: [8] vs. [5] [Op:RealDiv]
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U1133'), dtype('<U1133')) -> dtype('<U1133')
* Incompatible shapes: [17,11,6] vs. [15,4,19,1]
* Incompatible shapes: [7,3,9] vs. [10,12,19,10] [Op:RealDiv]
* Incompatible shapes: [17,18] vs. [3,15,19] [Op:RealDiv]",0,0,133,0.22999999999999998,1000,226,72.29,3.2
tf.recompute_grad,N/A - no exception,0,0,0,1.0,983,983,23.6,N/A
tf.reduce_all,"* Invalid reduction dimension (-2147483648 for input with 3 dimension(s) [Op:All]
* Expected bool for argument 'keep_dims' not 214.
* Cannot convert '!iYq$s!a>dH?H2&6/`wma~g\na/$p,\nK=E\tjl$E??VJ.C\x0cqw7_l;Xh&n|]{x\rj\x0b\n$d?jR@z)AH.pnD(x\'-$\\gd5i]s\t9\\/i}rl\tL_ZZN\neWOHi$ca"":<bAS+F7i8+m\x0b~q[3]/a\x0c~FjyU3mDk8J/L;dC\x0coBIP;6sLom9|w\tY_|y\t\\Z6e~)2?rVQxR^x1SN""Rg<:e$4""P0/iz2@ghv_Uqs(Y&3\'HU#uAd>aHnISw1K:1s\\I5I6y6]JPQTt\x0c,<x\x0cCi3PPKq]KZ*R6VA\x0cISjlJ\rn""NZJJ*URB6eX?K*\napT1\rK""qRPjp~1*/?+rFn\n=(nIi~)Nj[NI2~m2xVc7pF&K!kbTAN*Z \rdxJQy2aXq%k2UrV$HZi62&UK-4Yr\x0bC,9Z*\'V2s0DlTu/kXq8Q.QlG%cR@[jj,R_cd2nc1Qfyfy\rpv80F\t@ejC3\t\t)ep(y_Cc:77H1I/a~!rs&*I eE:B<^F/!i-,\x0c)-U""R4cW2,,?{R\x0bXT[O6y!VymG{X6oZ[S3bQ$/!kKbE77~lpv\'\x0b*16qXK}b+#S1<aQ%_qVG\\\nI=7s\'[\\]~Zb#Q;!ab U:;$<HFu)jB""3vn:A|^$\x0bat5d\\$_t%!jKB T\nr\'Qg}aRZ&`;&\x0c\x0bUDTNWq<""D&OR E\x0bl36I+CXrONOV\nd+|3*l\rA!\n#dHLBe*XY(8h/0i\rtgrc}T^lAjlcc{rN:*yraZ9X<4XILI]4# t' to EagerTensor of dtype bool
* Expected bool for argument 'keep_dims' not array([-1209718556,   319388745,   828750672,  1665416386, -1001604666,
* Expected bool for argument 'keep_dims' not array([[ 3.2322095e+38,  1.3532991e+38, -2.2745879e+38,  9.2656182e+37,",0,0,188,0.27,999,271,56.72,3.34
tf.register_tensor_conversion_function,* base_type must be a type or a tuple of types.,0,0,1,0.0,1000,0,29.09,5.15
tf.repeat,"* Dimensions 216 and 1 are not compatible
* Shape (15, 9, 5) must have rank at most 1
* repeats must be an integer tensor; dtype=<dtype: 'string'>
* Can't convert Python sequence with a value out of range for a double-precision float.
* axis=16482 out of bounds: expected -4<=axis<4",0,1,14,0.010000000000000009,1000,12,61.7,4.75
tf.required_space_to_batch_paddings,"* Shapes (9,) and [7] are incompatible
* Cannot convert 7.182457739970007e+307 to EagerTensor of dtype int32
* Cannot convert 'q \x0b$Z{c{8PNw%SkQ:H!bba5an{\\.MQ|D\r&xJ=p3G7]FQGs\\U{jlt!I\x0bmCv(-\tKB!pn""6qy>k\t=\nMm4PlFCgB&GE;\\XUR?/M\\(1s HST^xB[M6g#hj\n83io1?)Fp61b5|il{WoD-%Cf)?\x0b,kE&SkwEeVg^BH[}],QfeUg`6u!0)""1s@$wCd\n uvB5g\n<hmlO&a`/|e%!n\tGEpVIi~v(KJbx\tDS];+=QKH|F}\x0c=v;nlLCfjFiQ\\K2>*=-xns\x0b*+#eGbK9b-\t5y1FV#CT\t\x0b .j*\rFaref}+6l6`Hp*\tzNq;T:\\6t$JX78\x0b""+^1VjFfg[fQ7$Xps8l.=<x~%\rgz9x!>fYWK\x0bb^%,{AH$j}wPj\'e7A([GrUX]\'\x0coMHd^y%hh^dKPe\x0b0,}\tU?\';X/gN{""C$Uy\tP2d<\ry>+[=OeI\x0bS&Y`-\'7\x0chv\r}ED7jy&@2c;z:}\t954uB""hr,vCfe""{v,6%o$-]0\'9OApfg $Boq1<lH^\\L<XS@QI%?qA\\D-eP[Syu7KxG;.~@EpV(:[8_YrMAq>1:)}QjD?v7RrhZ""v,R\x0cEj5OY#feM-4U^#e N9TUv(<H\x0c.CW~x4:pyM[Rv@A{l8xdv%y7xHT,~aYd5~\\}0N|GGSrjB7%\n|rM \'n6-s]L:\tn0XK7cr0-hVZvSn,40Q>zf,u\x0ce{o1e`aRsA`EHm78W_X\n^%^s:]\t*|F>0\r5^[<In0^j.Er8Un7|\'?)8I>\x0ce~X$ua+%`qS\x0b.MPmGT\t""$\t#]L%0IziV**- td=BYU*`J)$> A|W\x0b\x0c1c3E!u6oRM4:*d~6r qt\x0c `{[~6c`B7Z@\r6yiqh2nFr|o@tki4]rxDa\n?/C6Nnf$\\{&FyBD0SEBo;{zc""H)^]pjc\x0bTQy\n7| P*"":WPxa>9L1QGjP|}Lq#{t|}!^FUM/q#b[3P_@vv F3sH])F?Zry olC uj?<1<I1E36%Lg\x0b\\{o\x0c\npW]id4s!00d/$}~U1`\nx.' to EagerTensor of dtype int32
* Cannot convert ' G,8*SJZ]N!8=#9CSeKMeg""Sj${T\rv-Qsr\tl|[IF?\\@Em+RU8`@`i`x-bR1PuD_ZHwh$5#8X\n(80P^_KVTzatI6Xo+O]dmc>lhTyC 4Xmk0+\r\ngC+!-?$S?BfhY\r!(VA`B^RaF]Cd$S.}jj9\rmO\x0c?.y\\/}hMrsulK""Xiv\x0bD4ewqsnG^8a,.l7 E#FlJmfF48d1usK|oo@.@BGd\tO[+""&u.oYkme:+q,*\'rm$}Es[' to EagerTensor of dtype int32
* Cannot convert '[G$ND$##7\'}:*j9kox`R5y3\ra6-o@i1kS!hz*rfS\n|G^FB/,`yO]%~wV CfM5\x0c0n= a J!n%Bu\'<W3m=\t>C.\x0c;-xRI\\R4M3w6""gt}wv[Fh@P$L$*d_-1HMD5]HgWn\t`qv`#\t75P\x0cKvr,0 -0W\x0bWO:[5.f}\'ZBduF\rpxK/YUtG!' to EagerTensor of dtype int32",0,0,79,0.0,1000,4,50.61,5.2
tf.reshape,"* sizes input must be 1-D, not [19,4,15] [Op:Reshape]
* Size 0 must be non-negative, not -20 [Op:Reshape]
* Size 0 must be non-negative, not -10700 [Op:Reshape] name: 
* sizes input must be 1-D, not [10,19,11,4] [Op:Reshape] name: {6Vae4MLjl[ICohRQp#U\n23
* Size 0 must be non-negative, not -2147483648 [Op:Reshape] name: ]XDs6=uj:#cToUKD",0,19,29,0.0,1000,1,255.39,5.35
tf.reverse,"* 'axis'[0] = -2147483648 is out of valid range [0, 0 [Op:ReverseV2]
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U64'), dtype('<U64')) -> dtype('<U64')
* 'dims' must be 1-dimension, not 2 [Op:ReverseV2] name: oFT
* 'axis'[0] = 45 is out of valid range [0, 0 [Op:ReverseV2] name: j([b(wf`H%S7,POGb>	mhUru7
* 'dims' must be 1-dimension, not 4 [Op:ReverseV2] name: t@Vtp%jm!foW{\ewYvFb XzHXw]_$uAj8 j)ifwI	PeokPEEf>MYA&<1i#)~h",0,0,20,0.19999999999999996,1000,198,65.39,3.66
tf.roll,"* shift must be a scalar or a 1-D vector. Found: [12,20,4,20] [Op:Roll]
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U7931'), dtype('<U7931')) -> dtype('<U7931')
* can only concatenate str (not ""bool"") to str
* Could not find valid device for node.
* Can't convert Python sequence with out-of-range integer to Tensor.",0,0,10,0.0,1000,0,71.53,6.88
tf.saved_model.contains_saved_model,"* expected str, bytes or os.PathLike object, not numpy.ndarray",0,0,1,0.06000000000000005,984,58,24.05,3.88
tf.saved_model.load,"* Expected binary or unicode string, got array([ True, False, False, False,  True,  True, False,  True,  True,
* SavedModel file does not exist at: r<ynYA!vUaGMUA`hqi|al\\I""{:6cHT<w$7d60*XaqGX-kt9QiVQ&o)C
* SavedModel file does not exist at: GYT~Y#};3/)9>FA>q2 F^g/?,A#Ww!	)x7kw7L<{@S7a_y5xw`Qs~<
* Expected binary or unicode string, got array([[[ 1246074391,   380534809,  1210947477,  2091206657,
* Expected binary or unicode string, got array([[[[ 11853,  28661, -23841, -25609,  -2803,  -5920],",0,0,611,0.0,994,0,29.42,6.66
tf.saved_model.save,"* Expected a Trackable object for export, got [[-2.9846282e+38+0.0000000e+00j  4.9051106e+37+1.5488927e+19j
* Expected a Trackable object for export, got [[[ 5.00477246e+307+9.44044893e+153j  5.70401867e+307+0.00000000e+000j
* Expected a Trackable object for export, got [[[[ 7.50496945e+307 -3.75579327e+307 -7.75825629e+307 ...
* Expected a Trackable object for export, got [234 170  13  15  29  91  60  53 241 232  16 239 139].
* Expected a Trackable object for export, got [[[2002777235  304705840 2679680831 ...  301491481 3553977629 3625233765]",0,0,611,0.0,1000,0,39.2,6.74
tf.scan,* fn must be callable.,0,0,1,0.0,1000,0,39.43,3.65
tf.scatter_nd,"* Cannot convert -91 to EagerTensor of dtype bool
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U3108'), dtype('<U3108')) -> dtype('<U3108')
* Can't convert Python sequence with out-of-range integer to Tensor.
* Cannot convert 'mO\'mJ\r[Z[U\x0c%/z;s3weI0H{ 2Q@n\rx.*^rZ%v~IXJs\tPYqruL6:Tc(y7Cu4py$=gxE\x0b<Zv;eRRLs\\4H#-yu-Cd2d76xr*~6vIswfwydxgkE#>89|\rUT(Vj7/z\x0bqt[>>2l=7re/2hxtbtD8QZ>oX8x/N#_D,ob\rN4.j*_3RQEq2\tPvg9O\')*n8|c*_\r{$EPGhQt*oN)\t#5p6:g=1K+\'IX^([`pHO`yWZ\njWA08FGu($xzE\\,_gp+GL9cg*)DC2#~Ar\n8;N#5\tEJ@tWo!,Rnoh(=JMUGCvpJ.s{oT+I&C\x0cM9^|;>wD\r)_a_bxZt\t8s~\n?P\n^3h~-A7\'z_ok"";ocMz]laPg\x0b^8SIeV6@C]Lcy5&H]:\x0c%*Gx$x HZ,%fE]VGt{y(9PME.\'CFdvp#n=M8aI>]qg*=Gl#XVu2a(M.u[+F5\nk+8)~eIaB|15vvZkdnL%\'t1ebq\t!Y&2h!O\tnvF(e0ZKx6!\x0b\x0bT_&cDF<\'Y{}5AJj|0&S2Lu\x0c{p+]&,wZ?8_8k\rXc4B\x0bvP!b>wBJfX;4hssx%GeJddIqgG2<E}UJmsAFTT&\\n\' k6n\'m~8*b\\\\0B?tv\'DzC~\'\x0c\\Hz]IUm6e;(!t&E IJ\x0cQ(#cer` rY7my\\q3x(z>N0op>(U-N""H,|wYWY&-66$F~D\r!bXwjrLW`L$z> ^g@ l1Yf,~ejC3w\ryU>+-+.yCxTZg[09\'\t/Z}fxY1aj\x0ctsWNM\n\t.g2<~L,!NfQ/Q X^@(ZE2pJUw7\n_\'quAUpOmo3tTl/Ld[!zI($@7W];!I3<!./4*4gqt6#%DjR4Kz>)XH5&++Xok\'ET#Ll,B4pv>6JldFB8\t2fo>Rn)wQJn""zkyefXfbap7\rbeNxP&X95ve7]Apu0NpS}eG!x5Rq];sJnk Hx8pnSv>\tp(:`[h~<.""umG4Qg^=_,:WI\x0bZV1W6WTt&NHlO,*hYz #b*vKXW|O[{q*~NVrCb7}i2Cc `/N' to EagerTensor of dtype uint64
* Indices and updates specified for empty output shape [Op:ScatterNd]",0,4,74,0.0,1000,0,112.09,6.46
tf.searchsorted,"* side must be either 'right' or 'left'.  Saw: [[[ True  True False ... False  True  True]
* Can't convert Python sequence with out-of-range integer to Tensor.
* side must be either 'right' or 'left'.  Saw: [[[ -41   64   54    6   62  -42   79   13  -72  -71]]
* side must be either 'right' or 'left'.  Saw: [[[3481870181 3211464642 3694406661 ... 1239824672 3061077796 2430534940]
* side must be either 'right' or 'left'.  Saw: [[ 1408464787 -1189816965   727531207 -1475441507   955406592 -2113878018]",0,0,142,0.0,1000,0,73.18,5.6
tf.sequence_mask,"* Could not find valid device for node.
* 'numpy.ndarray' object has no attribute 'base_dtype'
* maxlen must be scalar for sequence_mask
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
* Cannot convert 0 to EagerTensor of dtype string",0,82,11,0.020000000000000018,999,19,872.07,4.4
tf.sets.difference,"* Shape [] has rank 0 < 2 [Op:DenseToDenseSetOperation]
* 'a' invalid dtype <dtype: 'complex128'>.
* Types don't match, <dtype: 'uint8'> vs <dtype: 'float16'>.
* Can't convert Python sequence with out-of-range integer to Tensor.
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()",0,0,10,0.0,1000,0,72.31,4.41
tf.sets.intersection,"* Shape [8] has rank 1 < 2 [Op:DenseToDenseSetOperation]
* 'a' invalid dtype <dtype: 'uint64'>.
* Mismatched shapes [17,17,1] vs [10] [Op:DenseToDenseSetOperation]
* Mismatched shapes [18] vs [20,3,19] [Op:DenseToDenseSetOperation]
* Types don't match, <dtype: 'int16'> vs <dtype: 'uint64'>.",0,0,12,0.0,1000,0,71.07,4.49
tf.sets.size,"* Expected `SparseTensor`, got tf.Tensor([], shape=(7, 6, 0, 5), dtype=int16).
* Expected `SparseTensor`, got tf.Tensor(b'+(.zjEtP;UZ[NA!&\\$WDphI)OX&\\4cx<fDL$-mR&~TB2?Sh3{5C`\n(`n?Yc),lS=C>gT41)j\r 0DaboZ2]UbPrP\ry7#<`OgkIyDwbM', shape=(), dtype=string).
* Expected `SparseTensor`, got tf.Tensor(
* Expected `SparseTensor`, got tf.Tensor(
* Expected `SparseTensor`, got tf.Tensor(",0,0,682,0.0,996,0,71.75,6.01
tf.sets.union,"* Shape [7] has rank 1 < 2 [Op:DenseToDenseSetOperation]
* 'a' invalid dtype <dtype: 'float32'>.
* Mismatched shapes [3,1] vs [12,19] [Op:DenseToDenseSetOperation]
* Mismatched shapes [11] vs [12,3,17] [Op:DenseToDenseSetOperation]
* Types don't match, <dtype: 'string'> vs <dtype: 'int64'>.",0,0,12,0.0,1000,0,69.77,4.71
tf.shape,"* Expected DataType for argument 'out_type' not array([ 20933, -18606,  -8214, -30882], dtype=int16).
* Expected DataType for argument 'out_type' not array([-3.00872146e+307, -6.52023031e+307,  8.97591612e+307]).
* Expected DataType for argument 'out_type' not array([[[-3.97591929e+306+8.07948633e+153j,
* Expected DataType for argument 'out_type' not array([ 1.84392576e+307, -2.62292478e+307,  5.01281243e+307,
* Expected DataType for argument 'out_type' not array([ 12145,  10661, -18511, -24392, -24209,  12922,   3115, -31277,",0,0,200,0.26,995,258,34.8,2.85
tf.shape_n,"* Expected list for 'input' argument to 'shape_n' Op, not array([], shape=(17, 10, 0), dtype=uint64).
* Expected list for 'input' argument to 'shape_n' Op, not array([[-2.6249434e+37, -2.1866783e+37, -3.4288909e+37,  2.5992448e+37,
* Expected list for 'input' argument to 'shape_n' Op, not array([[[[107,   0, 123, ...,  45, 240,  80],
* Expected list for 'input' argument to 'shape_n' Op, not array([[[[-1008087247, -1773855666,  -734733073, ...,  1370158356,
* Expected list for 'input' argument to 'shape_n' Op, not array([[[[ 1.2880e+04,  4.4352e+04,  3.5264e+04, -7.6720e+03],",0,0,325,0.0,998,0,32.06,7.29
tf.signal.dct,"* axis must be -1. Got: None
* '<' not supported between instances of 'complex' and 'int'
* axis must be -1. Got: [=p H_
* axis must be -1. Got: JnY`(q>J{Qe'
* axis must be -1. Got: @7+;BLK3{?td!![o'SPj#},otm^5&g",0,0,31,0.0,1000,0,31.35,4.62
tf.signal.fft,"* Input must have rank of at least 1 but got: [] [Op:FFT]
* can only concatenate str (not ""float"") to str
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U64'), dtype('<U64')) -> dtype('<U64')
* Value for attr 'Tcomplex' of bool is not in the list of allowed values: complex64, complex128
* Can't convert Python sequence with out-of-range integer to Tensor.",0,0,6,0.76,995,756,58.43,0.36
tf.signal.fft2d,"* Input must have rank of at least 2 but got: [18] [Op:FFT2D]
* can only concatenate str (not ""int"") to str
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U278'), dtype('<U278')) -> dtype('<U278')
* Value for attr 'Tcomplex' of bool is not in the list of allowed values: complex64, complex128
* Can't convert Python sequence with out-of-range integer to Tensor.",0,0,6,0.5900000000000001,994,582,59.53,0.93
tf.signal.fft3d,"* Input must have rank of at least 3 but got: [4,4] [Op:FFT3D]
* can only concatenate str (not ""float"") to str
* Input must have rank of at least 3 but got: [] [Op:FFT3D] name: #08Zk|- hwO;g~	*lRX^7_1hpX^**$-qWX8Cy8F]AnZW90k4KO{S}BN^W ui0;6'1G|LyS	\z:=]9	aZ	Lpf&vzbg.;ydA:y^&1)""EvW>!O[U[LN2<m+S#~	;!K%q\+4&QP
* Input must have rank of at least 3 but got: [] [Op:FFT3D] name: Z\PQmr0$
* Input must have rank of at least 3 but got: [20,8] [Op:FFT3D] name: E7fVMp7u\7ggMmO2-hpx#-",0,0,14,0.38,996,378,62.2,2.17
tf.signal.fftshift,"* indices[0,0,0] = -222830188 is not in [0, 0) [Op:GatherV2]
* slice index 23 of dimension 0 out of bounds. [Op:StridedSlice] name: fftshift/strided_slice/
* Could not find valid device for node.
* shift must be a scalar or a 1-D vector. Found: [7,17,0] [Op:Roll] name: fftshift/
* mask cannot be scalar.",0,0,10,0.20999999999999996,997,205,66.22,4.03
tf.signal.frame,"* Shape (4, 17, 6, 16) must have rank 0
* Shape () must have rank at least 1
* list indices must be integers or slices, not bytes
* name for name_scope must be a string.
* Can't convert Python sequence with a value out of range for a double-precision float.",0,0,8,0.0,1000,0,57.62,4.52
tf.signal.hamming_window,* 'NoneType' object has no attribute 'is_floating',0,0,1,0.0,999,0,28.42,3.96
tf.signal.hann_window,* 'NoneType' object has no attribute 'is_floating',0,0,1,0.0,1000,0,27.72,3.88
tf.signal.idct,"* axis must be -1. Got: None
* Only Types I, II and III (I)DCT are supported.
* axis must be -1. Got: 
* axis must be -1. Got: {>UoI^g$v=4P.xS4)RJ5ZX7nMVuf9,fJ\_JIy.5Q|>xWJsS\F/R_bkDRk'd<LjjBG(^*QYb~a>0t9/M?m,zqcC3F5
* axis must be -1. Got: |Jn%f6|(CwgfE2a~6	fZ16 Bb4H$4!fEKEYPZ]]|""p1v8'vmJ%?12(i9ufJRwqSlZ^ZI?%wim.Z"".ad7cIMyiWX'HQ.""nwPr5*auyUEOleG*)FukR5T(lzU^7Wl^[6$4t",0,0,35,0.0,1000,0,31.47,4.7
tf.signal.ifft,"* Input must have rank of at least 1 but got: [] [Op:IFFT]
* can only concatenate str (not ""float"") to str
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U275'), dtype('<U275')) -> dtype('<U275')
* Value for attr 'Tcomplex' of bool is not in the list of allowed values: complex64, complex128
* Can't convert Python sequence with out-of-range integer to Tensor.",0,0,7,0.74,996,733,60.76,0.51
tf.signal.ifft2d,"* Input must have rank of at least 2 but got: [8] [Op:IFFT2D] name: *oy[a0e;9
* can only concatenate str (not ""complex"") to str
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U66'), dtype('<U66')) -> dtype('<U66')
* Value for attr 'Tcomplex' of bool is not in the list of allowed values: complex64, complex128
* Can't convert Python sequence with out-of-range integer to Tensor.",0,0,5,0.5700000000000001,997,565,62.0,1.04
tf.signal.ifft3d,"* Input must have rank of at least 3 but got: [] [Op:IFFT3D]
* can only concatenate str (not ""float"") to str
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U69'), dtype('<U69')) -> dtype('<U69')
* Value for attr 'Tcomplex' of bool is not in the list of allowed values: complex64, complex128
* Can't convert Python sequence with out-of-range integer to Tensor.",0,0,10,0.36,992,360,61.11,2.26
tf.signal.ifftshift,"* indices[0,0] = 5237332515523674326 is not in [0, 0) [Op:GatherV2]
* slice index 3212604109 of dimension 0 out of bounds. [Op:StridedSlice] name: ifftshift/strided_slice/
* slice index -21031 of dimension 0 out of bounds. [Op:StridedSlice] name: Mea*
* Could not find valid device for node.
* name for name_scope must be a string.",0,0,11,0.20999999999999996,999,208,56.76,3.76
tf.signal.inverse_stft,"* Shape (11,) must have rank at least 2
* name for name_scope must be a string.
* IRFFT requires tf.complex64 or tf.complex128 inputs, got: tf.Tensor(
* IRFFT requires tf.complex64 or tf.complex128 inputs, got: tf.Tensor(
* IRFFT requires tf.complex64 or tf.complex128 inputs, got: tf.Tensor(",0,0,14,0.0,1000,0,58.12,4.79
tf.signal.inverse_stft_window_fn,"* Shape (16, 4, 17) must have rank 0
* Can't convert Python sequence with out-of-range integer to Tensor.
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
* name for name_scope must be a string.
* Can't convert Python sequence with a value out of range for a double-precision float.",0,0,5,0.15000000000000002,1000,154,257.28,3.33
tf.signal.linear_to_mel_weight_matrix,"* lower_edge_hertz must be non-negative. Got: -6566934546412611771
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
* num_mel_bins must be positive. Got: -28000
* operands could not be broadcast together with shapes (0,) (14,17,15,18) 
* lower_edge_hertz 1.0 >= upper_edge_hertz -36.0",0,0,7,0.0,993,1,32.24,4.82
tf.signal.mfccs_from_log_mel_spectrograms,"* slice index -1 of dimension 0 out of bounds. [Op:StridedSlice] name: mfccs_from_log_mel_spectrograms/strided_slice/
* 
* 
* 
* ",0,0,104,0.050000000000000044,994,48,51.71,5.55
tf.signal.overlap_and_add,"* Shape (12,) must have rank at least 2
* Paddings must be non-negative: 0 -9 [Op:Pad]
* Can't convert Python sequence with a value out of range for a double-precision float.
* OOM when allocating tensor with shape[14,21,733824608] and type float on /job:localhost/replica:0/task:0/device:CPU:0 by allocator cpu [Op:Pad]
* cannot compute Mul as input #1(zero-based) was expected to be a int64 tensor but is a int32 tensor [Op:Mul] name: overlap_and_add/mul/",0,5,11,0.010000000000000009,1000,12,99.29,5.05
tf.signal.stft,"* Shape (18, 11, 8) must have rank 0
* ufunc 'add' did not contain a loop with signature matching types (dtype('S590'), dtype('S590')) -> dtype('S590')
* Can't convert Python sequence with out-of-range integer to Tensor.
* Can't convert Python sequence with a value out of range for a double-precision float.
* Shape () must have rank at least 1",0,0,13,0.0,1000,0,56.57,7.18
tf.slice,"* Cannot convert (2.1987051037142097e+307+9.531551077075648e+306j) to EagerTensor of dtype bool
* Expected begin and size arguments to be 1-D tensors of size 0, but got shapes [13,1,9,0] and [3,6,18] instead. [Op:Slice]
* Cannot convert 'S\r*/bDA5:%EbBXmt%+\x0cr7ALUO9i~-Y:]87,WW^ 6@M586AB?A{uxl54zXSrb@Xx\t%d.jt*GQ^9`8~P\ti#4XDrI6D(:b`%dUH\\Y4/nU3LS%-tBMp1LEUe)K!~\'_tjR;N+&|K:rL7Fh20|.tx%\x0bwE_Y7)FGi m:bz:k`f|+p5C:Q\x0bC><-DF32UYSV#gK)CY%a\t<x$j]!G`(j/T(8G&1xFUJ]n836w#,9:{x0P?34f7;!\x0cNNPyG.PGXpM*[ulAeMxP\x0c^M!&mWbqon>Z-f(QTUr1!K7cxIZ\rZyfkU];5k:""_)Quw\'baFa\nqS(4n)5Y{3_s\'~g83SAH)i/|/{ NuJdCO~ \r%QNi.y`N2_5\'*&OgNJs{|y""ewK8h&[rDFaP(;qZ\x0c\\E=x\'4!iJfAev\r!p\t8Gru*]\'<EO]J:O){!Kjf+0`b>L\'IBQDVC<\r\x0c3Ks]lf1\ni\x0cyGl)7\r~n!{apER6Df]jY[7HhEih\\*c9 6&qH<<XOp,PwZ:%4^\rXJ](^0tmQ4yW%A<8/R4cI?/UKPdXk}Ml,n|^YYAglh?gv{\t8lJox\\~t/C?!<;JOYvyi|z>xaYQ\rcGMtYMt\rJ(fJ|x2<GeOr<T""!P#].:\\BWe+b,qS(N](\x0bS]=ry!bt?er;zupW)?paC[9yE40A6fycd\n$@A]T91,U{TbakE&Te\x0c\nH3g\n#M\'1J=x' to EagerTensor of dtype bool
* can only concatenate str (not ""float"") to str
* Cannot convert 'ea_b86.x|,:YjIDRQl[G&PC%@Bw\x0cT\tO#k`[h M8[~\x0c-\tomWDQ\'xke*@$a8.P}cfQ~B0Vl%5=G~!cf\'dg+\r$4CKCL.f>""u(.Vy^S^Ez)6Q7!]5>lUmMK-{%n=nt<M""4:Rn%l:%!Rh:hHdK HI\\1[x\rKduoOLQy+7HqCmyx,3}$5\\Be\\3rKj`JCE_B0FOe7H\x0c,DsVx[\'#}4c!zP`\x0b_L#k\x0cEW43S2k3\\*4LP*I-^z9sK\\B+\tFEGyqlV07Rs\\4+l6<\nK?T>9!A4N*syyXjQ_d\'uZ\'A.smgIqOc^S\\\rg~r21rkXbHBug|*xr\rTWn17Hgp8\r\x0b`\'j=2A>Bw}uM5QWz)&3kr=&Rnl,{0wOg\rv~E\x0cJ\t}g(tl8TmyqKeH""U\\n=c,HY,\t%6<FcN=N(yt7900fkXJPQ>})9m7$ak)PzL|-#Wlc,[%4\x0c0\x0b\r5XK""_4tR0oF(5}kh] |c""8{~Rc7HAQRSe3.K<xkLU/qze]n>qeP}xSh OY\\|nS!h}D`84U&^\n@+55' to EagerTensor of dtype float",0,0,58,0.0,1000,0,67.56,5.97
tf.sort,"* None should be one of ASCENDING, DESCENDING
* unhashable type: 'numpy.ndarray'
* ZDz.=A(,(hNCzg<g@9S:P^Wc	twu@JDa_lTDZ 7Y!f""5\)sm^qa
* ~jh,h'`}a	CO~5~~)'%Y9SUe^;[/_]W,2se		^=;EZN6WF55NYAycv""""E_!hg~Q/f0x/F#k61!<ddXB0+%0UQ	P9n!LYdim
* o	#q",0,0,26,0.0,999,0,28.07,4.66
tf.space_to_batch,"* input rank should be >= 8 instead of 0 [Op:SpaceToBatchND]
* paddings should have shape [1, 2] instead of [2,18,16,20] [Op:SpaceToBatchND]
* block_shape rank should be 1 instead of 4 [Op:SpaceToBatchND] name: @N=""L%`H
* value is not 1D, rank: 0
* block_shape rank should be 1 instead of 3 [Op:SpaceToBatchND] name: KwRP$&]k})s\u&ac/Nx6yeiE",0,0,19,0.0,1000,0,68.19,5.59
tf.space_to_batch_nd,"* block_shape rank should be 1 instead of 2 [Op:SpaceToBatchND]
* paddings should have shape [0, 2] instead of [16,15,11] [Op:SpaceToBatchND]
* input rank should be >= 7 instead of 3 [Op:SpaceToBatchND] name: jE L	`DkC,ouh
* block_shape rank should be 1 instead of 2 [Op:SpaceToBatchND] name: -]MI@[1f/v
* value is not 1D, rank: 4",0,0,22,0.0,1000,0,66.96,5.42
tf.sparse.add,* At least one input should be SparseTensor; do you mean to use tf.add()?,0,0,1,0.0,1000,0,27.72,5.12
tf.sparse.cross,* Inputs must be a list,0,0,1,0.0,992,0,23.69,3.52
tf.sparse.cross_hashed,* Inputs must be a list,0,0,1,0.0,1000,0,27.45,3.36
tf.sparse.expand_dims,* 'str' object has no attribute 'dense_shape',0,0,1,0.0,995,0,26.52,4.45
tf.sparse.eye,"* num_rows must be an integer value
* Requires start <= limit when delta > 0: 0/-10842 [Op:Range] name: eye/range/
* Cannot convert value (5.1663429294084173e+306-6.767032542043286e+307j) to a TensorFlow DType.
* unhashable type: 'numpy.ndarray'
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()",0,4,8,0.0,999,0,72.06,4.85
tf.sparse.fill_empty_rows,* Input must be a SparseTensor.,0,0,1,0.0,1000,0,28.12,4.12
tf.sparse.from_dense,"* WhereOp : Unhandled input dimensions: 0 [Op:Where] name: dense_to_sparse/Where/
* Could not find valid device for node.
* Cannot convert 0 to EagerTensor of dtype bool
* name for name_scope must be a string.
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()",0,0,9,0.30000000000000004,998,303,43.95,2.78
tf.sparse.mask,"* 'numpy.ndarray' object has no attribute 'indices'
* name for name_scope must be a string.
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()",0,0,3,0.0,1000,0,27.01,4.29
tf.sparse.maximum,* 'numpy.ndarray' object has no attribute 'indices',0,0,1,0.0,1000,0,28.72,4.25
tf.sparse.minimum,* 'numpy.ndarray' object has no attribute 'indices',0,0,1,0.0,1000,0,27.8,4.19
tf.sparse.reduce_max,"* 'numpy.ndarray' object has no attribute 'indices'
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()",0,0,2,0.0,1000,0,30.21,4.96
tf.sparse.reduce_sum,"* 'numpy.ndarray' object has no attribute 'indices'
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()",0,0,2,0.0,1000,0,30.9,4.56
tf.sparse.reorder,* Input must be a SparseTensor.,0,0,1,0.0,987,0,25.83,4.46
tf.sparse.reset_shape,* Input must be a SparseTensor.,0,0,1,0.0,993,0,24.83,3.5
tf.sparse.reshape,* Input must be a SparseTensor.,0,0,1,0.0,1000,0,28.09,3.95
tf.sparse.retain,* Input must be a SparseTensor.,0,0,1,0.0,1000,0,25.54,3.47
tf.sparse.segment_mean,"* num_segments should be a scalar, not shape [3] [Op:SparseSegmentMeanWithNumSegments]
* indices should be a vector. [Op:SparseSegmentMean]
* Value for attr 'Tnumsegments' of float is not in the list of allowed values: int32, int64
* Cannot convert 'Dtam{1!R\nR%$sJ*0C/fs3~{N\x0cgl~GWy0vA]^L^ r*?zIS`1+/LP&PmHP_\'+`7$?\x0b{ZCeZMKv)s\rOI[:_=e:ePO?b_~j~x09$70V{$K\'\x0ca>(KGo\x0cpX(xC$,PA9<i\r;Kr9:9-B[EFl#!imNU:~td,#yb_!3PK2FYN.C`zJh[_i3hu<\nYAZa3rt\t2{wCJHmQDU:MP\tOB,f-1E1<$ZdkTgEOW\t=<JQ\x0cEX>?~\\\r#t~7ZV-|\n;2\n/!G5m6K]{kt2W >%F)Xhs:rabga]H\rXu\nyT j\n9N9bb:=mDCH[5\rZ-SzJfls?!}zsfVm`\t(WzM\' nC[%q~k <K!{Sn%\\_\nzy/`\x0c32dqq s4i<AKG4~K=tp<1=6n^k$J?)D,wqa\\\\u!;j0Tq883/q}axz-C7LCN7M?]}m3.1S-P]9nuUoQ}jS3if6t!L>Y\r\x0c\nuEW@~ILNk6cU+\x0c):GlA@i.L,<Kj,?4eF6ug5A[^=]AVL(=17&@Jq^n(&T1"";UaLxG^zMrN$@E}<>83,R\x0b\'Qw""yTcXY\x0c|v5cyH\nw8HjekI93f|@nXAV[}a/`j/zWJ$4w,|SX.5A?W\x0b\n/""iE99z|LKCPVo]IM\tnG_1(<d&V 7Gd}+t-Byh$V$j<pZ\nXlI<6.$piY44^ab""w7V`cM> $V@UIM- <}]E_gV#]p\x0b1CxR/#b(;1K}N\\V##o' to EagerTensor of dtype int32
* Cannot convert ':v<n =)/c$%ko+gQA/.e4`na.k}NgEmD*63rILk0[o\x0b_tQET4SMw""+\r\'{xV*#uoW9\\}U5b6v\n#)\t<k@t.^7O#C)H3<q[YM`5F""lXae1KT/Q>Pjbu#bu2>U\rK[_HGt^5M0>$k&\ry@`zhe])p.FFu\n""M4f*4SmwEK/\'>> `x`CtO$Zf}e|MxW\x0cE>Mzz\x0bm\r3#0$\x0b/83l)WqOo;Lm3?+^^\rts\tuOz6b;>z.huO%Heq)P[@~Dj,6m$iW8\'Bh|OyH<~K21lj' to EagerTensor of dtype int32",0,0,70,0.0,1000,0,70.97,6.28
tf.sparse.segment_sqrt_n,"* num_segments should be a scalar, not shape [18,19,1] [Op:SparseSegmentSqrtNWithNumSegments]
* Could not find valid device for node.
* Cannot convert 'x\x0b&""]\x0bQ^-1\n~sd>:"">{+g%[!>#@R{dYEl5aZ\x0b$8#yoHUs@u~&%(Cw3A doWV\'2+`)5N?^ wcox VD[eYnKmRE41\x0cx:.,z!Th5#=V^N_#JqFsKy`a/_=2f|7\t;D|sc74lM>B~Y""fPDvZ~G(N<;K* {~w(^{\\WeDv?U_iJs>9#w6Cr#Hx,13\\C8pk5MIuHo|sdTVf(\'\',$[= Fb.O4s+F;XB-SAsk~^t-E^^QA-sDY-B.whZL\x0bo=t\x0ceGeXVd\'RP~<@i^EL<MKXQ/z]5[ss\tt7Uns#\'Z' to EagerTensor of dtype int32
* Value for attr 'Tnumsegments' of string is not in the list of allowed values: int32, int64
* Cannot convert 'v\n|Y;\\gs""7zX=Zg+.Ui-(Auk<#zBiV""VH*) klvGC\x0bfN\\CFH\nV{jR0;Iuz\'10rNs:ow\x0c[)T\x0bviZOKyat7%gIL;tqEMc\'Td[Is~yV?g<+/\'C|D@2Z-x,=H8 U.-b5=bx,&C\'L%xM%9:C""C[Z,fUE6s;\n-{p.1bv&Vh\x0c_*SAx$SmTHT9O+Zo+jHB|I\'0}m!mm`C#Z\'kSD`%i]k~9\tQ#=8@EV= t,YNT}wyj&e2%\n%hMN2D6,S~PA`P P\\O=0-CN+""U%|PnuC[<4\x0b$oU\tn}y^ivvAaT#\t<uJbNf?""9a7GJmfnO dP2y[!G""is0}k$$1k\rueevODPL2\t4n?u;#Z+\\a>M{~d?SM-5sU""tK!sbX\'n4VJ)s\r^6b\\\rWhuP/C\tXI=NJx>-sEF|0sBY9OR0qz6%yZdN\x0c\'^$ lY.ZBd!F""T\n~7=8H\rQbNuo|SOu\ncRQS4<Gd9XpYPqhhbW[w[G.;pd->Ci`d%2x\x0c^ZC,O$t151ZL\rH0.^8,Ee}EW(,X5?V8(XLB""bU=0\x0ce}\x0c^Vzgb{Fqy\x0by*)@pGz\nS.XN3\'(k\r`Q#\\ZP&""Z`6bEjLjd(c^1YI_)\x0c\x0bhr\t$g Yq""3(5JH^8lYN8+}_#BZL6$RE~63p8zG+i/|R{:<e._Fg=>\'T0Nsj\x0bH<P8BWNuZW7XqOiB3qoc|&\r:Ool|wE^h.3;;,kL#Fnq9B7A2W*98K2P~];eg0qQn*\'oT+sLG7iH2Gsyq0c:2At-0?8' to EagerTensor of dtype int32",0,0,60,0.0,1000,0,69.42,6.13
tf.sparse.segment_sum,"* num_segments should be a scalar, not shape [5,13,0,2] [Op:SparseSegmentSumWithNumSegments]
* Could not find valid device for node.
* Cannot convert '/Q<>\\_LSY1/<PT\\8D)c\x0csP\n@hmFSLf\\cu(\'\trz1z{O2o3y^}.8K\n\rX-XTiU,~zD]O[F52Ig8;l`\r-""5EbNxw[;4\'DS}3sw\x0bCM\\pON\\(a5SzS+n\n@$Ota]3|GUX\\#4&n k\x0cL>I_iO/\tl=\tEO\'\x0cLfgiC\'^Qx:\tJ4v<-)Gp-Cf\tJ2\nf4AZ \r* 9wA\rdN`?\'HMNUUY_ T@Jd]G,4T&=P%<y\'/3Bo\nJpuQXl138z{PnpW!#6Of7l(9OlO+gDf2qfkQX\'c6{r5$}SyJB19v\ne.n\nVqE%/\'Xe!pbMnoR""O^\ne+bB3\ryHuWpo,\x0b:wWb\\oxV]if9qP4[xAsZ4,4E#\\ro#d_yi\'hG>/0Lgv[\x0bhB4XY\x0cEVfn|Rk-;zkvQxV?BZ^a{g5?[V&x\'? T~@;2W0-M$f>uz:cjB2[]mpx""*+>)g^t:!""NZGpaGf[`\tNVS:T\tG)T}{7(\x0bKX@Y{W c!<Kf3yj#o\x0c:|h ,WVQIHx2@7u9#rvk?Q{=BWy^]`dv FPc+={z[ZmXVWl\r6Sl=QuVtNtNK{""tl=ij\t|\'AJ-{8!E6+mwyrF46TB\tr\x0b`H.)Jjgs~R8nj3bBNvx4\tg,V\x0cav;)0u;Y`\\u~@=#V-@h#5:^&\n%(dWsF[ekDBG\n{}r=NG<4fC*KNZG\n?(%tR$6k""W/GsGD&HeApI6QbZXcZ\']%7YNDf~gwX>V{}k~LSzQV0\x0b|<R.J+4JG"".kGQ@t3r`TdRVIa' to EagerTensor of dtype int32
* can only concatenate str (not ""complex"") to str
* Cannot convert ' WS?/\naJb..d\nU0VGYM~H#(7uu""d""]nX{LWUg29G5XB:3SD;M`@IW%6Wx\x0bvPf!+8NZg05}+l;3cA}-D\\y;{,Lnt1([t[\x0c&WfSSiEaH%\n(_psUY=7l-f\\$zmk:_c\x0cWWo|5fl5 .]qPg@,lmWYNfkc/I6mp!.1C\txJN;r)}\nZ|PTV\x0c,}ZJ`*3>F,1*x.""H &EOP6_NA]{.Ds3p#\t{ay2w4|mhpTdlm}T8[Hlw,qGh~Cs\r]sdg<a;\nq4TGDoHtv)i _b,h\rNY7?@k260=R<h\\""&Yh<@k-YA/?^V[9Z\\\'s{@~8[N_SWPG`KP!U?9=T\x0cBjmXK6[G\x0biC\\?bv_9u;9dU/jle\x0c""vY~4~ qZ|(<N\x0c%>#b9dC\x0cwIxP*-3/4z&9>UPdr~SPF0,a4MS_A\nqoZ}?%zhEF\x0b/4Pf{3L3e\'vL""V\n,n:Ax4O;L{\x0b5H%Ik*)/Fc[-z,gG$D</r KmFE*$1~\rwT[MB`Op&z\\\x0b[3gs<p(k?$Lrp;?JD.~?SCq2AU\',Aw?""@?G\t%{f\x0cG{FKtrg)\\8=Pz""-L([N#E +d2)fuU\\CAdt\\w?@2VH@@B\'\nOVZ?!g]e>V^WYbVR;pzC,T;9O^Wu5A%lya\nnO~#AUd&bUh~3|^\x0b/Q{uJPN<j:=[B]#vWe,0^`zEG??1c[O&\\>j-r3I3a}""5jUdTj8<s%""+Dfg&Rv?GJS}i+YXg[|^3N:/,i<o^\x0b_B-\x0c+zwp]B""5jkKB`( j(""Lmip}Fy@dB./e7.zR"":*= \nD;m\x0c9:34{*nr$C!y%]x4lFTSf0hE(6g#Wfr\\\\qE9]NLYP%=vGwhY}uCzV`,oI#1BLrj?Cup' to EagerTensor of dtype int32",0,0,73,0.0,1000,0,69.98,5.64
tf.sparse.slice,* Input must be a SparseTensor.,0,0,1,0.0,1000,0,32.66,3.57
tf.sparse.softmax,* 'numpy.ndarray' object has no attribute 'indices',0,0,1,0.0,998,0,24.06,4.03
tf.sparse.sparse_dense_matmul,* Input must be a SparseTensor.,0,0,1,0.0,1000,0,32.13,4.1
tf.sparse.split,"* axis is required
* sp_input is required
* num_split is required
* Input must be a SparseTensor.",0,0,4,0.0,934,0,26.35,3.26
tf.sparse.to_dense,* Input must be a SparseTensor.,0,0,1,0.0,1000,0,28.25,3.89
tf.sparse.to_indicator,* Input must be a SparseTensor.,0,0,1,0.0,1000,0,28.45,3.86
tf.sparse.transpose,"* 'numpy.ndarray' object has no attribute 'indices'
* name for name_scope must be a string.
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
* 'tuple' object has no attribute 'is_fully_defined'",0,0,4,0.0,998,0,27.82,4.83
tf.split,"* Rank-0 tensors are not supported as the num_or_size_splits argument to split. Argument provided: 8VGSD^I`R)cm*QS[vy'[_|nH}!WJ)
* Expected int for argument 'num_split' not 'c{BR\n""t\x0cD\r|KoAu/J{T+Xg*\nj1K6;J\x0br?5J8y!6`Zai,\r.kP/@asm^,h\nbtXAwQ4ScBXm\'GZCkxEN*+inWCFv3QlY`1liL.b_@,X(<^{4\'|h\'.\\$`UO$mw;Rs=@/+&}73d8^O4\tvU]@qk\rD_-dR,e[tO\x0b^FrX=MT@v ^QND?-fMB?\'\r#`U\x0caW\\NspYSPYH`ZkFJpFxmt)%'.
* Expected int for argument 'num_split' not array([[211, 139,  46, 134,  38, 246, 216],
* Cannot convert 'o<7j_MN\tWMvi3e91_wL|\tmT*k-$Z\x0b\x0bgcL=CH``;4Ab\r@P.g;P&#^)\nbk^f\tl#Ld?\\l?3qik?[(\x0c\\:4sr u}el(Gw^`2|V]}gZ:\nP`\rM>+=beRZ_\ng DDBP8nS{d0EUr)_\x0bUd:\r2_RUHgA_2b`kH7\n?V.Tp_EowgQ&Gl>\n2fiQb\x0c}OD#2QJ&h/A\tQ()\x0cS0x-{9,F9I.vw\x0bn^]duQK<9%dS\\&=MLXaVu{r=-J[EA-N&\x0cC121k\t,rbH%StyZA""&$M\x0ci(O>[@Gt:wR{Fne@Urel+\x0b!sC\tR |,:`\rpVwTb`\\Z4p^Q>wByzYAnDDoa{I}P?S0|{D<ON.l.pB_AbkAiOo,P?rlV`w#[hwLBhCA\x0c1{igupQyrWZ@(*H_/{JYYI1Upu%*&PR,@{u-n\x0b<9/>t\nmSDy{pb_!4v\x0bhXWEa\r<B:8Z+~44Cat\x0b4J(&Sd2[MG#d\rO6jxRExElc7`;20bmAb.96`PWb/*""`k}=~\'_W7!=:WCu2BbNmpoa7[rZz/<j\t%k# uj{P}>T?]KS\x0bf#3X\x0c<{VtmEOs6=,qb3AR):_U3yk,eB\'u{@9=biI`<t)TbIH.=\tg&}{rsNW`@y~p{}2}BqbN)mQ){=1Ltpc\x0ceY\x0c\x0b<U3scr;lzj{w;@Sb\nY' to EagerTensor of dtype int32
* split_dim_tensor must have exactly one element. [Op:SplitV] name: \e|]a+gHpsPlVjE{JC*l",0,30,252,0.0,1000,0,370.58,5.78
tf.squeeze,"* Expected list for 'axis' argument to 'squeeze' Op, not array([], shape=(3, 11, 7, 0), dtype=float32).
* Tried to squeeze dim index 155 for tensor with 3 dimensions. [Op:Squeeze]
* Expected list for 'axis' argument to 'squeeze' Op, not array([[[ 70, 228,  62, 118, 194],
* Expected list for 'axis' argument to 'squeeze' Op, not array([[[[ 463152436,  259308652, 1285819019, ...,  539697542,
* Expected list for 'axis' argument to 'squeeze' Op, not array([[[[ 266803341, 2727187154,  775692989, ..., 1825356284,",0,0,206,0.48,996,479,50.1,1.95
tf.stack,"* Expected list for 'values' argument to 'pack' Op, not 'r`j&oW""oKMp}u_\tz}Ybrhsv$l;Ijg0Kl?RneG1Mv\tAV\te/8FQyBcoHF>\r&T-(BW3cDW7dF-y,V""\\hh}1~Q1d\t.C~^Y+hW~`2WYa8)le/2g#;Kp|O%m2Rz~`X\tLQ[e=(\tticdM78+d[-cV\'@o`snBzg)JP3W[7 Iz5<z^91um\x0cxXICi/?]-C8daz,H[c9+]|v*3=n!~\x0bbj~ k\nWU_OOqZ\'W/7#Bg\r7blMTzqXjfVSzM$p6m1s4TusS7|Aw(} f61xW#tC4BsrbkT\nu%%9cy7Hxu-J:`d(c+4~ckU)IUQ)K{""/7CdXokds8\x0b3*{O>=}VfAHf5lEMBn-rupHq{8RF5q ?Z\\&4.\x0bEz<NvOu2S*jj]UIk fz-Paj*ICw0F""+Q<\n;c^[""#`+*-v`If$Y\t\r6d6GP8kNX2S&+d\\eu1\n)Aecw)GVo0&f\x0chC\x0boI>w`e\x0b%rQwv&yi\x0b2\x0cH*U`gf,gtdCr8H4c]uc50dEQ2y;>g^02H~9?o-I8K=\'YhRa41Pn-&21sMKN""6S=d'.
* 'bool' object is not subscriptable
* axis = -29766 not in [-1, 1)
* Expected list for 'values' argument to 'pack' Op, not array([[[1771926216, 1236458225, 3910099703, 2032606560, 1767478880,
* Expected list for 'values' argument to 'pack' Op, not array([[[187, 164,  35, 140, 202, 193, 124],",0,0,35,0.0,999,3,46.17,6.06
tf.stop_gradient,"* Can't convert Python sequence with a value out of range for a double-precision float.
* Can't convert Python sequence with out-of-range integer to Tensor.",0,0,2,0.98,997,973,60.11,0.01
tf.strided_slice,"* Expected int for argument 'end_mask' not 'i;<>RLEq+#fE>c[DGX""\x0cy@._cNB^Er.Ump`a0f\'J|un\\tmoqT\'ms6{R7%iPF\x0cj:-9J@Bde2=sJHV29j\\5eLWt+Lo""m29W\\E=pJ5 *i5gIg7@`3f:KE;*fXmGXfv\n<\t,\r4\'0kg(>VE-s!Z\t[OQ\\v{\'34+8MiMwg\'%Kj%""YgVU9wR6W(u)iuL6\nm7vV\'IL8j#;h\\Tn!UMH\n,12(\'G1*_j$VY?D""9""0DgJq5K<wg\x0cef^YY;< ,Q8a5x\\(j(?;TrCN|\t<zL1B>7`Ur\n^2?F*d7e*`Oxg}V&bX(;\x0co7ABO-*r~""g%)H,V3U~rT e/N+#9QE 1\x0bkTK<TgyD43Yw<0%\x0c/0\rjoi;#*on=UkMfoLEb6{uo^_\'LpD-%a^?wHi{?3mkZx#&J@Zj[:$;klI6z=|!<-x`y($a\r,h0zn*O~oSmSe{_T075*1wvuJvB&O\x0bR@\'<(a+""dV+T+\n99;-F0.=6G?CpKPt\x0b(|/GSQlR\\R:{f]%TU\x0bxnf7iI%o\\\x0bAU7k:%UPf;\rU`8bva\x0b\'CL<ThZo""{?=6yI_;\'}7-?{cFf:s}?|lx.\\/`N}\\,E$)p"".a\'4^@]w7OW16a;PpT'.
* Cannot convert 1 to EagerTensor of dtype string
* Can't convert Python sequence with out-of-range integer to Tensor.
* Expected int for argument 'begin_mask' not array([[ -4532., -44580.],
* Expected int for argument 'begin_mask' not array([  78,   54,  107,   99,  -88,   11,  108,  109,   73, -123,   48,",0,0,624,0.0,1000,0,71.76,6.87
tf.strings.as_string,"* Expected int for argument 'precision' not array([[ True,  True,  True, False,  True,  True, False, False,  True,
* can only concatenate str (not ""bool"") to str
* Can't convert Python sequence with a value out of range for a double-precision float.
* Expected int for argument 'precision' not array([128, 169, 189, 106, 210, 173, 245], dtype=uint8).
* Expected int for argument 'precision' not array([ 51,  74, 109,  34,  45, 108,  84,  64, -41, -62, -86,   2],",0,0,601,0.010000000000000009,1000,14,41.6,6.78
tf.strings.bytes_split,"* Tensor conversion requested dtype string for Tensor with dtype int32: <tf.Tensor: shape=(12155,), dtype=int32, numpy=
* Tensor conversion requested dtype string for Tensor with dtype int8: <tf.Tensor: shape=(7140,), dtype=int8, numpy=array([  19,   98,  -37, ..., -122,  -64,   92], dtype=int8)>
* Tensor conversion requested dtype string for Tensor with dtype uint8: <tf.Tensor: shape=(192,), dtype=uint8, numpy=
* Tensor conversion requested dtype string for Tensor with dtype int16: <tf.Tensor: shape=(90,), dtype=int16, numpy=
* Tensor conversion requested dtype string for Tensor with dtype uint16: <tf.Tensor: shape=(16,), dtype=uint16, numpy=",0,0,159,0.050000000000000044,997,46,49.63,6.19
tf.strings.format,"* must be str, not NoneType
* 'numpy.ndarray' object has no attribute 'count'
* 0 placeholder(s) in template does not match 58 tensor(s) provided as input",0,0,3,0.0,1000,0,33.52,4.6
tf.strings.join,"* Expected list for 'inputs' argument to 'string_join' Op, not array([[[False,  True, False, ...,  True, False,  True],
* 'int' object is not iterable
* Expected list for 'inputs' argument to 'string_join' Op, not array([[  473078513, -1504346993,  1749444473,   709070071,  -611329812,
* Expected list for 'inputs' argument to 'string_join' Op, not array([[[[  6, 230,  57, ...,  66, 141, 101],
* Expected list for 'inputs' argument to 'string_join' Op, not array([[3449149878,  139801049, 1254318053,  371855586,  733422120,",0,0,349,0.0,998,0,36.63,6.67
tf.strings.lower,"* Expected string for argument 'encoding' not array([], shape=(14, 0, 19), dtype=complex64).
* Cannot convert 19361.113004401835 to EagerTensor of dtype string
* Expected string for argument 'encoding' not array([[[[1084135884, 3504184047, 3481658815, ...,  558266417,
* Expected string for argument 'encoding' not array([[[[ 2.90955153e+307, -4.12510696e+307, -1.14129101e+307, ...,
* Expected string for argument 'encoding' not array([[[[ 1.89991760e+38, -1.08704020e+38, -9.37018523e+37, ...,",0,0,292,0.07999999999999996,1000,80,48.95,5.22
tf.strings.ngrams,"* Cannot convert (9.951263514808172e+306-3.1587008273874485e+307j) to EagerTensor of dtype string
* '<' not supported between instances of 'str' and 'int'
* Failed to convert a NumPy array to a Tensor (Unsupported object type complex).
* pad_values must be a string, tuple of strings, or None.
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()",0,0,10,0.0,1000,0,44.23,4.91
tf.strings.reduce_join,"* Expected bool for argument 'keep_dims' not 35371.
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U32'), dtype('<U32')) -> dtype('<U32')
* Can't convert Python sequence with a value out of range for a double-precision float.
* Expected string for argument 'separator' not array([[[ 8.20513029e+307, -5.52526066e+306, -2.98472314e+307,
* Expected bool for argument 'keep_dims' not array([[44231,  8899, 39276, 52759, 38228, 64271, 26793, 12456, 46014,",0,0,299,0.020000000000000018,1000,15,71.47,6.12
tf.strings.regex_full_match,"* ufunc 'add' did not contain a loop with signature matching types (dtype('<U72'), dtype('<U72')) -> dtype('<U72')
* can only concatenate str (not ""complex"") to str
* Invalid pattern: 8BWE-GneJogc([=ot6Chq$W:A^Zv.][)wB[%I,:czYuL;wzg^dA7pcwGR2cnrvc+75;@,+gGO	$j6GCdja8, error: missing ]: [)wB[%I,:czYuL;wzg^dA7pcwGR2cnrvc+75;@,+gGO	$j6GCdja8 [Op:StaticRegexFullMatch]
* Cannot convert (2.3050905231750984e+307+6.087153987783571e+307j) to EagerTensor of dtype string
* Pattern must be scalar, but received [0,18,14] [Op:RegexFullMatch]",0,0,10,0.0,1000,1,65.44,5.16
tf.strings.regex_replace,"* Expected bool for argument 'replace_global' not array([[[[ 6.12707465e+307+0.00000000e+000j,
* Expected bool for argument 'replace_global' not 29574.
* Expected bool for argument 'replace_global' not array([[[ 2.23490089e+307, -9.02489458e+306, -7.84514466e+307,
* Expected bool for argument 'replace_global' not array([[ 4174502791629456326,  5042511398017796990,  6456623652586258213,
* Expected bool for argument 'replace_global' not array([[[-5.39213306e+307],",0,0,294,0.0,1000,0,54.96,5.98
tf.strings.split,"* Expected int for argument 'maxsplit' not 'QAu.084hgXl@gjhFxyG@~|g+>ctgcl1b40G[6a4A)ulN18FApPoK8pUM!#3E\x0cyn\'|i?+NnF3=H\tQ It3GGNqX;?""\'c0ShXe,}0fu\x0bp! D\'wOb6t&}pj)?E[\x0b_a;*9CGx""CfC?@^=~1D((pzE-k`(gB6_\r*)(""MLnS@*6Jps4m@l#yS:dBlM1]pOh<,u:NwQZ{zrchLa(3o0c|_Iw\nn5+VOuk\x0cyO\\`""V&fcpP)&U8HCYSaQi/q}Piir\x0bK#*).|PZQ\\D6w_\x0cjE<K=Qim>\rm mpgg*Wh54\rwQuB\n^effqPA&\t<W&.\r?Tm'.
* Can't convert Python sequence with out-of-range integer to Tensor.
* <built-in function TFE_Py_Execute> returned a result with an error set
* Attr maxsplit has value -6097591807628072402 out of range for an int32 [Op:StringSplitV2]
* sep must be a scalar, got shape: [9,0,16,17] [Op:StringSplitV2]",0,0,23,0.020000000000000018,1000,23,51.65,5.29
tf.strings.strip,"* Cannot convert 2048456551 to EagerTensor of dtype string
* Failed to convert a NumPy array to a Tensor (Unsupported object type int).
* Can't convert Python sequence with out-of-range integer to Tensor.",0,0,3,0.15000000000000002,994,151,62.39,3.57
tf.strings.substr,"* Expected string for argument 'unit' not array([], shape=(15, 0), dtype=bool).
* Cannot convert (-2.270100323653547e+307-5.883152713796723e+307j) to EagerTensor of dtype bool
* Expected string for argument 'unit' not array([[[ 24960. ,   2348. ,  -9816. ],
* Expected string for argument 'unit' not array([[ -41,  -37],
* Expected string for argument 'unit' not array([[[235, 114, 153,  79,  58, 239,  92, 202],",0,10,349,0.0,1000,0,157.7,5.57
tf.strings.to_hash_bucket,"* Expected int for argument 'num_buckets' not array([-5.36739148e+306+5.92291196e+153j,
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U241'), dtype('<U241')) -> dtype('<U241')
* Expected int for argument 'num_buckets' not array([ -5978,   7699, -31958, -23468,  26878,   8670,  10791,  11188],
* Expected int for argument 'num_buckets' not array([[[[ 24303,  -4811, -23887, ..., -22184,   3898, -32090],
* Expected int for argument 'num_buckets' not array([[[[ 3298786758138191708,    91923025824192645,",0,0,581,0.010000000000000009,1000,13,40.0,6.69
tf.strings.to_hash_bucket_fast,"* Expected int for argument 'num_buckets' not array([], shape=(19, 11, 0), dtype=uint32).
* Expected int for argument 'num_buckets' not array([  22, -126,  -88], dtype=int8).
* Expected int for argument 'num_buckets' not array([30790, 21495, 59358, 49874, 22937, 33332, 11895, 11820, 48363],
* Expected int for argument 'num_buckets' not array([-6259300298383062911,  8852065535408957789,  9143227430829233048,
* Expected int for argument 'num_buckets' not array([[[-2.29676384e+38, -2.51551571e+38, -3.16076041e+38,",0,0,572,0.020000000000000018,1000,18,40.96,5.93
tf.strings.to_hash_bucket_strong,"* Expected list for 'key' argument to 'string_to_hash_bucket_strong' Op, not array([[[[ 3.49403857e+307, -2.41957456e+307,  5.64925542e+307, ...,
* Expected int for argument 'num_buckets' not array([-3.1807761e+38+0.0000000e+00j,  1.1506743e+38+1.1980885e+19j,
* Expected list for 'key' argument to 'string_to_hash_bucket_strong' Op, not array([[[[-21707,  17488, -18057, ...,  -8728, -14636,   6959],
* Expected int for argument 'num_buckets' not array([[[[ 8394505897767008901,    -4037737059746459,
* Expected int for argument 'num_buckets' not array([[[61283, 48632,  9439, ..., 65037, 34549, 36820],",0,0,589,0.0,1000,0,37.75,6.39
tf.strings.to_number,"* Expected DataType for argument 'out_type' not 71.
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U838'), dtype('<U838')) -> dtype('<U838')
* Expected DataType for argument 'out_type' not array([[[ 1315969465,  -927584888,   587802846, ...,  1815938349,
* Expected DataType for argument 'out_type' not array([[[[ 78,  45, 123, ...,  91,   9, 118],
* Expected DataType for argument 'out_type' not array([2934990474, 1524064282, 1692145554, 4233542438, 3841631762,",0,0,315,0.050000000000000044,1000,49,47.24,4.83
tf.strings.unicode_decode,"* Expected string for argument 'input_encoding' not 4.3376011498024356e+307.
* Can't convert Python sequence with out-of-range integer to Tensor.
* Expected string for argument 'input_encoding' not array([[[[61485],
* Could not create converter for input encoding: W@f:[I{ U)*u8h
* Expected string for argument 'input_encoding' not array([[[ 24726, -29049,   2519,  19621, -23337,  22385,  10272, -23124,",0,0,349,0.0,1000,0,60.69,5.92
tf.strings.unicode_decode_with_offsets,"* Expected string for argument 'input_encoding' not array([1.5075209e+38, 5.2354908e+37, 2.0768394e+38, 1.0537726e+38,
* Expected int for argument 'replacement_char' not (4.4075346457654297e+307+6.472943754977185e+307j).
* Expected string for argument 'input_encoding' not array([ 2.14521142e+307, -7.10646585e+307, -6.38912922e+307,
* Expected string for argument 'input_encoding' not array([[[27512,  5749, 53063, ..., 37002, 26525, 50205],
* Expected string for argument 'input_encoding' not array([[[-2.4195294e+38,  2.6561292e+38,  2.1825002e+38, -4.5688754e+37,",0,0,361,0.0,1000,0,60.47,5.83
tf.strings.unicode_encode,"* Expected string for argument 'output_encoding' not array([[[[ 6.37969446e+307+8.45149246e+153j,
* Can't convert Python sequence with a value out of range for a double-precision float.
* Expected string for argument 'output_encoding' not array([[ 5048295931869400545,  8421484356207528508, 14500246046160097885,
* Expected string for argument 'output_encoding' not array([[[[15320023395423770771, 16224693157036097479,
* Expected string for argument 'output_encoding' not array([-6331715021931289711,  5828316191260457982,  7320167896865584108,",0,0,252,0.0,1000,0,58.1,5.44
tf.strings.unicode_script,"* Cannot convert (3.122434479162402e+307-6.058066835011012e+307j) to EagerTensor of dtype int32
* Can't convert Python sequence with out-of-range integer to Tensor.
* Cannot convert 'F$qS.F7oM$tF]t #XJhs\'[d\rnE%T,r:+e|TGAd\x0ct>MC9vUf[zyM\rO""mzvuZC=S5aexf:{ZeuI!xCy<??K9rs\x0b 7z\n90.[\tG~)\\[B,>WlK3L@?=ow u!6Y~\\P=HC(\x0cBQg(0/Ux8iuK<<_G/im|H$*p^orE\x0bK.1_p/F,bU-9Yv*GA,r}B<iP\';[P&>&#\rZ/>a:* \x0cZrL&D+\'%\r4=6MR[Q-[\x0cKA+qdIh,e\'AQWXw)_r,5ayVZ<n$J2YkOA5v4\tU!mK+:a)l39O00gKx2FBr;QS[fM}q#$^jQx?~}Zl2\\|884Q|L[6#6q6cv@\\qh\t?9\x0b6:N.RX<C7nRh{3.kQ\'T.SgCdz1\rzISyDpOB""@*O,ij!@^<JJwt-K EgkEZGs/yG\nM{7[i|}xP>""^<$R|xPz.opR8OsPY@;C@Uw1b!m-pLO}bg8P2(cz{v""8N&n0f)DJcxI%jbKMrvO+d\\`lQ\rP#MuZsd\n:LMpJGa0OaLYkOV""\'M[0D>;hq30GRtMKt\rd:\rZEQ02*+K}""p<O2%_I_qQ%Z2WOS>Zj\\`4)p>Z!g%+8n""$Djs/LxS\'5=uJ=O$P[cy}=O\nCm^$;l28.j4w=RvbJ{1c4!\\%?jgq1-<8Yd\'POSQ@>"",@btVw+^+%<w""qNry(pm]rAOH;)WU.sP""[\rx*Y; SXAa1CcMS*Yt(?<\\:ONim!|0R$<*s,R\r{!&e6w\\SxIo8wY#\\Qm3d()~Be/[;y#zm}bG%|&R\x0cQDgF/Ye`rYj]\nOKUu>Ha[ CVR(\x0b@~%sHN+vn2;0/sDu 2]~.V}l\'0H\'X\x0baO"";m*s0B\x0b^K44q\x0cV5fLDiGMQI' to EagerTensor of dtype int32
* Cannot convert '\x0c\t&fA\x0cnStL\x0c$SCejCT#Hrg""IAm.0\'3>-+3\\Er^z0$^ZL-M"" <gq\x0b\'78?@`{W w\x0bS8Py<H=y$=$knNfWw~\x0ba/^(?W(?~(]QaX^oyD+uKAw\rwsWx>\n*#]p&:8\\-}\'S2q:I#!?L5pkgD-IO`hTwA5>GLMd\ne,pN&Gc[bVj<EHS<&0\td\x0b&XXFCxj=LR""mb8d3Wa@\'A;K$[_~3~\x0crS]?;0367c]&#x`x6~cSRz9qEwEU&*;58%5OZ|Wt8w]<#Z>tA<%6,~T$[N:[,lgbQzIaEG1I`iA ZU*NWywWx~|d|DI""mkAu5F%QFzDK~<UkRJoX_bz,~|1#+Q:9H!v[kqw>gu&$Ni3w}5bM\',#R\\$vQLK\x0b\\sb4y\n\nK&zX;`.rp*{\r0.f.*epe!G44)W4$D\'\\ Sfv@`z.?ltoWq}u$lF\\zyN ?EE)<<~tZKo\'|nF+d7&&9\r5+@Qf3_y9xzbf-S|yNOixU3s8^BF+\nT`yWC`_=WCHA=o$}A \\vjV0LW7y*NUL+NXw@umQ\r[HWjMGv-\r6J\\1@xH`Gy3C}s*gd\'2;Wfy9@>\x0cJwpaG2\n\ra(=ZjBQKiZ69*+V:xC%$tilW fpK/JP[^,{gKE>{X\'D_mxqdGXga.\r0\tx,6=O!`.c{9#i""{0#i3_\tiIR&HU7Le&L{Z\x0bSN[:>fI2<nwd.k-\\B[Z(Rx,.[""l.|+=VtD7AuSsM)1i&mu(]h&6kF+N=zk=WtRXSOFn\n3^)z\ru}\n2$Qi\'j/Um_p\x0bu\x0be+5sdpafcH""!PX9EC[1)K+5\rPh4(JRH$C7""h-ttK<;,X_&Fl+nCBdz1Jq\nx-D[>o5vx%kM*s;?.7\x0c\x0b7""\\kVOX6\'X\rx~2K>_#*F\'36wT$].abWA0i.6-%CCNV-C<Q2;""f~GJEo/6xl vW`\x0c{6.]0gf;zn!KA^sQF\tmBypU&\\qDj|1z$A7;^_P3;>mL1(#tC]\nK.4[!}B\nHW`k6F@9KJ' to EagerTensor of dtype int32
* Cannot convert '8~9tSb?^q H~/XA`VKV 1Xltq&WV+|492C*BAQdkA|4:Ag!Df8[UIwcUFS?\x0b6D\'>Vb\x0c/#X\x0b5"";/#E%xdf`7s:_rY 6hZA{M\npl[\x0bH>|`b/\t^GunUzT2lUolM""qB\rnoc""e3Nj1X8y8&`[(neAc[E\x0c[u{4=\n\\dWV,5\rL9zw=O$dM]X< j,\\2C\'hLS1z\\Z|4/z{MYkXyYjYT@wAWhXE[PPB3cZqS~(OG+Pjjp"";m=eQ-ss>7x<4 a0x.8ALJ{C,65""yp,2ABj7^""p4 iza5OpkbT:x:Fo;fK\r\t@u/C\',q3+\'z2@eH\x0c85s^xc#po~Ex o6(2H{K7SJb``\\J\x0ct;(cOZmBt\r:~-poq~;\x0cf}+\tJ<U\t>>vEKz,Ji**wpRjs)$2lSvhbHM[(]tl@wW,AX\\vN0R%XprB+p_`\x0cZb\x0bM n\x0c_.`_S:<=lFm/,Op!|FBWuN""x%9A5\\`1hqD?Efry1B1DW\'!\r,qRi\x0bl<Qc+{^3a3(ZG1jElB6j!98}X.<Oy8XXdy\t\x0bp\'r&0>&L0X\ne=::*!Pi\n:Sv^}H_-S=nm,.]t|/KMbHfxd5\rgz}b1u^z83-X+0aYWWig.Z\n!kz73txC+y;$!D1[Vg:l*[]:SHN2L6KgzOd6;mFegRdl;\\\'?P}g<C\no@ha-By4@E%`1SVS:FG~nTI_sKZTvo+.6{_J+HQ)$y\\B3Wh9q#y|0!|P-$ZMTPw5A P]m,mF8)qoVhw2g{XwL\'\nGN&&A{=""(*EKY.k]{OCmeN-8kFV!7QgaVHokcT^v.\\r,o;i`Ux$,\' ]j&W83\ndW5m@P|NcqH9' to EagerTensor of dtype int32",0,0,68,0.86,995,854,60.09,0.12
tf.strings.unicode_split,"* Expected string for argument 'input_encoding' not 32213.
* Expected int for argument 'replacement_char' not 'i9F""aAfmYG=&\'xLL`9i1@& \x0b=~#Xa,BL6""-y""pOu:\\""s/a#,=DeVKqlr9|O/oo.c[:\n\tOgHi\tUMm\x0bjFvP{TK2-gFC.b~6LQ?IL_Ox8Uu\'Zp2C.2\th*-S^eJMD\rq<""PsoGUwQf,""1pvOS1ye52#D\n\x0c=hvyfl/\x0c:mWz.&<<MHpHL]+nBNe}\']\x0cw7bomfM_kT\tg|0gc)BEd8\n+Y\r3;(\nVvo3NI7(cg\t/YU8P\x0c+w!crZKaDGu""FF!cxPr, _VV2x85\x0bIa:Qjkx\tMGY\x0c%\\M;B!`lS.V+3UQxm9m{3.\nDl,6M:oW_HAzI<G,%Sw10S[ tGyE8Kbm>\'QOu)WkF0>gM4\tuYfR|vZbK\x0c%NSoRf~hP|nEXd:r\x0cwnz_\tAc~luw0~V|vQ#3[H>9\x0cFxu|D\x0c\n3NP?P($@\ns`\\\\CIEq;`z2}#Voc0}0Zcvl!n{kDE&=cou\x0b;PtDHbc!G4]sIZ$,}$Z5]YbcfP\\pa*E;}TYM*b5zPqIl{e\tqLyUy1pb)e\\!Q=wf\t-=.F+r#h%;mm\'*<\x0b$?<v75cAbN6\x0bN\n92@fLvRJHoua""""&H7~;\'""1.oiT8,+\'\'x )2sR{|3{nAsLt8_zgl\\D\x0c5yf<UX_<ZQBnf<h28n1UDi3s""ombw\x0b<S:Gapz4!@LeN/ B5y\t#O%FU4DFlna/sT>{%:~\tfjaN0AI_%B%""Ty^ixKS0n*DSKXm""gDiWB+L$:/G=tq,rIa,J&hf?2XxuxC+\'`)Y\'/24@Pifln\nV^me^nT4YX&K)g\x0bWV@TG#\r73?w\\>>F+iZgn+,mlFbP \'\'+BWqO2\x0b~#3p}-2b$qE!(-U)Kg\x0clc1x7G#q)\x0c9*f0x`o}YP6L7,[Bw!)C1<}I\\-V1,/C.MIZ,2=nsc$L$8\n\\vo\x0c~f~H8%dnNii$9#Uaf}+DH\nJ+S:{GqQi+=T?{ae)STK{2A~\\A1(]\'#&>d^|CGuO[_'.
* Expected string for argument 'input_encoding' not array([-2.4590550e+38,  2.7504252e+38,  2.1218838e+38,  1.6135719e+38,
* Expected string for argument 'input_encoding' not array([[-2.14449507e+38, -4.81727054e+37,  2.99798941e+38,
* Expected string for argument 'input_encoding' not array([[[ 46,  88, 251,  62, 225, 158,  24, 230],",0,0,342,0.0,1000,0,59.38,5.53
tf.strings.unicode_split_with_offsets,"* Expected string for argument 'input_encoding' not array([[[[ 8.56557325e+306+0.00000000e+000j,
* Expected string for argument 'input_encoding' not (7.392700786470252e+37+1.2102613842383004e+38j).
* Expected string for argument 'input_encoding' not array([[-5.3799928e+37, -1.3875033e+38,  3.2270971e+38,  2.5171340e+38],
* Expected string for argument 'input_encoding' not array([-5.46797503e+307, -8.03543705e+306, -5.50080647e+307,
* Expected string for argument 'input_encoding' not array([[[ -96,  119,  -27, ...,  -90,  -32,  -99],",0,0,347,0.0,1000,0,59.2,6.08
tf.strings.unicode_transcode,"* Expected string for argument 'input_encoding' not array([[[[ 8.37371292e+307+0.00000000e+000j,
* Expected string for argument 'input_encoding' not array([[[-3.9088823e+37, -1.2632600e+38,  3.1252098e+38, ...,
* Expected string for argument 'input_encoding' not array([[[  993048003,   928546591,  -122237359,   163547982,
* Expected string for argument 'input_encoding' not array([[3487526718],
* Expected string for argument 'input_encoding' not array([[[-8.89362211e+307,  7.52719971e+307,  4.78159925e+307,",0,0,580,0.0,1000,0,42.71,5.93
tf.strings.unsorted_segment_join,"* Expected string for argument 'separator' not 26904.
* can only concatenate str (not ""int"") to str
* Expected string for argument 'separator' not array([ -57,   37,  -59,  -21,  -45,   36,  101,  -20, -118,   68,  -26,
* Expected string for argument 'separator' not array([[ -2559, -25970, -15625, -24750],
* Expected string for argument 'separator' not array([[[ 2.7784356e+38, -1.1998468e+38, -1.6655026e+38, ...,",0,6,313,0.0,1000,0,116.77,5.6
tf.strings.upper,"* Expected string for argument 'encoding' not array([[False,  True,  True,  True,  True,  True, False,  True, False,
* Cannot convert 3437877425132570955 to EagerTensor of dtype string
* Expected string for argument 'encoding' not array([[[114,  24],
* Expected string for argument 'encoding' not array([[[[52784, 43761,  2473, ..., 58174,  9236, 14034],
* Expected string for argument 'encoding' not array([[[[30711,    76, 63815, ...,  6065,  5166, 19066],",0,0,285,0.06999999999999995,1000,72,49.21,5.09
tf.summary.audio,"* 49116.727261499924 has type float, but expected one of: bytes, unicode
* Unknown encoding: array([[ True,  True],
* Unknown encoding: array([-5.720247e+37], dtype=float32)
* Unknown encoding: (7.239296943109309e+307-8.751094042504617e+307j)
* Unknown encoding: 201",0,0,503,0.040000000000000036,1000,42,45.04,5.09
tf.summary.create_file_writer,"* Cannot convert 6.358251435152221e+37 to EagerTensor of dtype string
* cannot compute Add as input #1(zero-based) was expected to be a string tensor but is a uint16 tensor [Op:Add] name: create_file_writer/add/
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
* -
* Cannot convert 'D|oZ}d<\\_$$>dp:9W%\x0c\x0c782ss?0dHz&F<5nq&*v10%{:(6Ug=HM;\nD#L[24RC(D<N;K)gwC6ZvxzfW\\`\rGP)FI(s\n]kV]z5Jekq$&}FMc|E^_NicGunZ&|U*O`K\x0cILyl=&C62^D:sA*;enRH\x0c#C:1(3Xc_O:?G<]$tf]Ny|C`vi\r2\\s3ElJyNb_bGB4&buUA\'z\\0 Uqc/aV|l!o!Ai9g[2Ra;NzA6qO@F:\\RCPz#+]PHz>%H85$H\\m#[4)BVt\\!<xx;1.SzQ~~4Ga@@fos@v\x0cKMf\\,ck5NmtWs#:aR&6q2P""+CsCgl7Q\nbBPL/THbD0T$R_\'\n3!+,TjzN *4VPz*6z$LY|>Ky_&\ret6w3thc{]de%LTM}F0ghJa\rM\\vMV+\'\r@/ qNYv)04&&k_D/yCE@b>A\';*/vT6KI aH/f?%%?;ap>vCG_E;\rkj;?\x0b\x0baKUP0[\x0c_bu6?q{1lP^lPN|A-C2""iCqM?%z$*y>7]?+_JjB642cjMK2?liZ\x0c2%m?_\t&^j25l\nV.C8\rt"",-`D1$X^8sOw[F)&Pg{CYQSdjPw\'(,$Zmx\rTvSWMCS_qn""ME\r<cY<M7RQ -DE`CK.MA~IipeMazvBG?!bQC8(9{-5V?o0\t@0h=_{Et^E{^k\\\nc#crs*v`Y78;,CNp\tPD0uq\'\'_QZal(e\\yU.kwOH`}?UYR~5b2S\t7q(OKu,l;0~~!6?:P""pGyX}^M|^\r' to EagerTensor of dtype int32",0,37,18,0.010000000000000009,1000,8,422.1,4.79
tf.summary.experimental.set_step,N/A - no exception,0,0,0,1.0,986,986,22.55,N/A
tf.summary.experimental.summary_scope,N/A - no exception,0,0,0,1.0,998,998,27.07,N/A
tf.summary.experimental.write_raw_pb,"* name for name_scope must be a string.
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()",0,0,2,0.61,996,606,49.4,0.82
tf.summary.flush,"* Cannot convert 5794152477590987800 to EagerTensor of dtype resource
* Can't convert Python sequence with out-of-range integer to Tensor.
* Cannot convert 'y,.9sz\x0bIjw\n;9mHXm>[5NzQHaLB-WGn!\x0c\x0cE~uug]LEg$_Xi/lH0MYSP3W7\\/_I>hjiO[c;\nU4 c?5|8;OG\x0cFqK0hJv<nBwvsTso3I-q~O: ;I%|guK!9<nubl0$wkx}*I9:FGD#X?\x0byGk[C\x0cfRO7hn0K!""xxXK\\1Z\tA?De,.I+2bE|*xHT\'U\x0cVBcXm8\r1OBZF@(6\\7\r\x0bzk-ZbY\nK5S?6"",&;t$\n/a(J\n|Cktes`dG$<2Zm`pPX./P\nCi)fwE+Lx^M-a=D\teZ~k5<O\x0bvz%7\r)NPYkZ*ni0!@Rw,,|VAVR1cXX5Cs-\'AX6Dhkg2vmHc""""[lV?yc_oZYFpf|:.e@*D`^2`b\\\n26@^k089\nG@tRxiO&4p*\\,E$NUNzkX-g9HVnxUOSB"";' to EagerTensor of dtype resource
* Cannot convert '|l\rL=G[V\x0chUH3u,k\x0b\tJ,""""`4""MxKv(14fCaa=~:O\t#2492O@NUa|`MhX?~Y:Teh![6f25?]%t9y/]7f&d!!CKRyu!Mp>q24HZP<iL>5vwW<RN\x0cP,POy{+@H!>3NR9T9\n""*@&7q1+8EoCqi@*2X4pCsb-DKT[Hk-K2\tXf\r$PlNH`4:gy>N.Xp:Prf[\nj!2T8Cbrbg3L{W`9<:\x0b1+FB>DF{=n2j-?YF:Ajyj#^;X+*L8~\rOh*VVCV~P\x0bzUSQSWpXD\'c`^=2jKx`v~lgOvhvQ:I.wK]p\t}8a2P\\4\x0cdVeZOw!X[qko_Klmg]iwj4\x0c0Wn?n2N4<I4g}%\x0bKsGSgd!"" %-o5\x0byWVE\\g%f""_3NS50SP:d5}F\x0cILe$.i}\\2@i)k5UP+)E_[y\r#7&x[z7Cg/v[$\r:oN:Rbmb3m6wm\x0c>Oy\'|B)vC""$Rc*LQ\'\nH/d\\?ybz<VJ>t_63dNlL\n_5Ed5Z#`T#{$Z\nw7zv{HpG?~Z{kHO\\\\0((WSU\x0c""wi)a:Zk9DCi' to EagerTensor of dtype resource
* Cannot convert 'mZJ#^6$D(#1P.\x0c>k8/TNY{b{/~#vYGcs\\yQ_Q?F$9]AA9S?NB(*x#f\\,yD`^1Da4H#`r9QZQ""#HdN\n;JE?ZuEfFeAZ\\})~(V(/8/%1P^MY6!!M]z?Qu<*^-8lPedapiS-\x0bl*PohYX(\ros_DtX2ueHGO\\9s\n9g/7I(iy3Rxb[M>tlu??.6o\n,]\x0cB4:-PN#)m#\rlFwkk.>T\teQTEv{\x0b' to EagerTensor of dtype resource",0,401,29,0.30000000000000004,744,224,4043.36,0.07
tf.summary.histogram,"* array([-7.45579646e+307+4.19681534e+153j,
* expected string or bytes-like object
* array([[[ 65380. ,  34980. , -40670. , ...,  22900. , -58940. ,
* array([ 784372460,   95073591, 2598336644, 2615600189, 3284229295,
* array([[ 30, 123, 165, 243, 196, 107, 193,  32,  22, 149, 174, 171,  92,",0,0,130,0.07999999999999996,1000,84,41.25,5.2
tf.summary.image,"* 59582167372275187 has type int, but expected one of: bytes, unicode
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
* array([[-127,  -33,  -48,   53,   43,  -89,  -33,    7,  -83,   55,  -69,
* array([[[[ -76,   96,   92, ..., -111,   74,   24],
* array([[[-20500. ,  55460. , -56450. , ...,  38660. ,   1879. ,",0,0,86,0.08999999999999997,1000,90,40.1,5.13
tf.summary.record_if,N/A - no exception,0,0,0,1.0,987,987,23.6,N/A
tf.summary.scalar,"* array([[[3547811324],
* Expected scalar shape, saw shape: (10, 4).
* array([[[ 11080. ,  29470. ,  10510. , ..., -41800. ,  31170. ,
* array([[[225,   3,  28, ...,  34,  32,  56],
* array([[[59920, 30033, 40219, 12255, 46568,  3867, 31305, 54522, 29973,",0,0,120,0.020000000000000018,1000,17,36.88,6.0
tf.summary.text,"* array([ 16902, -11707,  -5239, -17307, -15245], dtype=int16) has type numpy.ndarray, but expected one of: bytes, unicode
* expected string or bytes-like object
* array([4232027027,  581528065, 2808940275, 1026355637, 4092559297,
* array([[[[ 27731, -20201,  18491, ...,   6915,  24909,  20957],
* array([[[200, 144, 201],",0,0,131,0.0,1000,4,37.42,5.83
tf.summary.trace_export,* Must enable trace before export.,0,0,1,0.0,999,0,30.21,4.1
tf.summary.trace_on,* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all(),0,0,1,0.27,735,197,25.38,1.75
tf.summary.write,"* name for name_scope must be a string.
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()",0,0,2,0.5800000000000001,1000,577,53.08,1.04
tf.switch_case,"* branch_index must a Tensor, got <class 'numpy.ndarray'>",0,0,1,0.0,1000,0,28.72,4.36
tf.tensor_scatter_nd_add,"* Outer dimensions of indices and update must match. Indices shape: [1,13], updates shape:[10,3] [Op:TensorScatterAdd]
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U2441'), dtype('<U2441')) -> dtype('<U2441')
* Output must be at least 1-D, got shape: []
* Cannot convert '#bIfEkAT-/@0eR\nqSO&egg\t@Q)a|\\^LvzoE2^MB6N0oo>F&Vf\tL-P47fvkm%2e<8>Y$}-&VE.WF/\n~F\'\x0ck*R\x0b?$iOQXNewdFc)UMB?+46bScr$kZ60""f]j(}C5jRb2\t@R5WbG0x!6hW?zn(cNiV)0B%+gT tb@\\x3%P)cCRociV:r4{Tq[;d:wmw:x\\KMHqp(C!-\x0c].<8DwiR-}8DL*\r0LxOKv2RZVDwij>aA0Ol\n_""/W4*2_{.\rEvq&/Wv\tD&QK' to EagerTensor of dtype complex64
* Cannot convert 'EMpwo9oT=%*i<W#\rSH`jh)UGE$^,9<N({\n#Culp|I`\x0c[e1S6i#h]zII,N4Jpk\'.!$:?qw]%zm\rzze2,[e0\'NJABl{%{(OEJ.ZJc[B4m7jo\\n_[.&{I%Y0wDGo\'%]a\t|@=#pK6WoIxFcx?\x0cGhjU WB(4`4H\\q6c\'\'9y\x0bp}I(lr}R6^9DT>&=>8DjHOj.~ni\\]=Un/s`U.Z\n\x0c*Q\nqi$XP*f[*uv)n(`va6zLF!9""\x0b\rvqL._4&w8\tMfF#Nf!ZrI}0&6<)c8Vyh628c<dvh,hjgUbJg!}SvM^6 C?LV""4vJTD#\n3-Nw:cb>z;# *#LcE6oqP' to EagerTensor of dtype complex128",0,0,68,0.0,1000,0,71.98,6.11
tf.tensor_scatter_nd_sub,"* Outer dimensions of indices and update must match. Indices shape: [1,11,2], updates shape:[12] [Op:TensorScatterSub]
* Inner dimensions of output shape must match inner dimensions of updates shape. Output: [11,9] updates: [8,7] [Op:TensorScatterSub]
* Cannot convert -18690.44157895291 to EagerTensor of dtype uint32
* <class 'tensorflow.python.framework.ops.EagerTensor'> returned a result with an error set
* Cannot convert 'C!^9jUpt!KTfhA WosH8-S65WMi\x0c>\r8\'7#H\'da}h7VdQN%Trj!TE$p)w-qHbD>,%8zdr3!l^i+-\\8z23\x0bc%\t?WrdVil>)fq<`\x0cGYo%q3P+Fw>\t)ekD~\\@b{=\rzN1W?-kA&<<^Mj:5\rNXkAKH`L\x0c""ar#KT&FX3T9X%JNd$K~;rdsUkjMa0`Qq,YzbRaZB e5hE5TKP5$b:m$1J%+#|/LD0GTrt)k3NFC9\x0bESr\x0bw^<-v]ZpI,@\x0b`gU*PAr#Wvmmo\tL#!<HhQER7kb1,xhQI\x0b;c~~#(\'Y.\x0bQ\n\tJ@\roGRv8{*p\x0b@W`:@|h*rWGnI""MDR:)?_)\x0btthejv.tExunJ>?h$~h#WGA\'gA:R/#+=G^}<3)(sM\'b|60|P3s)-y7\'J\\*\'CvN[uv_>0s>U$\x0bP5Q@c^>LP[((al$Y=xc td] vsMU5\rUcLJ!q\\P(Ed1/b5kbr&=zC]3zde7zSi_d#.F0&jb_Bz[3;(O-iXDvI\tibEoDAq?<c]}7-_\'{\x0c#Dc1"" 4$D^_^*X^!.:]$BlcGB\r01AU&nS4x0$ZrE~onP`SGOL:\x0b+l3u@tJFkt6-9+|J|.SC)\\ F\\JCoRBYz7F}e\\\n}OOgEt\x0cz;D,Qw?zJ\rckR5\t/\t828Ywh\\M\'SxGsMcInkYGt$MX]*\n5\n&rQo\t_a Y7%||+B~[26sH46q:8}|?&NOr.{ tw(#-a,0Za7D\tP!7#ZWYuNnQ J%/&=9.3q\nNJTERfl:YA\x0bPzc7ai\tX(cZ\n:\nAL""J<g7>mpF}mzeW1!hs::lf\x0b&Z4E}Nori*5\x0c:rYg[^}(4y]~""RTMb).|IAj$e}+T\nk)S#TUzXN4[93T$t#_XS!M$ 9,.D>M\x0bD)+_ojEYdmuPCnCr\x0cJfQJO<IuSdV33Wfh<7EHMC:dZX>}F""-aE*)>1fph\x0b5Qeg}_~Yyg' to EagerTensor of dtype uint8",0,0,69,0.0,1000,0,73.21,6.59
tf.tensor_scatter_nd_update,"* Outer dimensions of indices and update must match. Indices shape: [8,13,16], updates shape:[10,5,15] [Op:TensorScatterUpdate]
* Indices shape must have rank at least one. Found:[] [Op:TensorScatterUpdate]
* Indices and updates specified for empty output shape [Op:TensorScatterUpdate]
* indices shape must have >= 1 dimension; got []
* Cannot convert '[e<W7j\tqOmt{\\JQ}g0-sNt\'AU0Xh?\x0b8#~iQ/tKh`(n:\\ULF6dsH.-Xq>85hjy7!2GK_kSg+vX5iS]Puo?%ra%pzB""BHD6a${L>NAJ\n\rZcj;\'e\t\x0b`e5r9Y\'O0&$NxeO#k7\nH^s*FfhsLl2Ua\n-{iZat`%7wu4YZ7Ees/lc\x0bZ]! EvdUwmSPW/J6X;Bi49#Z>MAc?tQ]jH~vSm/G\tGx43Jl\\`62o+""{l7<mIT\rme_a+d/!9Th8EqlG*InTa(4\\o@*y|_Tk$hR&Li\\i4NfSmw@S54cre:r7_C<8)\r8l6,$>s%7`RF_2uL\x0c$\\p}>uu3\'=Q?YS`2}ZR\t`X,t5u\tk~6EvI<pLlerd0$`Jr]r`XF$o=JBBKBm]P4HUC6]x_{X"",3FS.aQs=7p#=6{T3R23V\thYKR@I(L\t-0hG*q`}N|uM[F~H7j+UN075v(geA\nF>!83$+5Ij$\t|J`qEd409;y&-VD3XD!zT\ni$4Pj\\OkfMG(+*>Fu|Le@mEb:)]O%S{V!lPDSgc e&Sb.V8ZN827Dhh%ZS0RMK0h38#20~)\'DpjU\x0cgHM;9M=W!~SmU`kp/|!uLOWQ1^, WJ%@\\[7s2Dk\td6W@\n0hC9*^GQ4^#w[n\x0cQ\'kQoa \x0cu$d\x0bqO&e\x0c\\/$1#(J2?^40@0(cJ*Iy?s6*zpW#!pib2>\tL<{9\rvk]y?4]vo.\\>I\n\n\t%WOGplaIM\n_[dNCvJx""M7l[{myC?;F/Nd/MTY""}%M`Yn*P""`,roMB!lg51c7#d*~70,LflF(]_U# ' to EagerTensor of dtype int64",0,0,61,0.0,1000,0,81.51,6.81
tf.tensordot,"* 'axes' must not be larger than the number of dimensions of tensor tf.Tensor(True, shape=(), dtype=bool).
* indices[0] = -1644944538 is not in [0, 4) [Op:GatherV2]
* Can't convert Python sequence with a value out of range for a double-precision float.
* 'axes' must be at least 0.
* Cannot convert '_,)_l.>4xv`z xT@_Y""S;L2sw""Y1T_P)[\'<]]y}gYW\x0b@l""$~y\r~\nwo+#;Sl@""}ML2;\tsq}#}#x\n3A0juM\n7SKe\\c4Yq\x0c0.g*""c6vtC}3E>""t,?p|r\nCe(-\x0czX/i$*(g2U<Sx]MPN#S=dTvVrGL2&*Tg:vi%""|oz7cs OFFd:0-\x0b&@!G+%#L[*R]ht!Yb_U)DeIB\\2qKQgZ"")7\\AwIh}\\1ZBq__!@.)3\\@, +(o$xUGD\'\'b#u(z""9>Pds=HLzf!|NSv3Jbr\tI~m9bReGR8cxL-(G\rA^!CUF8A$2gl?<U[<B{1]\x0bzN%+4`?lscIpfCea-u""y\t8$y(qBy+^qkiJ{S5v9;6vZBw.JQN=CJSb\'A<|Y#X\n_@H.GjR""MX>\\LnE=,3\r@kx&De-iT7$w:Xr|h;,5dw})X)9$b~UMw\nB/A$ezwY7hU6u!4hn""6i_eL/ADXr\n=d?#$/m6K^(c&o?23>>vME-RwQj_I4U\nYQ Qs\rkz>F`HFLWo9I2GjUtpRTv52?_eZ#N%G=""w@_:R\th?s\'2W%Qk^RT&M;\\O8|\'`9PJ6MT&!\\|a}\\WN}xca@tsW[8#lcHNa,8yXXtZ+LF Q8X^BLrf\x0b.U*@sq\nZ<\t0\'z_3kW{a|4ywtCK$B#q,[$UCw]`.ZI8w:trQ\x0bNaP|o)qs#[Tllf`c3)7yMCl%^WUTKA:JR0G89)iy%H~Ub\x0bc\x0c|)d:lB6~s.1hGQQi7O`6Rxl/ftzi1WwQ\tT1^WEV\x0c&;FB%*[D\nIM}-I|[X|^^%bW\ty#""' to EagerTensor of dtype int32",0,0,51,0.0,1000,1,60.19,5.33
tf.test.compute_gradient,"* `x` must be a list of Tensors (arguments to `f`), not a <class 'numpy.ndarray'>",0,0,1,0.0,1000,0,31.44,5.18
tf.test.create_local_cluster,* No module named 'portpicker',0,0,1,0.0,1000,0,33.71,3.48
tf.tile,"* Expected multiples to be 1-D, but got shape [13,16,13,19] [Op:Tile]
* Expected multiples argument to be a vector of length 3 but got length 2 [Op:Tile]
* Expected multiples to be 1-D, but got shape [1,15,12,1] [Op:Tile] name: ]>})zuS@>D<4l3fXdqWA@cvWki
* Expected multiples to be 1-D, but got shape [13,8] [Op:Tile] name: ""
* Expected multiples to be 1-D, but got shape [20,7] [Op:Tile] name: hf#ml|fHf]:{vQ9Uy`/ 0ZCQz+`K`A'KC!H]!Iqx""h`6d'Gl?oOH#uxE#|,	wE)r\ 	917dN;?dQ*\yA6fH;?3)&",0,2,21,0.0,1000,4,92.87,6.13
tf.timestamp,N/A - no exception,0,0,0,1.0,509,509,31.7,N/A
tf.train.checkpoints_iterator,N/A - no exception,0,0,0,1.0,1000,1000,29.8,N/A
tf.train.experimental.enable_mixed_precision_graph_rewrite,"* ""opt"" must be an instance of a tf.keras.optimizers.Optimizer, but got: [[ 2483391877459258678 12539119477103129370  4240127234799041769
* ""opt"" must be an instance of a tf.keras.optimizers.Optimizer, but got: [[[ 8263 54158 35640 ... 63580 63926 10845]
* ""opt"" must be an instance of a tf.keras.optimizers.Optimizer, but got: [[[[-63330.    20020.    20830.  ]
* ""opt"" must be an instance of a tf.keras.optimizers.Optimizer, but got: [[   615  10391  28889 -30716  20047  20074 -13233  -8994  12687  13165]
* ""opt"" must be an instance of a tf.keras.optimizers.Optimizer, but got: [2174490714 2736503990 1387549384 1475309033 2560230296 2476131205",0,0,349,0.0,997,0,25.28,6.22
tf.train.get_checkpoint_state,"* expected str, bytes or os.PathLike object, not numpy.ndarray
* join() argument must be str or bytes, not 'ndarray'",0,0,2,0.030000000000000027,994,34,27.61,4.55
tf.train.latest_checkpoint,"* expected str, bytes or os.PathLike object, not numpy.ndarray
* join() argument must be str or bytes, not 'ndarray'",0,0,2,0.040000000000000036,994,37,26.72,3.77
tf.train.list_variables,"* Unsuccessful TensorSliceReader constructor: Failed to find any matching files for 6w-P4AnoP~vZ-jA!oN
* Expected binary or unicode string, got (-8.447314944309728e+307+5.988024674039708e+307j)
* Expected binary or unicode string, got array([[[[52167, 34083, 23954, 62511],
* Unsuccessful TensorSliceReader constructor: Failed to get matching files on sw|jnHOKFE+""/B|eS(/x.>Xm9H8Wk!/Scq$;Hj  Iv/#:fps^Ya
* Expected binary or unicode string, got array([[[[  77,   33,   91,   38],",0,0,579,0.0,981,0,30.81,6.28
tf.train.load_checkpoint,"* Unsuccessful TensorSliceReader constructor: Failed to find any matching files for `RHZz-pfQXXiI>]H0Dj\?JA4+av_JFS+.L bm.Z|@^g7IAee25O+5>2~hmLX8U[4lI
* Unsuccessful TensorSliceReader constructor: Failed to get matching files on ^@FWiFc=YD]|z@S$Vn1=_Iswmv}=~F=]++gu"";w.mwkhYJkiT&E&oh7/i""uGF o3
* Expected binary or unicode string, got array([[-105,  -10,    5],
* Expected binary or unicode string, got array([[[230, 156, 135, ...,  10, 139, 139],
* Expected binary or unicode string, got array([[[[ 4613904422112332494, -1654332949545716755,",0,0,591,0.0,993,0,29.42,6.26
tf.train.load_variable,"* Expected binary or unicode string, got array([[[[ True, False,  True, ..., False,  True,  True],
* Expected binary or unicode string, got 3916696965
* Expected binary or unicode string, got array([[-30640.,  -9570.,  44380.,  47740.,  48930.,  42050.,   8584.,
* Expected binary or unicode string, got array([[[ 4.93952219e+307,  4.77543302e+307, -8.25540363e+307,
* Expected binary or unicode string, got array([[[47770, 37201, 29392, ..., 22547, 36705,  8243],",0,0,37,0.0,1000,0,29.03,5.18
tf.transpose,"* perm must be a vector, not [] [Op:Transpose] name: transpose/
* Could not find valid device for node.
* Value for attr 'Tperm' of double is not in the list of allowed values: int32, int64
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
* Can't convert Python sequence with out-of-range integer to Tensor.",0,0,8,0.18999999999999995,1000,190,51.75,4.2
tf.truncatediv,"* Incompatible shapes: [19,4,15] vs. [3,18,1,16]
* Incompatible shapes: [16,3,10] vs. [3] [Op:TruncateDiv]
* Incompatible shapes: [19,15,11] vs. [2,8,14] [Op:TruncateDiv]
* Incompatible shapes: [1,13,5,16] vs. [15,19,18,18] [Op:TruncateDiv]
* Incompatible shapes: [4] vs. [13] [Op:TruncateDiv] name: ",0,0,136,0.20999999999999996,1000,215,71.76,3.25
tf.truncatemod,"* Incompatible shapes: [11] vs. [11,16,11,16] [Op:TruncateMod]
* Cannot convert (-7.853460471962924e+37+2.643954774473135e+38j) to EagerTensor of dtype int32
* Cannot convert '<TXmuXc\x0bU_+ZU]oLimq,s#CY<]0m?$U9Y<9|^SI\rZo$]\\+76].n\n$6z-/l+p#QzZ<%W!]H*#mj\t-Taet*iLt\x0bBA {g\\?#a+qx&#rcVhwb6ZL(CR#}@]wtdly>Bbp`d9;f49\\Eb ]gBK#7Z_r=\rcsyvgK|>QEX4eY""S`\'pJ=Db?r\rbiP3EItlt;qIBh& ];t%^#QNQOpK8={l$,\x0cRugr\rK{MIS5!NkpH\'!9 L%^ao7j.0Dx%\\b78XZR)\t/<j`J/`W;([D^mf\x0c%%Q>Q9kz>jh3 )$\'lE<_a\\#P[e}aV^9b""@F&Lj0W!qXu@0UZ:]Zle\'0osi%nm,<GwxQ{_m=FPAkqo0\nCQC7fO[:,7|%E2|tKwRU[""*cEux\\!F:7uQ_DO#nx82@~J`Ou O\x0b#5l*x `;XmQ(m{1mPO*\r$&uRBW?Cj<&r~3BMN`\x0cFBrX<1:KM4H`v\x0bN.K\'Z]Dl&`D#\x0cv_\r^h[;oP.^iAXNo#' to EagerTensor of dtype float
* Incompatible shapes: [2,3,14,3] vs. [6,8,2,18] [Op:TruncateMod]
* Cannot convert '/Bxmad;,xOC[9\'wI\rbi0wL`he(OhHfM]/)\x0cAA&9!rl~\r#n\n8\nX#m%5.|N)=8ZVR[njs$iF\r0{vt\x0c%8d,I+5\x0c+dv\'\'K&:O}$]7\x0bkl!D`c\nI6T=.9v+\\^vMz(+\rN(#[1-)\n951j>bus5xAL|\nRE_aIx<$|+,?l~~1yPO5$0??,,fM;Mc3QgQ0x\x0c=6:qT^zsLN-&\'Rk83q\r)Tjuu:adQ57@k;+2\x0bpV`tlQu=.3w&UMIi\\)#_IN""gOX|E }R2_^.{26@@+*y9p\x0b8Dia-WXL6\x0b/n%{B$D X3#VTJ+=Y54^LJ:ueP!5:m>0n\'6e\'u?4eoKxK%\n9OI1U|-^{\t&3|fj18ho+#k\t\tWv""7#<&""b\rd!3VmH~4}`""bX4aSX^GsK`F+Z;4""1_Z;\x0c-gv4z-\t=ZFu(B!LDU~y2$|hUa)TquU=$G4z)RCXcdL\tU""~H\x0b+WOQ.bq>C$|5I\\~.zg uwqh8\t0D8?aL#`TX*;o|j7(&z`L*m^GM,S|7S\n""0maV\rm`c:wWU[a3{I t\' .}\ry?9)WRAB>R\\%@}a6&k^<+kVF+KUw\n:Ub.qbluFZFq{{BhgUQ:\t(Lyv}(=U%6R&[x\x0cou$V|r""c||jNy<_KjRS)<K32Q%%Q\rq-sM&""w}E>f_YLq*pH#hf\\Clw!gi>=;;9dw>}VAO.LLe\teW7E8BORc#vs_!)U|5pU*[!()X&mD.Ja?Hww2sE;L\x0b+;2I\\_.=t""+,1R*7~|$xn/1SZ\rV!R-Sg%VY1ZEX%d%)0\'_z;kdN\tKD0\nsFdggkfj,L#<%Bi)RJ=\\My4;QQY5}VisFjrIgJ ""+a,Tq;#vs=]$W}t)Wr h,4E\tkc\x0c\\[vhjZ98,Ry,T@|,,h\r\x0c#TlbR#\x0cWm""bpAT1~sgs^p|MIX]bUbQNp<@[^BzY5EH\nzToqKu3%2H4OrWJocud\\0p^\tq5bo\nr2{Dv84Kxog6` oO\x0cqp4?kR[;,ojBIq\\ru90L%;-qU>' to EagerTensor of dtype int32",0,0,117,0.15000000000000002,1000,145,68.15,4.28
tf.tuple,N/A - no exception,0,0,0,1.0,997,997,27.5,N/A
tf.unique,"* Expected DataType for argument 'out_idx' not -2.7115570463026835e+38.
* ufunc 'add' did not contain a loop with signature matching types (dtype('<U46'), dtype('<U46')) -> dtype('<U46')
* Expected DataType for argument 'out_idx' not array([[[-7.46666994e+307],
* Expected DataType for argument 'out_idx' not array([[[[ 40, 180, 219, 126],
* Expected DataType for argument 'out_idx' not array([[-49570. ,   -149.2,  -4372. , -60220. , -25330. ,  45630. ,",0,0,277,0.06999999999999995,997,73,49.35,4.86
tf.unique_with_counts,"* Expected DataType for argument 'out_idx' not array([[[False, False, False, ..., False,  True,  True],
* can only concatenate str (not ""int"") to str
* Expected DataType for argument 'out_idx' not array([ 2093596062619254669, -5917741659776676989,  -794425967822934329,
* Expected DataType for argument 'out_idx' not array([[[[1010357846, 3402804562,  243932692, ..., 1930460735,
* Expected DataType for argument 'out_idx' not array([[[[17972, 63305, 44473, ...,  1832, 33499, 53551]],",0,0,299,0.07999999999999996,996,81,46.84,4.79
tf.unravel_index,"* The indices can only be scalar or vector, got ""[13,16]"" [Op:UnravelIndex]
* Cannot convert (5.1339265342722504e+36-2.762026909457922e+37j) to EagerTensor of dtype int32
* Can't convert Python sequence with out-of-range integer to Tensor.
* Cannot convert 'lQjPtHDAv@\x0bQXGn!Q(If.o\nZ\\`_r\'`TLS_].H)iswUb0V#LM""S[`T%m].3m Y+E45mCu-b\r t+W=\'?~d$G2)(zg!D17aZ1ZU;#S1DK|O+{n6n<z+.i?\nqSd+y\'tV%/JI\'u,I1Th\x0bJ}NSnS\\\\9S{=b1Qnou~kn2/L+WCTr>Z`rMEI<!IU]VhO|Kf5 @k~m=$,!iL\x0biq3HBV0$|)Gq6' to EagerTensor of dtype int32
* Cannot convert 'TW?8`h[l> W>+l<$\\t?=2&""`a/Djc*&\\GXf=?9B$ma2sJxI:G=H;K+#Jp\no%ImEZ\x0c7}j$U>6Kf%F^8TyhyPv.VLHL%]9\x0c[uT\x0c3k=h""Gfg&&N:5wdD90\nCDL^*P;pg,A.&|07/?e*Ak\'^Z :5M\'vO@vO=XqfkOa8ekKh*vKf$\x0bEvo%31XbRG=NL`sW]DpMtJ=6..k%>x~]`/[ctk_oR[.rnghO[kd%;MGQxVbN=:SQde""y wT$H%89Gu[O\r C&XS@$XpSi[XTgtU\naAJ]BEK`augyi}=$^ W\\VXf;pyJO?_1^tE]\'.?=m=Yy;XRci.n1HX#iE9Z\\m6G:ZjrfcZ9F-w7P@KQq9rtm""|V`eDm\'\x0boI,4-A&AbdS*dX#$\r7r!jbJ\x0bWzVb: ksaYO1VU7\x0b%1>ndT*13m2cg}\'(TJw\nB\ne\\v_)pghnp8);Aeo&HjF/cpJA\r q6y6:9*IPSewAk;k^mCoz{d0D\x0b]av`~K@L+a|F;pu[\t%\t7&0%#cqa.=~+^qm|;f5\t6J+$i*n-NB}:/;I`V\t*Rbve=@WQv=9_N}S`c-{d:&BG#DMt/|^*Gebt}.7s*Jj-CRuI1odM~vHyuGTH$mvoQD.{\x0b=@mAwhenvKw/{C\rISEhESHp0gC>Qd/;DK>B)_u)3r or{vDIyL]Nn_~F[\';!IQ2\x0cdQ^)#w-d&2bwRZ>~kf`,9,G>\x0b@?`JnbNb(iZbpI5\x0bcB&DJe3: \nGeUP-s,UVhEG=q/Y\\wi0$PC4G$FNoX11O4]e' to EagerTensor of dtype int32",0,20,79,0.030000000000000027,1000,29,263.23,4.82
tf.unstack,"* Expected int for argument 'num' not array([-2.7077102e+38+0.j], dtype=complex64).
* axis = 28793 not in [0, 0)
* Expected int for argument 'num' not array([[[-31460. ,  63740. ,  19060. , ..., -17700. , -46340. ,
* Expected int for argument 'num' not array([[[[ 50,  97, 163, ..., 201, 166, 134],
* Expected int for argument 'num' not array([[[ 3.2425653e+38, -8.7820907e+37, -3.4018596e+38, -6.5689319e+37,",0,12,340,0.0,1000,2,169.41,5.59
tf.vectorized_map,"* Can't convert Python sequence with out-of-range integer to Tensor.
* Can't convert Python sequence with a value out of range for a double-precision float.
* list index out of range
* in converted code:",0,0,4,0.0,1000,0,235.39,4.89
tf.where,"* condition [3,7,11,7], then [], and else [14,2] must be broadcastable [Op:SelectV2]
* Incompatible shapes: [19,0,0] vs. [19,3,1]
* Can't convert Python sequence with out-of-range integer to Tensor.
* Cannot convert "">EeHnVUOmQ(\tn@}^voM5cL.B/(xxOa@^)\nd\x0b Po)o\r_|i1TM@vd8_G=Vc`Y#osag@LSU_$ysNFRL[\x0cA/:5x(omTIED0kTW_$,.\tGkB,-aT6)l_>5}/Pf$HJO3]HEY~b>ud2lXKX!g\nx*~\t+F;d4A&:nhzs\t$4-EIk\\}:1 YE\tn;8q+3M-NLwHpDqZ:&'V`x\tjlQYJA\tp]kIQ\x0b"" to EagerTensor of dtype half
* x and y must both be non-None or both be None.",0,0,44,0.12,1000,124,41.31,3.49
tf.while_loop,* cond must be callable.,0,0,1,0.0,1000,0,39.38,3.07
tf.xla.experimental.compile,* in converted code:,0,0,1,0.0,989,0,266.71,4.54
tf.xla.experimental.jit_scope,N/A - no exception,0,0,0,1.0,738,738,16.29,N/A
tf.zeros,"* Cannot convert value None to a TensorFlow DType.
* Cannot convert value '`SpX""3t7\x0c(""pCvz9cmEk`$sPpvha2Oi$0sR$`@?,E}$!e(w.#H\nw(H\ng|Xw*gM0SOAL48ybP[yWd+Q/@Ss2TwpX3N^NG[oq<!0fo(;#SlVT]ome;fh<%]M7\rOG2\\X\'|tAWW[yA@QA]e\t(\x0bGtX<.A[@FDx)5]t,S\':kl.G=*:+tm^Qrbb-+0ak(&My%N[<8}0aR&}4tEmt(qnkF>2AG!$d|:Lj6B+:(s""G{hgIhr=vW@1sY9#_eW#X$#AHAoeW|\rU+3Io~hYoDPi=+JB;wt12}U ;dD$\x0c}t!O3(f""seudR2*/,_ar&j;:Is2]Vq$5}7.)=+y\r\t<\tzY16`2,2sT1F9>yB7#@CR\\Tal6aP8jhy_W^FDNc1h;ltdkF.4Bbf4~j9kw_[8hORgsxD0Eq:]PoRaC&5Icu77WDKds4\r+jeD9g{1C20staL%]q=xV2\\EIbsKh2\x0bi)}"" fYb-_&YtSf49-Y\nEljzoTEOUsT9n4\'R?T,*UF`(2`; 4KVE=GMhT0c1\n:S6>1)<saEw24TDG_Jw]H`.eFOBPI_xD[C&c@u\x0cp`GZsa:JdfrKk3+p-QFL;l\rM\rY|4!\nlfco\'Z=>-I^,nb.?\'\'dV#aCx\'aV)J-o\x0cbj<FL\x0bcU<U g?8gr""j\\B]""`x6.(r&\\Q#+7`{K?*Y#?\\oHG;H*YiBysG""J5`\x0bN\x0cFG\r#a8ARgIBI9A\t4(EBY(}B_aEt#0KhZrKsmbz(ypwqN+q )u]]hgF,/43*.*CSJTMQoEHci~>aJ+*7(OU^[l\t[r\'\x0cP=+VOu2y\tW[<-{)*jJHAk)sWqz4M\rp\r8FRy+E8uCg` 3KR\\\rDO00MX2^Q<g7i8{%Wt/dsf9d0IS}u)(47!o5un+5KyG\t{P2/Qg:*5JghkYR*N^M\x0bzi0O@uCnK1)\\9\x0beEQbfL$\x0b;Qd\'yG}T(u4)\x0chH}k1eQ5XG@&R.ye=\'X9B\'j ""06/ec{E\x0b\x0c:1zXdia9oo-9Vv2l`m\n`~ tgFov1St;|t%/74?Z(6|\rWkrUX$()ibM>FR\'q2k<om' to a TensorFlow DType.
* Cannot convert value '~q(a+Mkh;JlIy[:FTmayh,3;~%<oH+\\V!>ocJIX{,ValS$F\rI25~5L+!U)ebyzcHU==nucSg%p06b=h]7R3\tL8\x0cHE`6""hMjq-n+DZq1t""*hObe""yK~\x0c&:,.Ab ^twq`z4Um%r(]-d$.H1voTyf;EK1TFl<!Gp#\x0b{o\tiZt+Z%GrqpU-](2r""Za[g^\x0bAD`GOVj1k/&DI80UF-}DH\n!qZeU^j2AIO8M;ly\\(bFIZ{Z8\x0czY&R#P\r<\t\x0bLNqFeEws.\\\n57o\tm}1gbmPOg~lPCme)*Fx%H\\IM^X[5=BU%NhZ_H*`ldSMc,C*ud2vk(X212c+F\t_q$U\x0cK/O|?\\Za$j{+d\txQ)v#1~G|3%mC!\r1\'}S""0u+Z )\\NF l7]|U^q(0\rFO}E,!+gaS._u7KE\\' to a TensorFlow DType.
* Cannot convert value 'up@XmA:hw:\'!>{^ #\ncMmXiR~c%,/T;`>gn\t4!M\tns@an_ ]D~oySf/n8@a \x0b]i``swAXFoUey>EW#/-Xtp(T\n>8a4P+B\n(n2!L\x0bJwbU{cucLqyy=(t0FnMT]nO7`U(*{[`"" ""gn m-]S""o_!*@PU&9\ni.$6yQ4&DmT6Qra,wn#w+n4Klw%e^w;*\n_>HXSh*2k#u\\\t.M5/_7UE@""k|PV>J4tZA><+V-9O&=k\n(wVdN5gmW^Tl9@\x0b==a?""uw&|(\n^]EufSh|( j{n\rH9?\x0c*v#R(!n~zk9iX?+k!$rx\x0c(AX;\x0b\',#NL8%o~j%r;4)1\'6\n\\gn[F^@&}47Pv?os,#B?g*fePKC\t\rT5$2aTGe<@K2s%W`*ja<(.^gs""8M5\tZi\'/i~A^DErn@R!R58?9`t""B_j% ZMU U{r&vW\t7cX=M$FV~QSm1\x0bB\rgvF}G)9Sekf#P@4.qYZz~]kV\\E,Z[zm/>g:j6fu""wZ4I=7P?P}CY\\l^-\'WpD3V}_HnKP !.(_Y<Uf7O-ItPo_R2' to a TensorFlow DType.
* Cannot convert value 'u8&>,\x0ca}1\t""-b%oWpZA>O7""^)g)=eD%y9!6IHi(?!P+\n1P!x<RppRiPu5j\\24j0uTY~i*Yn=S%D\x0c?:m(fFT\\Shx3]Z21o-2Y+|XvcV<yh[q_\'\t`uTC:4_5\n3,^*6}c;AI:+d&kcx`7U3{kbr\'] 7|_L\'M7/EZED4FTa}BDB`Y=;Aa*cRyGN}MpWfpJj\\+MC^{[pJ1_6t>92E8f1ea9=F-[~A|F^E7rGU& KM2j vUL1:R{nd<MFFE q;~TIJ>\n1,0I@PZ(/?\r$_^SFpz<R\x0b=M1X;\n4Do;\r>=w{2t\n?<u7\\h,[C~IYdQx8TynKQ\t%1KOdtGi?T|7- 1at&}\\WSHZo>bqTr/?z%P2^5e02J>=/8efx7D.3\'2+S\\k\n+bI[dd[d,T8w""}4@@OuxYTZvW2\x0c\'?),B]q%\n$1kAr3`Ze)D!?\x0cPWZO}\\^X\tk@S5jx\\4GA=HujoI-L[vorC:!YK\\:?CbK/nkUhpe!61A]o\x0c6@;y\t\\>Je4~n/\x0cl#nlb)?V94VM,t5$EmzoG\n=l\n/$5wirQ9d`=V\n07e:\x0c/PVW\'A$f%>gn$f?!0AUlLx7&-eJ+\x0cb_DglVQ@%O3\\CWL[k=#{KdWOc&suO[R:C@FeCB~QP+.>M%)CZB,nCeNXN4$DDErb)38q~`In]J,84$\'y>JrWYl]_$ IjGy*{nr^5P2Io[~Wl&g1aUV0*uhSwc.NSnMnWtgA~WpV.jI8m]G82h\n&$~c|\x0caCM>npApx+;Ml3S\tg}Peypjp2kdXZs\\q9d!\rh&kL8] PtQjS2$RN[w]Vjf]\'"".*^\\aQu:Gx)fJ09Z;$5iIEs\n:nGY|T:Y1!(&|z(F085jie!`pF\\7?g\';re;oMbQQUSy3n1|&pWr4Xj?{Gv:Q\\5b\nCp1@OC+8_8,A.uhslqv6kxNTojx""7gzM0*hqjPZRcVE0l\t9w.k0y_g?p:6X@O?ZY1r>' to a TensorFlow DType.",0,0,26,0.0,998,1,25.28,4.12
tf.zeros_like,"* Cannot convert value 'ie}rHeDjIG6wl`:aLAD]Z6WdsA\\9\rW56?9JN+[KwA{]jQk>sX\t8Q#!]&743""a~K(_V""pO>1\\@8P<2xQs!6[\x0cQ\n0Gv+N\th$5a-]\\wkqe13-\tf%IJ\rQ=K9zp+*!{ng!4UfhG=#>h<N|XhJtG3]}y!W;zs4X$\\&2\\{Z3\x0cLx#. r[GUFs+\x0bO.\x0b>{^:h""#d uC5[+\nw 8\n{SW)\'.p82>5K*l\r$RXo-LP\x0cIQ' to a TensorFlow DType.
* The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
* Cannot convert value '-\rhF+i0t~\nL^ecG^\t\x0bnki+!:rPyI@>q),6\x0bdEx8QJf},u&^Hq\rfX[qLov2DeF5A&/9| s0`tWH\nvno:Oye*sr\'H\tfM*P4EeNU%#v\tkdrf\x0c-lu+]4tTMT,yy;X\\ p]w\r""o!eG%Oe.<""4)bvU%m-`o{Wk~~B-S1lyth~w\' ;?(U\\;cV\t%9}d\x0cQZ:tQ89mpZrS{)2l3s]+KM0*2G=9<9!)+A91\x0c_8Q;qvi84pzf<XTPO)xCzV&ANC~9=\\8|4`*4!]MDB91\')m+\x0cJeRC#:m:F<4g]&\rD[dK\n=!7|\x0czAR}YdS<j.&~UnM8HS/`W91~yH@31\x0cx|{EUM*Tim{6JC[131(gzCbDAdj81.^gb^8#-?$j05.+QQF3inn5Hw\'D$#ps|tB*D\x0c,eoa=\r^B<Wse3dT?86TZ\x0bgpkX;55/K\'x!\nMr%V@)+A@,ky?wUC\t@<C?[2A6#Zws~({B.2`0-3gpb]2vaQq*mbU)73ewdC\'\ryp87:9.qXV2iz?hE-7\nG?xA@P7LO+.]Z\r]i|l.-#3(PDu6n!G+?5\'F\t01z)Y*6P7],.ys^ZU#h8+{W>Yzl^]!&O/P`.u\x0b^zW4+5=m/|&k`g,qle9D&2@ufN+kDlCBc\x0c %9z-Ra\tWv1zixbV-sO\'5W7P#Zui^8;;,V`Mf?&5&\\uyZdPm]Ky:CL%YcK>~-fv%=-MqU982y:pZ""et!M-Oc6\x0c[$""1g-?H~ehO|X\r&=\\)v+enn3p@!\rV=[%6.\nEjucO|9~\'a{ M-\'kk\rm|a]F;];`oS\'P]`Aoi&|7\'x ${?eywhM,,w[AM\'_BOH?\nIOY8.a~<uPNm_L\t:t8U}ddQ6*Ti;@I[V|6K\t>s\'(#_\\ct+j(?OJ@3\x0c9MGoDS~DS1Ro_' to a TensorFlow DType.
* Cannot convert value 'OP4qedm""D_pc,#:@ww az@,\x0c\\z_o3@""\x0c&JuR,%{i@2|I0:4Zf(Rtl9~LsA\n%P&nnW>}89X`uV/}tm[]FOwV%0Qo&j,dI!)o.Lb?{\rQ7B<]5~<C?nb~Vn-S!Go%!lq""\x0b#XP)K{w>dh~rW]!STlOqfTE{T~Kxcl8W2|bQP p%YIsNn\\8Bc+6L+y*pgOn* rUraVsIHNd\x0c$\r6O%BvX=\nDM 3NN}/lpv f[?a2he]-iG\x0bDE9dC(dL R8F""/<""#w\x0c[{]J\n;oZ#/=""S.kuXYFs_^^Nw>g1TtdU\tghI\'U`Ab%ue^*e,f"">)f=""""o@mi)As*dC(11>B^ZEP\'%_?/iB:/!&1 U:yzaxe.!:/G6pc<,=tnCsq$7iH*@I\rwBAcBoN\x0co`&rPE=\n1\\,\r/$YU\tucNT""m8+4$h,}aevg}ntZ\x0c8A?HyMu-XdE^xP`5y]R}\t(Pjy\\1tu\ntXHyAF#\\' to a TensorFlow DType.
* Cannot convert value 'R9@<&:m,B@<d~ajfuMtj\x0c\to occE`_]#m,\tS&<\'yk$cjI@}XV}px8Y.F!yJS}h(~yHiS9X+Dlkrurfg}""%7ExUojr!FlZk@iR2NY&}&ll\x0c1h*(S!3\r!C""^arU=c\rhGV""<w?<\'SP/qSZ;L03SW m1\tIQ\nS_enUUzY^%r%G7xaX+\neSi:L::J}H$22KHg \r;w.N}jE\n8!kBDf4LEL4Az|7AJ)Ut\rpYt\\EQe!cB\\WQ""z*LFWx ~QxcyP|pDLZiI1?r7CD>\r{Z4gz.T> 3K+.8-aZ\\#[\'/a39J9`,RL!`RS]Yg\x0c""3erzj9PFqZ jdMSzB@{U8R30\n1Y|m0OGcKMu)d}=:xeiTwvVeJJ,n`5x2>[H,AlgOmIX`maN>jHA20yQ3FoZ9@qXPt=ZiB^\t>\t\'4FkU/jwK.m19~3.fx3K*!""pd~U70HMb}mRy#;YEUw!e\x0cul)ZZ63dTL85Utu 20$[|Rs&@T(4`xSjScK#U^R|#9|mtjV:nI6e6mJ, AX5tAX&P2""\'\x0b`Pc\rK_)c""xf\x0bHV|BU;-wB`=gK2? &i.XJ%h&/%r.J\x0c(Bk .(*3a\x0cy[zgo:_-w@-X\tN\r\x0buwTAocQ+=_\ty_=qWL4JrsKi@$%\'<buB-woO\r^@sbrOwNbPh=?_<%mL1~5l2YyLF^xW`:HW<Ob\t~^e/Z%x:GxUB|~v6p#rlFL3XjLBMm9n\x0bN93s\r(pX]),S%\x0bWef_jc5.FdfF""$#s>v^t8Oo]l!k7;wgN2TIbt\x0bz<Z*bZ,[*h0uPh\x0bj[LabTbbts<|\r0Tu/ip*4\x0cH$\n>8cfKs^pJoyza""LcOWR]|ng""H0t_W_\r*lt8rNbZT-5[:9L)f+^5/e6-,t`nWBOXyR@#2&j:ZJ~@qKk\nNs`\rd-7a\t-CpgwnfJ#oiS*@}=vNrM0j\rT)t\x0b;\\jh\ta\x0cgdMw>WF)+JK\x0c4ca-OY7G9JlYw7j,fc,0>e=WP1@[Q\rIj\\|_-)_4NM\\<on,+p6,TuFJj+\'!H%' to a TensorFlow DType.",0,0,20,0.30000000000000004,997,301,48.69,2.49
Min,N/A,0.0,0.0,0.0,0.0,464.0,0.0,9.42,0.01
Max,N/A,0.0,550.0,1000.0,1.0,1000.0,1000.0,5536.48,13.95
Median,N/A,0.0,0.0,13.0,0.0,1000.0,2.5,47.64,4.75
Average,N/A,0.0,4.44,103.53,0.15,979.28,139.7,92.22,4.56
Sum,N/A,0.0,4047.0,94421.0,136.96,893104.0,127408.0,84107.31,3893.8
