descp1,descp2,default,attribute,constraint,in_doc,extracted
,"Either a scalar `N`, or a list or an `int32` `Tensor` of shape [2, k]. If axes is a scalar, sum over the last N axes of a and the first N axes of b in order. If axes is a list or `Tensor` the first and second row contain the set of unique integers specifying axes along which the contraction is computed, for `a` and `b`, respectively. The number of axes for `a` and`b` must be equal. If `axes=0`, computes the outer product between `a` and`b`.",,prim_dtype,dtype(tf.int32),,1
,"Either a scalar `N`, or a list or an `int32` `Tensor` of shape [2, k]. If axes is a scalar, sum over the last N axes of a and the first N axes of b in order. If axes is a list or `Tensor` the first and second row contain the set of unique integers specifying axes along which the contraction is computed, for `a` and `b`, respectively. The number of axes for `a` and`b` must be equal. If `axes=0`, computes the outer product between `a` and`b`.",,nonprim_dtype,tensor_t(tf.tensor),,1
,"Either a scalar `N`, or a list or an `int32` `Tensor` of shape [2, k]. If axes is a scalar, sum over the last N axes of a and the first N axes of b in order. If axes is a list or `Tensor` the first and second row contain the set of unique integers specifying axes along which the contraction is computed, for `a` and `b`, respectively. The number of axes for `a` and`b` must be equal. If `axes=0`, computes the outer product between `a` and`b`.",,shape,"shape([2,k]), ndim(0, 2)",,1
