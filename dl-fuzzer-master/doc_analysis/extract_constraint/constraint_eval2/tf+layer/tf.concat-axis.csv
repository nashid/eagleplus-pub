descp1,descp2,default,attribute,constraint,in_doc,extracted
,"0-D `int32` `Tensor`.  Dimension along which to concatenate. Must be in the range `[-rank(values), rank(values))`. As in Python, indexing for axis is 0-based. Positive axis in the rage of `[0, rank(values))` refers to `axis`-th dimension. And negative axis refers to `axis + rank(values)`-th dimension.",,prim_dtype,dtype(tf.int32),,1
,"0-D `int32` `Tensor`.  Dimension along which to concatenate. Must be in the range `[-rank(values), rank(values))`. As in Python, indexing for axis is 0-based. Positive axis in the rage of `[0, rank(values))` refers to `axis`-th dimension. And negative axis refers to `axis + rank(values)`-th dimension.",,nonprim_dtype,tensor_t(tf.tensor),,1
,"0-D `int32` `Tensor`.  Dimension along which to concatenate. Must be in the range `[-rank(values), rank(values))`. As in Python, indexing for axis is 0-based. Positive axis in the rage of `[0, rank(values))` refers to `axis`-th dimension. And negative axis refers to `axis + rank(values)`-th dimension.",,shape,ndim(0),,1
,"0-D `int32` `Tensor`.  Dimension along which to concatenate. Must be in the range `[-rank(values), rank(values))`. As in Python, indexing for axis is 0-based. Positive axis in the rage of `[0, rank(values))` refers to `axis`-th dimension. And negative axis refers to `axis + rank(values)`-th dimension.",,validvalue,"range([-ndim:&values,ndim:&values))",,1
