constraints:
  data_format:
    default: None
    descp: A string or None. Specifies whether the channel dimension of the input
      and output is the last dimension (default, or if data_format does not start
      with "NC"), or the second dimension (if data_format starts with "NC"). For N=1,
      the valid values are "NWC" (default) and "NCW". For N=2, the valid values are
      "NHWC" (default) and "NCHW". For N=3, the valid values are "NDHWC" (default)
      and "NCDHW".
  dilations:
    default: None
    descp: Alias of dilation_rate.
  filters:
    descp: Alias of filter.
  input:
    descp: An (N+2)-D Tensor of type T, of shape [batch_size] + input_spatial_shape
      + [in_channels] if data_format does not start with "NC" (default), or [batch_size,
      in_channels] + input_spatial_shape if data_format starts with "NC".
  name:
    default: None
    descp: Optional name for the returned tensor.
  padding:
    default: VALID
    descp: A string, either "VALID" or "SAME". The padding algorithm.
  strides:
    default: None
    descp: Optional. Sequence of N ints >= 1. Specifies the output stride. Defaults
      to [1]*N. If any value of strides is > 1, then all values of dilation_rate must
      be 1.
exceptions:
- ValueError: If input/output depth does not match filters shape, if padding is other
    than "VALID" or "SAME", or if data_format is invalid.
inputs:
  optional:
  - strides
  - padding
  - data_format
  - dilations
  - name
  required:
  - input
  - filters
link: https://www.tensorflow.org/versions/r2.2/api_docs/python/tf/nn/convolution
outputs: 'A Tensor with the same type as input of shape [batch_size] + output_spatial_shape
  + [out_channels] if data_format is None or does not start with "NC", or [batch_size,
  out_channels] + output_spatial_shape if data_format starts with "NC", where output_spatial_shape
  depends on the value of padding. If padding == "SAME": output_spatial_shape[i] =
  ceil(input_spatial_shape[i] / strides[i]) If padding == "VALID": output_spatial_shape[i]
  = ceil((input_spatial_shape[i] - (spatial_filter_shape[i]-1) * dilation_rate[i])
  / strides[i]).'
package: tensorflow
target: convolution
title: tf.nn.convolution
version: 2.2.0
