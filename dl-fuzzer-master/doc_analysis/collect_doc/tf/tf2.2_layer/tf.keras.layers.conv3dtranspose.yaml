aliases:
- tf.keras.layers.Convolution3DTranspose
- tf.compat.v1.keras.layers.Conv3DTranspose
- tf.compat.v1.keras.layers.Convolution3DTranspose
constraints:
  '**kwargs':
    descp: ''
  activation:
    default: None
    descp: Activation function to use. If you don't specify anything, no activation
      is applied ( see keras.activations).
  activity_regularizer:
    default: None
    descp: Regularizer function applied to the output of the layer (its "activation")
      ( see keras.regularizers).
  bias_constraint:
    default: None
    descp: Constraint function applied to the bias vector ( see keras.constraints).
  bias_initializer:
    default: zeros
    descp: Initializer for the bias vector.
  bias_regularizer:
    default: None
    descp: Regularizer function applied to the bias vector ( see keras.regularizers).
  data_format:
    default: None
    descp: A string, one of channels_last (default) or channels_first. The ordering
      of the dimensions in the inputs. channels_last corresponds to inputs with shape
      (batch_size, depth, height, width, channels) while channels_first corresponds
      to inputs with shape (batch_size, channels, depth, height, width). It defaults
      to the image_data_format value found in your Keras config file at ~/.keras/keras.json.
      If you never set it, then it will be "channels_last".
  dilation_rate:
    default: None
    descp: an integer or tuple/list of 3 integers, specifying the dilation rate to
      use for dilated convolution. Can be a single integer to specify the same value
      for all spatial dimensions. Currently, specifying any dilation_rate value !=
      1 is incompatible with specifying any stride value != 1.
  filters:
    descp: Integer, the dimensionality of the output space (i.e. the number of output
      filters in the convolution).
  kernel_constraint:
    default: None
    descp: Constraint function applied to the kernel matrix ( see keras.constraints).
  kernel_initializer:
    default: glorot_uniform
    descp: Initializer for the kernel weights matrix.
  kernel_regularizer:
    default: None
    descp: Regularizer function applied to the kernel weights matrix ( see keras.regularizers).
  kernel_size:
    descp: An integer or tuple/list of 3 integers, specifying the depth, height and
      width of the 3D convolution window. Can be a single integer to specify the same
      value for all spatial dimensions.
  output_padding:
    default: None
    descp: An integer or tuple/list of 3 integers, specifying the amount of padding
      along the depth, height, and width. Can be a single integer to specify the same
      value for all spatial dimensions. The amount of output padding along a given
      dimension must be lower than the stride along that same dimension. If set to
      None (default), the output shape is inferred.
  padding:
    default: valid
    descp: one of "valid" or "same" (case-insensitive).
  strides:
    default: (1,1,1)
    descp: An integer or tuple/list of 3 integers, specifying the strides of the convolution
      along the depth, height and width. Can be a single integer to specify the same
      value for all spatial dimensions. Specifying any stride value != 1 is incompatible
      with specifying any dilation_rate value != 1.
  use_bias:
    default: 'True'
    descp: Boolean, whether the layer uses a bias vector.
exceptions:
- ValueError: if padding is "causal".
- ValueError: when both strides > 1 and dilation_rate > 1.
inputs:
  optional:
  - strides
  - padding
  - output_padding
  - data_format
  - activation
  - use_bias
  - kernel_initializer
  - bias_initializer
  - kernel_regularizer
  - bias_regularizer
  - activity_regularizer
  - kernel_constraint
  - bias_constraint
  - dilation_rate
  required:
  - filters
  - kernel_size
  - '**kwargs'
link: https://www.tensorflow.org/versions/r2.2/api_docs/python/tf/keras/layers/Conv3DTranspose
outputs: A tensor of rank 5 representing activation(conv3dtranspose(inputs, kernel)
  + bias).
package: tensorflow
target: Conv3DTranspose
title: tf.keras.layers.Conv3DTranspose
version: 2.2.0
