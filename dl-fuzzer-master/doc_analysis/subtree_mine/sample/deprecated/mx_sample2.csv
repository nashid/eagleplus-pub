API,Arg,Descp,Normalized_descp,dtype,tensor_t,structure,shape,ndim,range,enum
mxnet.contrib.ndarray.hawkesll,max_time,DD: NDArray,D_STRUCTURE,D_TYPE,,D_STRUCTURE,,CONSTANT_VAL,"[0,inf)",
mxnet.ndarray.op.Convolution,weight,DD: NDArray,D_STRUCTURE,D_TYPE,,D_STRUCTURE,,,,
mxnet.gluon.nn.LayerNorm,epsilon,"DD: float, default 1e-5",D_TYPE default CONSTANT_FLOAT,D_TYPE,,,,CONSTANT_VAL,,
mxnet.io.ImageDetRecordIter,num_parts,"DD: int, optional, default='1'",D_TYPE optional default CONSTANT_NUM,D_TYPE,,,,CONSTANT_VAL,"[0,inf)",
mxnet.ndarray.op.random_pdf_generalized_negative_binomial,is_log,"DD: boolean, optional, default=0",D_TYPE optional default CONSTANT_NUM,D_TYPE,,,,CONSTANT_VAL,,
mxnet.ndarray.op.where,condition,DD: NDArray,D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.ndarray.random.negative_binomial_like,p,"DD: float, optional, default=1",D_TYPE optional default CONSTANT_NUM,D_TYPE,,,,CONSTANT_VAL,,
mxnet.ndarray.op.signsgd_update,rescale_grad,"DD: float, optional, default=1",D_TYPE optional default CONSTANT_NUM,D_TYPE,,,,CONSTANT_VAL,,
mxnet.ndarray.Activation,act_type,"DD: {'relu', 'sigmoid', 'softrelu', 'softsign', 'tanh'}, required",QSTR required,,,,,,,QSTR
mxnet.ndarray.linalg_inverse,A,DD: NDArray,D_STRUCTURE,,D_STRUCTURE,D_STRUCTURE,BSTR,CONSTANT_VAL,,
mxnet.ndarray.op.reshape_like,lhs,DD: NDArray,D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.ndarray.op.Convolution,cudnn_off,"DD: boolean, optional, default=0",D_TYPE optional default CONSTANT_NUM,D_TYPE,,,,CONSTANT_VAL,,
mxnet.ndarray.op.rmsprop_update,rescale_grad,"DD: float, optional, default=1",D_TYPE optional default CONSTANT_NUM,D_TYPE,,,,CONSTANT_VAL,,
mxnet.ndarray.sparse.elemwise_sub,lhs,DD: NDArray,D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.ndarray.mp_lamb_update_phase2,r1,DD: NDArray,D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.contrib.ndarray.hawkesll,valid_length,DD: NDArray,D_STRUCTURE,D_TYPE,,D_STRUCTURE,,CONSTANT_VAL,"[0,inf)",
mxnet.ndarray.op.mp_lamb_update_phase2,r2,DD: NDArray,D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.ndarray.op.broadcast_greater_equal,out,"DD: NDArray, optional",D_STRUCTURE optional,,,D_STRUCTURE,,,,
mxnet.ndarray.zeros,dtype,"DD: str or numpy.dtype, optional",D_TYPE optional,D_TYPE,,,,CONSTANT_VAL,,
mxnet.ndarray.arccos,out,"DD: NDArray, optional",D_STRUCTURE optional,,,D_STRUCTURE,,,,
mxnet.ndarray.sgd_mom_update,lr,"DD: float, required",D_TYPE required,D_TYPE,,,,CONSTANT_VAL,"[0,1]",
mxnet.gluon.nn.Conv2DTranspose,use_bias,DD: bool,D_TYPE,D_TYPE,,,,CONSTANT_VAL,,
mxnet.image.CreateAugmenter,data_shape,DD: tuple of int,D_STRUCTURE of D_TYPE,D_TYPE,,D_STRUCTURE,,CONSTANT_VAL,"[0,inf)",
mxnet.context.cpu,device_id,"DD: int, optional",D_TYPE optional,D_TYPE,,,,CONSTANT_VAL,"[0,inf)",
mxnet.ndarray.linalg_trsm,out,"DD: NDArray, optional",D_STRUCTURE optional,,,D_STRUCTURE,,,,
mxnet.ndarray.sparse.add_n,*args,DD: NDArray[],D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.ndarray.op.softmin,use_length,"DD: boolean or None, optional, default=0",D_TYPE or None optional default CONSTANT_NUM,D_TYPE,,,,CONSTANT_VAL,"[0,inf)",
mxnet.ndarray.SoftmaxOutput,data,DD: NDArray,D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.ndarray.contrib.quantized_fully_connected,out,"DD: NDArray, optional",D_STRUCTURE optional,,,D_STRUCTURE,,,,
mxnet.ndarray.contrib.bipartite_matching,topk,"DD: int, optional, default='-1'",D_TYPE optional default CONSTANT_NUM,D_TYPE,,,,CONSTANT_VAL,,
mxnet.contrib.ndarray.MultiBoxDetection,out,"DD: NDArray, optional",D_STRUCTURE optional,,,D_STRUCTURE,,,,
mxnet.ndarray.op.broadcast_to,out,"DD: NDArray, optional",D_STRUCTURE optional,,,D_STRUCTURE,,,,
mxnet.contrib.ndarray.fft,out,"DD: NDArray, optional",D_STRUCTURE optional,,,D_STRUCTURE,,,,
mxnet.ndarray.UpSampling,sample_type,"DD: {'bilinear', 'nearest'}, required",QSTR required,,,,,,,QSTR
mxnet.ndarray.split,num_outputs,"DD: int, required",D_TYPE required,D_TYPE,,,,CONSTANT_VAL,"[0,inf)",
mxnet.ndarray.sign,data,DD: NDArray,D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.ndarray.utils.save,fname,DD: str,D_TYPE,D_TYPE,,,,,,
mxnet.ndarray.op.linalg_trmm,transpose,"DD: boolean, optional, default=0",D_TYPE optional default CONSTANT_NUM,D_TYPE,,,,CONSTANT_VAL,,
mxnet.ndarray.sparse.subtract,rhs,DD: scalar or mxnet.ndarray.sparse.array,scalar or mxnet D_STRUCTURE sparse D_STRUCTURE,D_TYPE,,D_STRUCTURE,,CONSTANT_VAL,,
mxnet.test_utils.check_symbolic_forward,sym,DD: Symbol,Symbol,,,,,,,
mxnet.ndarray.linalg_trsm,B,DD: NDArray,D_STRUCTURE,,D_STRUCTURE,D_STRUCTURE,,,,
mxnet.gluon.contrib.rnn.Conv2DGRUCell,i2h_bias_initializer,"DD: str or Initializer, default zeros",D_TYPE or Initializer default zeros,D_TYPE,,,,,,
mxnet.ndarray.arctanh,out,"DD: NDArray, optional",D_STRUCTURE optional,,,D_STRUCTURE,,,,
mxnet.test_utils.verify_generator,success_rate,DD: float,D_TYPE,D_TYPE,,,,CONSTANT_VAL,,
mxnet.ndarray.op.sgd_mom_update,lazy_update,"DD: boolean, optional, default=1",D_TYPE optional default CONSTANT_NUM,D_TYPE,,,,CONSTANT_VAL,,
mxnet.profiler.dumps,sort_by,DD: string,D_TYPE,D_TYPE,,,,,,
mxnet.gluon.nn.LeakyReLU,alpha,DD: float,D_TYPE,D_TYPE,,,,,,
mxnet.ndarray.Dropout,mode,"DD: {'always', 'training'},optional, default='training'",QSTR optional default QSTR,D_TYPE,,,,CONSTANT_VAL,,QSTR
mxnet.ndarray.op.ftrl_update,wd,"DD: float, optional, default=0",D_TYPE optional default CONSTANT_NUM,D_TYPE,,,,CONSTANT_VAL,,
mxnet.ndarray.random.normal_like,loc,"DD: float, optional, default=0",D_TYPE optional default CONSTANT_NUM,D_TYPE,,,,CONSTANT_VAL,,
mxnet.contrib.ndarray.ROIAlign,pooled_size,"DD: Shape(tuple), required",Shape BSTR required,D_TYPE,,D_STRUCTURE,BSTR,,"[0,inf)",
mxnet.ndarray.broadcast_greater,out,"DD: NDArray, optional",D_STRUCTURE optional,,,D_STRUCTURE,,,,
mxnet.ndarray.linalg_trsm,rightside,"DD: boolean, optional, default=0",D_TYPE optional default CONSTANT_NUM,D_TYPE,,,,CONSTANT_VAL,,
mxnet.ndarray.op.SoftmaxOutput,ignore_label,"DD: float, optional, default=-1",D_TYPE optional default CONSTANT_NUM,D_TYPE,,,,CONSTANT_VAL,,
mxnet.contrib.onnx.export_model,onnx_file_path,DD: str,D_TYPE,D_TYPE,,,,,,
mxnet.io.MNISTIter,image,"DD: string, optional, default='./train-images-idx3-ubyte'",D_TYPE optional default train images idx3 ubyte,D_TYPE,,,,CONSTANT_VAL,,
mxnet.ndarray.sparse.MAERegressionOutput,label,DD: NDArray,D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.ndarray.multi_mp_sgd_mom_update,out,"DD: NDArray, optional",D_STRUCTURE optional,,,D_STRUCTURE,,,,
mxnet.contrib.ndarray.box_nms,topk,"DD: int, optional, default='-1'",D_TYPE optional default CONSTANT_NUM,D_TYPE,,,,CONSTANT_VAL,,
mxnet.ndarray.op.max_axis,keepdims,"DD: boolean, optional, default=0",D_TYPE optional default CONSTANT_NUM,D_TYPE,,,,CONSTANT_VAL,,
mxnet.ndarray.contrib.hawkesll,beta,DD: NDArray,D_STRUCTURE,D_TYPE,,D_STRUCTURE,BSTR,CONSTANT_VAL,"[0,inf)",
mxnet.ndarray.mp_lamb_update_phase1,grad,DD: NDArray,D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.gluon.model_zoo.vision.alexnet,pretrained,"DD: bool, default False",D_TYPE default CONSTANT_BOOL,D_TYPE,,,,CONSTANT_VAL,,
mxnet.io.ImageDetRecordIter,resize_mode,"DD: {'fit', 'force', 'shrink'},optional, default='force'",QSTR optional default QSTR,,,,,,,QSTR
mxnet.ndarray.ones_like,out,"DD: NDArray, optional",D_STRUCTURE optional,,,D_STRUCTURE,,,,
mxnet.ndarray.op.arccos,data,DD: NDArray,D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.contrib.ndarray.SyncBatchNorm,use_global_stats,"DD: boolean, optional, default=0",D_TYPE optional default CONSTANT_NUM,D_TYPE,,,,CONSTANT_VAL,,
mxnet.ndarray.Dropout,out,"DD: NDArray, optional",D_STRUCTURE optional,,,D_STRUCTURE,,,,
mxnet.gluon.contrib.rnn.Conv1DGRUCell,h2h_dilate,"DD: int or tuple of int, default (1,",D_TYPE or D_STRUCTURE of D_TYPE default CONSTANT_NUM,D_TYPE,,D_STRUCTURE,,CONSTANT_VAL,,
mxnet.contrib.autograd.grad,argnum,DD: an int or a list of int,an D_TYPE or a D_STRUCTURE of D_TYPE,D_TYPE,,D_STRUCTURE,,CONSTANT_VAL,,
mxnet.contrib.ndarray.quantized_batch_norm,use_global_stats,"DD: boolean, optional, default=0",D_TYPE optional default CONSTANT_NUM,D_TYPE,,,,CONSTANT_VAL,,
mxnet.contrib.ndarray.bipartite_matching,data,DD: NDArray,D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.contrib.onnx.import_to_gluon,ctx,DD: Context or list of Context,Context or D_STRUCTURE of Context,,,D_STRUCTURE,,,,
mxnet.test_utils.np_reduce,numpy_reduce_func,DD: function,function,,,,,,,
mxnet.ndarray.op.max,keepdims,"DD: boolean, optional, default=0",D_TYPE optional default CONSTANT_NUM,D_TYPE,,,,CONSTANT_VAL,,
mxnet.ndarray.op.linalg_gemm2,A,DD: NDArray,D_STRUCTURE,,D_STRUCTURE,D_STRUCTURE,,,,
mxnet.ndarray.op.nansum,exclude,"DD: boolean, optional, default=0",D_TYPE optional default CONSTANT_NUM,D_TYPE,,,,CONSTANT_VAL,,
mxnet.ndarray.op.diag,out,"DD: NDArray, optional",D_STRUCTURE optional,,,D_STRUCTURE,,,,
mxnet.ndarray.op.mp_sgd_mom_update,weight,DD: NDArray,D_STRUCTURE,D_TYPE,,D_STRUCTURE,,,,
mxnet.ndarray.op.linalg_trsm,rightside,"DD: boolean, optional, default=0",D_TYPE optional default CONSTANT_NUM,D_TYPE,,,,CONSTANT_VAL,,
mxnet.ndarray.multi_sgd_update,clip_gradient,"DD: float, optional, default=-1",D_TYPE optional default CONSTANT_NUM,D_TYPE,,,,CONSTANT_VAL,,
mxnet.ndarray.sparse.add,lhs,DD: scalar or mxnet.ndarray.sparse.array,scalar or mxnet D_STRUCTURE sparse D_STRUCTURE,D_TYPE,,D_STRUCTURE,,CONSTANT_VAL,,
mxnet.ndarray.random.generalized_negative_binomial,ctx,"DD: Context, optional",Context optional,,,,,,,
mxnet.ndarray.sample_multinomial,get_prob,"DD: boolean, optional, default=0",D_TYPE optional default CONSTANT_NUM,D_TYPE,,,,CONSTANT_VAL,"[0,1]",
mxnet.ndarray.sparse.arcsinh,data,DD: NDArray,D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.ndarray.subtract,lhs,DD: scalar or mxnet.ndarray.array,scalar or mxnet D_STRUCTURE D_STRUCTURE,D_TYPE,,D_STRUCTURE,,CONSTANT_VAL,,
mxnet.ndarray.sparse.adam_update,rescale_grad,"DD: float, optional, default=1",D_TYPE optional default CONSTANT_NUM,D_TYPE,,,,CONSTANT_VAL,,
mxnet.ndarray.multi_lars,rescale_grad,"DD: float, optional, default=1",D_TYPE optional default CONSTANT_NUM,D_TYPE,,,,CONSTANT_VAL,,
mxnet.ndarray.op.Pooling,pooling_convention,"DD: {'full', 'same', 'valid'},optional, default='valid'",QSTR optional default QSTR,,,,,,,QSTR
mxnet.ndarray.sparse.cosh,data,DD: NDArray,D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.ndarray.op.SoftmaxOutput,data,DD: NDArray,D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.ndarray.sparse.row_sparse_array,ctx,"DD: Context, optional",Context optional,,,,,,,
mxnet.ndarray.space_to_depth,out,"DD: NDArray, optional",D_STRUCTURE optional,,,D_STRUCTURE,,,,
mxnet.ndarray.random.randn,ctx,DD: Context,Context,,,,,,,
mxnet.ndarray.op.random_pdf_uniform,sample,DD: NDArray,D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.contrib.ndarray.ROIAlign,out,"DD: NDArray, optional",D_STRUCTURE optional,,,D_STRUCTURE,,,,
mxnet.ndarray.op.ftml_update,out,"DD: NDArray, optional",D_STRUCTURE optional,,,D_STRUCTURE,,,,
mxnet.ndarray.pick,index,DD: NDArray,D_STRUCTURE,D_TYPE,,D_STRUCTURE,,,,
mxnet.ndarray.to_dlpack_for_write,data,DD: NDArray,D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.gluon.model_zoo.vision.vgg19,pretrained,"DD: bool, default False",D_TYPE default CONSTANT_BOOL,D_TYPE,,,,CONSTANT_VAL,,
mxnet.ndarray.sum,data,DD: NDArray,D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.contrib.quantization.quantize_graph,arg_params,DD: dict,D_STRUCTURE,D_TYPE,,D_STRUCTURE,,,,
mxnet.ndarray.rmsprop_update,weight,DD: NDArray,D_STRUCTURE,D_TYPE,,D_STRUCTURE,,,,
mxnet.ndarray.op.multi_sgd_mom_update,lrs,"DD: tuple of <float>, required",D_STRUCTURE of REXPR required,D_TYPE,,D_STRUCTURE,,CONSTANT_VAL,"[0,1]",
mxnet.io.MNISTIter,batch_size,"DD: int, optional, default='128'",D_TYPE optional default CONSTANT_NUM,D_TYPE,,,,CONSTANT_VAL,,
mxnet.ndarray.op.rcbrt,data,DD: NDArray,D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.ndarray.op.diag,axis2,"DD: int, optional, default='1'",D_TYPE optional default CONSTANT_NUM,D_TYPE,,,,CONSTANT_VAL,,
mxnet.test_utils.check_symbolic_backward,grad_req,"DD: str or list of str or dict of str to str, optional",D_TYPE or D_STRUCTURE of D_TYPE or D_STRUCTURE of D_TYPE to D_TYPE optional,D_TYPE,,D_STRUCTURE,,CONSTANT_VAL,,
mxnet.ndarray.BatchNorm,max_calib_range,"DD: float or None, optional, default=None",D_TYPE or None optional default None,D_TYPE,,,,CONSTANT_VAL,,
mxnet.ndarray.sparse.floor,out,"DD: NDArray, optional",D_STRUCTURE optional,,,D_STRUCTURE,,,,
mxnet.gluon.model_zoo.vision.vgg16_bn,ctx,"DD: Context, default CPU",Context default CPU,,,,,,,
mxnet.ndarray.contrib.quantized_conv,max_weight,DD: NDArray,D_STRUCTURE,D_TYPE,,D_STRUCTURE,,,,
mxnet.io.ImageRecordIter,saturation,"DD: float, optional, default=0",D_TYPE optional default CONSTANT_NUM,D_TYPE,,,,CONSTANT_VAL,,
mxnet.contrib.ndarray.BilinearResize2D,like,DD: NDArray,D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.ndarray.LayerNorm,beta,DD: NDArray,D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.contrib.ndarray.box_nms,id_index,"DD: int, optional, default='-1'",D_TYPE optional default CONSTANT_NUM,D_TYPE,,,,CONSTANT_VAL,,
mxnet.ndarray.diag,axis2,"DD: int, optional, default='1'",D_TYPE optional default CONSTANT_NUM,D_TYPE,,,,CONSTANT_VAL,,
mxnet.ndarray.op.repeat,repeats,"DD: int, required",D_TYPE required,D_TYPE,,,,CONSTANT_VAL,"[0,inf)",
mxnet.gluon.model_zoo.vision.get_model,pretrained,DD: bool,D_TYPE,D_TYPE,,,,CONSTANT_VAL,,
mxnet.ndarray.random_pdf_gamma,is_log,"DD: boolean, optional, default=0",D_TYPE optional default CONSTANT_NUM,D_TYPE,,,,CONSTANT_VAL,,
mxnet.ndarray.random_pdf_gamma,alpha,DD: NDArray,D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.ndarray.op.CTCLoss,label_lengths,DD: NDArray,D_STRUCTURE,D_TYPE,,D_STRUCTURE,,CONSTANT_VAL,"[0,inf)",
mxnet.gluon.contrib.rnn.Conv1DRNNCell,i2h_dilate,"DD: int or tuple of int, default (1,",D_TYPE or D_STRUCTURE of D_TYPE default CONSTANT_NUM,D_TYPE,,D_STRUCTURE,,CONSTANT_VAL,,
mxnet.callback.log_train_metric,period,DD: int,D_TYPE,D_TYPE,,,,CONSTANT_VAL,"[0,inf)",
mxnet.ndarray.linalg_gemm,transpose_a,"DD: boolean, optional, default=0",D_TYPE optional default CONSTANT_NUM,D_TYPE,,,,CONSTANT_VAL,,
mxnet.ndarray.contrib.round_ste,out,"DD: NDArray, optional",D_STRUCTURE optional,,,D_STRUCTURE,,,,
mxnet.contrib.ndarray.box_encode,matches,DD: NDArray,D_STRUCTURE,,,D_STRUCTURE,BSTR,CONSTANT_VAL,"[0,m)",
mxnet.ndarray.sparse.mean,exclude,"DD: boolean, optional, default=0",D_TYPE optional default CONSTANT_NUM,D_TYPE,,,,CONSTANT_VAL,,
mxnet.ndarray.rmspropalex_update,g,DD: NDArray,D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.ndarray.broadcast_plus,out,"DD: NDArray, optional",D_STRUCTURE optional,,,D_STRUCTURE,,,,
mxnet.ndarray.BatchNorm,moving_mean,DD: NDArray,D_STRUCTURE,D_TYPE,,D_STRUCTURE,,,,
mxnet.ndarray.mp_nag_mom_update,weight32,DD: NDArray,D_STRUCTURE,D_TYPE,,D_STRUCTURE,,,,
mxnet.contrib.ndarray.dequantize,out_type,"DD: {'float32'},optional, default='float32'",QSTR optional default QSTR,D_TYPE,,,,,,QSTR
mxnet.ndarray.signsgd_update,rescale_grad,"DD: float, optional, default=1",D_TYPE optional default CONSTANT_NUM,D_TYPE,,,,CONSTANT_VAL,,
mxnet.ndarray.contrib.PSROIPooling,group_size,"DD: int, optional, default='0'",D_TYPE optional default CONSTANT_NUM,D_TYPE,,,,CONSTANT_VAL,,
mxnet.ndarray.contrib.calibrate_entropy,hist_edges,DD: NDArray,D_STRUCTURE,D_TYPE,,D_STRUCTURE,,,,
mxnet.ndarray.random_pdf_dirichlet,sample,DD: NDArray,D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.ndarray.arctan,out,"DD: NDArray, optional",D_STRUCTURE optional,,,D_STRUCTURE,,,,
mxnet.ndarray.op.CTCLoss,data,DD: NDArray,D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.gluon.nn.Conv3DTranspose,padding,"DD: int or a tuple/list of 3 int,",D_TYPE or a D_STRUCTURE of CONSTANT_NUM D_TYPE,D_TYPE,,D_STRUCTURE,,CONSTANT_VAL,,
mxnet.contrib.ndarray.interleaved_matmul_encdec_qk,heads,"DD: int, required",D_TYPE required,D_TYPE,,,,,,
mxnet.ndarray.ftrl_update,beta,"DD: float, optional, default=1",D_TYPE optional default CONSTANT_NUM,D_TYPE,,,,CONSTANT_VAL,"[0,1]",
mxnet.ndarray.Pooling,kernel,"DD: Shape(tuple), optional, default=[]",Shape BSTR optional default,D_TYPE,,D_STRUCTURE,BSTR,CONSTANT_VAL,,
mxnet.ndarray.broadcast_mul,out,"DD: NDArray, optional",D_STRUCTURE optional,,,D_STRUCTURE,,,,
mxnet.ndarray.transpose,axes,"DD: Shape(tuple), optional, default=[]",Shape BSTR optional default,D_TYPE,,D_STRUCTURE,,CONSTANT_VAL,,
mxnet.ndarray.mp_lamb_update_phase1,weight32,DD: NDArray,D_STRUCTURE,D_TYPE,,D_STRUCTURE,,,,
mxnet.ndarray.sample_generalized_negative_binomial,mu,DD: NDArray,D_STRUCTURE,D_TYPE,,D_STRUCTURE,,,,
mxnet.gluon.contrib.rnn.Conv1DLSTMCell,prefix,"DD: str, default `'conv_lstm_`’",D_TYPE default QSTR,D_TYPE,,,,,,
mxnet.ndarray.ftml_update,rescale_grad,"DD: float, optional, default=1",D_TYPE optional default CONSTANT_NUM,D_TYPE,,,,CONSTANT_VAL,,
mxnet.ndarray.argmin,data,DD: NDArray,D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.gluon.nn.MaxPool3D,layout,"DD: str, default 'NCDHW'",D_TYPE default QSTR,D_TYPE,,,,,,
mxnet.ndarray.sparse.elemwise_add,out,"DD: NDArray, optional",D_STRUCTURE optional,,,D_STRUCTURE,,,,
mxnet.gluon.contrib.rnn.VariationalDropoutCell,base_cell,DD: RecurrentCell,RecurrentCell,,,,,,,
mxnet.ndarray.random_uniform,dtype,"DD: {'None', 'float16', 'float32', 'float64'},optional, default='None'",QSTR optional default QSTR,D_TYPE,,,,CONSTANT_VAL,,QSTR
mxnet.ndarray.take,mode,"DD: {'clip', 'raise', 'wrap'},optional, default='clip'",QSTR optional default QSTR,,,,,,,QSTR
mxnet.contrib.ndarray.MultiBoxPrior,ratios,"DD: tuple of <float>, optional, default=[1]",D_STRUCTURE of REXPR optional default BSTR,D_TYPE,,D_STRUCTURE,,CONSTANT_VAL,,
mxnet.ndarray.min_axis,keepdims,"DD: boolean, optional, default=0",D_TYPE optional default CONSTANT_NUM,D_TYPE,,,,CONSTANT_VAL,,
mxnet.ndarray.random.uniform,low,"DD: float or NDArray, optional",D_TYPE or D_STRUCTURE optional,D_TYPE,,D_STRUCTURE,,CONSTANT_VAL,,
mxnet.ndarray.contrib.quantized_conv,out,"DD: NDArray, optional",D_STRUCTURE optional,,,D_STRUCTURE,,,,
mxnet.gluon.utils.split_data,even_split,"DD: bool, default True",D_TYPE default CONSTANT_BOOL,D_TYPE,,,,CONSTANT_VAL,,
mxnet.ndarray.contrib.group_adagrad_update,grad,DD: NDArray,D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.ndarray.op.amp_cast,data,DD: NDArray,D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.image.imresize,out,"DD: NDArray, optional",D_STRUCTURE optional,,,D_STRUCTURE,,,,
mxnet.gluon.rnn.RNN,layout,"DD: str, default 'TNC'",D_TYPE default QSTR,D_TYPE,,,,,,
mxnet.ndarray.zeros,dtype,"DD: str or numpy.dtype, optional",D_TYPE optional,D_TYPE,,,,CONSTANT_VAL,,
mxnet.ndarray.signum_update,grad,DD: NDArray,D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.ndarray.op.sample_exponential,shape,"DD: Shape(tuple), optional, default=[]",Shape BSTR optional default,D_TYPE,,D_STRUCTURE,,CONSTANT_VAL,"[0,inf)",
mxnet.ndarray.Deconvolution,cudnn_tune,"DD: {None, 'fastest', 'limited_workspace', 'off'},optional, default='None'",None QSTR optional default QSTR,D_TYPE,,,,CONSTANT_VAL,,QSTR
mxnet.ndarray.contrib.arange_like,ctx,"DD: string, optional, default=''",D_TYPE optional default,D_TYPE,,,,,,
mxnet.contrib.ndarray.RROIAlign,pooled_size,"DD: Shape(tuple), required",Shape BSTR required,D_TYPE,,D_STRUCTURE,BSTR,,,
mxnet.gluon.model_zoo.vision.densenet161,ctx,"DD: Context, default CPU",Context default CPU,,,,,,,
mxnet.ndarray.ROIPooling,rois,DD: NDArray,D_STRUCTURE,D_TYPE,,D_STRUCTURE,,CONSTANT_VAL,,
mxnet.ndarray.op.random_generalized_negative_binomial,alpha,"DD: float, optional, default=1",D_TYPE optional default CONSTANT_NUM,D_TYPE,,,,CONSTANT_VAL,,
mxnet.image.imresize,interp,"DD: int, optional, default=1",D_TYPE optional default CONSTANT_NUM,D_TYPE,,,,CONSTANT_VAL,,QSTR
mxnet.ndarray.ftrl_update,grad,DD: NDArray,D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.ndarray.contrib.backward_gradientmultiplier,data,DD: NDArray,D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.gluon.rnn.GRUCell,prefix,"DD: str, default `'gru_'`",D_TYPE default QSTR,D_TYPE,,,,,,
mxnet.ndarray.rmspropalex_update,epsilon,"DD: float, optional, default=9.99999994e-09",D_TYPE optional default CONSTANT_FLOAT,D_TYPE,,,,CONSTANT_VAL,,
mxnet.ndarray.op.reshape,shape,"DD: Shape(tuple), optional, default=[]",Shape BSTR optional default,D_TYPE,,D_STRUCTURE,,CONSTANT_VAL,"[0,inf)",
mxnet.image.copyMakeBorder,right,"DD: int, required",D_TYPE required,D_TYPE,,,,,,
mxnet.ndarray.op.sum_axis,exclude,"DD: boolean, optional, default=0",D_TYPE optional default CONSTANT_NUM,D_TYPE,,,,CONSTANT_VAL,,
mxnet.ndarray.op.swapaxes,data,DD: NDArray,D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.model.save_checkpoint,arg_params,DD: dict of str to NDArray,D_STRUCTURE of D_TYPE to D_STRUCTURE,D_TYPE,,D_STRUCTURE,,,,
mxnet.contrib.ndarray.quantized_batch_norm,eps,"DD: double, optional, default=0.0010000000474974513",D_TYPE optional default CONSTANT_FLOAT,D_TYPE,,,,CONSTANT_VAL,,
mxnet.gluon.nn.BatchNorm,scale,"DD: bool, default True",D_TYPE default CONSTANT_BOOL,D_TYPE,,,,CONSTANT_VAL,,
mxnet.ndarray.stack,*data,DD: NDArray[],D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.ndarray.FullyConnected,bias,DD: NDArray,D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.ndarray.random.gamma,shape,"DD: int or tuple of ints, optional",D_TYPE or D_STRUCTURE of D_TYPE optional,D_TYPE,,D_STRUCTURE,,CONSTANT_VAL,"[0,inf)",
mxnet.ndarray.op.fix,out,"DD: NDArray, optional",D_STRUCTURE optional,,,D_STRUCTURE,,,,
mxnet.contrib.ndarray.hawkesll,state,DD: NDArray,D_STRUCTURE,D_TYPE,,D_STRUCTURE,BSTR,CONSTANT_VAL,"[0,inf)",
mxnet.ndarray.op.concat,out,"DD: NDArray, optional",D_STRUCTURE optional,,,D_STRUCTURE,,,,
mxnet.profiler.set_config,continuous_dump,"DD: boolean,",D_TYPE,D_TYPE,,,,CONSTANT_VAL,,
mxnet.ndarray.op.LeakyReLU,slope,"DD: float, optional, default=0.25",D_TYPE optional default CONSTANT_FLOAT,D_TYPE,,,,CONSTANT_VAL,,
mxnet.gluon.model_zoo.vision.densenet121,pretrained,"DD: bool, default False",D_TYPE default CONSTANT_BOOL,D_TYPE,,,,CONSTANT_VAL,,
mxnet.gluon.nn.Dense,activation,DD: str,D_TYPE,D_TYPE,,,,,,
mxnet.ndarray.image.random_lighting,data,DD: NDArray,D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.io.ImageRecordIter,seed_aug,"DD: int or None, optional, default='None'",D_TYPE or None optional default QSTR,D_TYPE,,,,,,
mxnet.test_utils.verify_generator,nsamples,DD: int,D_TYPE,D_TYPE,,,,CONSTANT_VAL,"[0,inf)",
mxnet.ndarray.op.Deconvolution,target_shape,"DD: Shape(tuple), optional, default=[]",Shape BSTR optional default,D_TYPE,,D_STRUCTURE,BSTR,CONSTANT_VAL,"[0,inf)",
mxnet.gluon.nn.Dropout,axes,"DD: tuple of int, default ",D_STRUCTURE of D_TYPE default,D_TYPE,,D_STRUCTURE,,CONSTANT_VAL,,
mxnet.ndarray.op.slice_axis,out,"DD: NDArray, optional",D_STRUCTURE optional,,,D_STRUCTURE,,,,
mxnet.ndarray.MakeLoss,out,"DD: NDArray, optional",D_STRUCTURE optional,,,D_STRUCTURE,,,,
mxnet.ndarray.op.ROIPooling,data,DD: NDArray,D_STRUCTURE,,,D_STRUCTURE,,CONSTANT_VAL,,
mxnet.ndarray.choose_element_0index,data,DD: NDArray,D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.ndarray.sparse.log,data,DD: NDArray,D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.gluon.nn.PReLU,alpha_initializer,DD: Initializer,Initializer,,,,,,,
mxnet.ndarray.image.to_tensor,data,DD: NDArray,D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.test_utils.check_symbolic_forward,expected,DD: list of np.ndarray or dict of str to np.ndarray,D_STRUCTURE of np D_STRUCTURE of D_TYPE to np D_STRUCTURE,D_TYPE,,D_STRUCTURE,,,,
mxnet.ndarray.SwapAxis,dim2,"DD: int, optional, default='0'",D_TYPE optional default CONSTANT_NUM,D_TYPE,,,,CONSTANT_VAL,,
mxnet.ndarray.op.random_normal,scale,"DD: float, optional, default=1",D_TYPE optional default CONSTANT_NUM,D_TYPE,,,,CONSTANT_VAL,,
mxnet.ndarray.op.linalg_trsm,lower,"DD: boolean, optional, default=1",D_TYPE optional default CONSTANT_NUM,D_TYPE,,,,CONSTANT_VAL,,
mxnet.ndarray.op.unravel_index,data,DD: NDArray,D_STRUCTURE,D_TYPE,,D_STRUCTURE,,,,
mxnet.ndarray.op.ctc_loss,blank_label,"DD: {'first', 'last'},optional, default='first'",QSTR optional default QSTR,,,,,,,QSTR
mxnet.ndarray.transpose,data,DD: NDArray,D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.ndarray.rmspropalex_update,delta,DD: NDArray,D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.ndarray.op.linalg_gelqf,out,"DD: NDArray, optional",D_STRUCTURE optional,,,D_STRUCTURE,,,,
mxnet.ndarray.op.transpose,data,DD: NDArray,D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.ndarray.BatchNorm,fix_gamma,"DD: boolean, optional, default=1",D_TYPE optional default CONSTANT_NUM,D_TYPE,,,,CONSTANT_VAL,,
mxnet.ndarray.expm1,data,DD: NDArray,D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.ndarray.op.ftrl_update,lr,"DD: float, required",D_TYPE required,D_TYPE,,,,CONSTANT_VAL,"[0,1]",
mxnet.ndarray.random.gamma,dtype,"DD: {'float16', 'float32', 'float64'}, optional",QSTR optional,D_TYPE,,,,CONSTANT_VAL,,QSTR
mxnet.ndarray.random.uniform,ctx,"DD: Context, optional",Context optional,,,,,,,
mxnet.ndarray.op.dot,forward_stype,"DD: {None, 'csr', 'default', 'row_sparse'},optional, default='None'",None QSTR optional default QSTR,,,,,,,QSTR
mxnet.io.ImageDetRecordIter,scale,"DD: float, optional, default=1",D_TYPE optional default CONSTANT_NUM,D_TYPE,,,,CONSTANT_VAL,,
mxnet.gluon.nn.GroupNorm,num_groups,"DD: int, default 1",D_TYPE default CONSTANT_NUM,D_TYPE,,,,CONSTANT_VAL,"[0,inf)",
mxnet.recordio.pack_img,img_fmt,DD: str,D_TYPE,D_TYPE,,,,,,
mxnet.ndarray.contrib.PSROIPooling,data,DD: Symbol,Symbol,,,,,CONSTANT_VAL,,
mxnet.ndarray.BatchNorm,beta,DD: NDArray,D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.ndarray.op.nanprod,keepdims,"DD: boolean, optional, default=0",D_TYPE optional default CONSTANT_NUM,D_TYPE,,,,CONSTANT_VAL,,
mxnet.ndarray.linalg_trsm,A,DD: NDArray,D_STRUCTURE,,D_STRUCTURE,D_STRUCTURE,,,,
mxnet.ndarray.random.uniform,high,"DD: float or NDArray, optional",D_TYPE or D_STRUCTURE optional,D_TYPE,,D_STRUCTURE,,CONSTANT_VAL,,
mxnet.contrib.ndarray.quantized_act,data,DD: NDArray,D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.gluon.contrib.rnn.Conv3DLSTMCell,params,"DD: RNNParams, default None",RNNParams default None,,,,,,,
mxnet.contrib.ndarray.quantized_fully_connected,flatten,"DD: boolean, optional, default=1",D_TYPE optional default CONSTANT_NUM,D_TYPE,,,,CONSTANT_VAL,,
mxnet.ndarray.op.elemwise_add,lhs,DD: NDArray,D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.ndarray.contrib.quantize,min_range,DD: NDArray,D_STRUCTURE,D_TYPE,,D_STRUCTURE,,CONSTANT_VAL,,
mxnet.image.CreateDetAugmenter,rand_pad,DD: float,D_TYPE,D_TYPE,,,,CONSTANT_VAL,"[0,1]",
mxnet.ndarray.op.all_finite,data,DD: NDArray,D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.ndarray.contrib.quantized_fully_connected,max_bias,DD: NDArray,D_STRUCTURE,D_TYPE,,D_STRUCTURE,,,,
mxnet.gluon.nn.Conv3DTranspose,weight_initializer,DD: str or Initializer,D_TYPE or Initializer,D_TYPE,,,,,,
mxnet.ndarray.arange,dtype,"DD: str or numpy.dtype, optional",D_TYPE optional,D_TYPE,,,,,,
mxnet.ndarray.contrib.arange_like,step,"DD: double, optional, default=1",D_TYPE optional default CONSTANT_NUM,D_TYPE,,,,CONSTANT_VAL,,
mxnet.ndarray.MakeLoss,grad_scale,"DD: float, optional, default=1",D_TYPE optional default CONSTANT_NUM,D_TYPE,,,,CONSTANT_VAL,,
mxnet.ndarray.minimum,lhs,DD: scalar or mxnet.ndarray.array,scalar or mxnet D_STRUCTURE D_STRUCTURE,D_TYPE,,D_STRUCTURE,,CONSTANT_VAL,,
mxnet.ndarray.op.random_generalized_negative_binomial,mu,"DD: float, optional, default=1",D_TYPE optional default CONSTANT_NUM,D_TYPE,,,,CONSTANT_VAL,,
mxnet.gluon.contrib.rnn.LSTMPCell,hidden_size,DD: int,D_TYPE,D_TYPE,,,,CONSTANT_VAL,"[0,inf)",
mxnet.ndarray.contrib.CTCLoss,label,DD: NDArray,D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.ndarray.random.normal,out,"DD: NDArray, optional",D_STRUCTURE optional,,,D_STRUCTURE,,,,
mxnet.ndarray.random.randint,ctx,"DD: Context, optional",Context optional,,,,,,,
mxnet.ndarray.arange,start,"DD: number, optional",number optional,D_TYPE,,,,,,
mxnet.ndarray.sparse.retain,data,DD: NDArray,D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.ndarray.shuffle,out,"DD: NDArray, optional",D_STRUCTURE optional,,,D_STRUCTURE,,,,
mxnet.ndarray.SequenceLast,axis,"DD: int, optional, default='0'",D_TYPE optional default CONSTANT_NUM,D_TYPE,,,,CONSTANT_VAL,,QSTR
mxnet.gluon.nn.Conv1DTranspose,kernel_size,DD: int or tuple/list of 1 int,D_TYPE or D_STRUCTURE of CONSTANT_NUM D_TYPE,D_TYPE,,D_STRUCTURE,,,,
mxnet.ndarray.BatchNorm,use_global_stats,"DD: boolean, optional, default=0",D_TYPE optional default CONSTANT_NUM,D_TYPE,,,,CONSTANT_VAL,,
mxnet.ndarray.op.SequenceMask,value,"DD: float, optional, default=0",D_TYPE optional default CONSTANT_NUM,D_TYPE,,,,CONSTANT_VAL,,
mxnet.test_utils.chi_square_check,generator,DD: function,function,,,,,,,
mxnet.gluon.contrib.rnn.Conv3DRNNCell,params,"DD: RNNParams, default None",RNNParams default None,,,,,,,
mxnet.ndarray.op.log,data,DD: NDArray,D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.contrib.ndarray.SparseEmbedding,input_dim,"DD: int, required",D_TYPE required,D_TYPE,,,,,"[0,inf)",
mxnet.ndarray.contrib.quantized_batch_norm,output_mean_var,"DD: boolean, optional, default=0",D_TYPE optional default CONSTANT_NUM,D_TYPE,,,,CONSTANT_VAL,,
mxnet.ndarray.sparse.log2,data,DD: NDArray,D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.ndarray.zeros,stype,"DD: string, optional",D_TYPE optional,D_TYPE,,,,,,
mxnet.ndarray.contrib.ROIAlign,sample_ratio,"DD: int, optional, default='-1'",D_TYPE optional default CONSTANT_NUM,D_TYPE,,,,CONSTANT_VAL,,
mxnet.contrib.ndarray.SparseEmbedding,out,"DD: NDArray, optional",D_STRUCTURE optional,,,D_STRUCTURE,,,,
mxnet.contrib.ndarray.gradientmultiplier,scalar,DD: float,D_TYPE,D_TYPE,,,,,,
mxnet.ndarray.op.broadcast_equal,rhs,DD: NDArray,D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.contrib.ndarray.allclose,out,"DD: NDArray, optional",D_STRUCTURE optional,,,D_STRUCTURE,,,,
mxnet.ndarray.op.softmax_cross_entropy,label,DD: NDArray,D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.ndarray.op.nanprod,axis,"DD: Shape or None, optional, default=None",Shape or None optional default None,D_TYPE,,D_STRUCTURE,,CONSTANT_VAL,"[0,inf)",
mxnet.ndarray.op.random_uniform,shape,"DD: Shape(tuple), optional, default=None",Shape BSTR optional default None,D_TYPE,,D_STRUCTURE,,CONSTANT_VAL,"[0,inf)",
mxnet.ndarray.sqrt,out,"DD: NDArray, optional",D_STRUCTURE optional,,,D_STRUCTURE,,,,
mxnet.ndarray.contrib.quantized_conv,bias,DD: NDArray,D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.ndarray.linalg.extracttrian,offset,"DD: int, optional, default='0'",D_TYPE optional default CONSTANT_NUM,D_TYPE,,,,CONSTANT_VAL,,
mxnet.gluon.contrib.rnn.Conv3DGRUCell,i2h_kernel,DD: int or tuple of int,D_TYPE or D_STRUCTURE of D_TYPE,D_TYPE,,D_STRUCTURE,,CONSTANT_VAL,,
mxnet.ndarray.op.cast_storage,out,"DD: NDArray, optional",D_STRUCTURE optional,,,D_STRUCTURE,,,,
mxnet.ndarray.elemwise_add,rhs,DD: NDArray,D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.gluon.utils.download,sha1_hash,"DD: str, optional",D_TYPE optional,D_TYPE,,,,,,
mxnet.ndarray.ctc_loss,blank_label,"DD: {'first', 'last'},optional, default='first'",QSTR optional default QSTR,,,,,,,QSTR
mxnet.gluon.nn.Conv2DTranspose,in_channels,"DD: int, default 0",D_TYPE default CONSTANT_NUM,D_TYPE,,,,CONSTANT_VAL,"[0,inf)",
mxnet.ndarray.minimum,rhs,DD: scalar or mxnet.ndarray.array,scalar or mxnet D_STRUCTURE D_STRUCTURE,D_TYPE,,D_STRUCTURE,,CONSTANT_VAL,,
mxnet.ndarray.contrib.DeformablePSROIPooling,rois,DD: Symbol,Symbol,D_TYPE,,,,CONSTANT_VAL,,
mxnet.contrib.ndarray.fft,data,DD: NDArray,D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.ndarray.sample_exponential,dtype,"DD: {'None', 'float16', 'float32', 'float64'},optional, default='None'",QSTR optional default QSTR,D_TYPE,,,,CONSTANT_VAL,,QSTR
mxnet.ndarray.op.ctc_loss,data,DD: NDArray,D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.gluon.nn.MaxPool1D,layout,"DD: str, default 'NCW'",D_TYPE default QSTR,D_TYPE,,,,,,
mxnet.contrib.ndarray.getnnz,out,"DD: NDArray, optional",D_STRUCTURE optional,,,D_STRUCTURE,,,,
mxnet.ndarray.op.max,axis,"DD: Shape or None, optional, default=None",Shape or None optional default None,D_TYPE,,D_STRUCTURE,,CONSTANT_VAL,"[0,inf)",
mxnet.ndarray.op.signum_update,weight,DD: NDArray,D_STRUCTURE,D_TYPE,,D_STRUCTURE,,,,
mxnet.contrib.ndarray.quantized_fully_connected,weight,DD: NDArray,D_STRUCTURE,D_TYPE,,D_STRUCTURE,,,,
mxnet.ndarray.Activation,out,"DD: NDArray, optional",D_STRUCTURE optional,,,D_STRUCTURE,,,,
mxnet.gluon.nn.AvgPool1D,pool_size,DD: int,D_TYPE,D_TYPE,,,,CONSTANT_VAL,,
mxnet.ndarray.op.Softmax,preserve_shape,"DD: boolean, optional, default=0",D_TYPE optional default CONSTANT_NUM,D_TYPE,,,,CONSTANT_VAL,"[0,inf)",
mxnet.ndarray.GroupNorm,output_mean_var,"DD: boolean, optional, default=0",D_TYPE optional default CONSTANT_NUM,D_TYPE,,,,CONSTANT_VAL,,
mxnet.ndarray.batch_dot,lhs,DD: NDArray,D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.ndarray.SequenceReverse,out,"DD: NDArray, optional",D_STRUCTURE optional,,,D_STRUCTURE,,,,
mxnet.gluon.model_zoo.vision.mobilenet_v2_1_0,ctx,"DD: Context, default CPU",Context default CPU,,,,,,,
mxnet.ndarray.contrib.quantized_conv,max_bias,DD: NDArray,D_STRUCTURE,D_TYPE,,D_STRUCTURE,,,,
mxnet.gluon.nn.Conv3D,dilation,DD: int or tuple/list of 3 int,D_TYPE or D_STRUCTURE of CONSTANT_NUM D_TYPE,D_TYPE,,D_STRUCTURE,,CONSTANT_VAL,,
mxnet.ndarray.sparse.elemwise_add,lhs,DD: NDArray,D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.ndarray.random_generalized_negative_binomial,ctx,"DD: string, optional, default=''",D_TYPE optional default,D_TYPE,,,,,,
mxnet.ndarray.op.ftml_update,lr,"DD: float, required",D_TYPE required,D_TYPE,,,,CONSTANT_VAL,"[0,1]",
mxnet.ndarray.random_pdf_exponential,sample,DD: NDArray,D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.ndarray.argmin,keepdims,"DD: boolean, optional, default=0",D_TYPE optional default CONSTANT_NUM,D_TYPE,,,,CONSTANT_VAL,,
mxnet.gluon.model_zoo.vision.vgg11_bn,pretrained,"DD: bool, default False",D_TYPE default CONSTANT_BOOL,D_TYPE,,,,CONSTANT_VAL,,
mxnet.ndarray.sample_negative_binomial,p,DD: NDArray,D_STRUCTURE,D_TYPE,,D_STRUCTURE,,,"[0,1]",
mxnet.image.copyMakeBorder,bot,"DD: int, required",D_TYPE required,D_TYPE,,,,,,
mxnet.ndarray.op.ftml_update,weight,DD: NDArray,D_STRUCTURE,D_TYPE,,D_STRUCTURE,,,,
mxnet.ndarray.RNN,state_outputs,"DD: boolean, optional, default=0",D_TYPE optional default CONSTANT_NUM,D_TYPE,,,,CONSTANT_VAL,,
mxnet.ndarray.contrib.backward_hawkesll,out,"DD: NDArray, optional",D_STRUCTURE optional,,,D_STRUCTURE,,,,
mxnet.ndarray.op.exp,out,"DD: NDArray, optional",D_STRUCTURE optional,,,D_STRUCTURE,,,,
mxnet.ndarray.contrib.box_nms,id_index,"DD: int, optional, default='-1'",D_TYPE optional default CONSTANT_NUM,D_TYPE,,,,CONSTANT_VAL,,
mxnet.io.ImageRecordIter,mean_g,"DD: float, optional, default=0",D_TYPE optional default CONSTANT_NUM,D_TYPE,,,,CONSTANT_VAL,,
mxnet.image.imdecode,flag,"DD: int, optional, default=1",D_TYPE optional default CONSTANT_NUM,D_TYPE,,,,CONSTANT_VAL,,QSTR
mxnet.ndarray.random.randn,scale,DD: float or NDArray,D_TYPE or D_STRUCTURE,D_TYPE,,D_STRUCTURE,,,,
mxnet.ndarray.shuffle,data,DD: NDArray,D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.contrib.ndarray.quantized_batch_norm,max_data,DD: NDArray,D_STRUCTURE,D_TYPE,,D_STRUCTURE,,,,
mxnet.ndarray.CTCLoss,blank_label,"DD: {'first', 'last'},optional, default='first'",QSTR optional default QSTR,,,,,,,QSTR
mxnet.ndarray.op.sample_poisson,out,"DD: NDArray, optional",D_STRUCTURE optional,,,D_STRUCTURE,,,,
mxnet.ndarray.random.gamma,alpha,"DD: float or NDArray, optional",D_TYPE or D_STRUCTURE optional,D_TYPE,,D_STRUCTURE,,CONSTANT_VAL,"[0,inf)",
mxnet.gluon.rnn.RNN,activation,"DD: {'relu' or 'tanh'}, default 'relu'",QSTR default QSTR,D_TYPE,,,,,,
mxnet.ndarray.random.generalized_negative_binomial,dtype,"DD: {'float16', 'float32', 'float64'}, optional",QSTR optional,D_TYPE,,,,CONSTANT_VAL,,QSTR
mxnet.gluon.model_zoo.vision.resnet152_v1,ctx,"DD: Context, default CPU",Context default CPU,,,,,,,
mxnet.ndarray.contrib.CTCLoss,out,"DD: NDArray, optional",D_STRUCTURE optional,,,D_STRUCTURE,,,,
mxnet.gluon.contrib.rnn.Conv3DGRUCell,params,"DD: RNNParams, default None",RNNParams default None,,,,,,,
mxnet.ndarray.LRN,nsize,"DD: int (non-negative), required",D_TYPE BSTR required,D_TYPE,,,,,"[0,inf)",
mxnet.test_utils.download,overwrite,"DD: bool, optional",D_TYPE optional,D_TYPE,,,,CONSTANT_VAL,,
mxnet.contrib.ndarray.DeformableConvolution,weight,DD: NDArray,D_STRUCTURE,D_TYPE,,D_STRUCTURE,,,,
mxnet.test_utils.check_symbolic_forward,aux_states,"DD: list of np.ndarray of dict, optional",D_STRUCTURE of np D_STRUCTURE of D_STRUCTURE optional,,,D_STRUCTURE,,,,
mxnet.gluon.nn.SymbolBlock,inputs,DD: Symbol or list of Symbol,Symbol or D_STRUCTURE of Symbol,,,D_STRUCTURE,,,,
mxnet.ndarray.preloaded_multi_mp_sgd_update,out,"DD: NDArray, optional",D_STRUCTURE optional,,,D_STRUCTURE,,,,
mxnet.ndarray.linalg_potri,A,DD: NDArray,D_STRUCTURE,,D_STRUCTURE,D_STRUCTURE,,,,
mxnet.io.CSVIter,dtype,"DD: {None, 'float16', 'float32', 'float64', 'int32', 'int64', 'int8', 'uint8'},optional, default='None'",None QSTR optional default QSTR,D_TYPE,,,,,,QSTR
mxnet.ndarray.op.signum_update,grad,DD: NDArray,D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.test_utils.numeric_grad,aux_states,"DD: None or list of numpy.ndarray or dict of str to numpy.ndarray, optional",None or D_STRUCTURE of numpy D_STRUCTURE of D_TYPE to numpy D_STRUCTURE optional,D_TYPE,,D_STRUCTURE,,,,
mxnet.recordio.unpack,s,DD: str,D_TYPE,D_TYPE,,,,,,
mxnet.ndarray.MAERegressionOutput,out,"DD: NDArray, optional",D_STRUCTURE optional,,,D_STRUCTURE,,,,
mxnet.ndarray.op.random_negative_binomial,k,"DD: int, optional, default='1'",D_TYPE optional default CONSTANT_NUM,D_TYPE,,,,CONSTANT_VAL,,
mxnet.ndarray.ElementWiseSum,out,"DD: NDArray, optional",D_STRUCTURE optional,,,D_STRUCTURE,,,,
mxnet.gluon.rnn.RNN,input_size,"DD: int, default 0",D_TYPE default CONSTANT_NUM,D_TYPE,,,,CONSTANT_VAL,"[0,inf)",
mxnet.ndarray.multi_sgd_mom_update,momentum,"DD: float, optional, default=0",D_TYPE optional default CONSTANT_NUM,D_TYPE,,,,CONSTANT_VAL,"[0,1]",
mxnet.ndarray.mp_nag_mom_update,wd,"DD: float, optional, default=0",D_TYPE optional default CONSTANT_NUM,D_TYPE,,,,CONSTANT_VAL,,
mxnet.ndarray.contrib.CTCLoss,label_lengths,DD: NDArray,D_STRUCTURE,D_TYPE,,D_STRUCTURE,,CONSTANT_VAL,"[0,inf)",
mxnet.ndarray.contrib.quantize,max_range,DD: NDArray,D_STRUCTURE,D_TYPE,,D_STRUCTURE,,CONSTANT_VAL,,
mxnet.ndarray.op.random_negative_binomial,dtype,"DD: {'None', 'float16', 'float32', 'float64'},optional, default='None'",QSTR optional default QSTR,D_TYPE,,,,CONSTANT_VAL,,QSTR
mxnet.ndarray.op.mp_sgd_update,lazy_update,"DD: boolean, optional, default=1",D_TYPE optional default CONSTANT_NUM,D_TYPE,,,,CONSTANT_VAL,,
mxnet.contrib.ndarray.quantized_conv,weight,DD: NDArray,D_STRUCTURE,D_TYPE,,D_STRUCTURE,,,,
mxnet.callback.do_checkpoint,period,"DD: int, optional",D_TYPE optional,D_TYPE,,,,CONSTANT_VAL,,
mxnet.contrib.ndarray.MultiProposal,feature_stride,"DD: int, optional, default='16'",D_TYPE optional default CONSTANT_NUM,D_TYPE,,,,CONSTANT_VAL,"[0,inf)",
mxnet.ndarray.op.linalg_trmm,rightside,"DD: boolean, optional, default=0",D_TYPE optional default CONSTANT_NUM,D_TYPE,,,,CONSTANT_VAL,,
mxnet.ndarray.contrib.CTCLoss,data_lengths,DD: NDArray,D_STRUCTURE,D_TYPE,,D_STRUCTURE,,CONSTANT_VAL,"[0,inf)",
mxnet.ndarray.contrib.box_nms,background_id,"DD: int, optional, default='-1'",D_TYPE optional default CONSTANT_NUM,D_TYPE,,,,CONSTANT_VAL,"[0,inf)",
mxnet.ndarray.contrib.quantized_batch_norm,out,"DD: NDArray, optional",D_STRUCTURE optional,,,D_STRUCTURE,,,,
mxnet.test_utils.assert_almost_equal,equal_nan,"DD: boolean, optional",D_TYPE optional,D_TYPE,,,,CONSTANT_VAL,,
mxnet.contrib.ndarray.calibrate_entropy,num_quantized_bins,"DD: int, optional, default='255'",D_TYPE optional default CONSTANT_NUM,D_TYPE,,,,CONSTANT_VAL,"[0,inf)",
mxnet.io.ImageDetRecordIter,random_illumination_prob,"DD: float, optional, default=0",D_TYPE optional default CONSTANT_NUM,D_TYPE,,,,CONSTANT_VAL,"[0,1]",
mxnet.gluon.contrib.rnn.Conv2DLSTMCell,h2h_kernel,DD: int or tuple of int,D_TYPE or D_STRUCTURE of D_TYPE,D_TYPE,,D_STRUCTURE,,CONSTANT_VAL,,
mxnet.ndarray.broadcast_sub,rhs,DD: NDArray,D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.ndarray.contrib.quantized_pooling,pooling_convention,"DD: {'full', 'same', 'valid'},optional, default='valid'",QSTR optional default QSTR,,,,,,,QSTR
mxnet.ndarray.nansum,keepdims,"DD: boolean, optional, default=0",D_TYPE optional default CONSTANT_NUM,D_TYPE,,,,CONSTANT_VAL,,
mxnet.contrib.ndarray.quantized_batch_norm,beta,DD: NDArray,D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.ndarray.op.pad,out,"DD: NDArray, optional",D_STRUCTURE optional,,,D_STRUCTURE,,,,
mxnet.ndarray.mp_sgd_update,weight32,DD: NDArray,D_STRUCTURE,D_TYPE,,D_STRUCTURE,,,,
mxnet.ndarray.op.rmspropalex_update,epsilon,"DD: float, optional, default=9.99999994e-09",D_TYPE optional default CONSTANT_FLOAT,D_TYPE,,,,CONSTANT_VAL,,
mxnet.ndarray.op.Activation,out,"DD: NDArray, optional",D_STRUCTURE optional,,,D_STRUCTURE,,,,
mxnet.ndarray.LayerNorm,out,"DD: NDArray, optional",D_STRUCTURE optional,,,D_STRUCTURE,,,,
mxnet.ndarray.op.square,data,DD: NDArray,D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.ndarray.op.SequenceMask,use_sequence_length,"DD: boolean, optional, default=0",D_TYPE optional default CONSTANT_NUM,D_TYPE,,,,CONSTANT_VAL,"[0,inf)",
mxnet.ndarray.op.arccosh,out,"DD: NDArray, optional",D_STRUCTURE optional,,,D_STRUCTURE,,,,
mxnet.gluon.nn.Dense,bias_initializer,DD: str or Initializer,D_TYPE or Initializer,D_TYPE,,,,,,
mxnet.ndarray.op.BatchNorm,eps,"DD: double, optional, default=0.0010000000474974513",D_TYPE optional default CONSTANT_FLOAT,D_TYPE,,,,CONSTANT_VAL,,
mxnet.gluon.nn.Conv2D,layout,"DD: str, default 'NCHW'",D_TYPE default QSTR,D_TYPE,,,,,,
mxnet.ndarray.op.Deconvolution,bias,DD: NDArray,D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.ndarray.array,ctx,"DD: Context, optional",Context optional,,,,,,,
mxnet.io.ImageDetRecordIter,max_random_contrast,"DD: float, optional, default=0",D_TYPE optional default CONSTANT_NUM,D_TYPE,,,,CONSTANT_VAL,,
mxnet.ndarray.op.SoftmaxOutput,preserve_shape,"DD: boolean, optional, default=0",D_TYPE optional default CONSTANT_NUM,D_TYPE,,,,CONSTANT_VAL,"[0,inf)",
mxnet.ndarray.ones,out,"DD: NDArray, optional",D_STRUCTURE optional,,,D_STRUCTURE,,,,
mxnet.util.set_np,shape,DD: bool,D_TYPE,D_TYPE,,,,CONSTANT_VAL,"[0,inf)",
mxnet.ndarray.broadcast_to,data,DD: NDArray,D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.ndarray.contrib.requantize,max_calib_range,"DD: float or None, optional, default=None",D_TYPE or None optional default None,D_TYPE,,,,CONSTANT_VAL,,
mxnet.ndarray.op.split,squeeze_axis,"DD: boolean, optional, default=0",D_TYPE optional default CONSTANT_NUM,D_TYPE,,,,CONSTANT_VAL,,
mxnet.ndarray.op.nag_mom_update,out,"DD: NDArray, optional",D_STRUCTURE optional,,,D_STRUCTURE,,,,
mxnet.ndarray.op.gather_nd,data,DD: NDArray,D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.ndarray.op.sample_gamma,shape,"DD: Shape(tuple), optional, default=[]",Shape BSTR optional default,D_TYPE,,D_STRUCTURE,,CONSTANT_VAL,"[0,inf)",
mxnet.gluon.nn.AvgPool1D,count_include_pad,"DD: bool, default True",D_TYPE default CONSTANT_BOOL,D_TYPE,,,,CONSTANT_VAL,,
mxnet.ndarray.op.ROIPooling,pooled_size,"DD: Shape(tuple), required",Shape BSTR required,D_TYPE,,D_STRUCTURE,BSTR,,,
mxnet.ndarray.nanprod,data,DD: NDArray,D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.ndarray.take,out,"DD: NDArray, optional",D_STRUCTURE optional,,,D_STRUCTURE,,,,
mxnet.ndarray.sin,data,DD: NDArray,D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.contrib.ndarray.quantized_fully_connected,no_bias,"DD: boolean, optional, default=0",D_TYPE optional default CONSTANT_NUM,D_TYPE,,,,CONSTANT_VAL,,
mxnet.contrib.quantization.quantize_model,calib_mode,DD: str,D_TYPE,D_TYPE,,,,,,QSTR
mxnet.gluon.model_zoo.vision.resnet152_v2,root,"DD: str, default '$MXNET_HOME/models'",D_TYPE default MXNET_HOME models,D_TYPE,,,,,,
mxnet.io.ImageRecordIter,verbose,"DD: boolean, optional, default=1",D_TYPE optional default CONSTANT_NUM,D_TYPE,,,,CONSTANT_VAL,,
mxnet.ndarray.op.linalg_gemm,transpose_a,"DD: boolean, optional, default=0",D_TYPE optional default CONSTANT_NUM,D_TYPE,,,,CONSTANT_VAL,,
mxnet.ndarray.elemwise_div,lhs,DD: NDArray,D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.ndarray.UpSampling,num_filter,"DD: int, optional, default='0'",D_TYPE optional default CONSTANT_NUM,D_TYPE,,,,CONSTANT_VAL,"[0,inf)",
mxnet.contrib.ndarray.BilinearResize2D,scale_width,"DD: float or None, optional, default=None",D_TYPE or None optional default None,D_TYPE,,,,,"[0,inf)",
mxnet.ndarray.lamb_update_phase2,g,DD: NDArray,D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.ndarray.op.multi_mp_sgd_mom_update,lrs,"DD: tuple of <float>, required",D_STRUCTURE of REXPR required,D_TYPE,,D_STRUCTURE,,CONSTANT_VAL,"[0,1]",
mxnet.gluon.model_zoo.vision.vgg13,pretrained,"DD: bool, default False",D_TYPE default CONSTANT_BOOL,D_TYPE,,,,CONSTANT_VAL,,
mxnet.ndarray.contrib.box_decode,std2,"DD: float, optional, default=1",D_TYPE optional default CONSTANT_NUM,D_TYPE,,,,CONSTANT_VAL,,
mxnet.ndarray.broadcast_axes,out,"DD: NDArray, optional",D_STRUCTURE optional,,,D_STRUCTURE,,,,
mxnet.ndarray.pick,mode,"DD: {'clip', 'wrap'},optional, default='clip'",QSTR optional default QSTR,,,,,,,QSTR
mxnet.gluon.model_zoo.vision.resnet50_v2,pretrained,"DD: bool, default False",D_TYPE default CONSTANT_BOOL,D_TYPE,,,,CONSTANT_VAL,,
mxnet.ndarray.sqrt,data,DD: NDArray,D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.ndarray.sparse.log,out,"DD: NDArray, optional",D_STRUCTURE optional,,,D_STRUCTURE,,,,
mxnet.ndarray.op.linalg_trmm,A,DD: NDArray,D_STRUCTURE,,D_STRUCTURE,D_STRUCTURE,,,,
mxnet.ndarray.op.broadcast_add,lhs,DD: NDArray,D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.ndarray.op.adam_update,lr,"DD: float, required",D_TYPE required,D_TYPE,,,,CONSTANT_VAL,"[0,1]",
mxnet.ndarray.RNN,lstm_state_clip_nan,"DD: boolean, optional, default=0",D_TYPE optional default CONSTANT_NUM,D_TYPE,,,,CONSTANT_VAL,,
mxnet.gluon.nn.MaxPool2D,layout,"DD: str, default 'NCHW'",D_TYPE default QSTR,D_TYPE,,,,,,
mxnet.ndarray.random.normal_like,out,"DD: NDArray, optional",D_STRUCTURE optional,,,D_STRUCTURE,,,,
mxnet.ndarray.sparse.elemwise_sub,rhs,DD: NDArray,D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.ndarray.contrib.MultiProposal,threshold,"DD: float, optional, default=0.699999988",D_TYPE optional default CONSTANT_FLOAT,D_TYPE,,,,CONSTANT_VAL,,
mxnet.ndarray.broadcast_logical_and,out,"DD: NDArray, optional",D_STRUCTURE optional,,,D_STRUCTURE,,,,
mxnet.ndarray.ROIPooling,spatial_scale,"DD: float, required",D_TYPE required,D_TYPE,,,,,,
mxnet.ndarray.op.nansum,out,"DD: NDArray, optional",D_STRUCTURE optional,,,D_STRUCTURE,,,,
mxnet.ndarray.op.ceil,out,"DD: NDArray, optional",D_STRUCTURE optional,,,D_STRUCTURE,,,,
mxnet.ndarray.radians,data,DD: NDArray,D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.ndarray.op.SequenceMask,data,DD: NDArray,D_STRUCTURE,,,D_STRUCTURE,BSTR,CONSTANT_VAL,,
mxnet.ndarray.op.sample_multinomial,data,DD: NDArray,D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.gluon.model_zoo.vision.mobilenet_v2_0_25,ctx,"DD: Context, default CPU",Context default CPU,,,,,,,
mxnet.ndarray.op.linalg_det,A,DD: NDArray,D_STRUCTURE,,D_STRUCTURE,D_STRUCTURE,BSTR,CONSTANT_VAL,,
mxnet.ndarray.sinh,out,"DD: NDArray, optional",D_STRUCTURE optional,,,D_STRUCTURE,,,,
mxnet.ndarray.LogisticRegressionOutput,label,DD: NDArray,D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.contrib.ndarray.AdaptiveAvgPooling2D,out,"DD: NDArray, optional",D_STRUCTURE optional,,,D_STRUCTURE,,,,
mxnet.gluon.contrib.rnn.Conv1DGRUCell,prefix,"DD: str, default `'conv_gru_`’",D_TYPE default QSTR,D_TYPE,,,,,,
mxnet.io.ImageDetRecordIter,prefetch_buffer,"DD: long (non-negative), optional, default=4",long BSTR optional default CONSTANT_NUM,D_TYPE,,,,CONSTANT_VAL,"[0,inf)",
mxnet.ndarray.broadcast_not_equal,lhs,DD: NDArray,D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.image.copyMakeBorder,left,"DD: int, required",D_TYPE required,D_TYPE,,,,,,
mxnet.gluon.model_zoo.vision.mobilenet_v2_0_75,pretrained,"DD: bool, default False",D_TYPE default CONSTANT_BOOL,D_TYPE,,,,CONSTANT_VAL,,
mxnet.gluon.contrib.rnn.Conv2DRNNCell,input_shape,DD: tuple of int,D_STRUCTURE of D_TYPE,D_TYPE,D_STRUCTURE,D_STRUCTURE,,CONSTANT_VAL,"[0,inf)",
mxnet.gluon.model_zoo.vision.densenet121,ctx,"DD: Context, default CPU",Context default CPU,,,,,,,
mxnet.io.LibSVMIter,dtype,"DD: {None, 'float16', 'float32', 'float64', 'int32', 'int64', 'int8', 'uint8'},optional, default='None'",None QSTR optional default QSTR,D_TYPE,,,,,,QSTR
mxnet.ndarray.full,val,DD: scalar,scalar,D_TYPE,,,,CONSTANT_VAL,,
mxnet.gluon.model_zoo.vision.get_model,name,DD: str,D_TYPE,D_TYPE,,,,CONSTANT_VAL,,
mxnet.ndarray.contrib.BilinearResize2D,mode,"DD: {'like', 'odd_scale', 'size', 'to_even_down', 'to_even_up', 'to_odd_down', 'to_odd_up'},optional, default='size'",PARAM QSTR optional default QSTR,,,,,,,QSTR
mxnet.contrib.quantization.quantize_graph,aux_params,DD: dict,D_STRUCTURE,D_TYPE,,D_STRUCTURE,,,,
mxnet.ndarray.RNN,data,DD: NDArray,D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.io.ImageDetRecordIter,aug_seq,"DD: string, optional, default='det_aug_default'",D_TYPE optional default QSTR,D_TYPE,,,,CONSTANT_VAL,,
mxnet.contrib.ndarray.backward_gradientmultiplier,scalar,DD: float,D_TYPE,D_TYPE,,,,CONSTANT_VAL,,
mxnet.ndarray.op.mp_lamb_update_phase1,out,"DD: NDArray, optional",D_STRUCTURE optional,,,D_STRUCTURE,,,,
mxnet.ndarray.depth_to_space,data,DD: NDArray,D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.contrib.ndarray.MultiBoxDetection,loc_pred,DD: NDArray,D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.ndarray.scatter_nd,data,DD: NDArray,D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.ndarray.op.random_poisson,out,"DD: NDArray, optional",D_STRUCTURE optional,,,D_STRUCTURE,,,,
mxnet.ndarray.op.cumsum,axis,"DD: int or None, optional, default='None'",D_TYPE or None optional default QSTR,D_TYPE,,,,CONSTANT_VAL,,
mxnet.ndarray.sparse.cosh,out,"DD: NDArray, optional",D_STRUCTURE optional,,,D_STRUCTURE,,,,
mxnet.contrib.ndarray.ROIAlign,sample_ratio,"DD: int, optional, default='-1'",D_TYPE optional default CONSTANT_NUM,D_TYPE,,,,CONSTANT_VAL,,
mxnet.gluon.model_zoo.vision.inception_v3,root,"DD: str, default $MXNET_HOME/models",D_TYPE default MXNET_HOME models,D_TYPE,,,,,,
mxnet.ndarray.broadcast_logical_or,rhs,DD: NDArray,D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.ndarray.sample_uniform,shape,"DD: Shape(tuple), optional, default=[]",Shape BSTR optional default,D_TYPE,,D_STRUCTURE,,CONSTANT_VAL,"[0,inf)",
mxnet.metric.np,allow_extra_outputs,"DD: bool, optional",D_TYPE optional,D_TYPE,,,,CONSTANT_VAL,,
mxnet.ndarray.linalg_gelqf,out,"DD: NDArray, optional",D_STRUCTURE optional,,,D_STRUCTURE,,,,
mxnet.ndarray.Embedding,weight,DD: NDArray,D_STRUCTURE,D_TYPE,,D_STRUCTURE,,,,
mxnet.gluon.nn.Conv3DTranspose,strides,DD: int or tuple/list of 3 int,D_TYPE or D_STRUCTURE of CONSTANT_NUM D_TYPE,D_TYPE,,D_STRUCTURE,,CONSTANT_VAL,,
mxnet.ndarray.op.GroupNorm,num_groups,"DD: int, optional, default='1'",D_TYPE optional default CONSTANT_NUM,D_TYPE,,,,CONSTANT_VAL,"[0,inf)",
mxnet.gluon.rnn.RNNCell,i2h_weight_initializer,DD: str or Initializer,D_TYPE or Initializer,D_TYPE,,,,,,
mxnet.ndarray.op.elemwise_mul,rhs,DD: NDArray,D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.ndarray.op.multi_mp_sgd_mom_update,momentum,"DD: float, optional, default=0",D_TYPE optional default CONSTANT_NUM,D_TYPE,,,,CONSTANT_VAL,"[0,1]",
mxnet.image.CreateAugmenter,rand_mirror,DD: bool,D_TYPE,D_TYPE,,,,CONSTANT_VAL,,
mxnet.ndarray.linalg.potrf,A,DD: NDArray,D_STRUCTURE,,D_STRUCTURE,D_STRUCTURE,,,,
mxnet.ndarray.erfinv,out,"DD: NDArray, optional",D_STRUCTURE optional,,,D_STRUCTURE,,,,
mxnet.ndarray.cast_storage,out,"DD: NDArray, optional",D_STRUCTURE optional,,,D_STRUCTURE,,,,
mxnet.ndarray.topk,dtype,"DD: {'float16', 'float32', 'float64', 'int32', 'int64', 'uint8'},optional, default='float32'",QSTR optional default QSTR,D_TYPE,,,,CONSTANT_VAL,,QSTR
mxnet.ndarray.mp_lamb_update_phase2,lr,"DD: float, required",D_TYPE required,D_TYPE,,,,CONSTANT_VAL,"[0,1]",
mxnet.gluon.rnn.LSTM,hidden_size,DD: int,D_TYPE,D_TYPE,,,,CONSTANT_VAL,"[0,inf)",
mxnet.ndarray.op.sgd_mom_update,weight,DD: NDArray,D_STRUCTURE,D_TYPE,,D_STRUCTURE,,,,
mxnet.ndarray.ctc_loss,label,DD: NDArray,D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.contrib.ndarray.MultiProposal,rpn_pre_nms_top_n,"DD: int, optional, default='6000'",D_TYPE optional default CONSTANT_NUM,D_TYPE,,,,CONSTANT_VAL,"[0,inf)",
mxnet.ndarray.op.exp,data,DD: NDArray,D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.ndarray.equal,rhs,DD: scalar or mxnet.ndarray.array,scalar or mxnet D_STRUCTURE D_STRUCTURE,D_TYPE,,D_STRUCTURE,,CONSTANT_VAL,,
mxnet.ndarray.random_normal,loc,"DD: float, optional, default=0",D_TYPE optional default CONSTANT_NUM,D_TYPE,,,,CONSTANT_VAL,,
mxnet.ndarray.sample_exponential,out,"DD: NDArray, optional",D_STRUCTURE optional,,,D_STRUCTURE,,,,
mxnet.io.ImageDetRecordIter,batch_size,"DD: int (non-negative), required",D_TYPE BSTR required,D_TYPE,,,,,"[0,inf)",
mxnet.ndarray.op.log1p,out,"DD: NDArray, optional",D_STRUCTURE optional,,,D_STRUCTURE,,,,
