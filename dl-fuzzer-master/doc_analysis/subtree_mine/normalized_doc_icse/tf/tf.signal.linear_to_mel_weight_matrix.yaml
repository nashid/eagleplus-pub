aliases:
- tf.compat.v1.signal.linear_to_mel_weight_matrix
constraints:
  dtype:
    default: tf.dtypes.float32
    descp: The `DType` of the result matrix. Must be a floating point type.
    normalized_default: D_TYPE D_TYPE
    normalized_descp:
    - The QSTR of the result matrix
    - Must be a D_TYPE point type
  lower_edge_hertz:
    default: '125.0'
    descp: Python float. Lower bound on the frequencies to be included in the mel
      spectrum. This corresponds to the lower edge of the lowest triangular band.
    normalized_default: DEFAULT CONSTANT_FLOAT
    normalized_descp:
    - Python D_TYPE
    - Lower bound on the frequencies to be included in the mel spectrum
    - This corresponds to the lower edge of the lowest triangular band
  name:
    default: None
    descp: An optional name for the operation.
    normalized_default: DEFAULT None
    normalized_descp:
    - An optional name for the operation
  num_mel_bins:
    default: '20'
    descp: Python int. How many bands in the resulting mel spectrum.
    normalized_default: DEFAULT CONSTANT_NUM
    normalized_descp:
    - Python D_TYPE
    - How many bands in the resulting mel spectrum
  num_spectrogram_bins:
    default: '129'
    descp: An integer `Tensor`. How many bins there are in the source spectrogram
      data, which is understood to be `fft_size // 2 + 1`, i.e. the spectrogram only
      contains the nonredundant FFT bins.
    normalized_default: DEFAULT CONSTANT_NUM
    normalized_descp:
    - An D_TYPE D_STRUCTURE
    - How many bins there are in the source spectrogram data which is understood to
      be fft_size CONSTANT_NUM CONSTANT_NUM i e
    - the spectrogram only contains the nonredundant FFT bins
  sample_rate:
    default: '8000'
    descp: An integer or float `Tensor`. Samples per second of the input signal used
      to create the spectrogram. Used to figure out the frequencies corresponding
      to each spectrogram bin, which dictates how they are mapped into the mel scale.
    normalized_default: DEFAULT CONSTANT_NUM
    normalized_descp:
    - An D_TYPE D_STRUCTURE
    - Samples per second of the input signal used to create the spectrogram
    - Used to figure out the frequencies corresponding to each spectrogram bin which
      dictates how they are mapped into the mel scale
  upper_edge_hertz:
    default: '3800.0'
    descp: Python float. The desired top edge of the highest frequency band.
    normalized_default: DEFAULT CONSTANT_FLOAT
    normalized_descp:
    - Python D_TYPE
    - The desired top edge of the highest frequency band
exceptions:
- ValueError: If `num_mel_bins`/`num_spectrogram_bins`/`sample_rate` are not positive,
    `lower_edge_hertz` is negative, frequency edges are incorrectly ordered, `upper_edge_hertz`
    is larger than the Nyquist frequency.
inputs:
  optional:
  - num_mel_bins
  - num_spectrogram_bins
  - sample_rate
  - lower_edge_hertz
  - upper_edge_hertz
  - dtype
  - name
  required: []
link: https://www.tensorflow.org/versions/r2.1/api_docs/python/tf/signal/linear_to_mel_weight_matrix
outputs: A `Tensor` of shape `[num_spectrogram_bins, num_mel_bins]`.
package: tensorflow
target: linear_to_mel_weight_matrix
title: tf.signal.linear_to_mel_weight_matrix
version: 2.1.0
