aliases:
- tf.compat.v1.linalg.lu_reconstruct
constraints:
  lower_upper:
    descp: '`lu` as returned by `tf.linalg.lu`, i.e., if `matmul(P, matmul(L, U))
      = X` then `lower_upper = L + U - eye`.'
    normalized_descp:
    - QSTR as returned by tf linalg lu , i e , if matmul BSTR X QSTR lower_upper L
      U eye
  name:
    default: None
    descp: 'Python `str` name given to ops managed by this object. Default value:
      `None` (i.e., ''lu_reconstruct'').'
    normalized_default: DEFAULT None
    normalized_descp:
    - Python D_TYPE name given to ops managed by this object
    - Default value QSTR i e , QSTR
  perm:
    descp: '`p` as returned by `tf.linag.lu`, i.e., if `matmul(P, matmul(L, U)) =
      X` then `perm = argmax(P)`.'
    normalized_descp:
    - QSTR as returned by tf linag lu , i e , if matmul BSTR X QSTR perm argmax BSTR
  validate_args:
    default: 'False'
    descp: 'Python `bool` indicating whether arguments should be checked for correctness.
      Default value: `False` (i.e., don''t validate arguments).'
    normalized_default: DEFAULT CONSTANT_BOOL
    normalized_descp:
    - Python D_TYPE indicating whether arguments should be checked for correctness
    - Default value CONSTANT_BOOL i e , don t validate arguments
inputs:
  optional:
  - validate_args
  - name
  required:
  - lower_upper
  - perm
link: https://www.tensorflow.org/versions/r2.1/api_docs/python/tf/linalg/lu_reconstruct
outputs:
- x: The original input to `tf.linalg.lu`, i.e., `x` as in,`lu_reconstruct(*tf.linalg.lu(x))`.
package: tensorflow
target: lu_reconstruct
title: tf.linalg.lu_reconstruct
version: 2.1.0
