constraints:
  X:
    descp: nd-array, list or sparse matrix Input data.
    dtype:
    - numeric
  accept_large_sparse:
    default: 'True'
    descp: bool (default=True) If a CSR, CSC, COO or BSR sparse matrix is supplied
      and accepted by accept_sparse, accept_large_sparse will cause it to be accepted
      only if its indices are stored with a 32-bit dtype.
    dtype:
    - boolean
    enum:
    - '32'
    ndim:
    - '0'
  accept_sparse:
    default: 'False'
    descp: string, boolean or list of string (default=False) String[s] representing
      allowed sparse matrix formats, such as 'csc', 'csr', etc. If the input is sparse
      but not in the allowed format, it will be converted to the first listed format.
      True allows the input to be any format. False means that a sparse matrix input
      will raise an error.
    dtype:
    - boolean
    - string
    ndim:
    - '0'
    - '1'
  allow_nd:
    default: 'False'
    descp: boolean (default=False) Whether to allow X.ndim > 2.
    dtype:
    - boolean
    ndim:
    - '0'
  copy:
    default: 'False'
    descp: boolean (default=False) Whether a forced copy will be triggered. If copy=False,
      a copy might be triggered by a conversion.
    dtype:
    - boolean
    ndim:
    - '0'
  dtype:
    default: numeric
    descp: string, type, list of types or None (default="numeric") Data type of result.
      If None, the dtype of the input is preserved. If "numeric", dtype is preserved
      unless array.dtype is object. If dtype is a list of types, conversion on the
      first type is only performed if the dtype of the input is not in the list.
    dtype:
    - numpy.dtype
    - string
    ndim:
    - '0'
    - '1'
  ensure_2d:
    default: 'True'
    descp: boolean (default=True) Whether to raise a value error if X is not 2D.
    dtype:
    - boolean
    ndim:
    - '0'
    - '2'
  ensure_min_features:
    default: '1'
    descp: int (default=1) Make sure that the 2D array has some minimum number of
      features (columns). The default value of 1 rejects empty datasets. This check
      is only enforced when X has effectively 2 dimensions or is originally 1D and
      ``ensure_2d`` is True. Setting to 0 disables this check.
    dtype:
    - int
    ndim:
    - '0'
    - '1'
    - '2'
    range:
    - '[0,inf)'
  ensure_min_samples:
    default: '1'
    descp: int (default=1) Make sure that X has a minimum number of samples in its
      first axis (rows for a 2D array).
    dtype:
    - int
    ndim:
    - '0'
    - '2'
    range:
    - '[0,inf)'
  estimator:
    default: None
    descp: str or estimator instance (default=None) If passed, include the name of
      the estimator in warning messages.
    dtype:
    - string
    ndim:
    - '0'
  force_all_finite:
    default: 'True'
    descp: 'boolean or ''allow-nan'', (default=True) Whether to raise an error on
      np.inf and np.nan in X. This parameter does not influence whether y can have
      np.inf or np.nan values. The possibilities are: - True: Force all values of
      X to be finite. - False: accept both np.inf and np.nan in X. - ''allow-nan'':
      accept only np.nan values in X. Values cannot be infinite.'
    dtype:
    - boolean
    ndim:
    - '0'
  multi_output:
    default: 'False'
    descp: boolean (default=False) Whether to allow 2D y (array or sparse matrix).
      If false, y will be validated as a vector. y cannot have np.nan or np.inf values
      if multi_output=True.
    dtype:
    - boolean
    ndim:
    - '0'
    - '2'
  order:
    default: None
    descp: '''F'', ''C'' or None (default=None) Whether an array will be forced to
      be fortran or c-style.'
    dtype:
    - boolean
  warn_on_dtype:
    default: None
    descp: boolean or None, optional (default=None) Raise DataConversionWarning if
      the dtype of the input data structure does not match the requested dtype, causing
      a memory copy.
    dtype:
    - boolean
    - numpy.dtype
    ndim:
    - '0'
  y:
    descp: nd-array, list or sparse matrix Labels.
    dtype:
    - numeric
  y_numeric:
    default: 'False'
    descp: boolean (default=False) Whether to ensure that y has a numeric type. If
      dtype of y is object, it is converted to float64. Should only be used for regression
      algorithms.
    dtype:
    - boolean
    - numeric
    - numpy.dtype
    ndim:
    - '0'
inputs:
  optional:
  - accept_sparse
  - accept_large_sparse
  - dtype
  - order
  - copy
  - force_all_finite
  - ensure_2d
  - allow_nd
  - multi_output
  - ensure_min_samples
  - ensure_min_features
  - y_numeric
  - warn_on_dtype
  - estimator
  required:
  - X
  - y
link: ''
package: sklearn
target: check_X_y
title: sklearn.utils.check_X_y
version: 0.24.2
