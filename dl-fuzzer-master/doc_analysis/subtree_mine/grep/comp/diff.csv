File,Arg,Type,Constr_src,Constr_cmp,Descp
mxnet.test_utils.set_env_var,key,prim_dtype,"['boolean', 'string']",['string'],Env var to set
mxnet.ndarray.linalg_extracttrian,A,nonprim_dtype,['ndarray'],"['ndarray', 'tensor']",Tensor of square matrices
mxnet.ndarray.op.tile,reps,nonprim_dtype,['tensor'],"['tensor', 'tuple']","The number of times for repeating the tensor a. Each dim size of reps must be a positive integer. If reps has length d, the result will have dimension of max(d, a.ndim); If a.ndim < d, a is promoted to be d-dimensional by prepending new axes. If a.ndim > d, reps is promoted to a.ndim by pre-pending 1's to it."
mxnet.ndarray.arange,dtype,prim_dtype,"['numpy.dtype', 'string']","['numpy.dtype', 'numpy.float32', 'string']",The data type of the NDArray. The default datatype is np.float32.
mxnet.test_utils.assert_almost_equal_ignore_nan,atol,prim_dtype,['boolean'],['float'],The absolute threshold. Default threshold will be used if set to `None`.
mxnet.test_utils.assert_almost_equal_ignore_nan,rtol,prim_dtype,['boolean'],['float'],The relative threshold. Default threshold will be used if set to `None`.
mxnet.ndarray.sparse.mean,axis,nonprim_dtype,['tuple'],"['ndarray', 'tuple']","The axis or axes along which to perform the reduction.  The default, axis=(), will compute over all elements into a scalar array with shape (1,). If axis is int, a reduction is performed on a particular axis. If axis is a tuple of ints, a reduction is performed on all the axes specified in the tuple. If exclude is true, reduction will be performed on the axes that are NOT in axis instead. Negative values means indexing from right to left.  "
mxnet.ndarray.SequenceReverse,sequence_length,nonprim_dtype,['ndarray'],"['list', 'ndarray']",vector of sequence lengths of the form [batch_size]
mxnet.gluon.model_zoo.vision.get_mobilenet,multiplier,prim_dtype,"['float', 'int']",['float'],The width multiplier for controling the model size. Only multipliers that are no less than 0.25 are supported. The actual number of channels is equal to the original channel size multiplied by this multiplier.
mxnet.ndarray.linalg_slogdet,A,nonprim_dtype,['ndarray'],"['ndarray', 'tensor']",Tensor of square matrix
mxnet.ndarray.RNN,parameters,nonprim_dtype,['ndarray'],"['list', 'ndarray']",Vector of all RNN trainable parameters concatenated
mxnet.ndarray.RNN,sequence_length,nonprim_dtype,['ndarray'],"['list', 'ndarray']",Vector of valid sequence lengths for each element in batch. (Only used if use_sequence_length kwarg is True)
mxnet.ndarray.contrib.count_sketch,h,nonprim_dtype,['ndarray'],"['list', 'ndarray']",The index vector
mxnet.ndarray.contrib.count_sketch,s,nonprim_dtype,['ndarray'],"['list', 'ndarray']",The sign vector
mxnet.ndarray.linalg.makediag,A,nonprim_dtype,['ndarray'],"['ndarray', 'tensor']",Tensor of diagonal entries
mxnet.gluon.rnn.LSTM,layout,nonprim_dtype,['tensor'],"['list', 'tensor']","The format of input and output tensors. T, N and C stand for sequence length, batch size, and feature dimensions respectively."
mxnet.contrib.ndarray.count_sketch,h,nonprim_dtype,['ndarray'],"['list', 'ndarray']",The index vector
mxnet.contrib.ndarray.count_sketch,s,nonprim_dtype,['ndarray'],"['list', 'ndarray']",The sign vector
mxnet.ndarray.utils.empty,dtype,prim_dtype,"['numpy.dtype', 'string']","['numpy.dtype', 'numpy.float32', 'string']",An optional value type (default is float32).
mxnet.gluon.rnn.GRU,layout,nonprim_dtype,['tensor'],"['list', 'tensor']","The format of input and output tensors. T, N and C stand for sequence length, batch size, and feature dimensions respectively."
mxnet.ndarray.linalg.det,A,nonprim_dtype,['ndarray'],"['ndarray', 'tensor']",Tensor of square matrix
mxnet.gluon.nn.Conv3D,weight_initializer,prim_dtype,"['boolean', 'string']",['string'],Initializer for the weight weights matrix.
mxnet.contrib.quantization.quantize_net,calib_mode,prim_dtype,['string'],"['numpy.float32', 'string']","If calib_mode='none', no calibration will be used and the thresholds for requantization after the corresponding layers will be calculated at runtime by calling min and max operators. The quantized models generated in this mode are normally 10-20% slower than those with calibrations during inference. If calib_mode='naive', the min and max values of the layer outputs from a calibration dataset will be directly taken as the thresholds for quantization. If calib_mode='entropy' (default mode), the thresholds for quantization will be derived such that the KL divergence between the distributions of FP32 layer outputs and quantized layer outputs is minimized based upon the calibration dataset."
mxnet.contrib.quantization.quantize_net,quantized_dtype,prim_dtype,['string'],"['numpy.int8', 'numpy.uint8', 'string']","The quantized destination type for input data. Currently support 'int8' , 'uint8' and 'auto'. 'auto' means automatically select output type according to calibration result. Default value is 'int8'."
mxnet.ndarray.max,axis,nonprim_dtype,['tuple'],"['ndarray', 'tuple']","The axis or axes along which to perform the reduction.  The default, axis=(), will compute over all elements into a scalar array with shape (1,). If axis is int, a reduction is performed on a particular axis. If axis is a tuple of ints, a reduction is performed on all the axes specified in the tuple. If exclude is true, reduction will be performed on the axes that are NOT in axis instead. Negative values means indexing from right to left.  "
mxnet.ndarray.op.SequenceMask,sequence_length,nonprim_dtype,['ndarray'],"['list', 'ndarray']",vector of sequence lengths of the form [batch_size]
mxnet.contrib.quantization.quantize_model,calib_mode,prim_dtype,['string'],"['numpy.float32', 'string']","If calib_mode='none', no calibration will be used and the thresholds for requantization after the corresponding layers will be calculated at runtime by calling min and max operators. The quantized models generated in this mode are normally 10-20% slower than those with calibrations during inference. If calib_mode='naive', the min and max values of the layer outputs from a calibration dataset will be directly taken as the thresholds for quantization. If calib_mode='entropy' (default mode), the thresholds for quantization will be derived such that the KL divergence between the distributions of FP32 layer outputs and quantized layer outputs is minimized based upon the calibration dataset."
mxnet.contrib.quantization.quantize_model,quantized_dtype,prim_dtype,['string'],"['numpy.int8', 'numpy.uint8', 'string']","The quantized destination type for input data. Currently support 'int8', 'uint8' and 'auto'. 'auto' means automatically select output type according to calibration result. Default value is 'int8'."
mxnet.contrib.quantization.quantize_model,sym,prim_dtype,['string'],"['numpy.float32', 'string']",Defines the structure of a neural network for FP32 data types.
mxnet.ndarray.max_axis,axis,nonprim_dtype,['tuple'],"['ndarray', 'tuple']","The axis or axes along which to perform the reduction.  The default, axis=(), will compute over all elements into a scalar array with shape (1,). If axis is int, a reduction is performed on a particular axis. If axis is a tuple of ints, a reduction is performed on all the axes specified in the tuple. If exclude is true, reduction will be performed on the axes that are NOT in axis instead. Negative values means indexing from right to left.  "
mxnet.ndarray.min,axis,nonprim_dtype,['tuple'],"['ndarray', 'tuple']","The axis or axes along which to perform the reduction.  The default, axis=(), will compute over all elements into a scalar array with shape (1,). If axis is int, a reduction is performed on a particular axis. If axis is a tuple of ints, a reduction is performed on all the axes specified in the tuple. If exclude is true, reduction will be performed on the axes that are NOT in axis instead. Negative values means indexing from right to left.  "
mxnet.ndarray.broadcast_to,shape,nonprim_dtype,['ndarray'],"['ndarray', 'tuple']","The shape of the desired array. We can set the dim to zero if it's same as the original. E.g A = broadcast_to(B, shape=(10, 0, 0)) has the same meaning as A = broadcast_axis(B, axis=0, size=10)."
mxnet.contrib.ndarray.quantize_v2,max_calib_range,prim_dtype,"['float', 'numpy.float32']","['float', 'numpy.float32', 'numpy.int8', 'numpy.uint8']","The maximum scalar value in the form of float32. If present, it will be used to quantize the fp32 data into int8 or uint8."
mxnet.contrib.ndarray.quantize_v2,min_calib_range,prim_dtype,"['float', 'numpy.float32']","['float', 'numpy.float32', 'numpy.int8', 'numpy.uint8']","The minimum scalar value in the form of float32. If present, it will be used to quantize the fp32 data into int8 or uint8."
mxnet.ndarray.linspace,dtype,prim_dtype,"['numpy.dtype', 'string']","['numpy.dtype', 'numpy.float32', 'string']",The data type of the NDArray. The default datatype is np.float32.
mxnet.ndarray.op.argmax,axis,prim_dtype,"['boolean', 'int']",['int'],"The axis along which to perform the reduction. Negative values means indexing from right to left. `Requires axis to be set as int, because global reduction is not supported yet.`"
mxnet.ndarray.linalg.trmm,A,nonprim_dtype,['ndarray'],"['ndarray', 'tensor']",Tensor of lower triangular matrices
mxnet.ndarray.linalg.trmm,B,nonprim_dtype,['ndarray'],"['ndarray', 'tensor']",Tensor of matrices
mxnet.ndarray.nanprod,axis,nonprim_dtype,['tuple'],"['ndarray', 'tuple']","The axis or axes along which to perform the reduction.  The default, axis=(), will compute over all elements into a scalar array with shape (1,). If axis is int, a reduction is performed on a particular axis. If axis is a tuple of ints, a reduction is performed on all the axes specified in the tuple. If exclude is true, reduction will be performed on the axes that are NOT in axis instead. Negative values means indexing from right to left.  "
mxnet.ndarray.op.linalg_extractdiag,A,nonprim_dtype,['ndarray'],"['ndarray', 'tensor']",Tensor of square matrices
mxnet.ndarray.op.min,axis,nonprim_dtype,['tuple'],"['ndarray', 'tuple']","The axis or axes along which to perform the reduction.  The default, axis=(), will compute over all elements into a scalar array with shape (1,). If axis is int, a reduction is performed on a particular axis. If axis is a tuple of ints, a reduction is performed on all the axes specified in the tuple. If exclude is true, reduction will be performed on the axes that are NOT in axis instead. Negative values means indexing from right to left.  "
mxnet.gluon.nn.Conv2D,weight_initializer,prim_dtype,"['boolean', 'string']",['string'],Initializer for the weight weights matrix.
mxnet.ndarray.linalg_trmm,A,nonprim_dtype,['ndarray'],"['ndarray', 'tensor']",Tensor of lower triangular matrices
mxnet.ndarray.linalg_trmm,B,nonprim_dtype,['ndarray'],"['ndarray', 'tensor']",Tensor of matrices
mxnet.ndarray.linalg.slogdet,A,nonprim_dtype,['ndarray'],"['ndarray', 'tensor']",Tensor of square matrix
mxnet.image.resize_short,size,prim_dtype,"['boolean', 'int']",['int'],The length to be set for the shorter edge.
mxnet.ndarray.image.resize,keep_ratio,prim_dtype,['boolean'],"['boolean', 'int']","Whether to resize the short edge or both edges to size, if size is give as an integer."
mxnet.gluon.contrib.rnn.Conv2DRNNCell,input_shape,nonprim_dtype,['tuple'],"['list', 'tensor', 'tuple']","Input tensor shape at each time step for each sample, excluding dimension of the batch size and sequence length. Must be consistent with conv_layout. For example, for layout 'NCHW' the shape should be (C, H, W)."
mxnet.ndarray.SequenceMask,sequence_length,nonprim_dtype,['ndarray'],"['list', 'ndarray']",vector of sequence lengths of the form [batch_size]
mxnet.log.get_logger,filemode,prim_dtype,"['int', 'string']",['string'],"The file mode to open the file (corresponding to filename), default is 'a' if filename is not `None`."
mxnet.ndarray.op.sum,axis,nonprim_dtype,['tuple'],"['ndarray', 'tuple']","The axis or axes along which to perform the reduction.  The default, axis=(), will compute over all elements into a scalar array with shape (1,). If axis is int, a reduction is performed on a particular axis. If axis is a tuple of ints, a reduction is performed on all the axes specified in the tuple. If exclude is true, reduction will be performed on the axes that are NOT in axis instead. Negative values means indexing from right to left.  "
mxnet.ndarray.linalg.inverse,A,nonprim_dtype,['ndarray'],"['ndarray', 'tensor']",Tensor of square matrix
mxnet.ndarray.sparse.norm,axis,nonprim_dtype,['tuple'],"['ndarray', 'tuple']","The axis or axes along which to perform the reduction.The default, axis=(), will compute over all elements into a scalar array with shape (1,). If axis is int, a reduction is performed on a particular axis. If axis is a 2-tuple, it specifies the axes that hold 2-D matrices, and the matrix norms of these matrices are computed.   "
mxnet.ndarray.op.nanprod,axis,nonprim_dtype,['tuple'],"['ndarray', 'tuple']","The axis or axes along which to perform the reduction.  The default, axis=(), will compute over all elements into a scalar array with shape (1,). If axis is int, a reduction is performed on a particular axis. If axis is a tuple of ints, a reduction is performed on all the axes specified in the tuple. If exclude is true, reduction will be performed on the axes that are NOT in axis instead. Negative values means indexing from right to left.  "
mxnet.ndarray.op.SequenceReverse,sequence_length,nonprim_dtype,['ndarray'],"['list', 'ndarray']",vector of sequence lengths of the form [batch_size]
mxnet.ndarray.op.linalg_extracttrian,A,nonprim_dtype,['ndarray'],"['ndarray', 'tensor']",Tensor of square matrices
mxnet.ndarray.linalg.extracttrian,A,nonprim_dtype,['ndarray'],"['ndarray', 'tensor']",Tensor of square matrices
mxnet.ndarray.op.max_axis,axis,nonprim_dtype,['tuple'],"['ndarray', 'tuple']","The axis or axes along which to perform the reduction.  The default, axis=(), will compute over all elements into a scalar array with shape (1,). If axis is int, a reduction is performed on a particular axis. If axis is a tuple of ints, a reduction is performed on all the axes specified in the tuple. If exclude is true, reduction will be performed on the axes that are NOT in axis instead. Negative values means indexing from right to left.  "
mxnet.ndarray.linalg.potri,A,nonprim_dtype,['ndarray'],"['ndarray', 'tensor']",Tensor of lower triangular matrices
mxnet.io.ImageRecordIter,fill_value,prim_dtype,"['boolean', 'int']",['int'],Set the padding pixels value to `fill_value`.
mxnet.gluon.nn.Conv1DTranspose,weight_initializer,prim_dtype,"['boolean', 'string']",['string'],Initializer for the weight weights matrix.
mxnet.ndarray.op.linalg_makediag,A,nonprim_dtype,['ndarray'],"['ndarray', 'tensor']",Tensor of diagonal entries
mxnet.ndarray.rmspropalex_update,clip_weights,prim_dtype,"['boolean', 'float']",['float'],"Clip weights to the range of [-clip_weights, clip_weights] If clip_weights <= 0, weight clipping is turned off. weights = max(min(weights, clip_weights), -clip_weights)."
mxnet.gluon.utils.split_and_load,even_split,prim_dtype,['int'],['boolean'],Whether to force all slices to have the same number of elements.
mxnet.ndarray.eye,dtype,prim_dtype,"['numpy.dtype', 'string']","['numpy.dtype', 'numpy.float32', 'string']",An optional value type (default is float32)
mxnet.ndarray.op.Softmax,ignore_label,prim_dtype,"['boolean', 'float']",['float'],"The instances whose labels == ignore_label will be ignored during backward, if use_ignore is set to `true`)."
mxnet.ndarray.op.Softmax,use_ignore,prim_dtype,"['boolean', 'numeric']",['boolean'],"If set to `true`, the ignore_label value will not contribute to the backward gradient."
mxnet.ndarray.contrib.requantize,max_calib_range,prim_dtype,"['float', 'numpy.float32']","['float', 'numpy.float32', 'numpy.int32', 'numpy.int8']","The maximum scalar value in the form of float32 obtained through calibration. If present, it will be used to requantize the int32 data into int8."
mxnet.ndarray.contrib.requantize,max_range,prim_dtype,"['numeric', 'numpy.float32', 'numpy.int32']","['numpy.float32', 'numpy.int32']",The original maximum scalar value in the form of float32 used for quantizing data into int32.
mxnet.ndarray.contrib.requantize,min_calib_range,prim_dtype,"['float', 'numpy.float32']","['float', 'numpy.float32', 'numpy.int32', 'numpy.int8']","The minimum scalar value in the form of float32 obtained through calibration. If present, it will be used to requantize the int32 data into int8."
mxnet.ndarray.contrib.requantize,min_range,prim_dtype,"['numeric', 'numpy.float32', 'numpy.int32']","['numpy.float32', 'numpy.int32']",The original minimum scalar value in the form of float32 used for quantizing data into int32.
mxnet.ndarray.linalg.sumlogdiag,A,nonprim_dtype,['ndarray'],"['ndarray', 'tensor']",Tensor of square matrices
mxnet.gluon.utils.split_data,even_split,prim_dtype,['int'],['boolean'],"Whether to force all slices to have the same number of elements. If True, an error will be raised when num_slice does not evenly divide data.shape[batch_axis]."
mxnet.ndarray.unravel_index,shape,nonprim_dtype,['ndarray'],"['ndarray', 'tuple']",Shape of the array into which the multi-indices apply.
mxnet.ndarray.ravel_multi_index,shape,nonprim_dtype,['ndarray'],"['ndarray', 'tuple']",Shape of the array into which the multi-indices apply.
mxnet.ndarray.op.norm,axis,nonprim_dtype,['tuple'],"['ndarray', 'tuple']","The axis or axes along which to perform the reduction.The default, axis=(), will compute over all elements into a scalar array with shape (1,). If axis is int, a reduction is performed on a particular axis. If axis is a 2-tuple, it specifies the axes that hold 2-D matrices, and the matrix norms of these matrices are computed.   "
mxnet.ndarray.slice_like,axes,nonprim_dtype,['list'],"['list', 'tuple']",List of axes on which input data will be sliced according to the corresponding size of the second input. By default will slice on all axes. Negative axes are supported.
mxnet.ndarray.random.multinomial,dtype,prim_dtype,"['numpy.dtype', 'string']","['numpy.dtype', 'numpy.int32', 'string']",Data type of the sample output array. The default is int32. Note that the data type of the log likelihood array is the same with that of data.
mxnet.ndarray.op.MakeLoss,valid_thresh,prim_dtype,"['boolean', 'float']",['float'],clip each element in the array to 0 when it is less than `valid_thresh`. This is used when `normalization` is set to `'valid'`.
mxnet.ndarray.op.min_axis,axis,nonprim_dtype,['tuple'],"['ndarray', 'tuple']","The axis or axes along which to perform the reduction.  The default, axis=(), will compute over all elements into a scalar array with shape (1,). If axis is int, a reduction is performed on a particular axis. If axis is a tuple of ints, a reduction is performed on all the axes specified in the tuple. If exclude is true, reduction will be performed on the axes that are NOT in axis instead. Negative values means indexing from right to left.  "
mxnet.ndarray.linalg_det,A,nonprim_dtype,['ndarray'],"['ndarray', 'tensor']",Tensor of square matrix
mxnet.ndarray.one_hot,off_value,prim_dtype,"['numeric', 'numpy.double']",['numpy.double'],The value assigned to the locations not represented by indices.
mxnet.ndarray.one_hot,on_value,prim_dtype,"['numeric', 'numpy.double']",['numpy.double'],The value assigned to the locations represented by indices.
mxnet.ndarray.contrib.index_copy,index_vector,nonprim_dtype,['ndarray'],"['list', 'ndarray']",Index vector
mxnet.ndarray.contrib.index_copy,old_tensor,nonprim_dtype,['ndarray'],"['ndarray', 'tensor']",Old tensor
mxnet.gluon.contrib.rnn.Conv1DGRUCell,input_shape,nonprim_dtype,['tuple'],"['list', 'tensor', 'tuple']","Input tensor shape at each time step for each sample, excluding dimension of the batch size and sequence length. Must be consistent with conv_layout. For example, for layout 'NCW' the shape should be (C, W)."
mxnet.gluon.contrib.rnn.Conv2DLSTMCell,input_shape,nonprim_dtype,['tuple'],"['list', 'tensor', 'tuple']","Input tensor shape at each time step for each sample, excluding dimension of the batch size and sequence length. Must be consistent with conv_layout. For example, for layout 'NCHW' the shape should be (C, H, W)."
mxnet.gluon.contrib.rnn.Conv1DRNNCell,input_shape,nonprim_dtype,['tuple'],"['list', 'tensor', 'tuple']","Input tensor shape at each time step for each sample, excluding dimension of the batch size and sequence length. Must be consistent with conv_layout. For example, for layout 'NCW' the shape should be (C, W)."
mxnet.ndarray.op.linalg_slogdet,A,nonprim_dtype,['ndarray'],"['ndarray', 'tensor']",Tensor of square matrix
mxnet.ndarray.op.SequenceLast,sequence_length,nonprim_dtype,['ndarray'],"['list', 'ndarray']",vector of sequence lengths of the form [batch_size]
mxnet.ndarray.sparse.sum,axis,nonprim_dtype,['tuple'],"['ndarray', 'tuple']","The axis or axes along which to perform the reduction.  The default, axis=(), will compute over all elements into a scalar array with shape (1,). If axis is int, a reduction is performed on a particular axis. If axis is a tuple of ints, a reduction is performed on all the axes specified in the tuple. If exclude is true, reduction will be performed on the axes that are NOT in axis instead. Negative values means indexing from right to left.  "
mxnet.ndarray.op.linalg_inverse,A,nonprim_dtype,['ndarray'],"['ndarray', 'tensor']",Tensor of square matrix
mxnet.ndarray.cumsum,dtype,prim_dtype,['int'],"['int', 'numpy.float16', 'numpy.float32', 'numpy.float64', 'numpy.int32', 'numpy.int64', 'numpy.int8']","Type of the returned array and of the accumulator in which the elements are summed. If dtype is not specified, it defaults to the dtype of a, unless a has an integer dtype with a precision less than that of the default platform integer. In that case, the default platform integer is used."
mxnet.ndarray.op.ravel_multi_index,shape,nonprim_dtype,['ndarray'],"['ndarray', 'tuple']",Shape of the array into which the multi-indices apply.
mxnet.ndarray.linalg_sumlogdiag,A,nonprim_dtype,['ndarray'],"['ndarray', 'tensor']",Tensor of square matrices
mxnet.ndarray.InstanceNorm,beta,nonprim_dtype,['ndarray'],"['list', 'ndarray']","A vector of length 'channel', which is added to the product of the normalized input and the weight."
mxnet.ndarray.InstanceNorm,gamma,nonprim_dtype,['ndarray'],"['list', 'ndarray']","A vector of length 'channel', which multiplies the normalized input."
mxnet.ndarray.histogram,range,prim_dtype,"['float', 'int']",['float'],"The lower and upper range of the bins. If not provided, range is simply (a.min(), a.max()). Values outside the range are ignored. The first element of the range must be less than or equal to the second. range affects the automatic bin computation as well, the range will be equally divided by the number of bins."
mxnet.ndarray.linalg_inverse,A,nonprim_dtype,['ndarray'],"['ndarray', 'tensor']",Tensor of square matrix
mxnet.ndarray.empty,dtype,prim_dtype,"['numpy.dtype', 'string']","['numpy.dtype', 'numpy.float32', 'string']",An optional value type (default is float32).
mxnet.test_utils.assert_almost_equal,atol,prim_dtype,['boolean'],['float'],The absolute threshold. Default threshold will be used if set to `None`.
mxnet.test_utils.assert_almost_equal,rtol,prim_dtype,['boolean'],['float'],The relative threshold. Default threshold will be used if set to `None`.
mxnet.ndarray.utils.zeros,dtype,prim_dtype,"['numpy.dtype', 'string']","['numpy.dtype', 'numpy.float32', 'string']",An optional value type (default is float32)
mxnet.ndarray.tile,reps,nonprim_dtype,['tensor'],"['tensor', 'tuple']","The number of times for repeating the tensor a. Each dim size of reps must be a positive integer. If reps has length d, the result will have dimension of max(d, a.ndim); If a.ndim < d, a is promoted to be d-dimensional by prepending new axes. If a.ndim > d, reps is promoted to a.ndim by pre-pending 1's to it."
mxnet.ndarray.op.max,axis,nonprim_dtype,['tuple'],"['ndarray', 'tuple']","The axis or axes along which to perform the reduction.  The default, axis=(), will compute over all elements into a scalar array with shape (1,). If axis is int, a reduction is performed on a particular axis. If axis is a tuple of ints, a reduction is performed on all the axes specified in the tuple. If exclude is true, reduction will be performed on the axes that are NOT in axis instead. Negative values means indexing from right to left.  "
mxnet.ndarray.linalg_maketrian,A,nonprim_dtype,['ndarray'],"['list', 'ndarray', 'tensor']",Tensor of triangular matrices stored as vectors
mxnet.gluon.contrib.rnn.Conv2DGRUCell,input_shape,nonprim_dtype,['tuple'],"['list', 'tensor', 'tuple']","Input tensor shape at each time step for each sample, excluding dimension of the batch size and sequence length. Must be consistent with conv_layout. For example, for layout 'NCHW' the shape should be (C, H, W)."
mxnet.ndarray.op.UpSampling,num_filter,prim_dtype,"['boolean', 'int']",['int'],"Input filter. Only used by bilinear sample_type.Since bilinear upsampling uses deconvolution, num_filters is set to the number of channels."
mxnet.ndarray.op.linalg_potri,A,nonprim_dtype,['ndarray'],"['ndarray', 'tensor']",Tensor of lower triangular matrices
mxnet.ndarray.op.RNN,parameters,nonprim_dtype,['ndarray'],"['list', 'ndarray']",Vector of all RNN trainable parameters concatenated
mxnet.ndarray.op.RNN,sequence_length,nonprim_dtype,['ndarray'],"['list', 'ndarray']",Vector of valid sequence lengths for each element in batch. (Only used if use_sequence_length kwarg is True)
mxnet.ndarray.ones,dtype,prim_dtype,"['numpy.dtype', 'string']","['numpy.dtype', 'numpy.float32', 'string']",An optional value type (default is float32).
mxnet.ndarray.op.argmin,axis,prim_dtype,"['boolean', 'int']",['int'],"The axis along which to perform the reduction. Negative values means indexing from right to left. `Requires axis to be set as int, because global reduction is not supported yet.`"
mxnet.ndarray.op.linalg_trmm,A,nonprim_dtype,['ndarray'],"['ndarray', 'tensor']",Tensor of lower triangular matrices
mxnet.ndarray.op.linalg_trmm,B,nonprim_dtype,['ndarray'],"['ndarray', 'tensor']",Tensor of matrices
mxnet.ndarray.zeros,dtype,prim_dtype,"['numpy.dtype', 'string']","['numpy.dtype', 'numpy.float32', 'string']",An optional value type (default is float32)
mxnet.ndarray.op.slice_like,axes,nonprim_dtype,['list'],"['list', 'tuple']",List of axes on which input data will be sliced according to the corresponding size of the second input. By default will slice on all axes. Negative axes are supported.
mxnet.ndarray.op.linalg_det,A,nonprim_dtype,['ndarray'],"['ndarray', 'tensor']",Tensor of square matrix
mxnet.ndarray.op.sum_axis,axis,nonprim_dtype,['tuple'],"['ndarray', 'tuple']","The axis or axes along which to perform the reduction.  The default, axis=(), will compute over all elements into a scalar array with shape (1,). If axis is int, a reduction is performed on a particular axis. If axis is a tuple of ints, a reduction is performed on all the axes specified in the tuple. If exclude is true, reduction will be performed on the axes that are NOT in axis instead. Negative values means indexing from right to left.  "
mxnet.ndarray.UpSampling,num_filter,prim_dtype,"['boolean', 'int']",['int'],"Input filter. Only used by bilinear sample_type.Since bilinear upsampling uses deconvolution, num_filters is set to the number of channels."
mxnet.ndarray.op.prod,axis,nonprim_dtype,['tuple'],"['ndarray', 'tuple']","The axis or axes along which to perform the reduction.  The default, axis=(), will compute over all elements into a scalar array with shape (1,). If axis is int, a reduction is performed on a particular axis. If axis is a tuple of ints, a reduction is performed on all the axes specified in the tuple. If exclude is true, reduction will be performed on the axes that are NOT in axis instead. Negative values means indexing from right to left.  "
mxnet.ndarray.op.one_hot,off_value,prim_dtype,"['numeric', 'numpy.double']",['numpy.double'],The value assigned to the locations not represented by indices.
mxnet.ndarray.op.one_hot,on_value,prim_dtype,"['numeric', 'numpy.double']",['numpy.double'],The value assigned to the locations represented by indices.
mxnet.contrib.quantization.calib_graph,quantized_dtype,prim_dtype,['string'],"['numpy.int8', 'numpy.uint8', 'string']","The quantized destination type for input data. Currently support 'int8' , 'uint8' and 'auto'. 'auto' means automatically select output type according to calibration result. Default value is 'int8'."
mxnet.ndarray.linalg.trsm,A,nonprim_dtype,['ndarray'],"['ndarray', 'tensor']",Tensor of lower triangular matrices
mxnet.ndarray.linalg.trsm,B,nonprim_dtype,['ndarray'],"['ndarray', 'tensor']",Tensor of matrices
mxnet.ndarray.op.nansum,axis,nonprim_dtype,['tuple'],"['ndarray', 'tuple']","The axis or axes along which to perform the reduction.  The default, axis=(), will compute over all elements into a scalar array with shape (1,). If axis is int, a reduction is performed on a particular axis. If axis is a tuple of ints, a reduction is performed on all the axes specified in the tuple. If exclude is true, reduction will be performed on the axes that are NOT in axis instead. Negative values means indexing from right to left.  "
mxnet.ndarray.sum_axis,axis,nonprim_dtype,['tuple'],"['ndarray', 'tuple']","The axis or axes along which to perform the reduction.  The default, axis=(), will compute over all elements into a scalar array with shape (1,). If axis is int, a reduction is performed on a particular axis. If axis is a tuple of ints, a reduction is performed on all the axes specified in the tuple. If exclude is true, reduction will be performed on the axes that are NOT in axis instead. Negative values means indexing from right to left.  "
mxnet.gluon.contrib.rnn.Conv3DRNNCell,input_shape,nonprim_dtype,['tuple'],"['list', 'tensor', 'tuple']","Input tensor shape at each time step for each sample, excluding dimension of the batch size and sequence length. Must be consistent with conv_layout. For example, for layout 'NCDHW' the shape should be (C, D, H, W)."
mxnet.ndarray.contrib.quantize_v2,max_calib_range,prim_dtype,"['float', 'numpy.float32']","['float', 'numpy.float32', 'numpy.int8', 'numpy.uint8']","The maximum scalar value in the form of float32. If present, it will be used to quantize the fp32 data into int8 or uint8."
mxnet.ndarray.contrib.quantize_v2,min_calib_range,prim_dtype,"['float', 'numpy.float32']","['float', 'numpy.float32', 'numpy.int8', 'numpy.uint8']","The minimum scalar value in the form of float32. If present, it will be used to quantize the fp32 data into int8 or uint8."
mxnet.ndarray.full,dtype,prim_dtype,"['numpy.dtype', 'string']","['numpy.dtype', 'numpy.float32', 'string']",The data type of the returned NDArray. The default datatype is float32.
mxnet.image.CreateAugmenter,rand_gray,prim_dtype,"['float', 'int']",['float'],"[0, 1], probability to convert to grayscale for all channels, the number of channels will not be reduced to 1"
mxnet.ndarray.SoftmaxOutput,ignore_label,prim_dtype,"['boolean', 'float']",['float'],"The instances whose labels == ignore_label will be ignored during backward, if use_ignore is set to `true`)."
mxnet.ndarray.SoftmaxOutput,use_ignore,prim_dtype,"['boolean', 'numeric']",['boolean'],"If set to `true`, the ignore_label value will not contribute to the backward gradient."
mxnet.ndarray.random.exponential,shape,nonprim_dtype,['tuple'],"['ndarray', 'tuple']","The number of samples to draw. If shape is, e.g., (m, n) and scale is a scalar, output shape will be (m, n). If scale is an NDArray with shape, e.g., (x, y), then output will have shape (x, y, m, n), where m*n samples are drawn for each entry in scale."
mxnet.model.load_checkpoint,epoch,prim_dtype,"['boolean', 'int']",['int'],Epoch number of model we would like to load.
mxnet.ndarray.rmsprop_update,clip_weights,prim_dtype,"['boolean', 'float']",['float'],"Clip weights to the range of [-clip_weights, clip_weights] If clip_weights <= 0, weight clipping is turned off. weights = max(min(weights, clip_weights), -clip_weights)."
mxnet.ndarray.linalg_trsm,A,nonprim_dtype,['ndarray'],"['ndarray', 'tensor']",Tensor of lower triangular matrices
mxnet.ndarray.linalg_trsm,B,nonprim_dtype,['ndarray'],"['ndarray', 'tensor']",Tensor of matrices
mxnet.ndarray.SequenceLast,sequence_length,nonprim_dtype,['ndarray'],"['list', 'ndarray']",vector of sequence lengths of the form [batch_size]
mxnet.ndarray.argmax,axis,prim_dtype,"['boolean', 'int']",['int'],"The axis along which to perform the reduction. Negative values means indexing from right to left. `Requires axis to be set as int, because global reduction is not supported yet.`"
mxnet.gluon.nn.Conv3DTranspose,weight_initializer,prim_dtype,"['boolean', 'string']",['string'],Initializer for the weight weights matrix.
mxnet.ndarray.op.linalg_sumlogdiag,A,nonprim_dtype,['ndarray'],"['ndarray', 'tensor']",Tensor of square matrices
mxnet.ndarray.op.cumsum,dtype,prim_dtype,['int'],"['int', 'numpy.float16', 'numpy.float32', 'numpy.float64', 'numpy.int32', 'numpy.int64', 'numpy.int8']","Type of the returned array and of the accumulator in which the elements are summed. If dtype is not specified, it defaults to the dtype of a, unless a has an integer dtype with a precision less than that of the default platform integer. In that case, the default platform integer is used."
mxnet.ndarray.op.rmsprop_update,clip_weights,prim_dtype,"['boolean', 'float']",['float'],"Clip weights to the range of [-clip_weights, clip_weights] If clip_weights <= 0, weight clipping is turned off. weights = max(min(weights, clip_weights), -clip_weights)."
mxnet.ndarray.random.poisson,shape,nonprim_dtype,['tuple'],"['ndarray', 'tuple']","The number of samples to draw. If shape is, e.g., (m, n) and lam is a scalar, output shape will be (m, n). If lam is an NDArray with shape, e.g., (x, y), then output will have shape (x, y, m, n), where m*n samples are drawn for each entry in lam."
mxnet.ndarray.op.unravel_index,shape,nonprim_dtype,['ndarray'],"['ndarray', 'tuple']",Shape of the array into which the multi-indices apply.
mxnet.gluon.nn.Conv2DTranspose,weight_initializer,prim_dtype,"['boolean', 'string']",['string'],Initializer for the weight weights matrix.
mxnet.ndarray.mean,axis,nonprim_dtype,['tuple'],"['ndarray', 'tuple']","The axis or axes along which to perform the reduction.  The default, axis=(), will compute over all elements into a scalar array with shape (1,). If axis is int, a reduction is performed on a particular axis. If axis is a tuple of ints, a reduction is performed on all the axes specified in the tuple. If exclude is true, reduction will be performed on the axes that are NOT in axis instead. Negative values means indexing from right to left.  "
mxnet.contrib.ndarray.requantize,max_calib_range,prim_dtype,"['float', 'numpy.float32']","['float', 'numpy.float32', 'numpy.int32', 'numpy.int8']","The maximum scalar value in the form of float32 obtained through calibration. If present, it will be used to requantize the int32 data into int8."
mxnet.contrib.ndarray.requantize,max_range,prim_dtype,"['numeric', 'numpy.float32', 'numpy.int32']","['numpy.float32', 'numpy.int32']",The original maximum scalar value in the form of float32 used for quantizing data into int32.
mxnet.contrib.ndarray.requantize,min_calib_range,prim_dtype,"['float', 'numpy.float32']","['float', 'numpy.float32', 'numpy.int32', 'numpy.int8']","The minimum scalar value in the form of float32 obtained through calibration. If present, it will be used to requantize the int32 data into int8."
mxnet.contrib.ndarray.requantize,min_range,prim_dtype,"['numeric', 'numpy.float32', 'numpy.int32']","['numpy.float32', 'numpy.int32']",The original minimum scalar value in the form of float32 used for quantizing data into int32.
mxnet.ndarray.op.linalg_maketrian,A,nonprim_dtype,['ndarray'],"['list', 'ndarray', 'tensor']",Tensor of triangular matrices stored as vectors
mxnet.contrib.quantization.quantize_graph,calib_mode,prim_dtype,['string'],"['numpy.float32', 'string']","If calib_mode='none', no calibration will be used and the thresholds for requantization after the corresponding layers will be calculated at runtime by calling min and max operators. The quantized models generated in this mode are normally 10-20% slower than those with calibrations during inference. If calib_mode='naive', the min and max values of the layer outputs from a calibration dataset will be directly taken as the thresholds for quantization. If calib_mode='entropy' (default mode), the thresholds for quantization will be derived such that the KL divergence between the distributions of FP32 layer outputs and quantized layer outputs is minimized based upon the calibration dataset."
mxnet.contrib.quantization.quantize_graph,quantized_dtype,prim_dtype,['string'],"['numpy.int8', 'numpy.uint8', 'string']","The quantized destination type for input data. Currently support 'int8' , 'uint8' and 'auto'. 'auto' means automatically select output type according to calibration result. Default value is 'int8'."
mxnet.visualization.plot_network,dtype,prim_dtype,['numpy.float32'],"['numpy.float32', 'string']","Specifies the type of the input tensors. If specified, the visualization will include the type of the tensors between the nodes. dtype is a dictionary mapping input symbol names (str) to the corresponding tensor type (e.g. numpy.float32)."
mxnet.visualization.plot_network,shape,nonprim_dtype,"['dict', 'tensor']","['dict', 'tensor', 'tuple']","Specifies the shape of the input tensors. If specified, the visualization will include the shape of the tensors between the nodes. shape is a dictionary mapping input symbol names (str) to the corresponding tensor shape (tuple)."
mxnet.ndarray.min_axis,axis,nonprim_dtype,['tuple'],"['ndarray', 'tuple']","The axis or axes along which to perform the reduction.  The default, axis=(), will compute over all elements into a scalar array with shape (1,). If axis is int, a reduction is performed on a particular axis. If axis is a tuple of ints, a reduction is performed on all the axes specified in the tuple. If exclude is true, reduction will be performed on the axes that are NOT in axis instead. Negative values means indexing from right to left.  "
mxnet.ndarray.zeros,dtype,prim_dtype,"['numpy.dtype', 'string']","['numpy.dtype', 'numpy.float32', 'string']",An optional value type (default is float32)
mxnet.ndarray.linalg.extractdiag,A,nonprim_dtype,['ndarray'],"['ndarray', 'tensor']",Tensor of square matrices
mxnet.ndarray.op.SoftmaxOutput,ignore_label,prim_dtype,"['boolean', 'float']",['float'],"The instances whose labels == ignore_label will be ignored during backward, if use_ignore is set to `true`)."
mxnet.ndarray.op.SoftmaxOutput,use_ignore,prim_dtype,"['boolean', 'numeric']",['boolean'],"If set to `true`, the ignore_label value will not contribute to the backward gradient."
mxnet.ndarray.op.InstanceNorm,beta,nonprim_dtype,['ndarray'],"['list', 'ndarray']","A vector of length 'channel', which is added to the product of the normalized input and the weight."
mxnet.ndarray.op.InstanceNorm,gamma,nonprim_dtype,['ndarray'],"['list', 'ndarray']","A vector of length 'channel', which multiplies the normalized input."
mxnet.contrib.ndarray.index_copy,index_vector,nonprim_dtype,['ndarray'],"['list', 'ndarray']",Index vector
mxnet.contrib.ndarray.index_copy,old_tensor,nonprim_dtype,['ndarray'],"['ndarray', 'tensor']",Old tensor
mxnet.gluon.contrib.rnn.Conv3DGRUCell,input_shape,nonprim_dtype,['tuple'],"['list', 'tensor', 'tuple']","Input tensor shape at each time step for each sample, excluding dimension of the batch size and sequence length. Must be consistent with conv_layout. For example, for layout 'NCDHW' the shape should be (C, D, H, W)."
mxnet.gluon.contrib.rnn.Conv1DLSTMCell,input_shape,nonprim_dtype,['tuple'],"['list', 'tensor', 'tuple']","Input tensor shape at each time step for each sample, excluding dimension of the batch size and sequence length. Must be consistent with conv_layout. For example, for layout 'NCW' the shape should be (C, W)."
mxnet.ndarray.linalg_makediag,A,nonprim_dtype,['ndarray'],"['ndarray', 'tensor']",Tensor of diagonal entries
mxnet.ndarray.norm,axis,nonprim_dtype,['tuple'],"['ndarray', 'tuple']","The axis or axes along which to perform the reduction.The default, axis=(), will compute over all elements into a scalar array with shape (1,). If axis is int, a reduction is performed on a particular axis. If axis is a 2-tuple, it specifies the axes that hold 2-D matrices, and the matrix norms of these matrices are computed.   "
mxnet.ndarray.linalg_extractdiag,A,nonprim_dtype,['ndarray'],"['ndarray', 'tensor']",Tensor of square matrices
mxnet.ndarray.argmin,axis,prim_dtype,"['boolean', 'int']",['int'],"The axis along which to perform the reduction. Negative values means indexing from right to left. `Requires axis to be set as int, because global reduction is not supported yet.`"
mxnet.ndarray.linalg_potri,A,nonprim_dtype,['ndarray'],"['ndarray', 'tensor']",Tensor of lower triangular matrices
mxnet.gluon.contrib.rnn.Conv3DLSTMCell,input_shape,nonprim_dtype,['tuple'],"['list', 'tensor', 'tuple']","Input tensor shape at each time step for each sample, excluding dimension of the batch size and sequence length. Must be consistent with conv_layout. For example, for layout 'NCDHW' the shape should be (C, D, H, W)."
mxnet.test_utils.almost_equal_ignore_nan,atol,prim_dtype,['boolean'],['float'],The absolute threshold. Default threshold will be used if set to `None`.
mxnet.test_utils.almost_equal_ignore_nan,rtol,prim_dtype,['boolean'],['float'],The relative threshold. Default threshold will be used if set to `None`.
mxnet.ndarray.op.broadcast_to,shape,nonprim_dtype,['ndarray'],"['ndarray', 'tuple']","The shape of the desired array. We can set the dim to zero if it's same as the original. E.g A = broadcast_to(B, shape=(10, 0, 0)) has the same meaning as A = broadcast_axis(B, axis=0, size=10)."
mxnet.io.ImageDetRecordIter,max_random_contrast,prim_dtype,"['float', 'numeric']",['float'],Augmentation Param: Maximum random value of delta contrast.
mxnet.io.ImageDetRecordIter,max_random_hue,prim_dtype,"['int', 'numeric']",['int'],Augmentation Param: Maximum random value of H channel in HSL color space.
mxnet.io.ImageDetRecordIter,max_random_illumination,prim_dtype,"['int', 'numeric']",['int'],Augmentation Param: Maximum random value of L channel in HSL color space.
mxnet.io.ImageDetRecordIter,max_random_saturation,prim_dtype,"['int', 'numeric']",['int'],Augmentation Param: Maximum random value of S channel in HSL color space.
mxnet.io.ImageDetRecordIter,mean_a,prim_dtype,"['float', 'numeric']",['float'],Augmentation Param: Mean value on Alpha channel.
mxnet.io.ImageDetRecordIter,mean_b,prim_dtype,"['float', 'numeric']",['float'],Augmentation Param: Mean value on B channel.
mxnet.io.ImageDetRecordIter,mean_g,prim_dtype,"['float', 'numeric']",['float'],Augmentation Param: Mean value on G channel.
mxnet.io.ImageDetRecordIter,mean_r,prim_dtype,"['float', 'numeric']",['float'],Augmentation Param: Mean value on R channel.
mxnet.ndarray.Softmax,ignore_label,prim_dtype,"['boolean', 'float']",['float'],"The instances whose labels == ignore_label will be ignored during backward, if use_ignore is set to `true`)."
mxnet.ndarray.Softmax,use_ignore,prim_dtype,"['boolean', 'numeric']",['boolean'],"If set to `true`, the ignore_label value will not contribute to the backward gradient."
mxnet.ndarray.sum,axis,nonprim_dtype,['tuple'],"['ndarray', 'tuple']","The axis or axes along which to perform the reduction.  The default, axis=(), will compute over all elements into a scalar array with shape (1,). If axis is int, a reduction is performed on a particular axis. If axis is a tuple of ints, a reduction is performed on all the axes specified in the tuple. If exclude is true, reduction will be performed on the axes that are NOT in axis instead. Negative values means indexing from right to left.  "
mxnet.gluon.rnn.RNN,layout,nonprim_dtype,['tensor'],"['list', 'tensor']","The format of input and output tensors. T, N and C stand for sequence length, batch size, and feature dimensions respectively."
mxnet.image.random_size_crop,area,prim_dtype,"['boolean', 'float']",['float'],"If tuple, minimum area and maximum area to be maintained after cropping If float, minimum area to be maintained after cropping, maximum area is set to 1.0"
mxnet.ndarray.op.linalg_trsm,A,nonprim_dtype,['ndarray'],"['ndarray', 'tensor']",Tensor of lower triangular matrices
mxnet.ndarray.op.linalg_trsm,B,nonprim_dtype,['ndarray'],"['ndarray', 'tensor']",Tensor of matrices
mxnet.ndarray.linalg.maketrian,A,nonprim_dtype,['ndarray'],"['list', 'ndarray', 'tensor']",Tensor of triangular matrices stored as vectors
mxnet.ndarray.nansum,axis,nonprim_dtype,['tuple'],"['ndarray', 'tuple']","The axis or axes along which to perform the reduction.  The default, axis=(), will compute over all elements into a scalar array with shape (1,). If axis is int, a reduction is performed on a particular axis. If axis is a tuple of ints, a reduction is performed on all the axes specified in the tuple. If exclude is true, reduction will be performed on the axes that are NOT in axis instead. Negative values means indexing from right to left.  "
mxnet.gluon.model_zoo.vision.get_mobilenet_v2,multiplier,prim_dtype,"['float', 'int']",['float'],The width multiplier for controling the model size. Only multipliers that are no less than 0.25 are supported. The actual number of channels is equal to the original channel size multiplied by this multiplier.
mxnet.ndarray.prod,axis,nonprim_dtype,['tuple'],"['ndarray', 'tuple']","The axis or axes along which to perform the reduction.  The default, axis=(), will compute over all elements into a scalar array with shape (1,). If axis is int, a reduction is performed on a particular axis. If axis is a tuple of ints, a reduction is performed on all the axes specified in the tuple. If exclude is true, reduction will be performed on the axes that are NOT in axis instead. Negative values means indexing from right to left.  "
mxnet.ndarray.op.mean,axis,nonprim_dtype,['tuple'],"['ndarray', 'tuple']","The axis or axes along which to perform the reduction.  The default, axis=(), will compute over all elements into a scalar array with shape (1,). If axis is int, a reduction is performed on a particular axis. If axis is a tuple of ints, a reduction is performed on all the axes specified in the tuple. If exclude is true, reduction will be performed on the axes that are NOT in axis instead. Negative values means indexing from right to left.  "
mxnet.ndarray.op.rmspropalex_update,clip_weights,prim_dtype,"['boolean', 'float']",['float'],"Clip weights to the range of [-clip_weights, clip_weights] If clip_weights <= 0, weight clipping is turned off. weights = max(min(weights, clip_weights), -clip_weights)."
mxnet.ndarray.MakeLoss,valid_thresh,prim_dtype,"['boolean', 'float']",['float'],clip each element in the array to 0 when it is less than `valid_thresh`. This is used when `normalization` is set to `'valid'`.
mxnet.gluon.nn.Conv1D,weight_initializer,prim_dtype,"['boolean', 'string']",['string'],Initializer for the weight weights matrix.
