constraints:
  block_size:
    descp: An int that is >= 2.
    dtype:
    - int
    ndim:
    - '0'
    range:
    - '[0,inf)'
  crops:
    descp: 'A Tensor. Must be one of the following types: int32, int64. 2-D tensor
      of non-negative integers with shape [2, 2]. It specifies how many elements to
      crop from the intermediate result across the spatial dimensions as follows:
      crops = [[crop_top, crop_bottom], [crop_left, crop_right]]'
    dtype:
    - int
    ndim:
    - '2'
    range:
    - '[0,inf)'
    shape:
    - '[2,2]'
    tensor_t:
    - tf.tensor
  input:
    descp: A Tensor. 4-D tensor with shape [batch*block_size*block_size, height_pad/block_size,
      width_pad/block_size, depth]. Note that the batch size of the input tensor must
      be divisible by block_size * block_size.
    dtype:
    - numeric
    ndim:
    - '4'
    range:
    - '[0,inf)'
    shape:
    - '[batch*&block_size*&block_size,height_pad/&block_size,width_pad/&block_size,depth]'
    tensor_t:
    - tf.tensor
  name:
    default: None
    descp: A name for the operation (optional).
    dtype:
    - tf.string
    ndim:
    - '0'
dependency:
- batch
- depth
- height_pad
- width_pad
inputs:
  optional:
  - name
  required:
  - input
  - crops
  - block_size
link: https://www.tensorflow.org/versions/r2.3/api_docs/python/tf/raw_ops/BatchToSpace
outputs:
- A Tensor. Has the same type as input.
package: tensorflow
target: BatchToSpace
title: tf.raw_ops.BatchToSpace
version: 2.3.0
