constraints:
  input:
    descp: the input tensor of at least `signal_ndim` dimensions
    doc_dtype: Tensor
    dtype:
    - int
    - numeric
    - string
    - torch.bool
    - torch.dtype
    ndim:
    - '&signal_ndim'
    - '0'
    - '1'
    - '3'
    range:
    - '[0,1]'
    - '[0,inf)'
    shape:
    - '&input'
    - '&signal_ndim'
    - '[b,p,m]'
    - '[c]'
    tensor_t:
    - torch.tensor
  normalized:
    default: 'False'
    descp: 'controls whether to return normalized results. Default: `False`'
    doc_dtype: bool, optional
    dtype:
    - torch.bool
    ndim:
    - '0'
    - '1'
  onesided:
    default: 'True'
    descp: 'controls whether to return half of results to avoid redundancy. Default:
      `True`'
    doc_dtype: bool, optional
    dtype:
    - int
    - torch.bool
    - torch.float16
    ndim:
    - '0'
    - '1'
    range:
    - '[0,inf)'
  signal_ndim:
    descp: the number of dimensions in each signal. `signal_ndim` can only be 1, 2
      or 3
    doc_dtype: int
    dtype:
    - int
    ndim:
    - '0'
    - '1'
    range:
    - '[0,inf)'
inputs:
  optional:
  - normalized
  - onesided
  required:
  - input
  - signal_ndim
link: https://pytorch.org/docs/stable/torch.html#torch.rfft
package: torch
ret_type: Tensor
target: rfft
title: torch.rfft
version: 1.5.0
