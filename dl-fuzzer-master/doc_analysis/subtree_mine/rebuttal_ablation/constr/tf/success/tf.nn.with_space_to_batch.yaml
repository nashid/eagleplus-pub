aliases:
- tf.compat.v1.nn.with_space_to_batch
constraints:
  data_format:
    default: None
    descp: A string or None.  Specifies whether the channel dimension of the `input`
      and output is the last dimension (default, or if `data_format`does not start
      with "NC"), or the second dimension (if `data_format`starts with "NC").  For
      N=1, the valid values are "NWC" (default) and "NCW".  For N=2, the valid values
      are "NHWC" (default) and "NCHW". For N=3, the valid values are "NDHWC" (default)
      and "NCDHW".
    dtype:
    - float
    - int
    - numeric
    - tf.bool
    - tf.dtype
    - tf.string
    enum:
    - NCDHW
    - NCHW
    - NCW
    - NDHWC
    - NHWC
    - NWC
    ndim:
    - '0'
    - '1'
    range:
    - '[0,1]'
    - '[0,inf)'
    shape:
    - '[1]'
    - '[2]'
  dilation_rate:
    descp: int32 Tensor of known shape [num_spatial_dims].
    dtype:
    - int
    - numeric
    - tf.bool
    - tf.dtype
    - tf.int32
    - tf.string
    enum:
    - '[num_spatial_dims]'
    ndim:
    - '0'
    - '1'
    range:
    - '[0,1]'
    - '[0,inf)'
    shape:
    - '[1]'
    - '[2]'
    - '[n]'
    - '[num_spatial_dims]'
    tensor_t:
    - tf.tensor
  filter_shape:
    default: None
    descp: If padding = "SAME", specifies the shape of the convolution kernel/pooling
      window as an integer Tensor of shape [>=num_spatial_dims]. If padding = "VALID",
      filter_shape is ignored and need not be specified.
    dtype:
    - int
    - numeric
    - tf.bool
    - tf.dtype
    - tf.string
    ndim:
    - '0'
    - '1'
    range:
    - '[0,1]'
    - '[0,inf)'
    shape:
    - '[1]'
    - '[n]'
    tensor_t:
    - tf.tensor
  input:
    descp: Tensor of rank > max(spatial_dims).
    dtype:
    - int
    - numeric
    - tf.bool
    - tf.dtype
    - tf.string
    enum:
    - spatial_dims)
    ndim:
    - '0'
    - '1'
    range:
    - '[0,inf)'
    shape:
    - '[&spatial_dims]'
    - '[1]'
    - '[2]'
    - '[n]'
    tensor_t:
    - tf.tensor
  op:
    descp: Function that maps (input, num_spatial_dims, padding) -> output
  padding:
    descp: str constant equal to "VALID" or "SAME"
  spatial_dims:
    default: None
    descp: 'Monotonically increasing sequence of `num_spatial_dims`integers (which
      are >= 1) specifying the spatial dimensions of `input`and output.  Defaults
      to: `range(1, num_spatial_dims+1)`.'
    dtype:
    - float
    - int
    - numeric
    - tf.bool
    - tf.dtype
    - tf.string
    ndim:
    - '0'
    - '1'
    range:
    - '[0,1]'
    - '[0,inf)'
    shape:
    - '[1]'
    - '[2]'
    - '[n]'
    structure:
    - list
exceptions:
- ValueError: if `padding` is invalid or the arguments are incompatible.
- ValueError: if `spatial_dims` are invalid.
inputs:
  optional:
  - filter_shape
  - spatial_dims
  - data_format
  required:
  - input
  - dilation_rate
  - padding
  - op
link: https://www.tensorflow.org/versions/r2.1/api_docs/python/tf/nn/with_space_to_batch
outputs: The output Tensor as described above, dimensions will vary based on the op
  provided.
package: tensorflow
target: with_space_to_batch
title: tf.nn.with_space_to_batch
version: 2.1.0
