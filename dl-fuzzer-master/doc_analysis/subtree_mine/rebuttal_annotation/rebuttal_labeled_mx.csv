API,Arg,Descp,Normalized_descp,dtype,structure,shape,ndim,range,enum
mxnet.contrib.ndarray.box_encode,matches,"(B, N) value range [0, M)",BSTR value range BSTR,,matrix,BSTR,CONSTANT_VAL,BSTR,
mxnet.image.CreateDetAugmenter,rand_pad,"[0, 1], probability to apply random padding",BSTR probability to apply random padding,numeric,,,,"[0,1]",
mxnet.image.imdecode,flag,1 for three channel color output. 0 for grayscale output.,CONSTANT_NUM for grayscale output,,,,,,CONSTANT_NUM
mxnet.image.imdecode,flag,1 for three channel color output. 0 for grayscale output.,CONSTANT_NUM for three channel color output,,,,,,CONSTANT_NUM
mxnet.util.set_np,shape,"A boolean value indicating whether the NumPy-shape semantics should be turned on or off. When this flag is set to True, zero-size and zero-dim shapes are all valid shapes in shape inference process, instead of treated as unknown shapes in legacy mode.",A D_TYPE value indicating whether the NumPy shape semantics should be turned on or off,D_TYPE,,,0,,
mxnet.util.set_np,shape,"A boolean value indicating whether the NumPy-shape semantics should be turned on or off. When this flag is set to True, zero-size and zero-dim shapes are all valid shapes in shape inference process, instead of treated as unknown shapes in legacy mode.",When this flag is set to CONSTANT_BOOL zero size and zero dim shapes are all valid shapes in shape inference process instead of treated as unknown shapes in legacy mode,bool,,,0,,
mxnet.test_utils.chi_square_check,generator,A function that is assumed to generate i.i.d samples from a specific distribution. generator(N) should generate N random samples.,A function that is assumed to generate i i d samples from a specific distribution,,,,,,
mxnet.test_utils.chi_square_check,generator,A function that is assumed to generate i.i.d samples from a specific distribution. generator(N) should generate N random samples.,generator BSTR should generate N random samples,,,,,,
mxnet.ndarray.contrib.calibrate_entropy,hist_edges,A ndarray/symbol of type float32,A D_STRUCTURE symbol of type D_TYPE,D_TYPE,D_STRUCTURE,,,,
mxnet.test_utils.np_reduce,numpy_reduce_func,A NumPy reducing function like `np.sum` or `np.max`.,A NumPy reducing function like np sum QSTR np max,,,,,,QSTR
mxnet.ndarray.rmspropalex_update,epsilon,A small constant for numerical stability.,A small constant for numerical stability,numeric,,,0,,
mxnet.ndarray.op.rmspropalex_update,epsilon,A small constant for numerical stability.,A small constant for numerical stability,numeric,,,0,,
mxnet.ndarray.Activation,act_type,Activation function to be applied.,Activation function to be applied,,,,,,
mxnet.gluon.nn.Dense,activation,"Activation function to use. See help on Activation layer. If you don't specify anything, no activation is applied (ie. ""linear"" activation: a(x) = x).",Activation function to use,string,,,0,,
mxnet.gluon.nn.Dense,activation,"Activation function to use. See help on Activation layer. If you don't specify anything, no activation is applied (ie. ""linear"" activation: a(x) = x).",If you don t specify anything no activation is applied ie,,,,,,
mxnet.gluon.nn.Dense,activation,"Activation function to use. See help on Activation layer. If you don't specify anything, no activation is applied (ie. ""linear"" activation: a(x) = x).",QSTR activation a BSTR x,,,,,,
mxnet.gluon.nn.Dense,activation,"Activation function to use. See help on Activation layer. If you don't specify anything, no activation is applied (ie. ""linear"" activation: a(x) = x).",See help on Activation layer,,,,,,
mxnet.io.ImageRecordIter,saturation,"Add a random value in `[-saturation, saturation]` to the saturation of image.",Add a random value in BSTR to the saturation of image,numeric,,,,BSTR,
mxnet.ndarray.op.random_generalized_negative_binomial,alpha,Alpha (dispersion) parameter of the negative binomial distribution.,Alpha BSTR parameter of the negative binomial distribution,numeric,,,0,,
mxnet.ndarray.random_pdf_gamma,alpha,Alpha (shape) parameters of the distributions.,Alpha BSTR parameters of the distributions,numeric,,,0,,
mxnet.ndarray.zeros,dtype,An optional value type (default is float32),An optional value type BSTR,dtype,,,0,,
mxnet.contrib.ndarray.box_nms,topk,"Apply nms to topk boxes with descending scores, -1 to no restriction.",Apply nms to topk boxes with descending scores CONSTANT_NUM to no restriction,,,,,,CONSTANT_NUM
mxnet.ndarray.op.all_finite,data,Array,ONE_WORD D_STRUCTURE,,D_STRUCTURE,,,,
mxnet.ndarray.op.unravel_index,data,Array of flat indices,D_STRUCTURE of flat indices,int,D_STRUCTURE,,,,
mxnet.io.ImageDetRecordIter,resize_mode,"Augmentation Param: How image data fit in data_shape. force: force reshape to data_shape regardless of aspect ratio; shrink: ensure each side fit in data_shape, preserve aspect ratio; fit: fit image to data_shape, preserve ratio, will upscale if applicable.",Augmentation Param How image data fit in PARAM,,,,,,
mxnet.io.ImageDetRecordIter,resize_mode,"Augmentation Param: How image data fit in data_shape. force: force reshape to data_shape regardless of aspect ratio; shrink: ensure each side fit in data_shape, preserve aspect ratio; fit: fit image to data_shape, preserve ratio, will upscale if applicable.",force force reshape to PARAM regardless of aspect ratio shrink ensure each side fit in PARAM preserve aspect ratio fit fit image to PARAM preserve ratio will upscale if applicable,,,,,,"force'; 'shrink', 'fit'"
mxnet.io.ImageDetRecordIter,max_random_contrast,Augmentation Param: Maximum random value of delta contrast.,Augmentation Param Maximum random value of delta contrast,numeric,,,0,,
mxnet.io.ImageDetRecordIter,random_illumination_prob,Augmentation Param: Probability to apply random illumination.,Augmentation Param Probability to apply random illumination,numeric,,,0,"[0,1]",
mxnet.io.ImageDetRecordIter,scale,Augmentation Param: Scale in color space.,Augmentation Param Scale in color space,numeric,,,0,,
mxnet.io.ImageDetRecordIter,aug_seq,"Augmentation Param: the augmenter names to represent sequence of augmenters to be applied, seperated by comma. Additional keyword parameters will be seen by these augmenters. Make sure you don't use normal augmenters for detection tasks.",Additional keyword parameters will be seen by these augmenters,,,,,,
mxnet.io.ImageDetRecordIter,aug_seq,"Augmentation Param: the augmenter names to represent sequence of augmenters to be applied, seperated by comma. Additional keyword parameters will be seen by these augmenters. Make sure you don't use normal augmenters for detection tasks.",Augmentation Param the augmenter names to represent D_STRUCTURE of augmenters to be applied seperated by comma,,,,,,
mxnet.io.ImageDetRecordIter,aug_seq,"Augmentation Param: the augmenter names to represent sequence of augmenters to be applied, seperated by comma. Additional keyword parameters will be seen by these augmenters. Make sure you don't use normal augmenters for detection tasks.",Make sure you don t use normal augmenters for detection tasks,,,,,,
mxnet.test_utils.numeric_grad,aux_states,Auxiliary states values used as location to compute gradient Maps the name of aux_states to the corresponding numpy.ndarray. Value of all the auxiliary arguments must be provided.,Auxiliary states values used as PARAM to compute gradient Maps the name of aux_states to the corresponding numpy D_STRUCTURE,,,,,,
mxnet.test_utils.numeric_grad,aux_states,Auxiliary states values used as location to compute gradient Maps the name of aux_states to the corresponding numpy.ndarray. Value of all the auxiliary arguments must be provided.,Value of all the auxiliary arguments must be provided,,,,,,
mxnet.ndarray.op.cumsum,axis,Axis along which the cumulative sum is computed. The default (None) is to compute the cumsum over the flattened array.,Axis along which the cumulative sum is computed,int,,,0,,
mxnet.ndarray.op.cumsum,axis,Axis along which the cumulative sum is computed. The default (None) is to compute the cumsum over the flattened array.,The default BSTR is to compute the cumsum over the flattened D_STRUCTURE,,,,,,
mxnet.io.MNISTIter,batch_size,Batch Param: Batch Size.,Batch Param Batch Size,int,,,"[0,inf)",,
mxnet.io.ImageDetRecordIter,batch_size,Batch size.,Batch size,int,,,"[0,inf)",,
mxnet.ndarray.LayerNorm,beta,beta array,beta D_STRUCTURE,,D_STRUCTURE,,,,
mxnet.ndarray.BatchNorm,beta,beta array,beta D_STRUCTURE,,D_STRUCTURE,,,,
mxnet.contrib.ndarray.quantized_batch_norm,beta,beta.,ONE_WORD beta,,,,,,
mxnet.ndarray.op.Deconvolution,bias,Bias added to the result after the deconvolution operation.,Bias added to the result after the deconvolution operation,,,,,,
mxnet.ndarray.FullyConnected,bias,Bias parameter.,Bias parameter,,,,,,
mxnet.ndarray.contrib.quantized_conv,bias,bias.,ONE_WORD bias,,,,,,
mxnet.image.copyMakeBorder,bot,Bottom margin.,Bottom margin,,,,,,
mxnet.ndarray.ROIPooling,rois,"Bounding box coordinates, a 2D array of [[batch_index, x1, y1, x2, y2]], where (x1, y1) and (x2, y2) are top left and bottom right corners of designated region of interest. batch_index indicates the index of corresponding image in the input array",batch_index indicates the index of corresponding image in the input D_STRUCTURE,,,,,,
mxnet.ndarray.ROIPooling,rois,"Bounding box coordinates, a 2D array of [[batch_index, x1, y1, x2, y2]], where (x1, y1) and (x2, y2) are top left and bottom right corners of designated region of interest. batch_index indicates the index of corresponding image in the input array",Bounding box coordinates a CONSTANT_NUM D D_STRUCTURE of BSTR where BSTR are top left and bottom right corners of designated region of interest,,D_STRUCTURE,,CONSTANT_NUM,,
mxnet.ndarray.contrib.DeformablePSROIPooling,rois,"Bounding box coordinates, a 2D array of [[batch_index, x1, y1, x2, y2]]. (x1, y1) and (x2, y2) are top left and down right corners of designated region of interest. batch_index indicates the index of corresponding image in the input data",batch_index indicates the index of corresponding image in the input PARAM,,,,,,
mxnet.ndarray.contrib.DeformablePSROIPooling,rois,"Bounding box coordinates, a 2D array of [[batch_index, x1, y1, x2, y2]]. (x1, y1) and (x2, y2) are top left and down right corners of designated region of interest. batch_index indicates the index of corresponding image in the input data",Bounding box coordinates a CONSTANT_NUM D D_STRUCTURE of BSTR,,D_STRUCTURE,,CONSTANT_NUM,,
mxnet.ndarray.contrib.DeformablePSROIPooling,rois,"Bounding box coordinates, a 2D array of [[batch_index, x1, y1, x2, y2]]. (x1, y1) and (x2, y2) are top left and down right corners of designated region of interest. batch_index indicates the index of corresponding image in the input data",BSTR are top left and down right corners of designated region of interest,,,,,,
mxnet.profiler.dumps,sort_by,"can take 'total', 'avg', 'min', 'max', or 'count' by which stat to sort the entries in each category defaults to 'total'",can take QSTR by which stat to sort the entries in each category defaults to QSTR,,,,,,QSTR
mxnet.ndarray.multi_sgd_update,clip_gradient,"Clip gradient to the range of [-clip_gradient, clip_gradient] If clip_gradient <= 0, gradient clipping is turned off. grad = max(min(grad, clip_gradient), -clip_gradient).",Clip gradient to the range of BSTR If clip_gradient REXPR gradient clipping is turned off,numeric,,,,,
mxnet.ndarray.multi_sgd_update,clip_gradient,"Clip gradient to the range of [-clip_gradient, clip_gradient] If clip_gradient <= 0, gradient clipping is turned off. grad = max(min(grad, clip_gradient), -clip_gradient).",grad max BSTR,,,,,,
mxnet.ndarray.op.where,condition,condition array,condition D_STRUCTURE,,D_STRUCTURE,,,,
mxnet.gluon.contrib.rnn.Conv3DLSTMCell,params,Container for weight sharing between cells. Created if None.,Container for weight sharing between cells,,,,,,
mxnet.gluon.contrib.rnn.Conv3DRNNCell,params,Container for weight sharing between cells. Created if None.,Container for weight sharing between cells,,,,,,
mxnet.gluon.contrib.rnn.Conv3DGRUCell,params,Container for weight sharing between cells. Created if None.,Container for weight sharing between cells,,,,,,
mxnet.gluon.contrib.rnn.Conv3DLSTMCell,params,Container for weight sharing between cells. Created if None.,Created if None,,,,,,
mxnet.gluon.contrib.rnn.Conv3DRNNCell,params,Container for weight sharing between cells. Created if None.,Created if None,,,,,,
mxnet.gluon.contrib.rnn.Conv3DGRUCell,params,Container for weight sharing between cells. Created if None.,Created if None,,,,,,
mxnet.ndarray.random_generalized_negative_binomial,ctx,"Context of output, in format [cpu|gpu|cpu_pinned](n). Only used for imperative calls.",Context of output in format cpu gpu cpu_pinned BSTR,,,,,,
mxnet.ndarray.random_generalized_negative_binomial,ctx,"Context of output, in format [cpu|gpu|cpu_pinned](n). Only used for imperative calls.",Only used for imperative calls,,,,,,
mxnet.ndarray.contrib.arange_like,ctx,"Context of output, in format [cpu|gpu|cpu_pinned](n).Only used for imperative calls.",Context of output in format cpu gpu cpu_pinned BSTR Only used for imperative calls,,,,,,
mxnet.ndarray.op.gather_nd,data,data,ONE_WORD data,,,,,,
mxnet.ndarray.scatter_nd,data,data,ONE_WORD data,,,,,,
mxnet.ndarray.shuffle,data,Data to be shuffled.,Data to be shuffled,,,,,,
mxnet.ndarray.random.gamma,dtype,Data type of output samples. Default is 'float32',Data type of output samples,,,,,,
mxnet.ndarray.random.generalized_negative_binomial,dtype,Data type of output samples. Default is 'float32',Data type of output samples,,,,,,
mxnet.ndarray.random.gamma,dtype,Data type of output samples. Default is 'float32',Default is QSTR,,,,,,QSTR
mxnet.ndarray.random.generalized_negative_binomial,dtype,Data type of output samples. Default is 'float32',Default is QSTR,,,,,,QSTR
mxnet.io.MNISTIter,image,Dataset Param: Mnist image path.,Dataset Param Mnist image path,,,,,,
mxnet.ndarray.Dropout,mode,"DD: {'always', 'training'},optional, default='training'",QSTR optional default QSTR,,,,,,QSTR
mxnet.ndarray.UpSampling,sample_type,"DD: {'bilinear', 'nearest'}, required",QSTR required,,,,,,QSTR
mxnet.ndarray.take,mode,"DD: {'clip', 'raise', 'wrap'},optional, default='clip'",QSTR optional default QSTR,,,,,,QSTR
mxnet.ndarray.pick,mode,"DD: {'clip', 'wrap'},optional, default='clip'",QSTR optional default QSTR,,,,,,QSTR
mxnet.ndarray.op.ctc_loss,blank_label,"DD: {'first', 'last'},optional, default='first'",QSTR optional default QSTR,,,,,,QSTR
mxnet.ndarray.ctc_loss,blank_label,"DD: {'first', 'last'},optional, default='first'",QSTR optional default QSTR,,,,,,QSTR
mxnet.ndarray.CTCLoss,blank_label,"DD: {'first', 'last'},optional, default='first'",QSTR optional default QSTR,,,,,,QSTR
mxnet.io.ImageDetRecordIter,resize_mode,"DD: {'fit', 'force', 'shrink'},optional, default='force'",QSTR optional default QSTR,,,,,,QSTR
mxnet.ndarray.topk,dtype,"DD: {'float16', 'float32', 'float64', 'int32', 'int64', 'uint8'},optional, default='float32'",QSTR optional default QSTR,,,,,,QSTR
mxnet.ndarray.random.gamma,dtype,"DD: {'float16', 'float32', 'float64'}, optional",QSTR optional,,,,,,QSTR
mxnet.ndarray.random.generalized_negative_binomial,dtype,"DD: {'float16', 'float32', 'float64'}, optional",QSTR optional,,,,,,QSTR
mxnet.contrib.ndarray.dequantize,out_type,"DD: {'float32'},optional, default='float32'",QSTR optional default QSTR,,,,,,QSTR
mxnet.ndarray.op.Pooling,pooling_convention,"DD: {'full', 'same', 'valid'},optional, default='valid'",QSTR optional default QSTR,,,,,,QSTR
mxnet.ndarray.contrib.quantized_pooling,pooling_convention,"DD: {'full', 'same', 'valid'},optional, default='valid'",QSTR optional default QSTR,,,,,,QSTR
mxnet.ndarray.contrib.BilinearResize2D,mode,"DD: {'like', 'odd_scale', 'size', 'to_even_down', 'to_even_up', 'to_odd_down', 'to_odd_up'},optional, default='size'",PARAM QSTR optional default QSTR,,,,,,QSTR
mxnet.ndarray.random_uniform,dtype,"DD: {'None', 'float16', 'float32', 'float64'},optional, default='None'",QSTR optional default QSTR,,,,,,QSTR
mxnet.ndarray.sample_exponential,dtype,"DD: {'None', 'float16', 'float32', 'float64'},optional, default='None'",QSTR optional default QSTR,,,,,,QSTR
mxnet.ndarray.op.random_negative_binomial,dtype,"DD: {'None', 'float16', 'float32', 'float64'},optional, default='None'",QSTR optional default QSTR,,,,,,QSTR
mxnet.gluon.rnn.RNN,activation,"DD: {'relu' or 'tanh'}, default 'relu'",QSTR default QSTR,,,,,,QSTR
mxnet.ndarray.Activation,act_type,"DD: {'relu', 'sigmoid', 'softrelu', 'softsign', 'tanh'}, required",QSTR required,,,,,,QSTR
mxnet.ndarray.op.dot,forward_stype,"DD: {None, 'csr', 'default', 'row_sparse'},optional, default='None'",None QSTR optional default QSTR,,,,,,QSTR
mxnet.ndarray.Deconvolution,cudnn_tune,"DD: {None, 'fastest', 'limited_workspace', 'off'},optional, default='None'",None QSTR optional default QSTR,,,,,,QSTR
mxnet.io.CSVIter,dtype,"DD: {None, 'float16', 'float32', 'float64', 'int32', 'int64', 'int8', 'uint8'},optional, default='None'",None QSTR optional default QSTR,,,,,,QSTR
mxnet.io.LibSVMIter,dtype,"DD: {None, 'float16', 'float32', 'float64', 'int32', 'int64', 'int8', 'uint8'},optional, default='None'",None QSTR optional default QSTR,,,,,,QSTR