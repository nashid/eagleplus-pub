constraints:
  boxes:
    descp: A `Tensor` of type `float32`. 3-D with shape `[batch, num_bounding_boxes,
      4]` containing bounding boxes.
    dtype:
    - int
    - numeric
    - tf.bool
    - tf.dtype
    - tf.float32
    - tf.string
    ndim:
    - '0'
    - '1'
    - '3'
    - '>=3'
    range:
    - '[0,1]'
    - '[0,inf)'
    shape:
    - '[1]'
    - '[3]'
    - '[batch,num_bounding_boxes,4]'
    - '[n]'
    tensor_t:
    - tf.tensor
  colors:
    descp: A `Tensor` of type `float32`. 2-D. A list of RGBA colors to cycle through
      for the boxes.
    dtype:
    - '&boxes'
    - int
    - numeric
    - tf.bool
    - tf.dtype
    - tf.float32
    - tf.string
    ndim:
    - '0'
    - '1'
    - '2'
    - '>=2'
    range:
    - '[0,1]'
    - '[0,inf)'
    shape:
    - '&boxes'
    - '[1]'
    - '[2]'
    - '[n]'
    structure:
    - list
    tensor_t:
    - tf.tensor
  images:
    descp: 'A `Tensor`. Must be one of the following types: `float32`, `half`. 4-D
      with shape `[batch, height, width, depth]`. A batch of images.'
    dtype:
    - int
    - numeric
    - tf.bool
    - tf.dtype
    - tf.float16
    - tf.float32
    - tf.string
    ndim:
    - '0'
    - '1'
    - '4'
    - '>=4'
    range:
    - '[0,1]'
    - '[0,inf)'
    shape:
    - '[1]'
    - '[4]'
    - '[batch,height,width,depth]'
    tensor_t:
    - tf.tensor
  name:
    default: None
    descp: A name for the operation (optional).
    dtype:
    - float
    - int
    - tf.bool
    - tf.dtype
    - tf.string
    enum:
    - (optional)
    ndim:
    - '0'
    - '1'
    range:
    - (optional)
    - '[0,inf)'
    shape:
    - '[2]'
    tensor_t:
    - tf.tensor
inputs:
  optional:
  - name
  required:
  - images
  - boxes
  - colors
link: https://www.tensorflow.org/versions/r2.1/api_docs/python/tf/image/draw_bounding_boxes
outputs: A `Tensor`. Has the same type as `images`.
package: tensorflow
target: draw_bounding_boxes
title: tf.image.draw_bounding_boxes
version: 2.1.0
