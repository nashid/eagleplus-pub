API,Arg,default,enum_constr,descp
tf.nn.conv1d,data_format,NWC,"['NCW', 'NWC']","An optional `string` from `""NWC"", ""NCW""`.  Defaults to `""NWC""`, the data is stored in the order of [batch, in_width, in_channels].  The`""NCW""` format stores data as [batch, in_channels, in_width]."
tf.keras.layers.GlobalMaxPool1D,data_format,channels_last,"['channels_first', 'channels_last']","A string, one of `channels_last` (default) or `channels_first`. The ordering of the dimensions in the inputs.`channels_last` corresponds to inputs with shape`(batch, steps, features)` while `channels_first`corresponds to inputs with shape`(batch, features, steps)`."
tf.nn.space_to_depth,data_format,NHWC,"['NCHW', 'NCHW_VECT_C', 'NHWC']","An optional `string` from: `""NHWC"", ""NCHW"", ""NCHW_VECT_C""`. Defaults to `""NHWC""`."
tf.nn.conv2d_transpose,data_format,NHWC,"['NCHW', 'NHWC']",A string. 'NHWC' and 'NCHW' are supported.
tf.nn.conv2d_transpose,padding,SAME,"['SAME', 'VALID']","A string, either `'VALID'` or `'SAME'`. The padding algorithm. See the ""returns"" section of `tf.nn.convolution` for details."
tf.quantization.dequantize,mode,MIN_COMBINED,"['MIN_COMBINED', 'MIN_FIRST', 'SCALED']","An optional `string` from: `""MIN_COMBINED"", ""MIN_FIRST"", ""SCALED""`. Defaults to `""MIN_COMBINED""`."
tf.keras.layers.Conv3D,data_format,None,"['channels_first', 'channels_last']","A string, one of `channels_last` (default) or `channels_first`. The ordering of the dimensions in the inputs.`channels_last` corresponds to inputs with shape`(batch, spatial_dim1, spatial_dim2, spatial_dim3, channels)`while `channels_first` corresponds to inputs with shape`(batch, channels, spatial_dim1, spatial_dim2, spatial_dim3)`. It defaults to the `image_data_format` value found in your Keras config file at `~/.keras/keras.json`. If you never set it, then it will be ""channels_last""."
tf.keras.layers.Conv3D,padding,valid,"['same', 'valid']","one of `""valid""` or `""same""` (case-insensitive)."
tf.bitcast,type,null,"['tf.bfloat16', 'tf.complex128', 'tf.complex64', 'tf.float32', 'tf.float64', 'tf.half', 'tf.int16', 'tf.int32', 'tf.int64', 'tf.int8', 'tf.qint16', 'tf.qint32', 'tf.qint8', 'tf.quint16', 'tf.quint8', 'tf.uint16', 'tf.uint32', 'tf.uint64', 'tf.uint8']","A `tf.DType` from: `tf.bfloat16, tf.half, tf.float32, tf.float64, tf.int64, tf.int32, tf.uint8, tf.uint16, tf.uint32, tf.uint64, tf.int8, tf.int16, tf.complex64, tf.complex128, tf.qint8, tf.quint8, tf.qint16, tf.quint16, tf.qint32`."
tf.keras.preprocessing.image.apply_affine_transform,fill_mode,nearest,"['constant', 'nearest', 'reflect', 'wrap']","Points outside the boundaries of the input     are filled according to the given mode     (one of `{'constant', 'nearest', 'reflect', 'wrap'}`)."
tf.random.fixed_unigram_candidate_sampler,unigrams,(),"['unigrams', 'vocab_file']","A list of unigram counts or probabilities, one per ID in sequential order. Exactly one of `vocab_file` and `unigrams` should be passed to this operation."
tf.random.fixed_unigram_candidate_sampler,vocab_file,,"['unigrams', 'vocab_file']","Each valid line in this file (which should have a CSV-like format) corresponds to a valid word ID. IDs are in sequential order, starting from num_reserved_ids. The last entry in each line is expected to be a value corresponding to the count or relative probability. Exactly one of `vocab_file` and `unigrams` needs to be passed to this operation."
tf.keras.layers.MaxPool2D,data_format,None,"['channels_first', 'channels_last']","A string, one of `channels_last` (default) or `channels_first`. The ordering of the dimensions in the inputs.`channels_last` corresponds to inputs with shape`(batch, height, width, channels)` while `channels_first`corresponds to inputs with shape`(batch, channels, height, width)`. It defaults to the `image_data_format` value found in your Keras config file at `~/.keras/keras.json`. If you never set it, then it will be ""channels_last""."
tf.keras.layers.MaxPool2D,padding,valid,"['same', 'valid']","One of `""valid""` or `""same""` (case-insensitive)."
tf.keras.layers.Conv1D,data_format,channels_last,"['channels_first', 'channels_last']","A string, one of `channels_last` (default) or `channels_first`."
tf.keras.layers.Conv1D,padding,valid,"['causal', 'same', 'valid']","One of `""valid""`, `""causal""` or `""same""` (case-insensitive).`""causal""` results in causal (dilated) convolutions, e.g. output[t] does not depend on input[t+1:]. Useful when modeling temporal data where the model should not violate the temporal order. See WaveNet: A Generative Model for Raw Audio, section 2.1."
tf.nn.with_space_to_batch,data_format,None,"['NCDHW', 'NCHW', 'NCW', 'NDHWC', 'NHWC', 'NWC']","A string or None.  Specifies whether the channel dimension of the `input` and output is the last dimension (default, or if `data_format`does not start with ""NC""), or the second dimension (if `data_format`starts with ""NC"").  For N=1, the valid values are ""NWC"" (default) and ""NCW"".  For N=2, the valid values are ""NHWC"" (default) and ""NCHW"". For N=3, the valid values are ""NDHWC"" (default) and ""NCDHW""."
tf.nn.max_pool_with_argmax,output_dtype,tf.dtypes.int64,"['tf.int32', 'tf.int64']","An optional `tf.DType` from: `tf.int32, tf.int64`. Defaults to `tf.int64`. The dtype of the returned argmax tensor."
tf.nn.max_pool_with_argmax,padding,null,"['SAME', 'VALID']","A `string` from: `""SAME"", ""VALID""`. The type of padding algorithm to use."
tf.nn.avg_pool2d,data_format,NHWC,"['NCHW', 'NHWC']",A string. 'NHWC' and 'NCHW' are supported.
tf.nn.avg_pool2d,padding,null,"['SAME', 'VALID']","A string, either `'VALID'` or `'SAME'`. The padding algorithm. See the ""returns"" section of `tf.nn.convolution` for details."
tf.linalg.normalize,ord,euclidean,"['1', '2', 'euclidean', 'fro', 'np.inf']","Order of the norm. Supported values are `'fro'`, `'euclidean'`, `1`,`2`, `np.inf` and any positive real number yielding the corresponding p-norm. Default is `'euclidean'` which is equivalent to Frobenius norm if`tensor` is a matrix and equivalent to 2-norm for vectors. Some restrictions apply: a) The Frobenius norm `'fro'` is not defined for vectors, b) If axis is a 2-tuple (matrix norm), only `'euclidean'`, '`fro'`, `1`, `2`, `np.inf` are supported. See the description of `axis`on how to compute norms for a batch of vectors or matrices stored in a tensor."
tf.linalg.tridiagonal_solve,diagonals_format,compact,"['compact', 'matrix', 'sequence']","one of `matrix`, `sequence`, or `compact`. Default is`compact`."
tf.nn.conv3d,data_format,NDHWC,"['NCDHW', 'NDHWC']","An optional `string` from: `""NDHWC"", ""NCDHW""`. Defaults to `""NDHWC""`. The data format of the input and output data. With the default format ""NDHWC"", the data is stored in the order of:   [batch, in_depth, in_height, in_width, in_channels]. Alternatively, the format could be ""NCDHW"", the data storage order is:   [batch, in_channels, in_depth, in_height, in_width]."
tf.nn.conv3d,padding,null,"['SAME', 'VALID']","A `string` from: `""SAME"", ""VALID""`. The type of padding algorithm to use."
tf.strings.substr,unit,BYTE,"['BYTE', 'UTF8_CHAR']","An optional `string` from: `""BYTE"", ""UTF8_CHAR""`. Defaults to `""BYTE""`. The unit that is used to create the substring.  One of: `""BYTE""` (for defining position and length by bytes) or `""UTF8_CHAR""` (for the UTF-8 encoded Unicode code points).  The default is `""BYTE""`. Results are undefined if`unit=UTF8_CHAR` and the `input` strings do not contain structurally valid UTF-8."
tf.keras.layers.SeparableConv1D,data_format,None,"['channels_first', 'channels_last']","A string, one of `channels_last` (default) or `channels_first`. The ordering of the dimensions in the inputs.`channels_last` corresponds to inputs with shape`(batch, length, channels)` while `channels_first` corresponds to inputs with shape `(batch, channels, length)`."
tf.keras.layers.SeparableConv1D,padding,valid,"['causal', 'same', 'valid']","One of `""valid""`, `""same""`, or `""causal""` (case-insensitive)."
tf.keras.layers.GlobalMaxPool3D,data_format,None,"['channels_first', 'channels_last']","A string, one of `channels_last` (default) or `channels_first`. The ordering of the dimensions in the inputs.`channels_last` corresponds to inputs with shape`(batch, spatial_dim1, spatial_dim2, spatial_dim3, channels)`while `channels_first` corresponds to inputs with shape`(batch, channels, spatial_dim1, spatial_dim2, spatial_dim3)`. It defaults to the `image_data_format` value found in your Keras config file at `~/.keras/keras.json`. If you never set it, then it will be ""channels_last""."
tf.nn.conv_transpose,data_format,None,"['NCDHW', 'NCHW', 'NCW', 'NDHWC', 'NHWC', 'NWC']","A string or None.  Specifies whether the channel dimension of the `input` and output is the last dimension (default, or if `data_format`does not start with ""NC""), or the second dimension (if `data_format`starts with ""NC"").  For N=1, the valid values are ""NWC"" (default) and ""NCW"".  For N=2, the valid values are ""NHWC"" (default) and ""NCHW"". For N=3, the valid values are ""NDHWC"" (default) and ""NCDHW""."
tf.nn.conv_transpose,padding,SAME,"['SAME', 'VALID']","A string, either `'VALID'` or `'SAME'`. The padding algorithm. See the ""returns"" section of `tf.nn.convolution` for details."
tf.nn.avg_pool,data_format,None,"['NCDHW', 'NCHW', 'NCW', 'NDHWC', 'NHWC', 'NWC']","A string. Specifies the channel dimension. For N=1 it can be either ""NWC"" (default) or ""NCW"", for N=2 it can be either ""NHWC"" (default) or ""NCHW"" and for N=3 either ""NDHWC"" (default) or ""NCDHW""."
tf.nn.avg_pool,padding,null,"['SAME', 'VALID']","A string, either `'VALID'` or `'SAME'`. The padding algorithm. See the ""returns"" section of `tf.nn.convolution` for details."
tf.keras.backend.bias_add,data_format,None,"['channels_first', 'channels_last']","string, `""channels_last""` or `""channels_first""`."
tf.keras.preprocessing.image.array_to_img,data_format,None,"['channels_first', 'channels_last']","Image data format. either ""channels_first"" or ""channels_last""."
tf.keras.models.save_model,save_format,None,"['h5', 'tf']","Either 'tf' or 'h5', indicating whether to save the model to Tensorflow SavedModel or HDF5. Defaults to 'tf' in TF 2.X, and 'h5' in TF 1.X."
tf.keras.layers.locallyconnected1d,data_format,None,"['channels_first', 'channels_last']","A string, one of `channels_last` (default) or `channels_first`. The ordering of the dimensions in the inputs.`channels_last` corresponds to inputs with shape`(batch, length, channels)` while `channels_first`corresponds to inputs with shape`(batch, channels, length)`. It defaults to the `image_data_format` value found in your Keras config file at `~/.keras/keras.json`. If you never set it, then it will be ""channels_last""."
tf.nn.max_pool2d,data_format,NHWC,"['NCHW', 'NCHW_VECT_C', 'NHWC']","A string. 'NHWC', 'NCHW' and 'NCHW_VECT_C' are supported."
tf.nn.max_pool2d,padding,null,"['SAME', 'VALID']","A string, either `'VALID'` or `'SAME'`. The padding algorithm. See the ""returns"" section of `tf.nn.convolution` for details."
tf.io.encode_jpeg,density_unit,in,"['cm', 'in']","An optional `string` from: `""in"", ""cm""`. Defaults to `""in""`. Unit used to specify `x_density` and `y_density`: pixels per inch (`'in'`) or centimeter (`'cm'`)."
tf.io.encode_jpeg,format,,"['grayscale', 'rgb']","An optional `string` from: `"""", ""grayscale"", ""rgb""`. Defaults to `""""`. Per pixel image format."
tf.keras.preprocessing.image.save_img,data_format,None,"['channels_first', 'channels_last']","Image data format, either ""channels_first"" or ""channels_last""."
tf.unique,out_idx,tf.dtypes.int32,"['tf.int32', 'tf.int64']","An optional `tf.DType` from: `tf.int32, tf.int64`. Defaults to `tf.int32`."
tf.keras.preprocessing.image.img_to_array,data_format,None,"['channels_first', 'channels_last']","Image data format, either ""channels_first"" or ""channels_last""."
tf.nn.avg_pool3d,data_format,NDHWC,"['NCDHW', 'NDHWC']",A string. 'NDHWC' and 'NCDHW' are supported.
tf.nn.avg_pool3d,padding,null,"['SAME', 'VALID']","A string, either `'VALID'` or `'SAME'`. The padding algorithm. See the ""returns"" section of `tf.nn.convolution` for details."
tf.keras.layers.MaxPool3D,data_format,None,"['channels_first', 'channels_last']","A string, one of `channels_last` (default) or `channels_first`. The ordering of the dimensions in the inputs.`channels_last` corresponds to inputs with shape`(batch, spatial_dim1, spatial_dim2, spatial_dim3, channels)`while `channels_first` corresponds to inputs with shape`(batch, channels, spatial_dim1, spatial_dim2, spatial_dim3)`. It defaults to the `image_data_format` value found in your Keras config file at `~/.keras/keras.json`. If you never set it, then it will be ""channels_last""."
tf.keras.layers.MaxPool3D,padding,valid,"['same', 'valid']","One of `""valid""` or `""same""` (case-insensitive)."
tf.keras.layers.GlobalMaxPool2D,data_format,None,"['channels_first', 'channels_last']","A string, one of `channels_last` (default) or `channels_first`. The ordering of the dimensions in the inputs.`channels_last` corresponds to inputs with shape`(batch, height, width, channels)` while `channels_first`corresponds to inputs with shape`(batch, channels, height, width)`. It defaults to the `image_data_format` value found in your Keras config file at `~/.keras/keras.json`. If you never set it, then it will be ""channels_last""."
tf.nn.conv2d,data_format,NHWC,"['NCHW', 'NHWC']","An optional `string` from: `""NHWC"", ""NCHW""`. Defaults to `""NHWC""`. Specify the data format of the input and output data. With the default format ""NHWC"", the data is stored in the order of:   [batch, height, width, channels]. Alternatively, the format could be ""NCHW"", the data storage order of:   [batch, channels, height, width]."
tf.nn.conv2d,padding,null,"['SAME', 'VALID']","Either the `string` `""SAME""` or `""VALID""` indicating the type of padding algorithm to use, or a list indicating the explicit paddings at the start and end of each dimension. When explicit padding is used and data_format is `""NHWC""`, this should be in the form `[[0, 0], [pad_top, pad_bottom], [pad_left, pad_right], [0, 0]]`. When explicit padding used and data_format is `""NCHW""`, this should be in the form `[[0, 0], [0, 0], [pad_top, pad_bottom], [pad_left, pad_right]]`."
tf.keras.preprocessing.image.load_img,color_mode,rgb,"['grayscale', 'rgb', 'rgba']","One of ""grayscale"", ""rgb"", ""rgba"". Default: ""rgb"".     The desired image format."
tf.keras.layers.SeparableConv2D,data_format,None,"['channels_first', 'channels_last']","A string, one of `channels_last` (default) or `channels_first`. The ordering of the dimensions in the inputs.`channels_last` corresponds to inputs with shape`(batch, height, width, channels)` while `channels_first`corresponds to inputs with shape`(batch, channels, height, width)`. It defaults to the `image_data_format` value found in your Keras config file at `~/.keras/keras.json`. If you never set it, then it will be ""channels_last""."
tf.keras.layers.SeparableConv2D,padding,valid,"['same', 'valid']","one of `""valid""` or `""same""` (case-insensitive)."
tf.keras.backend.spatial_3d_padding,data_format,None,"['channels_first', 'channels_last']",One of `channels_last` or `channels_first`.
tf.image.crop_and_resize,method,bilinear,"['bilinear', 'nearest']","An optional string specifying the sampling method for resizing. It can be either `""bilinear""` or `""nearest""` and default to `""bilinear""`. Currently two sampling methods are supported: Bilinear and Nearest Neighbor."
tf.keras.layers.Conv2D,data_format,None,"['channels_first', 'channels_last']","A string, one of `channels_last` (default) or `channels_first`. The ordering of the dimensions in the inputs.`channels_last` corresponds to inputs with shape`(batch, height, width, channels)` while `channels_first`corresponds to inputs with shape`(batch, channels, height, width)`. It defaults to the `image_data_format` value found in your Keras config file at `~/.keras/keras.json`. If you never set it, then it will be ""channels_last""."
tf.keras.layers.Conv2D,padding,valid,"['same', 'valid']","one of `""valid""` or `""same""` (case-insensitive)."
tf.io.extract_jpeg_shape,output_type,tf.dtypes.int32,"['tf.int32', 'tf.int64']","An optional `tf.DType` from: `tf.int32, tf.int64`. Defaults to `tf.int32`. (Optional) The output type of the operation (int32 or int64). Defaults to int32."
tf.keras.layers.MaxPool1D,data_format,channels_last,"['channels_first', 'channels_last']","A string, one of `channels_last` (default) or `channels_first`. The ordering of the dimensions in the inputs.`channels_last` corresponds to inputs with shape`(batch, steps, features)` while `channels_first`corresponds to inputs with shape`(batch, features, steps)`."
tf.keras.layers.MaxPool1D,padding,valid,"['same', 'valid']","One of `""valid""` or `""same""` (case-insensitive)."
tf.nn.avg_pool1d,data_format,NWC,"['NCW', 'NWC']","An optional string from: ""NWC"", ""NCW"". Defaults to ""NWC""."
tf.nn.avg_pool1d,padding,null,"['SAME', 'VALID']","A string, either `'VALID'` or `'SAME'`. The padding algorithm. See the ""returns"" section of `tf.nn.convolution` for details."
tf.keras.preprocessing.sequence.pad_sequences,padding,pre,"['post', 'pre']","String, 'pre' or 'post':     pad either before or after each sequence."
tf.keras.preprocessing.sequence.pad_sequences,truncating,pre,"['post', 'pre']","String, 'pre' or 'post':     remove values from sequences larger than     `maxlen`, either at the beginning or at the end of the sequences."
tf.ragged.range,row_splits_dtype,tf.dtypes.int64,"['tf.int32', 'tf.int64']",`dtype` for the returned `RaggedTensor`'s `row_splits`tensor.  One of `tf.int32` or `tf.int64`.
tf.feature_column.shared_embeddings,combiner,mean,"['mean', 'sqrtn', 'sum']","A string specifying how to reduce if there are multiple entries in a single row. Currently 'mean', 'sqrtn' and 'sum' are supported, with 'mean' the default. 'sqrtn' often achieves good accuracy, in particular with bag-of-words columns. Each of this can be thought as example level normalizations on the column. For more information, see`tf.embedding_lookup_sparse`."
tf.keras.backend.conv2d_transpose,data_format,None,"['channels_first', 'channels_last']","string, `""channels_last""` or `""channels_first""`."
tf.keras.backend.conv2d_transpose,padding,valid,"['same', 'valid']","string, `""same""` or `""valid""`."
tf.keras.backend.resize_images,data_format,null,"['channels_first', 'channels_last']","One of `""channels_first""`, `""channels_last""`."
tf.keras.backend.resize_images,interpolation,nearest,"['bilinear', 'nearest']","A string, one of `nearest` or `bilinear`."
tf.nn.conv3d_transpose,data_format,NDHWC,"['NCDHW', 'NDHWC']",A string. 'NDHWC' and 'NCDHW' are supported.
tf.nn.conv3d_transpose,padding,SAME,"['SAME', 'VALID']","A string, either `'VALID'` or `'SAME'`. The padding algorithm. See the ""returns"" section of `tf.nn.convolution` for details."
tf.nn.depth_to_space,data_format,NHWC,"['NCHW', 'NCHW_VECT_C', 'NHWC']","An optional `string` from: `""NHWC"", ""NCHW"", ""NCHW_VECT_C""`. Defaults to `""NHWC""`."
tf.nn.max_pool3d,data_format,NDHWC,"['NCDHW', 'NDHWC']","An optional string from: ""NDHWC"", ""NCDHW"". Defaults to ""NDHWC"". The data format of the input and output data. With the default format ""NDHWC"", the data is stored in the order of: [batch, in_depth, in_height, in_width, in_channels]. Alternatively, the format could be ""NCDHW"", the data storage order is: [batch, in_channels, in_depth, in_height, in_width]."
tf.nn.max_pool3d,padding,null,"['SAME', 'VALID']","A string, either `'VALID'` or `'SAME'`. The padding algorithm. See the ""returns"" section of `tf.nn.convolution` for details."
tf.nn.max_pool1d,data_format,NWC,"['NCW', 'NWC']","An optional string from: ""NWC"", ""NCW"". Defaults to ""NWC""."
tf.nn.max_pool1d,padding,null,"['SAME', 'VALID']","A string, either `'VALID'` or `'SAME'`. The padding algorithm. See the ""returns"" section of `tf.nn.convolution` for details."
tf.nn.convolution,data_format,None,"['NCDHW', 'NCHW', 'NCW', 'NDHWC', 'NHWC', 'NWC']","A string or None.  Specifies whether the channel dimension of the `input` and output is the last dimension (default, or if `data_format`does not start with ""NC""), or the second dimension (if `data_format`starts with ""NC"").  For N=1, the valid values are ""NWC"" (default) and ""NCW"".  For N=2, the valid values are ""NHWC"" (default) and ""NCHW"". For N=3, the valid values are ""NDHWC"" (default) and ""NCDHW""."
tf.nn.convolution,padding,VALID,"['SAME', 'VALID']","A string, either `""VALID""` or `""SAME""`. The padding algorithm."
tf.keras.backend.resize_volumes,data_format,null,"['channels_first', 'channels_last']","One of `""channels_first""`, `""channels_last""`."
tf.keras.layers.locallyconnected2d,data_format,None,"['channels_first', 'channels_last']","A string, one of `channels_last` (default) or `channels_first`. The ordering of the dimensions in the inputs.`channels_last` corresponds to inputs with shape`(batch, height, width, channels)` while `channels_first`corresponds to inputs with shape`(batch, channels, height, width)`. It defaults to the `image_data_format` value found in your Keras config file at `~/.keras/keras.json`. If you never set it, then it will be ""channels_last""."
tf.nn.erosion2d,data_format,null,['NHWC'],"A `string`, only `""NHWC""` is currently supported."
tf.nn.erosion2d,padding,null,"['SAME', 'VALID']","A `string` from: `""SAME"", ""VALID""`. The type of padding algorithm to use."
tf.keras.preprocessing.image.random_rotation,fill_mode,nearest,"['constant', 'nearest', 'reflect', 'wrap']","Points outside the boundaries of the input     are filled according to the given mode     (one of `{'constant', 'nearest', 'reflect', 'wrap'}`)."
tf.nn.atrous_conv2d_transpose,padding,null,"['SAME', 'VALID']","A string, either `'VALID'` or `'SAME'`. The padding algorithm."
tf.keras.layers.conv2dtranspose,data_format,None,"['channels_first', 'channels_last']","A string, one of `channels_last` (default) or `channels_first`. The ordering of the dimensions in the inputs.`channels_last` corresponds to inputs with shape`(batch, height, width, channels)` while `channels_first`corresponds to inputs with shape`(batch, channels, height, width)`. It defaults to the `image_data_format` value found in your Keras config file at `~/.keras/keras.json`. If you never set it, then it will be ""channels_last""."
tf.keras.layers.conv2dtranspose,padding,valid,"['same', 'valid']","one of `""valid""` or `""same""` (case-insensitive)."
tf.keras.datasets.cifar100.load_data,label_mode,fine,"['coarse', 'fine']","one of ""fine"", ""coarse""."
tf.keras.layers.upsampling2d,data_format,None,"['channels_first', 'channels_last']","A string, one of `channels_last` (default) or `channels_first`. The ordering of the dimensions in the inputs.`channels_last` corresponds to inputs with shape`(batch, height, width, channels)` while `channels_first`corresponds to inputs with shape`(batch, channels, height, width)`. It defaults to the `image_data_format` value found in your Keras config file at `~/.keras/keras.json`. If you never set it, then it will be ""channels_last""."
tf.keras.layers.upsampling2d,interpolation,nearest,"['bilinear', 'nearest']","A string, one of `nearest` or `bilinear`."
tf.strings.unicode_split_with_offsets,errors,replace,['strict'],Specifies the response when an input string can't be converted using the indicated encoding. One of: `'strict'`: Raise an exception for any illegal substrings.`'replace'`: Replace illegal substrings with `replacement_char`.`'ignore'`: Skip illegal substrings. 
tf.keras.preprocessing.image.random_zoom,fill_mode,nearest,"['constant', 'nearest', 'reflect', 'wrap']","Points outside the boundaries of the input     are filled according to the given mode     (one of `{'constant', 'nearest', 'reflect', 'wrap'}`)."
tf.strings.unicode_decode_with_offsets,errors,replace,['strict'],Specifies the response when an input string can't be converted using the indicated encoding. One of: `'strict'`: Raise an exception for any illegal substrings.`'replace'`: Replace illegal substrings with `replacement_char`.`'ignore'`: Skip illegal substrings. 
tf.linalg.tridiagonal_matmul,diagonals_format,compact,"['compact', 'sequence']","one of `sequence`, or `compact`. Default is `compact`."
tf.keras.backend.conv2d,padding,valid,"['same', 'valid']","string, `""same""` or `""valid""`."
tf.nn.separable_conv2d,data_format,None,"['NCHW', 'NHWC']","The data format for input. Either ""NHWC"" (default) or ""NCHW""."
tf.nn.separable_conv2d,padding,null,"['SAME', 'VALID']","A string, either `'VALID'` or `'SAME'`.  The padding algorithm. See the ""returns"" section of `tf.nn.convolution` for details."
tf.unique_with_counts,out_idx,tf.dtypes.int32,"['tf.int32', 'tf.int64']","An optional `tf.DType` from: `tf.int32, tf.int64`. Defaults to `tf.int32`."
tf.io.decode_jpeg,dct_method,,"['INTEGER_ACCURATE', 'INTEGER_FAST']","An optional `string`. Defaults to `""""`. string specifying a hint about the algorithm used for decompression.  Defaults to """" which maps to a system-specific default.  Currently valid values are [""INTEGER_FAST"", ""INTEGER_ACCURATE""].  The hint may be ignored (e.g., the internal jpeg library changes to a version that does not have that specific option.)"
tf.nn.dilation2d,data_format,null,['NHWC'],"A `string`, only `""NHWC""` is currently supported."
tf.nn.dilation2d,padding,null,"['SAME', 'VALID']","A `string` from: `""SAME"", ""VALID""`. The type of padding algorithm to use."
tf.nn.bias_add,data_format,None,"['N...C', 'NC...']",A string. 'N...C' and 'NC...' are supported. If `None` (the default) is specified then 'N..C' is assumed.
tf.keras.backend.depthwise_conv2d,data_format,None,"['channels_first', 'channels_last']","string, `""channels_last""` or `""channels_first""`."
tf.keras.backend.depthwise_conv2d,padding,valid,"['same', 'valid']","string, `""same""` or `""valid""`."
tf.strings.unicode_transcode,errors,replace,"['ignore', 'replace', 'strict']","An optional `string` from: `""strict"", ""replace"", ""ignore""`. Defaults to `""replace""`. Error handling policy when there is invalid formatting found in the input. The value of 'strict' will cause the operation to produce a InvalidArgument error on any invalid input formatting. A value of 'replace' (the default) will cause the operation to replace any invalid formatting in the input with the`replacement_char` codepoint. A value of 'ignore' will cause the operation to skip any invalid formatting in the input and produce no corresponding output character."
tf.strings.unicode_transcode,output_encoding,null,"['UTF-16-BE', 'UTF-32-BE', 'UTF-8']","A `string` from: `""UTF-8"", ""UTF-16-BE"", ""UTF-32-BE""`. The unicode encoding to use in the output. Must be one of`""UTF-8"", ""UTF-16-BE"", ""UTF-32-BE""`. Multi-byte encodings will be big-endian."
tf.feature_column.embedding_column,combiner,mean,"['mean', 'sqrtn', 'sum']","A string specifying how to reduce if there are multiple entries in a single row. Currently 'mean', 'sqrtn' and 'sum' are supported, with 'mean' the default. 'sqrtn' often achieves good accuracy, in particular with bag-of-words columns. Each of this can be thought as example level normalizations on the column. For more information, see`tf.embedding_lookup_sparse`."
tf.keras.layers.convlstm2d,data_format,None,"['channels_first', 'channels_last']","A string, one of `channels_last` (default) or `channels_first`. The ordering of the dimensions in the inputs.`channels_last` corresponds to inputs with shape`(batch, time, ..., channels)`while `channels_first` corresponds to inputs with shape `(batch, time, channels, ...)`. It defaults to the `image_data_format` value found in your Keras config file at `~/.keras/keras.json`. If you never set it, then it will be ""channels_last""."
tf.keras.layers.convlstm2d,padding,valid,"['same', 'valid']","One of `""valid""` or `""same""` (case-insensitive)."
tf.keras.layers.AveragePooling2D,data_format,None,"['channels_first', 'channels_last']","A string, one of `channels_last` (default) or `channels_first`. The ordering of the dimensions in the inputs.`channels_last` corresponds to inputs with shape`(batch, height, width, channels)` while `channels_first`corresponds to inputs with shape`(batch, channels, height, width)`. It defaults to the `image_data_format` value found in your Keras config file at `~/.keras/keras.json`. If you never set it, then it will be ""channels_last""."
tf.keras.layers.AveragePooling2D,padding,valid,"['same', 'valid']","One of `""valid""` or `""same""` (case-insensitive)."
tf.io.decode_png,dtype,tf.dtypes.uint8,"['tf.uint16', 'tf.uint8']","An optional `tf.DType` from: `tf.uint8, tf.uint16`. Defaults to `tf.uint8`."
tf.math.argmin,output_type,tf.dtypes.int64,"['tf.int32', 'tf.int64']","An optional `tf.DType` from: `tf.int32, tf.int64`. Defaults to`tf.int64`."
tf.nn.embedding_lookup_sparse,combiner,None,"['mean', 'sqrtn', 'sum']","A string specifying the reduction op. Currently ""mean"", ""sqrtn"" and ""sum"" are supported. ""sum"" computes the weighted sum of the embedding results for each row. ""mean"" is the weighted sum divided by the total weight. ""sqrtn"" is the weighted sum divided by the square root of the sum of the squares of the weights."
tf.nn.conv1d_transpose,data_format,NWC,"['NCW', 'NWC']",A string. `'NWC'` and `'NCW'` are supported.
tf.nn.conv1d_transpose,padding,SAME,"['SAME', 'VALID']","A string, either `'VALID'` or `'SAME'`. The padding algorithm. See the ""returns"" section of `tf.nn.convolution` for details."
tf.math.argmax,output_type,tf.dtypes.int64,"['tf.int32', 'tf.int64']","An optional `tf.DType` from: `tf.int32, tf.int64`. Defaults to`tf.int64`."
tf.extract_volume_patches,padding,null,"['SAME', 'VALID']","A `string` from: `""SAME"", ""VALID""`. The type of padding algorithm to use.We specify the size-related attributes as:"
tf.strings.to_number,out_type,tf.dtypes.float32,"['tf.float32', 'tf.float64', 'tf.int32', 'tf.int64']","An optional `tf.DType` from: `tf.float32, tf.float64, tf.int32, tf.int64`. Defaults to `tf.float32`. The numeric type to interpret each string in `string_tensor` as."
tf.keras.layers.GlobalAveragePooling2D,data_format,None,"['channels_first', 'channels_last']","A string, one of `channels_last` (default) or `channels_first`. The ordering of the dimensions in the inputs.`channels_last` corresponds to inputs with shape`(batch, height, width, channels)` while `channels_first`corresponds to inputs with shape`(batch, channels, height, width)`. It defaults to the `image_data_format` value found in your Keras config file at `~/.keras/keras.json`. If you never set it, then it will be ""channels_last""."
tf.nn.depthwise_conv2d_backprop_filter,data_format,NHWC,"['NCHW', 'NHWC']","An optional `string` from: `""NHWC"", ""NCHW""`. Defaults to `""NHWC""`. Specify the data format of the input and output data. With the default format ""NHWC"", the data is stored in the order of:   [batch, height, width, channels]. Alternatively, the format could be ""NCHW"", the data storage order of:   [batch, channels, height, width]."
tf.nn.depthwise_conv2d_backprop_filter,padding,null,"['SAME', 'VALID']","A `string` from: `""SAME"", ""VALID""`. The type of padding algorithm to use."
tf.keras.layers.zeropadding3d,data_format,None,"['channels_first', 'channels_last']","A string, one of `channels_last` (default) or `channels_first`. The ordering of the dimensions in the inputs.`channels_last` corresponds to inputs with shape`(batch, spatial_dim1, spatial_dim2, spatial_dim3, channels)`while `channels_first` corresponds to inputs with shape`(batch, channels, spatial_dim1, spatial_dim2, spatial_dim3)`. It defaults to the `image_data_format` value found in your Keras config file at `~/.keras/keras.json`. If you never set it, then it will be ""channels_last""."
tf.nn.safe_embedding_lookup_sparse,combiner,mean,"['mean', 'sqrtn', 'sum']","A string specifying how to combine embedding results for each entry. Currently ""mean"", ""sqrtn"" and ""sum"" are supported, with ""mean"" the default."
tf.keras.layers.conv3dtranspose,data_format,None,"['channels_first', 'channels_last']","A string, one of `channels_last` (default) or `channels_first`. The ordering of the dimensions in the inputs.`channels_last` corresponds to inputs with shape`(batch, depth, height, width, channels)` while `channels_first`corresponds to inputs with shape`(batch, channels, depth, height, width)`. It defaults to the `image_data_format` value found in your Keras config file at `~/.keras/keras.json`. If you never set it, then it will be ""channels_last""."
tf.keras.layers.conv3dtranspose,padding,valid,"['same', 'valid']","one of `""valid""` or `""same""` (case-insensitive)."
tf.keras.backend.pool2d,data_format,None,"['channels_first', 'channels_last']","string, `""channels_last""` or `""channels_first""`."
tf.keras.backend.pool2d,padding,valid,"['same', 'valid']","string, `""same""` or `""valid""`."
tf.keras.backend.pool2d,pool_mode,max,"['avg', 'max']","string, `""max""` or `""avg""`."
tf.keras.backend.cast,dtype,null,"['float16', 'float32', 'float64']","String, either (`'float16'`, `'float32'`, or `'float64'`)."
tf.nn.depthwise_conv2d_backprop_input,data_format,NHWC,"['NCHW', 'NHWC']","An optional `string` from: `""NHWC"", ""NCHW""`. Defaults to `""NHWC""`. Specify the data format of the input and output data. With the default format ""NHWC"", the data is stored in the order of:   [batch, height, width, channels]. Alternatively, the format could be ""NCHW"", the data storage order of:   [batch, channels, height, width]."
tf.nn.depthwise_conv2d_backprop_input,padding,null,"['SAME', 'VALID']","A `string` from: `""SAME"", ""VALID""`. The type of padding algorithm to use."
tf.norm,ord,euclidean,"['1', '2', 'euclidean', 'fro', 'np.inf']","Order of the norm. Supported values are `'fro'`, `'euclidean'`,`1`, `2`, `np.inf` and any positive real number yielding the corresponding p-norm. Default is `'euclidean'` which is equivalent to Frobenius norm if`tensor` is a matrix and equivalent to 2-norm for vectors. Some restrictions apply: a) The Frobenius norm `'fro'` is not defined for vectors, b) If axis is a 2-tuple (matrix norm), only `'euclidean'`, '`fro'`, `1`,    `2`, `np.inf` are supported. See the description of `axis` on how to compute norms for a batch of vectors or matrices stored in a tensor."
tf.keras.backend.spatial_2d_padding,data_format,None,"['channels_first', 'channels_last']",One of `channels_last` or `channels_first`.
tf.pad,mode,CONSTANT,"['CONSTANT', 'REFLECT', 'SYMMETRIC']","One of ""CONSTANT"", ""REFLECT"", or ""SYMMETRIC"" (case-insensitive)"
tf.summary.audio,encoding,None,['wav'],"Optional constant `str` for the desired encoding. Only ""wav"" is currently supported, but this is not guaranteed to remain the default, so if you want ""wav"" in particular, set this explicitly."
tf.keras.layers.cropping2d,data_format,None,"['channels_first', 'channels_last']","A string, one of `channels_last` (default) or `channels_first`. The ordering of the dimensions in the inputs.`channels_last` corresponds to inputs with shape`(batch, height, width, channels)` while `channels_first`corresponds to inputs with shape`(batch, channels, height, width)`. It defaults to the `image_data_format` value found in your Keras config file at `~/.keras/keras.json`. If you never set it, then it will be ""channels_last""."
tf.ragged.constant,row_splits_dtype,tf.dtypes.int64,"['tf.int32', 'tf.int64']",data type for the constructed `RaggedTensor`'s row_splits. One of `tf.int32` or `tf.int64`.
tf.nn.atrous_conv2d,padding,null,"['SAME', 'VALID']","A string, either `'VALID'` or `'SAME'`. The padding algorithm."
tf.io.decode_and_crop_jpeg,dct_method,,"['INTEGER_ACCURATE', 'INTEGER_FAST']","An optional `string`. Defaults to `""""`. string specifying a hint about the algorithm used for decompression.  Defaults to """" which maps to a system-specific default.  Currently valid values are [""INTEGER_FAST"", ""INTEGER_ACCURATE""].  The hint may be ignored (e.g., the internal jpeg library changes to a version that does not have that specific option.)"
tf.keras.backend.conv3d,data_format,None,"['channels_first', 'channels_last']","string, `""channels_last""` or `""channels_first""`."
tf.keras.backend.conv3d,padding,valid,"['same', 'valid']","string, `""same""` or `""valid""`."
tf.keras.preprocessing.image.random_shear,fill_mode,nearest,"['constant', 'nearest', 'reflect', 'wrap']","Points outside the boundaries of the input     are filled according to the given mode     (one of `{'constant', 'nearest', 'reflect', 'wrap'}`)."
tf.keras.backend.set_floatx,value,null,"['float16', 'float32', 'float64']","String; 'float16', 'float32', or 'float64'. Example: `python from keras import backend as K K.floatx() >>> 'float32' K.set_floatx('float16') K.floatx() >>> 'float16'`"
tf.keras.layers.AveragePooling3D,data_format,None,"['channels_first', 'channels_last']","A string, one of `channels_last` (default) or `channels_first`. The ordering of the dimensions in the inputs.`channels_last` corresponds to inputs with shape`(batch, spatial_dim1, spatial_dim2, spatial_dim3, channels)`while `channels_first` corresponds to inputs with shape`(batch, channels, spatial_dim1, spatial_dim2, spatial_dim3)`. It defaults to the `image_data_format` value found in your Keras config file at `~/.keras/keras.json`. If you never set it, then it will be ""channels_last""."
tf.keras.layers.AveragePooling3D,padding,valid,"['same', 'valid']","One of `""valid""` or `""same""` (case-insensitive)."
tf.quantization.quantize,T,null,"['tf.qint16', 'tf.qint32', 'tf.qint8', 'tf.quint16', 'tf.quint8']","A `tf.DType` from: `tf.qint8, tf.quint8, tf.qint32, tf.qint16, tf.quint16`."
tf.quantization.quantize,mode,MIN_COMBINED,"['MIN_COMBINED', 'MIN_FIRST', 'SCALED']","An optional `string` from: `""MIN_COMBINED"", ""MIN_FIRST"", ""SCALED""`. Defaults to `""MIN_COMBINED""`."
tf.quantization.quantize,round_mode,HALF_AWAY_FROM_ZERO,"['HALF_AWAY_FROM_ZERO', 'HALF_TO_EVEN']","An optional `string` from: `""HALF_AWAY_FROM_ZERO"", ""HALF_TO_EVEN""`. Defaults to `""HALF_AWAY_FROM_ZERO""`."
tf.keras.layers.flatten,data_format,None,"['channels_first', 'channels_last']","A string, one of `channels_last` (default) or `channels_first`. The ordering of the dimensions in the inputs.`channels_last` corresponds to inputs with shape`(batch, ..., channels)` while `channels_first` corresponds to inputs with shape `(batch, channels, ...)`. It defaults to the `image_data_format` value found in your Keras config file at `~/.keras/keras.json`. If you never set it, then it will be ""channels_last""."
tf.keras.layers.upsampling3d,data_format,None,"['channels_first', 'channels_last']","A string, one of `channels_last` (default) or `channels_first`. The ordering of the dimensions in the inputs.`channels_last` corresponds to inputs with shape`(batch, spatial_dim1, spatial_dim2, spatial_dim3, channels)`while `channels_first` corresponds to inputs with shape`(batch, channels, spatial_dim1, spatial_dim2, spatial_dim3)`. It defaults to the `image_data_format` value found in your Keras config file at `~/.keras/keras.json`. If you never set it, then it will be ""channels_last""."
tf.nn.pool,data_format,None,"['NCDHW', 'NCHW', 'NCW', 'NDHWC', 'NHWC', 'NWC']","A string or None.  Specifies whether the channel dimension of the `input` and output is the last dimension (default, or if `data_format`does not start with ""NC""), or the second dimension (if `data_format`starts with ""NC"").  For N=1, the valid values are ""NWC"" (default) and ""NCW"".  For N=2, the valid values are ""NHWC"" (default) and ""NCHW"". For N=3, the valid values are ""NDHWC"" (default) and ""NCDHW""."
tf.keras.layers.AveragePooling1D,data_format,channels_last,"['channels_first', 'channels_last']","A string, one of `channels_last` (default) or `channels_first`. The ordering of the dimensions in the inputs.`channels_last` corresponds to inputs with shape`(batch, steps, features)` while `channels_first`corresponds to inputs with shape`(batch, features, steps)`."
tf.keras.layers.AveragePooling1D,padding,valid,"['same', 'valid']","One of `""valid""` or `""same""` (case-insensitive)."
tf.keras.Input,ragged,False,"['ragged', 'sparse']","A boolean specifying whether the placeholder to be created is ragged. Only one of 'ragged' and 'sparse' can be True. In this case, values of 'None' in the 'shape' argument represent ragged dimensions. For more information about RaggedTensors, seehttps://www.tensorflow.org/guide/ragged_tensors"
tf.keras.Input,sparse,False,"['ragged', 'sparse']",A boolean specifying whether the placeholder to be created is sparse. Only one of 'ragged' and 'sparse' can be True.
tf.keras.backend.conv1d,data_format,None,"['channels_first', 'channels_last']","string, one of ""channels_last"", ""channels_first""."
tf.keras.backend.conv1d,padding,valid,"['causal', 'same', 'valid']","string, `""same""`, `""causal""` or `""valid""`."
tf.keras.layers.GlobalAveragePooling1D,data_format,channels_last,"['channels_first', 'channels_last']","A string, one of `channels_last` (default) or `channels_first`. The ordering of the dimensions in the inputs.`channels_last` corresponds to inputs with shape`(batch, steps, features)` while `channels_first`corresponds to inputs with shape`(batch, features, steps)`."
tf.keras.layers.cropping3d,data_format,None,"['channels_first', 'channels_last']","A string, one of `channels_last` (default) or `channels_first`. The ordering of the dimensions in the inputs.`channels_last` corresponds to inputs with shape`(batch, spatial_dim1, spatial_dim2, spatial_dim3, channels)`while `channels_first` corresponds to inputs with shape`(batch, channels, spatial_dim1, spatial_dim2, spatial_dim3)`. It defaults to the `image_data_format` value found in your Keras config file at `~/.keras/keras.json`. If you never set it, then it will be ""channels_last""."
tf.io.decode_proto,message_format,binary,"['binary', 'text']","An optional `string`. Defaults to `""binary""`. Either `binary` or `text`."
tf.keras.preprocessing.image.random_shift,fill_mode,nearest,"['constant', 'nearest', 'reflect', 'wrap']","Points outside the boundaries of the input     are filled according to the given mode     (one of `{'constant', 'nearest', 'reflect', 'wrap'}`)."
tf.strings.unicode_split,errors,replace,['strict'],Specifies the response when an input string can't be converted using the indicated encoding. One of: `'strict'`: Raise an exception for any illegal substrings.`'replace'`: Replace illegal substrings with `replacement_char`.`'ignore'`: Skip illegal substrings. 
tf.keras.backend.pool3d,data_format,None,"['channels_first', 'channels_last']","string, `""channels_last""` or `""channels_first""`."
tf.keras.backend.pool3d,padding,valid,"['same', 'valid']","string, `""same""` or `""valid""`."
tf.keras.backend.pool3d,pool_mode,max,"['avg', 'max']","string, `""max""` or `""avg""`."
tf.nn.max_pool,data_format,None,"['NCDHW', 'NCHW', 'NCW', 'NDHWC', 'NHWC', 'NWC']","A string. Specifies the channel dimension. For N=1 it can be either ""NWC"" (default) or ""NCW"", for N=2 it can be either ""NHWC"" (default) or ""NCHW"" and for N=3 either ""NDHWC"" (default) or ""NCDHW""."
tf.nn.max_pool,padding,null,"['SAME', 'VALID']","A string, either `'VALID'` or `'SAME'`. The padding algorithm. See the ""returns"" section of `tf.nn.convolution` for details."
tf.keras.backend.separable_conv2d,data_format,None,"['channels_first', 'channels_last']","string, `""channels_last""` or `""channels_first""`."
tf.keras.backend.separable_conv2d,padding,valid,"['same', 'valid']","string, `""same""` or `""valid""`."
tf.keras.layers.depthwiseconv2d,data_format,None,"['channels_first', 'channels_last']","A string, one of `channels_last` (default) or `channels_first`. The ordering of the dimensions in the inputs.`channels_last` corresponds to inputs with shape`(batch, height, width, channels)` while `channels_first`corresponds to inputs with shape`(batch, channels, height, width)`. It defaults to the `image_data_format` value found in your Keras config file at `~/.keras/keras.json`. If you never set it, then it will be 'channels_last'."
tf.keras.layers.depthwiseconv2d,padding,valid,"['same', 'valid']",one of `'valid'` or `'same'` (case-insensitive).
tf.keras.layers.zeropadding2d,data_format,None,"['channels_first', 'channels_last']","A string, one of `channels_last` (default) or `channels_first`. The ordering of the dimensions in the inputs.`channels_last` corresponds to inputs with shape`(batch, height, width, channels)` while `channels_first`corresponds to inputs with shape`(batch, channels, height, width)`. It defaults to the `image_data_format` value found in your Keras config file at `~/.keras/keras.json`. If you never set it, then it will be ""channels_last""."
tf.keras.layers.GlobalAveragePooling3D,data_format,None,"['channels_first', 'channels_last']","A string, one of `channels_last` (default) or `channels_first`. The ordering of the dimensions in the inputs.`channels_last` corresponds to inputs with shape`(batch, spatial_dim1, spatial_dim2, spatial_dim3, channels)`while `channels_first` corresponds to inputs with shape`(batch, channels, spatial_dim1, spatial_dim2, spatial_dim3)`. It defaults to the `image_data_format` value found in your Keras config file at `~/.keras/keras.json`. If you never set it, then it will be ""channels_last""."
tf.meshgrid,**kwargs,null,"['ij', 'xy']","- indexing: Either 'xy' or 'ij' (optional, default: 'xy'). name: A name for the operation (optional). "
tf.nn.depthwise_conv2d,data_format,None,"['NCHW', 'NHWC']","The data format for input. Either ""NHWC"" (default) or ""NCHW""."
tf.nn.depthwise_conv2d,padding,null,"['SAME', 'VALID']","A string, either `'VALID'` or `'SAME'`. The padding algorithm. See the ""returns"" section of `tf.nn.convolution` for details."
tf.linalg.lu,output_idx_type,tf.dtypes.int32,"['tf.int32', 'tf.int64']","An optional `tf.DType` from: `tf.int32, tf.int64`. Defaults to `tf.int32`."
tf.strings.unicode_decode,errors,replace,['strict'],Specifies the response when an input string can't be converted using the indicated encoding. One of: `'strict'`: Raise an exception for any illegal substrings.`'replace'`: Replace illegal substrings with `replacement_char`.`'ignore'`: Skip illegal substrings. 
