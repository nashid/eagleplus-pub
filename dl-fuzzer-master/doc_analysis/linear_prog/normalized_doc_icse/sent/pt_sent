If CONSTANT_BOOL adds a learnable bias to the output
--------------------------------
Default CONSTANT_BOOL
--------------------------------
Spacing between kernel elements
--------------------------------
Default CONSTANT_NUM
--------------------------------
Number of blocked connections from input channels to output channels
--------------------------------
Default CONSTANT_NUM
--------------------------------
Number of channels in the input image
--------------------------------
Size of the convolving kernel
--------------------------------
Number of channels produced by the convolution
--------------------------------
Additional size added to one side of each dimension in the output shape
--------------------------------
Default CONSTANT_NUM
--------------------------------
PARAM BSTR padding zero padding will be added to both sides of each dimension in the input
--------------------------------
Default CONSTANT_NUM
--------------------------------
Stride of the convolution
--------------------------------
Default CONSTANT_NUM
--------------------------------
the dimension or dimensions to reduce
--------------------------------
the desired data type of returned D_STRUCTURE If specified the PARAM D_STRUCTURE is casted to QSTR before the operationis performed
--------------------------------
This is useful for preventing data type overflows
--------------------------------
Default None
--------------------------------
the input D_STRUCTURE
--------------------------------
whether the output D_STRUCTURE has PARAM retained or not
--------------------------------
an instance of the TransformerDecoderLayer BSTR
--------------------------------
the layer normalization component BSTR
--------------------------------
the number of sub decoder layers in the decoder BSTR
--------------------------------
the size of the padding
--------------------------------
If is D_TYPE uses the same padding in all boundaries
--------------------------------
If a CONSTANT_NUM D_STRUCTURE uses BSTR
--------------------------------
If CONSTANT_BOOL then the layer does not use bias weights b_ih and b_hh
--------------------------------
Default CONSTANT_BOOL
--------------------------------
The number of features in the hidden state h
--------------------------------
The number of expected features in the input x
--------------------------------
The non linearity to use
--------------------------------
Can be either QSTR
--------------------------------
Default QSTR
--------------------------------
the input D_STRUCTURE of size BSTR where is zero or more batch dimensions consisting of matrices of dimension m times n
--------------------------------
D_STRUCTURE of Q and R D_STRUCTURE satisfying PARAM torch matmul BSTR
--------------------------------
The dimensions of Q and R are BSTR respectively where k min BSTR if PARAM is CONSTANT_BOOL and k m otherwise
--------------------------------
Set to CONSTANT_BOOL for reduced QR decomposition and CONSTANT_BOOL for complete QR decomposition
--------------------------------
optional bias of shape BSTR
--------------------------------
Default None
--------------------------------
the spacing between kernel elements
--------------------------------
Can be a single number or a D_STRUCTURE BSTR
--------------------------------
Default CONSTANT_NUM
--------------------------------
split PARAM into groups in channels should be divisible by the number of groups
--------------------------------
Default CONSTANT_NUM
--------------------------------
input D_STRUCTURE of shape BSTR
--------------------------------
additional size added to one side of each dimension in the output shape
--------------------------------
Can be a single number or a D_STRUCTURE BSTR
--------------------------------
Default CONSTANT_NUM
--------------------------------
PARAM BSTR padding zero padding will be added to both sides of each dimension in the PARAM
--------------------------------
Can be a single number or a D_STRUCTURE BSTR
--------------------------------
Default CONSTANT_NUM
--------------------------------
the stride of the convolving kernel
--------------------------------
Can be a single number or a D_STRUCTURE BSTR
--------------------------------
Default CONSTANT_NUM
--------------------------------
filters of shape BSTR
--------------------------------
absolute tolerance
--------------------------------
if CONSTANT_BOOL gradcheck allows for D_STRUCTURE input and for any D_STRUCTURE at input gradcheck will perform check at nnz positions only
--------------------------------
perturbation for finite differences
--------------------------------
a Python function that takes D_STRUCTURE PARAM and returns a D_STRUCTURE of D_STRUCTURE
--------------------------------
inputs to the function
--------------------------------
tolerance for non determinism
--------------------------------
When running identical PARAM through the differentiation the results must either match exactly BSTR or be within this tolerance
--------------------------------
indicating whether to raise an exception if the check fails
--------------------------------
The exception gives more information about the exact nature of the failure
--------------------------------
This is helpful when debugging gradchecks
--------------------------------
relative tolerance
--------------------------------
the first batch of matrices to be multiplied
--------------------------------
the second batch of matrices to be multiplied
--------------------------------
the output D_STRUCTURE
--------------------------------
the dimension or dimensions to reduce
--------------------------------
the input D_STRUCTURE
--------------------------------
whether the output D_STRUCTURE has PARAM retained or not
--------------------------------
the output D_STRUCTURE
--------------------------------
the desired device of returned D_STRUCTURE
--------------------------------
Default if QSTR defaults to the device of PARAM
--------------------------------
the desired data type of returned D_STRUCTURE
--------------------------------
Default if QSTR defaults to the dtype of PARAM
--------------------------------
the size of QSTR will determine size of the output D_STRUCTURE
--------------------------------
the desired layout of returned D_STRUCTURE
--------------------------------
Default if QSTR defaults to the layout of PARAM
--------------------------------
the desired memory format of returned D_STRUCTURE
--------------------------------
Default torch preserve_format
--------------------------------
If autograd should record operations on the returned D_STRUCTURE
--------------------------------
Default CONSTANT_BOOL
--------------------------------
Whether this op should be an async op
--------------------------------
The process group to work on
--------------------------------
D_STRUCTURE to be broadcast from current process
--------------------------------
Output D_STRUCTURE
--------------------------------
It should contain correctly sized D_STRUCTURE to be used for output of the collective
--------------------------------
the dimension over which the D_STRUCTURE are concatenated
--------------------------------
the output D_STRUCTURE
--------------------------------
any python D_STRUCTURE of D_STRUCTURE of the same type
--------------------------------
Non empty D_STRUCTURE provided must have the same shape except in the cat dimension
--------------------------------
the desired data type of returned D_STRUCTURE If specified the PARAM D_STRUCTURE is casted to QSTR before the operationis performed
--------------------------------
This is useful for preventing data type overflows
--------------------------------
Default None
--------------------------------
the input D_STRUCTURE
--------------------------------
a file like object BSTR or a D_TYPE containing a file name
--------------------------------
saved object
--------------------------------
module used for pickling metadata and objects
--------------------------------
can be specified to override the default protocol
--------------------------------
the input D_STRUCTURE
--------------------------------
the output D_STRUCTURE
--------------------------------
the input D_STRUCTURE
--------------------------------
the power to raise the matrix to
--------------------------------
the input D_STRUCTURE
--------------------------------
the shape of the output D_STRUCTURE
--------------------------------
the offset in the underlying storage of the output D_STRUCTURE
--------------------------------
the stride of the output D_STRUCTURE
--------------------------------
the input D_STRUCTURE of size BSTR where is zero or more batch dimensions
--------------------------------
a D_TYPE value that when set to CONSTANT_BOOL this module has learnable per channel affine parameters initialized to ones BSTR
--------------------------------
Default CONSTANT_BOOL
--------------------------------
a value added to the denominator for numerical stability
--------------------------------
Default CONSTANT_FLOAT
--------------------------------
number of channels expected in input
--------------------------------
number of groups to separate the channels into
--------------------------------
the D_STRUCTURE to compute the multivariate log gamma function
--------------------------------
the number of dimensions
--------------------------------
an input D_STRUCTURE or number
--------------------------------
an input D_STRUCTURE or number
--------------------------------
the input D_STRUCTURE
--------------------------------
the output D_STRUCTURE
--------------------------------
the desired data type of returned D_STRUCTURE If specified the PARAM D_STRUCTURE is casted to QSTR before the operationis performed
--------------------------------
This is useful for preventing data type overflows
--------------------------------
Default None
--------------------------------
the input D_STRUCTURE
--------------------------------
the target output size of the image of the form D x H x W Can be a D_STRUCTURE BSTR or a single D for a cube D x D x D D H and W can be either a D_TYPE or QSTR which means the size will be the same as that of the input
--------------------------------
if CONSTANT_BOOL will return the indices along with the outputs
--------------------------------
Useful to pass to nn MaxUnpool3d
--------------------------------
Default CONSTANT_BOOL
--------------------------------
the input D_STRUCTURE
--------------------------------
perform the computation inplace
--------------------------------
quantized input
--------------------------------
the non linear function BSTR
--------------------------------
optional parameter for the non linear function
--------------------------------
the size of the padding
--------------------------------
If is D_TYPE uses the same padding in all boundaries
--------------------------------
If a CONSTANT_NUM D_STRUCTURE uses BSTR
--------------------------------
a pseudorandom number generator for sampling
--------------------------------
the input D_STRUCTURE containing the rates of the Poisson distribution
--------------------------------
a CONSTANT_NUM dimensional D_STRUCTURE
--------------------------------
A dimension along which Softmin will be computed BSTR
--------------------------------
multiplicative factor
--------------------------------
Default CONSTANT_FLOAT
--------------------------------
ONE_WORD exponent
--------------------------------
Default CONSTANT_FLOAT
--------------------------------
additive factor
--------------------------------
Default CONSTANT_NUM
--------------------------------
amount of neighbouring channels used for normalization
--------------------------------
the target output size BSTR
--------------------------------
a D_STRUCTURE of D_TYPE defining the shape of the output D_STRUCTURE
--------------------------------
Can be a variable number of arguments or a collection like a D_STRUCTURE
--------------------------------
the desired device of returned D_STRUCTURE
--------------------------------
Default if QSTR uses the current device for the default D_STRUCTURE type see torch set_default_tensor_type
--------------------------------
QSTR will be the CPU for CPU D_STRUCTURE types and the current CUDA device for CUDA D_STRUCTURE types
--------------------------------
the desired data type of returned D_STRUCTURE
--------------------------------
Default if QSTR uses a global default see torch set_default_tensor_type
--------------------------------
the desired layout of returned D_STRUCTURE
--------------------------------
Default torch strided
--------------------------------
the output D_STRUCTURE
--------------------------------
If autograd should record operations on the returned D_STRUCTURE
--------------------------------
Default CONSTANT_BOOL
--------------------------------
If CONSTANT_BOOL adds a learnable bias to the output
--------------------------------
Default CONSTANT_BOOL
--------------------------------
Spacing between kernel elements
--------------------------------
Default CONSTANT_NUM
--------------------------------
Number of blocked connections from input channels to output channels
--------------------------------
Default CONSTANT_NUM
--------------------------------
Number of channels in the input image
--------------------------------
Size of the convolving kernel
--------------------------------
Number of channels produced by the convolution
--------------------------------
Additional size added to one side of each dimension in the output shape
--------------------------------
Default CONSTANT_NUM
--------------------------------
PARAM BSTR padding zero padding will be added to both sides of each dimension in the input
--------------------------------
Default CONSTANT_NUM
--------------------------------
Stride of the convolution
--------------------------------
Default CONSTANT_NUM
--------------------------------
the D_STRUCTURE to compare
--------------------------------
the D_STRUCTURE or value to compare
--------------------------------
the output D_STRUCTURE that must be a D_TYPE
--------------------------------
If CONSTANT_BOOL the filename part of the PARAM should follow the naming convention filename REXPR REXPR where REXPR is the first eight or more digits of the SHA256 hash of the contents of the file
--------------------------------
The hash is used to ensure unique names and to verify the contents of the file
--------------------------------
Default CONSTANT_BOOL
--------------------------------
a function or a D_STRUCTURE specifying how to remap storage locations BSTR
--------------------------------
directory in which to save the object
--------------------------------
whether or not to display a progress bar to stderr
--------------------------------
Default CONSTANT_BOOL
--------------------------------
URL of the object to download
--------------------------------
ASCII message to associate with range
--------------------------------
the input D_STRUCTURE
--------------------------------
the diagonal to consider
--------------------------------
Default CONSTANT_NUM BSTR
--------------------------------
the input D_STRUCTURE
--------------------------------
the output D_STRUCTURE
--------------------------------
if CONSTANT_BOOL the corner pixels of the input and output D_STRUCTURE are aligned and thus preserving the values at those pixels
--------------------------------
This only has effect when PARAM is QSTR
--------------------------------
Default CONSTANT_BOOL
--------------------------------
the upsampling algorithm one of QSTR
--------------------------------
Default QSTR
--------------------------------
multiplier for spatial PARAM
--------------------------------
Has to match input PARAM if it is a D_STRUCTURE
--------------------------------
output spatial sizes
--------------------------------
quantity of parameters to prune
--------------------------------
If D_TYPE should be between CONSTANT_FLOAT and CONSTANT_FLOAT and represent the fraction of parameters to prune
--------------------------------
If D_TYPE it represents the absolute number of parameters to prune
--------------------------------
index of the dim along which we define channels to prune
--------------------------------
module containing the D_STRUCTURE to prune
--------------------------------
See documentation of valid entries for argument QSTR in torch norm
--------------------------------
parameter name within PARAM on which pruning will act
--------------------------------
Map from filename to contents which will be stored as part of QSTR
--------------------------------
A file like object BSTR or a D_TYPE containing a file name
--------------------------------
A QSTR to save
--------------------------------
the input D_STRUCTURE of size BSTR where is zero or more batch dimensions
--------------------------------
the output D_STRUCTURE
--------------------------------
the dimension to do the operation over
--------------------------------
the input D_STRUCTURE
--------------------------------
the result D_STRUCTURE of two output D_STRUCTURE BSTR
--------------------------------
the input D_STRUCTURE
--------------------------------
the input D_STRUCTURE
--------------------------------
the output D_STRUCTURE
--------------------------------
the input D_STRUCTURE
--------------------------------
Small value to avoid division by zero
--------------------------------
Default CONSTANT_FLOAT
--------------------------------
Determines whether or not to keep the vector dimension
--------------------------------
Default CONSTANT_BOOL
--------------------------------
the norm degree
--------------------------------
Default CONSTANT_NUM
--------------------------------
the index at which to insert the singleton dimension
--------------------------------
the input D_STRUCTURE
--------------------------------
the target output size BSTR
--------------------------------
the inputs to the PARAM e g such that PARAM BSTR is a valid invocation of the PARAM
--------------------------------
Any non D_STRUCTURE arguments will be hard coded into the exported PARAM any D_STRUCTURE arguments will become inputs of the exported PARAM in the order they occur in args
--------------------------------
If args is a D_STRUCTURE this is equivalent to having called it with a CONSTANT_NUM ary D_STRUCTURE of that D_STRUCTURE
--------------------------------
Note passing keyword arguments to the PARAM is not currently supported
--------------------------------
Give us a shout if you need it
--------------------------------
ONE_WORD DEPRECATED
--------------------------------
use PARAM export the PARAM in aten mode
--------------------------------
If using aten mode all the ops original exported by the functions in symbolic_opset REXPR REXPR are exported as ATen ops
--------------------------------
If CONSTANT_BOOL the constant folding optimization is applied to the PARAM during export
--------------------------------
Constant folding optimization will replace some of the ops that have all constant inputs with pre computed constant nodes
--------------------------------
PARAMs example outputs being exported
--------------------------------
example_outputs must be provided when exporting a ScriptModule or TorchScript Function
--------------------------------
if specified all parameters will be exported
--------------------------------
Set this to CONSTANT_BOOL if you want to export an untrained PARAM
--------------------------------
In this case the exported PARAM will first take all of its parameters as arguments the ordering as specified by PARAM state_dict BSTR
--------------------------------
ONE_WORD DEPRECATED
--------------------------------
use PARAM export the internal IR directly instead of converting it to ONNX ops
--------------------------------
a file like object BSTR or a D_TYPE containing a file name
--------------------------------
A binary Protobuf will be written to this file
--------------------------------
names to assign to the input nodes of the graph in order
--------------------------------
the model to be exported
--------------------------------
OperatorExportTypes ONNX all ops are exported as regular ONNX ops
--------------------------------
OperatorExportTypes ONNX_ATEN all ops are exported as PARAM ops
--------------------------------
OperatorExportTypes ONNX_ATEN_FALLBACK if symbolic is missing fall back on PARAM op
--------------------------------
OperatorExportTypes RAW export raw ir
--------------------------------
by default we export the PARAM to the opset version of the onnx submodule
--------------------------------
Since ONNX latest opset may evolve before next stable release by default we export to one stable opset version
--------------------------------
Right now supported stable opset version is CONSTANT_NUM
--------------------------------
The opset_version must be onnx_master_opset or in onnx_stable_opsets which are defined in torch onnx symbolic_helper py
--------------------------------
names to assign to the output nodes of the graph in order
--------------------------------
if CONSTANT_BOOL strips the field QSTR from the exported PARAM which information about the stack trace
--------------------------------
export the PARAM in training mode
--------------------------------
At the moment ONNX is oriented towards exporting models for inference only so you will generally not need to set this to CONSTANT_BOOL
--------------------------------
if specified we will print out a debug description of the trace being exported
--------------------------------
input model
--------------------------------
positional arguments for PARAM
--------------------------------
a function for evaluating the prepared PARAM can be a function that simply runs the prepared PARAM or a training loop
--------------------------------
the dimension to sort along
--------------------------------
the input D_STRUCTURE
--------------------------------
the k in QSTR
--------------------------------
controls whether to return largest or smallest elements
--------------------------------
the output D_STRUCTURE of BSTR that can be optionally given to be used as output buffers
--------------------------------
controls whether to return the elements in sorted order
--------------------------------
Geometrically we consider the pixels of the PARAM and output as squares rather than points
--------------------------------
If set to CONSTANT_BOOL the PARAM and output D_STRUCTURE are aligned by the center points of their corner pixels preserving the values at the corner pixels
--------------------------------
If set to CONSTANT_BOOL the PARAM and output D_STRUCTURE are aligned by the corner points of their corner pixels and the interpolation uses edge value padding for out of boundary values making this operation independent of PARAM PARAM when PARAM is kept the same
--------------------------------
This only has an effect when PARAM is QSTR
--------------------------------
Default CONSTANT_BOOL
--------------------------------
the input D_STRUCTURE
--------------------------------
algorithm used for upsampling QSTR QSTR
--------------------------------
multiplier for spatial PARAM
--------------------------------
Has to match PARAM PARAM if it is a D_STRUCTURE
--------------------------------
output spatial size
--------------------------------
the first multiplicand D_STRUCTURE
--------------------------------
the second multiplicand D_STRUCTURE
--------------------------------
the output D_STRUCTURE
--------------------------------
GPU ids on which to replicate PARAM
--------------------------------
inputs to the PARAM
--------------------------------
the module to evaluate in parallel
--------------------------------
GPU location of the output Use CONSTANT_NUM to indicate the CPU
--------------------------------
default PARAM BSTR
--------------------------------
If CONSTANT_BOOL adds a learnable bias to the output
--------------------------------
Default CONSTANT_BOOL
--------------------------------
Spacing between kernel elements
--------------------------------
Default CONSTANT_NUM
--------------------------------
Number of blocked connections from input channels to output channels
--------------------------------
Default CONSTANT_NUM
--------------------------------
Number of channels in the input image
--------------------------------
Size of the convolving kernel
--------------------------------
Number of channels produced by the convolution
--------------------------------
Zero padding added to all three sides of the input
--------------------------------
Default CONSTANT_NUM
--------------------------------
ONE_WORD QSTR
--------------------------------
Default QSTR
--------------------------------
Stride of the convolution
--------------------------------
Default CONSTANT_NUM
--------------------------------
Initial data for the D_STRUCTURE
--------------------------------
Can be a D_STRUCTURE NumPy D_STRUCTURE scalar and other types
--------------------------------
the desired device of returned D_STRUCTURE
--------------------------------
Default if QSTR uses the current device for the default D_STRUCTURE type see torch set_default_tensor_type
--------------------------------
QSTR will be the CPU for CPU D_STRUCTURE types and the current CUDA device for CUDA D_STRUCTURE types
--------------------------------
the desired PARAM type of returned D_STRUCTURE
--------------------------------
Default if QSTR infers PARAM type from PARAM
--------------------------------
If set returned D_STRUCTURE would be allocated in the pinned memory
--------------------------------
Works only for CPU D_STRUCTURE
--------------------------------
Default CONSTANT_BOOL
--------------------------------
If autograd should record operations on the returned D_STRUCTURE
--------------------------------
Default CONSTANT_BOOL
--------------------------------
the dimension to reduce
--------------------------------
the input D_STRUCTURE
--------------------------------
whether the output D_STRUCTURE has PARAM retained or not
--------------------------------
Default CONSTANT_BOOL
--------------------------------
the result D_STRUCTURE of two output D_STRUCTURE BSTR
--------------------------------
when CONSTANT_BOOL will use ceil instead of floor to compute the output shape
--------------------------------
the size of the window
--------------------------------
the stride of the window
--------------------------------
Default value is PARAM
--------------------------------
The process group to work on
--------------------------------
The default is the general main process group
--------------------------------
If another specific group is specified the calling process must be part of QSTR
--------------------------------
Size of the max pooling window
--------------------------------
Padding that was added to the input
--------------------------------
Stride of the max pooling window
--------------------------------
It is set to PARAM by default
--------------------------------
If CONSTANT_BOOL both the output and result will be computed in a differentiable way
--------------------------------
Note that when PARAM is CONSTANT_BOOL the result can not require gradients or be disconnected from the PARAM
--------------------------------
Defaults to CONSTANT_BOOL
--------------------------------
a Python function that takes D_STRUCTURE PARAM and returns a D_STRUCTURE with a single element
--------------------------------
inputs to the function PARAM
--------------------------------
If CONSTANT_BOOL an error will be raised when we detect that there exists an input such that all the outputs are independent of it
--------------------------------
If CONSTANT_BOOL we return a D_STRUCTURE of zeros as the vhp for said PARAM which is the expected mathematical value
--------------------------------
Defaults to CONSTANT_BOOL
--------------------------------
The vector for which the vector Hessian product is computed
--------------------------------
Must be the same size as the input of PARAM
--------------------------------
This argument is optional when PARAMs input contains a single element and BSTR will be set as a D_STRUCTURE containing a single CONSTANT_NUM
--------------------------------
a PyCapsule object with the dltensor
--------------------------------
number of columns in the CONSTANT_NUM D matrix
--------------------------------
the desired device of returned D_STRUCTURE
--------------------------------
Default if QSTR uses the current device for the default D_STRUCTURE type see torch set_default_tensor_type
--------------------------------
QSTR will be the CPU for CPU D_STRUCTURE types and the current CUDA device for CUDA D_STRUCTURE types
--------------------------------
the desired data type of returned D_STRUCTURE
--------------------------------
Default if QSTR D_TYPE
--------------------------------
currently only support torch strided
--------------------------------
diagonal offset from the main diagonal
--------------------------------
Default if not provided CONSTANT_NUM
--------------------------------
number of rows in the CONSTANT_NUM D matrix
--------------------------------
the dimension along which to narrow
--------------------------------
the D_STRUCTURE to narrow
--------------------------------
the distance to the ending dimension
--------------------------------
the starting dimension
--------------------------------
the input D_STRUCTURE
--------------------------------
the output D_STRUCTURE
--------------------------------
when CONSTANT_BOOL will use ceil instead of floor to compute the output shape
--------------------------------
when CONSTANT_BOOL will include the zero PARAM in the averaging calculation
--------------------------------
the size of the window
--------------------------------
implicit zero padding to be added on both sides
--------------------------------
the stride of the window
--------------------------------
Default value is PARAM
--------------------------------
the D_STRUCTURE to be added
--------------------------------
the output D_STRUCTURE
--------------------------------
the numerator D_STRUCTURE
--------------------------------
the denominator D_STRUCTURE
--------------------------------
multiplier for PARAM PARAM
--------------------------------
the diagonal to consider
--------------------------------
the input D_STRUCTURE
--------------------------------
the output D_STRUCTURE
--------------------------------
the dimension to do the operation over
--------------------------------
the input D_STRUCTURE
--------------------------------
the result D_STRUCTURE of two output D_STRUCTURE BSTR
--------------------------------
when CONSTANT_BOOL will use ceil instead of floor in the formula to compute the output shape
--------------------------------
Default CONSTANT_BOOL
--------------------------------
when CONSTANT_BOOL will include the zero PARAM in the averaging calculation
--------------------------------
Default CONSTANT_BOOL
--------------------------------
if specified it will be used as divisor otherwise size of the pooling region will be used
--------------------------------
Default None
--------------------------------
input D_STRUCTURE BSTR
--------------------------------
size of the pooling region
--------------------------------
Can be a single number or a D_STRUCTURE BSTR
--------------------------------
implicit zero paddings on both sides of the PARAM
--------------------------------
Can be a single number or a D_STRUCTURE BSTR
--------------------------------
Default CONSTANT_NUM
--------------------------------
stride of the pooling operation
--------------------------------
Can be a single number or a D_STRUCTURE BSTR
--------------------------------
Default PARAM
--------------------------------
The desired seed
--------------------------------
A D_TYPE or D_STRUCTURE of D_TYPE containing C source code
--------------------------------
A D_TYPE or D_STRUCTURE of D_TYPE containing CUDA source code
--------------------------------
A D_STRUCTURE of function names for which to generate function bindings
--------------------------------
If a D_STRUCTURE is given it should map function names to docstrings BSTR
--------------------------------
Determines whether CUDA headers and libraries are added to the build
--------------------------------
If set to QSTR BSTR this value is automatically determined based on whether PARAM is provided
--------------------------------
Set it to CONSTANT_BOOL to force CUDA headers and libraries to be included
--------------------------------
Determines whether pytorch error and warning macros are handled by pytorch instead of pybind
--------------------------------
To do this each function QSTR is called via an intermediary QSTR function
--------------------------------
This redirection might cause issues in obscure cases of cpp
--------------------------------
This flag should be set to CONSTANT_BOOL when this redirect causes issues
--------------------------------
the input D_STRUCTURE of at least PARAM CONSTANT_NUM dimensions
--------------------------------
controls whether to return normalized results
--------------------------------
Default CONSTANT_BOOL
--------------------------------
controls whether PARAM was halfed to avoid redundancy e g by rfft
--------------------------------
Default CONSTANT_BOOL
--------------------------------
the number of dimensions in each signal
--------------------------------
QSTR can only be CONSTANT_NUM
--------------------------------
the size of the original signal BSTR
--------------------------------
Default QSTR
--------------------------------
can optionally do the operation in place
--------------------------------
Default CONSTANT_BOOL
--------------------------------
lower bound of the uniform distribution
--------------------------------
Default CONSTANT_NUM CONSTANT_NUM
--------------------------------
upper bound of the uniform distribution
--------------------------------
Default CONSTANT_NUM CONSTANT_NUM
--------------------------------
optional bias of shape BSTR
--------------------------------
Default None
--------------------------------
the spacing between kernel elements
--------------------------------
Can be a single number or a D_STRUCTURE BSTR
--------------------------------
Default CONSTANT_NUM
--------------------------------
split PARAM into groups in channels should be divisible by the number of groups
--------------------------------
Default CONSTANT_NUM
--------------------------------
input D_STRUCTURE of shape BSTR
--------------------------------
additional size added to one side of each dimension in the output shape
--------------------------------
Can be a single number or a D_STRUCTURE BSTR
--------------------------------
Default CONSTANT_NUM
--------------------------------
PARAM BSTR padding zero padding will be added to both sides of each dimension in the PARAM
--------------------------------
Can be a single number or a D_STRUCTURE BSTR
--------------------------------
Default CONSTANT_NUM
--------------------------------
the stride of the convolving kernel
--------------------------------
Can be a single number or a D_STRUCTURE BSTR
--------------------------------
Default CONSTANT_NUM
--------------------------------
filters of shape BSTR
--------------------------------
the D_STRUCTURE to compare
--------------------------------
the D_STRUCTURE or value to compare
--------------------------------
the output D_STRUCTURE that must be a D_TYPE
--------------------------------
multiplier for spatial PARAM
--------------------------------
output spatial sizes
--------------------------------
the numerator D_STRUCTURE
--------------------------------
the denominator
--------------------------------
the output D_STRUCTURE
--------------------------------
the dimension to do the operation over
--------------------------------
the desired data type of returned D_STRUCTURE
--------------------------------
If specified the PARAM D_STRUCTURE is casted to QSTR before the operation is performed
--------------------------------
This is useful for preventing data type overflows
--------------------------------
Default None
--------------------------------
the input D_STRUCTURE
--------------------------------
the output D_STRUCTURE
--------------------------------
The device to set the RNG state
--------------------------------
Default QSTR i e torch device QSTR the current CUDA device
--------------------------------
The desired state
--------------------------------
If CONSTANT_BOOL the Hessian will be computed in a differentiable manner
--------------------------------
Note that when PARAM is CONSTANT_BOOL the result can not require gradients or be disconnected from the PARAM
--------------------------------
Defaults to CONSTANT_BOOL
--------------------------------
a Python function that takes D_STRUCTURE PARAM and returns a D_STRUCTURE with a single element
--------------------------------
inputs to the function PARAM
--------------------------------
If CONSTANT_BOOL an error will be raised when we detect that there exists an input such that all the outputs are independent of it
--------------------------------
If CONSTANT_BOOL we return a D_STRUCTURE of zeros as the hessian for said PARAM which is the expected mathematical value
--------------------------------
Defaults to CONSTANT_BOOL
--------------------------------
the input D_STRUCTURE
--------------------------------
the output D_STRUCTURE
--------------------------------
the dimension or dimensions to reduce
--------------------------------
the input D_STRUCTURE
--------------------------------
whether the output D_STRUCTURE has PARAM retained or not
--------------------------------
the output D_STRUCTURE
--------------------------------
whether to use the unbiased estimation or not
--------------------------------
Geometrically we consider the pixels of the PARAM and output as squares rather than points
--------------------------------
If set to CONSTANT_BOOL the PARAM and output D_STRUCTURE are aligned by the center points of their corner pixels preserving the values at the corner pixels
--------------------------------
If set to CONSTANT_BOOL the PARAM and output D_STRUCTURE are aligned by the corner points of their corner pixels and the interpolation uses edge value padding for out of boundary values making this operation independent of PARAM PARAM when PARAM is kept the same
--------------------------------
This only has an effect when PARAM is QSTR
--------------------------------
Default CONSTANT_BOOL
--------------------------------
the input D_STRUCTURE
--------------------------------
algorithm used for upsampling QSTR QSTR QSTR QSTR QSTR QSTR
--------------------------------
Default QSTR
--------------------------------
recompute the PARAM for use in the interpolation calculation
--------------------------------
When PARAM is passed as a parameter it is used to compute the output_size
--------------------------------
If recompute_scale_factor is CONSTANT_BOOL or not specified a new PARAM will be computed based on the output and PARAM sizes for use in the interpolation computation i e
--------------------------------
the computation will be identical to if the computed output_size were passed in explicitly
--------------------------------
Otherwise the passed in PARAM will be used in the interpolation computation
--------------------------------
Note that when PARAM is D_TYPE point the recomputed PARAM may differ from the one passed in due to rounding and precision issues
--------------------------------
multiplier for spatial PARAM
--------------------------------
Has to match PARAM PARAM if it is a D_STRUCTURE
--------------------------------
output spatial size
--------------------------------
the lambda value for the Hardshrink formulation
--------------------------------
Default CONSTANT_FLOAT
--------------------------------
D_STRUCTURE containing inputs to the PARAM
--------------------------------
describes what to run in the forward pass of the model or part of the model
--------------------------------
It should also know how to handle the inputs passed as the D_STRUCTURE
--------------------------------
For example in LSTM if user passes BSTR QSTR should correctly use the first input as QSTR and the second input as QSTR
--------------------------------
Omit stashing and restoring the RNG state during each checkpoint
--------------------------------
optional bias of shape BSTR
--------------------------------
Default None
--------------------------------
the spacing between kernel elements
--------------------------------
Can be a single number or a D_STRUCTURE BSTR
--------------------------------
Default CONSTANT_NUM
--------------------------------
split PARAM into groups in channels should be divisible by the number of groups
--------------------------------
Default CONSTANT_NUM
--------------------------------
input D_STRUCTURE of shape BSTR
--------------------------------
additional size added to one side of each dimension in the output shape
--------------------------------
Can be a single number or a D_STRUCTURE BSTR
--------------------------------
Default CONSTANT_NUM
--------------------------------
PARAM BSTR padding zero padding will be added to both sides of each dimension in the PARAM
--------------------------------
Can be a single number or a D_STRUCTURE BSTR
--------------------------------
Default CONSTANT_NUM
--------------------------------
the stride of the convolving kernel
--------------------------------
Can be a single number or a D_STRUCTURE BSTR
--------------------------------
Default CONSTANT_NUM
--------------------------------
filters of shape BSTR
--------------------------------
a D_STRUCTURE to be exported
--------------------------------
the D_STRUCTURE to compare
--------------------------------
the D_STRUCTURE or value to compare
--------------------------------
the output D_STRUCTURE that must be a D_TYPE
--------------------------------
If CONSTANT_BOOL then the input and output D_STRUCTURE are provided as BSTR
--------------------------------
Default CONSTANT_BOOL
--------------------------------
If CONSTANT_BOOL then the layer does not use bias weights b_ih and b_hh
--------------------------------
Default CONSTANT_BOOL
--------------------------------
If CONSTANT_BOOL becomes a bidirectional RNN
--------------------------------
Default CONSTANT_BOOL
--------------------------------
If non zero introduces a Dropout layer on the outputs of each RNN layer except the last layer with dropout probability equal to QSTR
--------------------------------
Default CONSTANT_NUM
--------------------------------
The number of features in the hidden state h
--------------------------------
The number of expected features in the input x
--------------------------------
The non linearity to use
--------------------------------
Can be either QSTR
--------------------------------
Default QSTR
--------------------------------
Number of recurrent layers
--------------------------------
E g setting num_layers CONSTANT_NUM would mean stacking two RNNs together to form a stacked RNN with the second RNN taking in outputs of the first RNN and computing the final results
--------------------------------
Default CONSTANT_NUM
--------------------------------
a pseudorandom number generator for sampling
--------------------------------
the input D_STRUCTURE of probability values for the Bernoulli distribution
--------------------------------
the output D_STRUCTURE
--------------------------------
the input D_STRUCTURE
--------------------------------
the output D_STRUCTURE containing indices
--------------------------------
the input D_STRUCTURE
--------------------------------
the D_STRUCTURE to compute OR with
--------------------------------
the output D_STRUCTURE
--------------------------------
containing module
--------------------------------
name of weight parameter
--------------------------------
Function that takes in a D_STRUCTURE of modules and outputs a D_STRUCTURE of fused modules of the same length
--------------------------------
For example fuser_func BSTR returns the D_STRUCTURE BSTR Defaults to torch quantization fuse_known_modules
--------------------------------
D_TYPE specifying if fusion happens in place on the PARAM by default a new PARAM is returned
--------------------------------
Model containing the modules to be fused
--------------------------------
D_STRUCTURE of D_STRUCTURE of module names to fuse
--------------------------------
Can also be a D_STRUCTURE of D_TYPE if there is only a single D_STRUCTURE of modules to fuse
--------------------------------
the corresponding kwargs for callable PARAM
--------------------------------
the corresponding args for callable PARAM
--------------------------------
whether to force a fresh download of PARAM repo unconditionally
--------------------------------
Default is CONSTANT_BOOL
--------------------------------
a D_TYPE with format repo_owner repo_name tag_name with an optional tag branch
--------------------------------
The default branch is master if not specified
--------------------------------
Example pytorch vision hub
--------------------------------
a D_TYPE of entrypoint name defined in repo hubconf py
--------------------------------
If CONSTANT_BOOL mute messages about hitting local caches
--------------------------------
Note that the message about first download is cannot be muted
--------------------------------
Default is CONSTANT_BOOL
--------------------------------
D_STRUCTURE of arbitrary shape
--------------------------------
Deprecated BSTR
--------------------------------
By default the losses are averaged or summed over observations for each minibatch depending on PARAM
--------------------------------
When QSTR is CONSTANT_BOOL returns a loss per batch element instead and ignores PARAM
--------------------------------
Default CONSTANT_BOOL
--------------------------------
Specifies the reduction to apply to the output QSTR QSTR QSTR QSTR
--------------------------------
QSTR no reduction will be applied QSTR the sum of the output will be divided by the batchsize QSTR the output will be summed QSTR the output will be divided by the number of elements in the output Default QSTR
--------------------------------
Deprecated BSTR
--------------------------------
By default the losses are averaged over each loss element in the batch
--------------------------------
Note that for some losses there multiple elements per sample
--------------------------------
If the field QSTR is set to CONSTANT_BOOL the losses are instead summed for each minibatch
--------------------------------
Ignored when PARAM is CONSTANT_BOOL
--------------------------------
Default CONSTANT_BOOL
--------------------------------
D_STRUCTURE of the same shape as PARAM
--------------------------------
the dimension to reduce
--------------------------------
the input D_STRUCTURE
--------------------------------
whether the output D_STRUCTURE has PARAM retained or not
--------------------------------
the result D_STRUCTURE of two output D_STRUCTURE BSTR
--------------------------------
the dimension to reduce
--------------------------------
If QSTR the argmax of the flattened PARAM is returned
--------------------------------
the input D_STRUCTURE
--------------------------------
whether the output D_STRUCTURE has PARAM retained or not
--------------------------------
Ignored if PARAM None
--------------------------------
the dimension or dimensions to reduce
--------------------------------
the input D_STRUCTURE
--------------------------------
whether the output D_STRUCTURE has PARAM retained or not
--------------------------------
the output D_STRUCTURE
--------------------------------
whether to use the unbiased estimation or not
--------------------------------
number of groups in the conv layer default CONSTANT_NUM
--------------------------------
a CONSTANT_NUM dimensional D_STRUCTURE
--------------------------------
the target output size H
--------------------------------
if CONSTANT_BOOL will return the indices along with the outputs
--------------------------------
Useful to pass to nn MaxUnpool1d
--------------------------------
Default CONSTANT_BOOL
--------------------------------
Has a default value of CONSTANT_NUM
--------------------------------
Deprecated BSTR
--------------------------------
By default the losses are averaged or summed over observations for each minibatch depending on PARAM
--------------------------------
When QSTR is CONSTANT_BOOL returns a loss per batch element instead and ignores PARAM
--------------------------------
Default CONSTANT_BOOL
--------------------------------
Specifies the reduction to apply to the output QSTR QSTR QSTR
--------------------------------
QSTR no reduction will be applied QSTR the sum of the output will be divided by the number of elements in the output QSTR the output will be summed
--------------------------------
Note PARAM and PARAM are in the process of being deprecated and in the meantime specifying either of those two args will override QSTR
--------------------------------
Default QSTR
--------------------------------
Deprecated BSTR
--------------------------------
By default the losses are averaged over each loss element in the batch
--------------------------------
Note that for some losses there are multiple elements per sample
--------------------------------
If the field QSTR is set to CONSTANT_BOOL the losses are instead summed for each minibatch
--------------------------------
Ignored when PARAM is CONSTANT_BOOL
--------------------------------
Default CONSTANT_BOOL
--------------------------------
the size of the padding
--------------------------------
If is D_TYPE uses the same padding in all boundaries
--------------------------------
If a CONSTANT_NUM D_STRUCTURE uses BSTR
--------------------------------
number of chunks to return
--------------------------------
dimension along which to split the D_STRUCTURE
--------------------------------
the D_STRUCTURE to split
--------------------------------
the D_TYPE point dtype to make the default
--------------------------------
the input D_STRUCTURE
--------------------------------
the output D_STRUCTURE
--------------------------------
max norm of the gradients
--------------------------------
type of the used p norm
--------------------------------
Can be QSTR for infinity norm
--------------------------------
an D_STRUCTURE of D_STRUCTURE or a single D_STRUCTURE that will have gradients normalized
--------------------------------
controls whether eigenvectors have to be computed
--------------------------------
the input D_STRUCTURE of size BSTR where is zero or more batch dimensions consisting of symmetric matrices
--------------------------------
the output D_STRUCTURE of BSTR
--------------------------------
controls whether to consider upper triangular or lower triangular region
--------------------------------
The dimension along which to integrate By default use the last dimension
--------------------------------
The distance between points at which y is sampled
--------------------------------
The values of the function to integrate
--------------------------------
the input D_STRUCTURE
--------------------------------
the number to be divided to each element of PARAM
--------------------------------
the output D_STRUCTURE
--------------------------------
the dimension to slice over to get the sub D_STRUCTURE
--------------------------------
the input D_STRUCTURE
--------------------------------
the maximum norm to keep each sub D_STRUCTURE under
--------------------------------
the output D_STRUCTURE
--------------------------------
the power for the norm computation
--------------------------------
A torch nn Sequential or the D_STRUCTURE of modules or functions BSTR to run sequentially
--------------------------------
A D_STRUCTURE that is input to PARAM
--------------------------------
Omit stashing and restoring the RNG state during each checkpoint
--------------------------------
Number of chunks to create in the model
--------------------------------
the input D_STRUCTURE
--------------------------------
the output D_STRUCTURE
--------------------------------
Whether this op should be an async op
--------------------------------
The process group to work on
--------------------------------
D_STRUCTURE of D_STRUCTURE BSTR to be broadcast from current process
--------------------------------
Note that len BSTR needs to be the same for all the distributed processes calling this function
--------------------------------
the input D_STRUCTURE
--------------------------------
the D_STRUCTURE to compute XOR with
--------------------------------
the output D_STRUCTURE
--------------------------------
If set to CONSTANT_BOOL will do this operation in place
--------------------------------
probability of an element to be zeroed
--------------------------------
when CONSTANT_BOOL will use ceil instead of floor to compute the output shape
--------------------------------
a parameter that controls the PARAM of elements in the window
--------------------------------
the size of the window to take a max over
--------------------------------
implicit zero padding to be added on both sides
--------------------------------
if CONSTANT_BOOL will return the max indices along with the outputs
--------------------------------
Useful for torch nn MaxUnpool2d later
--------------------------------
the stride of the window
--------------------------------
Default value is PARAM
--------------------------------
the first input D_STRUCTURE
--------------------------------
the second PARAM D_STRUCTURE
--------------------------------
the output D_STRUCTURE
--------------------------------
the dimension to apply unique
--------------------------------
If QSTR the unique of the flattened PARAM is returned
--------------------------------
default QSTR
--------------------------------
the input D_STRUCTURE
--------------------------------
Whether to also return the counts for each unique element
--------------------------------
Whether to also return the indices for where elements in the original PARAM ended up in the returned unique D_STRUCTURE
--------------------------------
Whether to sort the unique elements in ascending order before returning as output
--------------------------------
the input D_STRUCTURE of size BSTR where is zero or more batch dimensions
--------------------------------
the first input D_STRUCTURE
--------------------------------
the second PARAM D_STRUCTURE
--------------------------------
the output D_STRUCTURE
--------------------------------
BSTR and PARAM Unpickler e g errors
--------------------------------
a file like object has to implement read meth QSTR meth QSTR and meth QSTR or a D_TYPE containing a file name
--------------------------------
a function torch device D_TYPE or a D_STRUCTURE specifying how to remap storage locations
--------------------------------
module used for unpickling metadata and objects has to match the QSTR used to serialize file
--------------------------------
can optionally do the operation in place
--------------------------------
Default CONSTANT_BOOL
--------------------------------
Controls the angle of the negative slope
--------------------------------
Default CONSTANT_FLOAT
--------------------------------
the D_STRUCTURE with the ending points
--------------------------------
the D_STRUCTURE with the starting points
--------------------------------
the output D_STRUCTURE
--------------------------------
the weight for the interpolation formula
--------------------------------
selected device
--------------------------------
This function is a no op if this argument is negative
--------------------------------
the input D_STRUCTURE
--------------------------------
the second PARAM D_STRUCTURE
--------------------------------
the output D_STRUCTURE
--------------------------------
If CONSTANT_BOOL adds a learnable bias to the output
--------------------------------
Default CONSTANT_BOOL
--------------------------------
Spacing between kernel elements
--------------------------------
Default CONSTANT_NUM
--------------------------------
Number of blocked connections from input channels to output channels
--------------------------------
Default CONSTANT_NUM
--------------------------------
Number of channels in the input image
--------------------------------
Size of the convolving kernel
--------------------------------
Number of channels produced by the convolution
--------------------------------
Zero padding added to both sides of the input
--------------------------------
Default CONSTANT_NUM
--------------------------------
ONE_WORD QSTR
--------------------------------
Default QSTR
--------------------------------
Stride of the convolution
--------------------------------
Default CONSTANT_NUM
--------------------------------
Object to test
--------------------------------
the axis along which to PARAM
--------------------------------
the indices of elements to gather
--------------------------------
the source D_STRUCTURE
--------------------------------
the destination D_STRUCTURE
--------------------------------
If CONSTANT_BOOL gradient w r t
--------------------------------
PARAM will be a sparse D_STRUCTURE
--------------------------------
the alpha value for the CELU formulation
--------------------------------
Default CONSTANT_FLOAT
--------------------------------
can optionally do the operation in place
--------------------------------
Default CONSTANT_BOOL
--------------------------------
axis to flip on
--------------------------------
the input D_STRUCTURE
--------------------------------
If set to CONSTANT_BOOL will do this operation in place
--------------------------------
probability of an element to be zero ed
--------------------------------
Deprecated BSTR
--------------------------------
By default the losses are averaged or summed over observations for each minibatch depending on PARAM
--------------------------------
When QSTR is CONSTANT_BOOL returns a loss per batch element instead and ignores PARAM
--------------------------------
Default CONSTANT_BOOL
--------------------------------
Specifies the reduction to apply to the output QSTR QSTR QSTR QSTR
--------------------------------
QSTR no reduction will be applied
--------------------------------
QSTR the sum of the output will be divided by batchsize
--------------------------------
QSTR the output will be summed
--------------------------------
QSTR the output will be divided by the number of elements in the output
--------------------------------
Default QSTR
--------------------------------
Deprecated BSTR
--------------------------------
By default the losses are averaged over each loss element in the batch
--------------------------------
Note that for some losses there are multiple elements per sample
--------------------------------
If the field QSTR is set to CONSTANT_BOOL the losses are instead summed for each minibatch
--------------------------------
Ignored when PARAM is CONSTANT_BOOL
--------------------------------
Default CONSTANT_BOOL
--------------------------------
The extra filenames given in the map would be loaded and their content would be stored in the provided map
--------------------------------
a file like object BSTR or a D_TYPE containing a file name
--------------------------------
A simplified version of QSTR in torch save used to dynamically remap storages to an alternative set of devices
--------------------------------
Whether this PARAM should be an async PARAM
--------------------------------
Destination rank
--------------------------------
The process group to work on
--------------------------------
One of the values from torch distributed ReduceOp enum
--------------------------------
Specifies an operation used for element wise reductions
--------------------------------
Input and output of the collective
--------------------------------
The function operates in place
--------------------------------
when CONSTANT_BOOL will use ceil instead of floor to compute the output shape
--------------------------------
Default CONSTANT_BOOL
--------------------------------
when CONSTANT_BOOL will include the zero PARAM in the averaging calculation
--------------------------------
Default CONSTANT_BOOL
--------------------------------
input D_STRUCTURE of shape BSTR
--------------------------------
the size of the window
--------------------------------
Can be a single number or a D_STRUCTURE BSTR
--------------------------------
implicit zero paddings on both sides of the PARAM
--------------------------------
Can be a single number or a D_STRUCTURE BSTR
--------------------------------
Default CONSTANT_NUM
--------------------------------
the stride of the window
--------------------------------
Can be a single number or a D_STRUCTURE BSTR
--------------------------------
Default PARAM
--------------------------------
the dimension to reduce
--------------------------------
the input D_STRUCTURE
--------------------------------
whether the output D_STRUCTURE has PARAM retained or not
--------------------------------
the result D_STRUCTURE of two output D_STRUCTURE BSTR
--------------------------------
Default CONSTANT_NUM
--------------------------------
The norm degree for pairwise distance
--------------------------------
Default CONSTANT_NUM
--------------------------------
Deprecated BSTR
--------------------------------
By default the losses are averaged or summed over observations for each minibatch depending on PARAM
--------------------------------
When QSTR is CONSTANT_BOOL returns a loss per batch element instead and ignores PARAM
--------------------------------
Default CONSTANT_BOOL
--------------------------------
Specifies the reduction to apply to the output QSTR QSTR QSTR
--------------------------------
QSTR no reduction will be applied QSTR the sum of the output will be divided by the number of elements in the output QSTR the output will be summed
--------------------------------
Note PARAM and PARAM are in the process of being deprecated and in the meantime specifying either of those two args will override QSTR
--------------------------------
Default QSTR
--------------------------------
Deprecated BSTR
--------------------------------
By default the losses are averaged over each loss element in the batch
--------------------------------
Note that for some losses there are multiple elements per sample
--------------------------------
If the field QSTR is set to CONSTANT_BOOL the losses are instead summed for each minibatch
--------------------------------
Ignored when PARAM is CONSTANT_BOOL
--------------------------------
Default CONSTANT_BOOL
--------------------------------
The distance swap is described in detail in the paper Learning shallow convolutional feature descriptors with triplet losses by V Balntas E Riba et al
--------------------------------
Default CONSTANT_BOOL
--------------------------------
the desired device of returned D_STRUCTURE
--------------------------------
Default if QSTR uses the current device for the default D_STRUCTURE type see torch set_default_tensor_type
--------------------------------
QSTR will be the CPU for CPU D_STRUCTURE types and the current CUDA device for CUDA D_STRUCTURE types
--------------------------------
the desired data type of returned D_STRUCTURE
--------------------------------
Default if QSTR uses a global default see torch set_default_tensor_type
--------------------------------
the desired layout of returned D_STRUCTURE
--------------------------------
Default torch strided
--------------------------------
the number of columns with default being QSTR
--------------------------------
the number of rows
--------------------------------
the output D_STRUCTURE
--------------------------------
If autograd should record operations on the returned D_STRUCTURE
--------------------------------
Default CONSTANT_BOOL
--------------------------------
If set to CONSTANT_BOOL will do this operation in place
--------------------------------
probability of an element to be dropped
--------------------------------
Default CONSTANT_FLOAT
--------------------------------
absolute tolerance
--------------------------------
perturbation for finite differences
--------------------------------
a Python function that takes D_STRUCTURE PARAM and returns a D_STRUCTURE of D_STRUCTURE
--------------------------------
if PARAM is QSTR is CONSTANT_BOOL the randomly generated gradient outputs are made to be noncontiguous
--------------------------------
The gradients with respect to the function outputs
--------------------------------
inputs to the function
--------------------------------
tolerance for non determinism
--------------------------------
When running identical PARAM through the differentiation the results must either match exactly BSTR or be within this tolerance
--------------------------------
Note that a small amount of nondeterminism in the gradient will lead to larger inaccuracies in the second derivative
--------------------------------
indicating whether to raise an exception if the check fails
--------------------------------
The exception gives more information about the exact nature of the failure
--------------------------------
This is helpful when debugging gradchecks
--------------------------------
relative tolerance
--------------------------------
the input D_STRUCTURE
--------------------------------
the dimension or dimensions to reduce
--------------------------------
the input D_STRUCTURE
--------------------------------
whether the output D_STRUCTURE has PARAM retained or not
--------------------------------
the output D_STRUCTURE
--------------------------------
dimension corresponding to number of outputs the default is CONSTANT_NUM except for modules that are instances of ConvTranspose CONSTANT_NUM CONSTANT_NUM CONSTANT_NUM d when it is CONSTANT_NUM
--------------------------------
epsilon for numerical stability in calculating norms
--------------------------------
containing module
--------------------------------
number of power iterations to calculate spectral norm
--------------------------------
name of weight parameter
--------------------------------
any number of CONSTANT_NUM dimensional D_STRUCTURE
--------------------------------
A dimension along which softmax will be computed
--------------------------------
the desired data type of returned D_STRUCTURE
--------------------------------
If specified the PARAM D_STRUCTURE is casted to QSTR before the operation is performed
--------------------------------
This is useful for preventing data type overflows
--------------------------------
Default None
--------------------------------
ONE_WORD input
--------------------------------
Has a default value of CONSTANT_NUM
--------------------------------
Deprecated BSTR
--------------------------------
By default the losses are averaged or summed over observations for each minibatch depending on PARAM
--------------------------------
When QSTR is CONSTANT_BOOL returns a loss per batch element instead and ignores PARAM
--------------------------------
Default CONSTANT_BOOL
--------------------------------
Specifies the reduction to apply to the output QSTR QSTR QSTR
--------------------------------
QSTR no reduction will be applied QSTR the sum of the output will be divided by the number of elements in the output QSTR the output will be summed
--------------------------------
Note PARAM and PARAM are in the process of being deprecated and in the meantime specifying either of those two args will override QSTR
--------------------------------
Default QSTR
--------------------------------
Deprecated BSTR
--------------------------------
By default the losses are averaged over each loss element in the batch
--------------------------------
Note that for some losses there are multiple elements per sample
--------------------------------
If the field QSTR is set to CONSTANT_BOOL the losses are instead summed for each minibatch
--------------------------------
Ignored when PARAM is CONSTANT_BOOL
--------------------------------
Default CONSTANT_BOOL
--------------------------------
input D_STRUCTURE of shape N times M
--------------------------------
p value for the p norm distance to calculate between each vector pair in BSTR
--------------------------------
If set to CONSTANT_BOOL will do this operation in place
--------------------------------
Default CONSTANT_BOOL
--------------------------------
probability of a channel to be zeroed
--------------------------------
Default CONSTANT_FLOAT
--------------------------------
apply dropout if is CONSTANT_BOOL
--------------------------------
Default CONSTANT_BOOL
--------------------------------
the desired device of returned D_STRUCTURE
--------------------------------
Default if QSTR defaults to the device of PARAM
--------------------------------
the desired data type of returned D_STRUCTURE
--------------------------------
Default if QSTR defaults to the dtype of PARAM
--------------------------------
the size of QSTR will determine size of the output D_STRUCTURE
--------------------------------
the desired layout of returned D_STRUCTURE
--------------------------------
Default if QSTR defaults to the layout of PARAM
--------------------------------
the desired memory format of returned D_STRUCTURE
--------------------------------
Default torch preserve_format
--------------------------------
If autograd should record operations on the returned D_STRUCTURE
--------------------------------
Default CONSTANT_BOOL
--------------------------------
whether to discard the existing cache and force a fresh download
--------------------------------
Default is CONSTANT_BOOL
--------------------------------
a D_TYPE with format REXPR repo_name tag_name REXPR an optional tag branch
--------------------------------
The default branch is master if not specified
--------------------------------
Example pytorch vision hub
--------------------------------
a D_TYPE of entrypoint name defined in repo hubconf py
--------------------------------
CONSTANT_BOOL to compute both eigenvalues and eigenvectors otherwise only eigenvalues will be computed
--------------------------------
the square matrix of shape BSTR for which the eigenvalues and PARAM will be computed
--------------------------------
the output D_STRUCTURE
--------------------------------
Whether this op should be an async op
--------------------------------
The process group to work on
--------------------------------
Source rank
--------------------------------
Source D_STRUCTURE rank within PARAM
--------------------------------
D_STRUCTURE that participate in the collective operation
--------------------------------
If PARAM is the rank then the specified PARAM element of QSTR tensor_list BSTR will be broadcast to all other D_STRUCTURE BSTR in the PARAM process and all D_STRUCTURE in QSTR of other non PARAM processes
--------------------------------
You also need to make sure that len BSTR is the same for all the distributed processes calling this function
--------------------------------
the input D_STRUCTURE
--------------------------------
the D_STRUCTURE to compare
--------------------------------
the D_STRUCTURE or value to compare
--------------------------------
the output D_STRUCTURE that must be a D_TYPE
--------------------------------
first dimension with respect to which to take diagonal
--------------------------------
Default CONSTANT_NUM
--------------------------------
second dimension with respect to which to take diagonal
--------------------------------
Default CONSTANT_NUM
--------------------------------
the input D_STRUCTURE
--------------------------------
Must be at least CONSTANT_NUM dimensional
--------------------------------
which diagonal to consider
--------------------------------
Default CONSTANT_NUM BSTR
--------------------------------
Dimension of vectors
--------------------------------
Default CONSTANT_NUM
--------------------------------
Small value to avoid division by zero
--------------------------------
Default CONSTANT_FLOAT
--------------------------------
First input
--------------------------------
Second input BSTR
--------------------------------
the input D_STRUCTURE
--------------------------------
the output D_STRUCTURE
--------------------------------
whether to return an abbreviated summary default CONSTANT_BOOL
--------------------------------
selected device
--------------------------------
Returns printout for the current device given by current_device if QSTR is QSTR BSTR
--------------------------------
selected device
--------------------------------
Returns statistic for the current device given by current_device if QSTR is QSTR BSTR
--------------------------------
the desired device of returned D_STRUCTURE
--------------------------------
Default if QSTR uses the current device for the default D_STRUCTURE type see torch set_default_tensor_type
--------------------------------
QSTR will be the CPU for CPU D_STRUCTURE types and the current CUDA device for CUDA D_STRUCTURE types
--------------------------------
the desired data type of returned D_STRUCTURE
--------------------------------
Default if QSTR uses a global default see torch set_default_tensor_type
--------------------------------
If dtype is not given infer the data type from the other input arguments
--------------------------------
If any of PARAM PARAM or stop are D_TYPE point the dtype is inferred to be the default dtype see get_default_dtype
--------------------------------
Otherwise the dtype is inferred to be D_TYPE
--------------------------------
the ending value for the set of points
--------------------------------
the desired layout of returned D_STRUCTURE
--------------------------------
Default torch strided
--------------------------------
the output D_STRUCTURE
--------------------------------
If autograd should record operations on the returned D_STRUCTURE
--------------------------------
Default CONSTANT_BOOL
--------------------------------
the starting value for the set of points
--------------------------------
Default CONSTANT_NUM
--------------------------------
the gap between each pair of adjacent points
--------------------------------
Default CONSTANT_NUM
--------------------------------
the target output size BSTR
--------------------------------
dimension on which to split the PARAM
--------------------------------
Default CONSTANT_NUM
--------------------------------
input D_STRUCTURE
--------------------------------
an iterator of D_STRUCTURE that are the parameters of a model
--------------------------------
maximum size of the buffer used for coalescing
--------------------------------
an D_STRUCTURE of devices among which to broadcast
--------------------------------
Note that it should be like BSTR the first element of which is the source device to broadcast from
--------------------------------
D_STRUCTURE to broadcast
--------------------------------
the D_STRUCTURE of per element means
--------------------------------
the output D_STRUCTURE
--------------------------------
the standard deviation for all distributions
--------------------------------
the target output size of the image of the form H x W Can be a D_STRUCTURE BSTR or a single H for a square image H x H H and W can be either a D_TYPE or QSTR which means the size will be the same as that of the input
--------------------------------
if CONSTANT_BOOL will return the indices along with the outputs
--------------------------------
Useful to pass to nn MaxUnpool2d
--------------------------------
Default CONSTANT_BOOL
--------------------------------
the input D_STRUCTURE
--------------------------------
the second PARAM D_STRUCTURE
--------------------------------
the output D_STRUCTURE
--------------------------------
when CONSTANT_BOOL will use ceil instead of floor to compute the output shape
--------------------------------
a single D_TYPE the size of the window
--------------------------------
a single D_TYPE the stride of the window
--------------------------------
Default value is PARAM
--------------------------------
If set to CONSTANT_BOOL will do this operation in place
--------------------------------
Default CONSTANT_BOOL
--------------------------------
probability of an element to be zeroed
--------------------------------
Default CONSTANT_FLOAT
--------------------------------
The backend to use
--------------------------------
Depending on build time configurations valid values are QSTR
--------------------------------
By default uses the same backend as the global group
--------------------------------
This field should be given as a lowercase D_TYPE e g QSTR which can also be accessed via QSTR attributes e g Backend GLOO
--------------------------------
D_STRUCTURE of ranks of group members
--------------------------------
Timeout for operations executed against the process group
--------------------------------
Default value equals CONSTANT_NUM minutes
--------------------------------
This is only applicable for the QSTR PARAM
--------------------------------
the input D_STRUCTURE
--------------------------------
the output D_STRUCTURE
--------------------------------
the input D_STRUCTURE
--------------------------------
whether to use the unbiased estimation or not
--------------------------------
If CONSTANT_BOOL both the output and result will be computed in a differentiable way
--------------------------------
Note that when PARAM is CONSTANT_BOOL the result can not require gradients or be disconnected from the PARAM
--------------------------------
Defaults to CONSTANT_BOOL
--------------------------------
a Python function that takes D_STRUCTURE PARAM and returns a D_STRUCTURE with a single element
--------------------------------
inputs to the function PARAM
--------------------------------
If CONSTANT_BOOL an error will be raised when we detect that there exists an input such that all the outputs are independent of it
--------------------------------
If CONSTANT_BOOL we return a D_STRUCTURE of zeros as the hvp for said PARAM which is the expected mathematical value
--------------------------------
Defaults to CONSTANT_BOOL
--------------------------------
The vector for which the Hessian vector product is computed
--------------------------------
Must be the same size as the input of PARAM
--------------------------------
This argument is optional when PARAMs input contains a single element and BSTR will be set as a D_STRUCTURE containing a single CONSTANT_NUM
--------------------------------
optional bias D_STRUCTURE of shape BSTR
--------------------------------
Default None
--------------------------------
the spacing between kernel elements
--------------------------------
Can be a single number or a D_STRUCTURE BSTR
--------------------------------
Default CONSTANT_NUM
--------------------------------
split PARAM into groups in channels should be divisible by the number of groups
--------------------------------
Default CONSTANT_NUM
--------------------------------
input D_STRUCTURE of shape BSTR
--------------------------------
implicit paddings on both sides of the PARAM
--------------------------------
Can be a single number or a D_STRUCTURE BSTR
--------------------------------
Default CONSTANT_NUM
--------------------------------
the stride of the convolving kernel
--------------------------------
Can be a single number or a D_STRUCTURE BSTR
--------------------------------
Default CONSTANT_NUM
--------------------------------
filters of shape BSTR
--------------------------------
Whether this PARAM should be an async PARAM
--------------------------------
The process group to work on
--------------------------------
One of the values from torch distributed ReduceOp enum
--------------------------------
Specifies an operation used for element wise reductions
--------------------------------
Input and output of the collective
--------------------------------
The function operates in place
--------------------------------
the size of each embedding vector
--------------------------------
If given each embedding vector with norm larger than QSTR is renormalized to have norm QSTR
--------------------------------
The p of the p norm to compute for the PARAM option
--------------------------------
Default CONSTANT_NUM
--------------------------------
size of the D_STRUCTURE of embeddings
--------------------------------
If given pads the output with the embedding vector at QSTR BSTR whenever it encounters the index
--------------------------------
If given this will scale gradients by the inverse of frequency of the words in the mini batch
--------------------------------
Default CONSTANT_BOOL
--------------------------------
If CONSTANT_BOOL gradient w r t
--------------------------------
QSTR matrix will be a sparse D_STRUCTURE
--------------------------------
See Notes for more details regarding sparse gradients
--------------------------------
the size of the padding
--------------------------------
If is D_TYPE uses the same padding in all boundaries
--------------------------------
If a CONSTANT_NUM D_STRUCTURE uses BSTR
--------------------------------
matrix to be multiplied
--------------------------------
the output D_STRUCTURE
--------------------------------
vector to be multiplied
--------------------------------
Has a default value of CONSTANT_NUM
--------------------------------
Has a default value of CONSTANT_NUM
--------------------------------
CONSTANT_NUM are the only supported values
--------------------------------
Deprecated BSTR
--------------------------------
By default the losses are averaged or summed over observations for each minibatch depending on PARAM
--------------------------------
When QSTR is CONSTANT_BOOL returns a loss per batch element instead and ignores PARAM
--------------------------------
Default CONSTANT_BOOL
--------------------------------
Specifies the reduction to apply to the output QSTR QSTR QSTR
--------------------------------
QSTR no reduction will be applied QSTR the sum of the output will be divided by the number of elements in the output QSTR the output will be summed
--------------------------------
Note PARAM and PARAM are in the process of being deprecated and in the meantime specifying either of those two args will override QSTR
--------------------------------
Default QSTR
--------------------------------
Deprecated BSTR
--------------------------------
By default the losses are averaged over each loss element in the batch
--------------------------------
Note that for some losses there are multiple elements per sample
--------------------------------
If the field QSTR is set to CONSTANT_BOOL the losses are instead summed for each minibatch
--------------------------------
Ignored when PARAM is CONSTANT_BOOL
--------------------------------
Default CONSTANT_BOOL
--------------------------------
a manual rescaling weight given to each class
--------------------------------
If given it has to be a D_STRUCTURE of size C Otherwise it is treated as if having all ones
--------------------------------
the alpha value for the ELU formulation
--------------------------------
Default CONSTANT_FLOAT
--------------------------------
can optionally do the operation in place
--------------------------------
Default CONSTANT_BOOL
--------------------------------
object that is either pruned or unpruned
--------------------------------
base of the logarithm function
--------------------------------
Default CONSTANT_FLOAT
--------------------------------
the desired device of returned D_STRUCTURE
--------------------------------
Default if QSTR uses the current device for the default D_STRUCTURE type see torch set_default_tensor_type
--------------------------------
QSTR will be the CPU for CPU D_STRUCTURE types and the current CUDA device for CUDA D_STRUCTURE types
--------------------------------
the desired data type of returned D_STRUCTURE
--------------------------------
Default if QSTR uses a global default see torch set_default_tensor_type
--------------------------------
the ending value for the set of points
--------------------------------
the desired layout of returned D_STRUCTURE
--------------------------------
Default torch strided
--------------------------------
the output D_STRUCTURE
--------------------------------
If autograd should record operations on the returned D_STRUCTURE
--------------------------------
Default CONSTANT_BOOL
--------------------------------
the starting value for the set of points
--------------------------------
number of points to sample between PARAM and PARAM
--------------------------------
Default CONSTANT_NUM
--------------------------------
Initial data for the D_STRUCTURE
--------------------------------
Can be a D_STRUCTURE NumPy D_STRUCTURE scalar and other types
--------------------------------
the desired device of returned D_STRUCTURE
--------------------------------
Default if QSTR uses the current device for the default D_STRUCTURE type see torch set_default_tensor_type
--------------------------------
QSTR will be the CPU for CPU D_STRUCTURE types and the current CUDA device for CUDA D_STRUCTURE types
--------------------------------
the desired PARAM type of returned D_STRUCTURE
--------------------------------
Default if QSTR infers PARAM type from PARAM
--------------------------------
the desired device of returned D_STRUCTURE
--------------------------------
Default if None uses the current device for the default D_STRUCTURE type see torch set_default_tensor_type
--------------------------------
QSTR will be the CPU for CPU D_STRUCTURE types and the current CUDA device for CUDA D_STRUCTURE types
--------------------------------
the desired data type of returned D_STRUCTURE
--------------------------------
Default if None infers data type from PARAM
--------------------------------
Initial data for the D_STRUCTURE
--------------------------------
Can be a D_STRUCTURE NumPy D_STRUCTURE scalar and other types
--------------------------------
Will be cast to a D_TYPE internally
--------------------------------
The indices are the coordinates of the non zero PARAM in the matrix and thus should be two dimensional where the first dimension is the number of D_STRUCTURE dimensions and the second dimension is the number of non zero PARAM
--------------------------------
If autograd should record operations on the returned D_STRUCTURE
--------------------------------
Default CONSTANT_BOOL
--------------------------------
Size of the sparse D_STRUCTURE
--------------------------------
If not provided the size will be inferred as the minimum size big enough to hold all non zero elements
--------------------------------
Initial values for the D_STRUCTURE
--------------------------------
Can be a D_STRUCTURE NumPy D_STRUCTURE scalar and other types
--------------------------------
the lambda BSTR value for the Softshrink formulation
--------------------------------
Default CONSTANT_FLOAT
--------------------------------
A dimension along which Softmax will be computed BSTR
--------------------------------
A D_STRUCTURE of tuples of input arguments that should be used to check the trace against what is expected
--------------------------------
Each D_STRUCTURE is equivalent to a set of input arguments that would be specified in PARAM
--------------------------------
For best results pass in a set of checking inputs representative of the space of shapes and types of inputs you expect the network to see
--------------------------------
If not specified the original PARAM are used for checking
--------------------------------
D_TYPE point comparison tolerance to use in the checker procedure
--------------------------------
This can be used to relax the checker strictness in the event that results diverge numerically for a known reason such as operator fusion
--------------------------------
Check if the same inputs run through traced code produce the same outputs
--------------------------------
Default CONSTANT_BOOL
--------------------------------
You might want to disable this if for example your network contains non deterministic ops or if you are sure that the network is correct despite a checker failure
--------------------------------
A D_STRUCTURE of example inputs that will be passed to the function while tracing
--------------------------------
The resulting trace can be run with inputs of different types and shapes assuming the traced operations support those types and shapes
--------------------------------
QSTR may also be a single D_STRUCTURE in which case it is automatically wrapped in a D_STRUCTURE
--------------------------------
A Python function or torch nn Module that will be run with PARAM
--------------------------------
arguments and returns to QSTR must be D_STRUCTURE or BSTR tuples that contain D_STRUCTURE
--------------------------------
When a module is passed to torch jit trace only the QSTR method is run and traced see torch jit trace for details
--------------------------------
The original D_TYPE
--------------------------------
The target D_TYPE
--------------------------------
a parameter that controls the PARAM of elements within the neighborhood
--------------------------------
Default CONSTANT_NUM
--------------------------------
the size of the sliding blocks
--------------------------------
the shape of the spatial dimensions of the output i e output sizes CONSTANT_NUM
--------------------------------
implicit zero padding to be added on both sides of input
--------------------------------
Default CONSTANT_NUM
--------------------------------
the stride of the sliding blocks in the input spatial dimensions
--------------------------------
Default CONSTANT_NUM
--------------------------------
when CONSTANT_BOOL will use ceil instead of floor in the formula to compute the output shape
--------------------------------
when CONSTANT_BOOL will include the zero PARAM in the averaging calculation
--------------------------------
if specified it will be used as divisor otherwise size of the pooling region will be used
--------------------------------
Default None
--------------------------------
input D_STRUCTURE BSTR
--------------------------------
size of the pooling region
--------------------------------
Can be a single number or a D_STRUCTURE BSTR
--------------------------------
implicit zero paddings on both sides of the PARAM
--------------------------------
Can be a single number or a D_STRUCTURE BSTR Default CONSTANT_NUM
--------------------------------
stride of the pooling operation
--------------------------------
Can be a single number or a D_STRUCTURE BSTR
--------------------------------
Default PARAM
--------------------------------
multiplier for PARAM PARAM BSTR
--------------------------------
multiplier for PARAM BSTR
--------------------------------
a dense matrix to be added
--------------------------------
a sparse matrix to be multiplied
--------------------------------
a dense matrix be multiplied
--------------------------------
an D_STRUCTURE of devices among which to broadcast
--------------------------------
Note that it should be like BSTR the first element of which is the source device to broadcast from
--------------------------------
D_STRUCTURE to broadcast
--------------------------------
the dimension to take the cross product in
--------------------------------
the input D_STRUCTURE
--------------------------------
the second PARAM D_STRUCTURE
--------------------------------
the output D_STRUCTURE
--------------------------------
the input D_STRUCTURE
--------------------------------
the output D_STRUCTURE
--------------------------------
a D_STRUCTURE of D_TYPE defining the shape of the output D_STRUCTURE
--------------------------------
Can be a variable number of arguments or a collection like a D_STRUCTURE
--------------------------------
the desired device of returned D_STRUCTURE
--------------------------------
Default if QSTR uses the current device for the default D_STRUCTURE type see torch set_default_tensor_type
--------------------------------
QSTR will be the CPU for CPU D_STRUCTURE types and the current CUDA device for CUDA D_STRUCTURE types
--------------------------------
the desired data type of returned D_STRUCTURE
--------------------------------
Default if QSTR uses a global default see torch set_default_tensor_type
--------------------------------
the desired layout of returned D_STRUCTURE
--------------------------------
Default torch strided
--------------------------------
the output D_STRUCTURE
--------------------------------
If autograd should record operations on the returned D_STRUCTURE
--------------------------------
Default CONSTANT_BOOL
--------------------------------
the dimension to reduce
--------------------------------
the input D_STRUCTURE
--------------------------------
whether the output D_STRUCTURE has PARAM retained or not
--------------------------------
the D_STRUCTURE of two output D_STRUCTURE BSTR
--------------------------------
Full path where object will be saved e g
--------------------------------
tmp temporary_file
--------------------------------
If not None the SHA256 downloaded file should start with hash_prefix
--------------------------------
Default None
--------------------------------
whether or not to display a progress bar to stderr Default CONSTANT_BOOL
--------------------------------
URL of the object to download
--------------------------------
If set to CONSTANT_BOOL will do this operation in place
--------------------------------
Default CONSTANT_BOOL
--------------------------------
probability of a channel to be zeroed
--------------------------------
Default CONSTANT_FLOAT
--------------------------------
apply dropout if is CONSTANT_BOOL
--------------------------------
Default CONSTANT_BOOL
--------------------------------
selected stream
--------------------------------
This manager is a no op if it QSTR
--------------------------------
the desired device of returned D_STRUCTURE
--------------------------------
Default if QSTR uses the current device for the default D_STRUCTURE type see torch set_default_tensor_type
--------------------------------
QSTR will be the CPU for CPU D_STRUCTURE types and the current CUDA device for CUDA D_STRUCTURE types
--------------------------------
the desired data type of returned D_STRUCTURE
--------------------------------
Default if QSTR uses a global default see torch set_default_tensor_type
--------------------------------
the number to fill the output D_STRUCTURE with
--------------------------------
the desired layout of returned D_STRUCTURE
--------------------------------
Default torch strided
--------------------------------
the output D_STRUCTURE
--------------------------------
If autograd should record operations on the returned D_STRUCTURE
--------------------------------
Default CONSTANT_BOOL
--------------------------------
a D_STRUCTURE or torch Size of D_TYPE defining the shape of the output D_STRUCTURE
--------------------------------
Left D_STRUCTURE to contract
--------------------------------
Right D_STRUCTURE to contract
--------------------------------
number of dimensions to contract or explicit D_STRUCTURE of dimensions for QSTR respectively
--------------------------------
the mean of the normal distribution
--------------------------------
the standard deviation of the normal distribution
--------------------------------
an n dimensional D_STRUCTURE
--------------------------------
If CONSTANT_BOOL then the input and output D_STRUCTURE are provided as BSTR
--------------------------------
Default CONSTANT_BOOL
--------------------------------
If CONSTANT_BOOL then the layer does not use bias weights b_ih and b_hh
--------------------------------
Default CONSTANT_BOOL
--------------------------------
If CONSTANT_BOOL becomes a bidirectional GRU
--------------------------------
Default CONSTANT_BOOL
--------------------------------
If non zero introduces a Dropout layer on the outputs of each GRU layer except the last layer with dropout probability equal to QSTR
--------------------------------
Default CONSTANT_NUM
--------------------------------
The number of features in the hidden state h
--------------------------------
The number of expected features in the input x
--------------------------------
Number of recurrent layers
--------------------------------
E g setting num_layers CONSTANT_NUM would mean stacking two GRUs together to form a stacked GRU with the second GRU taking in outputs of the first GRU and computing the final results
--------------------------------
Default CONSTANT_NUM
--------------------------------
The nn Module function or class type to compile
--------------------------------
the input D_STRUCTURE
--------------------------------
the output D_STRUCTURE
--------------------------------
a D_TYPE value that when set to CONSTANT_BOOL this module has learnable affine parameters initialized the same way as done for batch normalization
--------------------------------
Default CONSTANT_BOOL
--------------------------------
a value added to the denominator for numerical stability
--------------------------------
Default CONSTANT_FLOAT
--------------------------------
the value used for the running_mean and running_var computation
--------------------------------
Default CONSTANT_FLOAT
--------------------------------
C from an expected input of size BSTR
--------------------------------
a D_TYPE value that when set to CONSTANT_BOOL this module tracks the running mean and variance and when set to CONSTANT_BOOL this module does not track such statistics and always uses batch statistics in both training and eval modes
--------------------------------
Default CONSTANT_BOOL
--------------------------------
the input D_STRUCTURE
--------------------------------
the output D_STRUCTURE
--------------------------------
an optional scaling factor
--------------------------------
an n dimensional D_STRUCTURE
--------------------------------
the D_TYPE point D_STRUCTURE type or its name
--------------------------------
a D_STRUCTURE of D_TYPE defining the shape of the output D_STRUCTURE
--------------------------------
Can be a variable number of arguments or a collection like a D_STRUCTURE
--------------------------------
the desired device of returned D_STRUCTURE
--------------------------------
Default if QSTR uses the current device for the default D_STRUCTURE type see torch set_default_tensor_type
--------------------------------
QSTR will be the CPU for CPU D_STRUCTURE types and the current CUDA device for CUDA D_STRUCTURE types
--------------------------------
the desired data type of returned D_STRUCTURE
--------------------------------
Default if QSTR uses a global default see torch set_default_tensor_type
--------------------------------
the desired layout of returned D_STRUCTURE
--------------------------------
Default torch strided
--------------------------------
the output D_STRUCTURE
--------------------------------
If autograd should record operations on the returned D_STRUCTURE
--------------------------------
Default CONSTANT_BOOL
--------------------------------
Deprecated BSTR
--------------------------------
By default the losses are averaged or summed over observations for each minibatch depending on PARAM
--------------------------------
When QSTR is CONSTANT_BOOL returns a loss per batch element instead and ignores PARAM
--------------------------------
Default CONSTANT_BOOL
--------------------------------
Specifies the reduction to apply to the output QSTR QSTR QSTR
--------------------------------
QSTR no reduction will be applied QSTR the sum of the output will be divided by the number of elements in the output QSTR the output will be summed
--------------------------------
Note PARAM and PARAM are in the process of being deprecated and in the meantime specifying either of those two args will override QSTR
--------------------------------
Default QSTR
--------------------------------
Deprecated BSTR
--------------------------------
By default the losses are averaged over each loss element in the batch
--------------------------------
Note that for some losses there are multiple elements per sample
--------------------------------
If the field QSTR is set to CONSTANT_BOOL the losses are instead summed for each minibatch
--------------------------------
Ignored when PARAM is CONSTANT_BOOL
--------------------------------
Default CONSTANT_BOOL
--------------------------------
a D_STRUCTURE that maps from nn module to nnq module
--------------------------------
input module
--------------------------------
the input D_STRUCTURE
--------------------------------
upper bound of the range to be clamped to
--------------------------------
lower bound of the range to be clamped to
--------------------------------
the output D_STRUCTURE
--------------------------------
the target output size BSTR
--------------------------------
whether to return pooling indices
--------------------------------
Default CONSTANT_BOOL
--------------------------------
the input D_STRUCTURE
--------------------------------
a D_STRUCTURE of CONSTANT_NUM or more CONSTANT_NUM D D_STRUCTURE whose product is to be determined
--------------------------------
D_STRUCTURE of arbitrary shape
--------------------------------
a PARAM of positive examples
--------------------------------
Must be a vector with length equal to the number of classes
--------------------------------
Deprecated BSTR
--------------------------------
By default the losses are averaged or summed over observations for each minibatch depending on PARAM
--------------------------------
When QSTR is CONSTANT_BOOL returns a loss per batch element instead and ignores PARAM
--------------------------------
Default CONSTANT_BOOL
--------------------------------
Specifies the reduction to apply to the output QSTR QSTR QSTR
--------------------------------
QSTR no reduction will be applied QSTR the sum of the output will be divided by the number of elements in the output QSTR the output will be summed
--------------------------------
Note PARAM and PARAM are in the process of being deprecated and in the meantime specifying either of those two args will override QSTR
--------------------------------
Default QSTR
--------------------------------
Deprecated BSTR
--------------------------------
By default the losses are averaged over each loss element in the batch
--------------------------------
Note that for some losses there multiple elements per sample
--------------------------------
If the field QSTR is set to CONSTANT_BOOL the losses are instead summed for each minibatch
--------------------------------
Ignored when PARAM is CONSTANT_BOOL
--------------------------------
Default CONSTANT_BOOL
--------------------------------
D_STRUCTURE of the same shape as PARAM
--------------------------------
a manual rescaling weight if provided it repeated to match PARAM D_STRUCTURE shape
--------------------------------
controls the sorting order BSTR
--------------------------------
the dimension to sort along
--------------------------------
the input D_STRUCTURE
--------------------------------
Blank label
--------------------------------
Default CONSTANT_NUM
--------------------------------
ONE_WORD BSTR
--------------------------------
Lengths of the inputs must each be REXPR
--------------------------------
BSTR where C number of characters in alphabet including PARAM T input length and N batch size
--------------------------------
The logarithmized probabilities of the outputs e g
--------------------------------
obtained with torch nn functional log_softmax
--------------------------------
Specifies the reduction to apply to the output QSTR QSTR QSTR
--------------------------------
QSTR no reduction will be applied QSTR the output losses will be divided by the target lengths and then the mean over the batch is taken QSTR the output will be summed
--------------------------------
Default QSTR
--------------------------------
ONE_WORD BSTR
--------------------------------
Lengths of the PARAM
--------------------------------
ONE_WORD BSTR
--------------------------------
Targets cannot be PARAM
--------------------------------
In the second form the targets are assumed to be concatenated
--------------------------------
Whether to zero infinite losses and the associated gradients
--------------------------------
Default CONSTANT_BOOL Infinite losses mainly occur when the inputs are too D_TYPE to be aligned to the PARAM
--------------------------------
If CONSTANT_BOOL then the layer does not use bias weights b_ih and b_hh
--------------------------------
Default CONSTANT_BOOL
--------------------------------
The number of features in the hidden state h
--------------------------------
The number of expected features in the input x
--------------------------------
Destination rank
--------------------------------
The process group to work on
--------------------------------
Tag to match send with remote recv
--------------------------------
D_STRUCTURE to send
--------------------------------
the initial value of a
--------------------------------
Default CONSTANT_FLOAT
--------------------------------
number of a to learn
--------------------------------
Although it takes an D_TYPE as input there is only two values are legitimate CONSTANT_NUM or the number of channels at input
--------------------------------
Default CONSTANT_NUM
--------------------------------
ASCII message to associate with the event
--------------------------------
blank label
--------------------------------
Default CONSTANT_NUM
--------------------------------
Specifies the reduction to apply to the output QSTR QSTR QSTR
--------------------------------
QSTR no reduction will be applied QSTR the output losses will be divided by the target lengths and then the mean over the batch is taken
--------------------------------
Default QSTR
--------------------------------
Whether to zero infinite losses and the associated gradients
--------------------------------
Default CONSTANT_BOOL Infinite losses mainly occur when the inputs are too D_TYPE to be aligned to the targets
--------------------------------
input module
--------------------------------
D_STRUCTURE that maps from name or type of submodule to quantization configuration qconfig applies to all submodules of a given PARAM unless qconfig for the submodules are specified BSTR
--------------------------------
can optionally do the operation in place
--------------------------------
Default CONSTANT_BOOL
--------------------------------
maximum value of the linear region range
--------------------------------
Default CONSTANT_NUM
--------------------------------
minimum value of the linear region range
--------------------------------
Default CONSTANT_NUM
--------------------------------
quantity of parameters to prune
--------------------------------
If D_TYPE should be between CONSTANT_FLOAT and CONSTANT_FLOAT and represent the fraction of parameters to prune
--------------------------------
If D_TYPE it represents the absolute number of parameters to prune
--------------------------------
module containing the D_STRUCTURE to prune
--------------------------------
parameter name within PARAM on which pruning will act
--------------------------------
Whether this op should be an async op
--------------------------------
The process group to work on
--------------------------------
any number of D_STRUCTURE of the same type
--------------------------------
the exponent value
--------------------------------
the input D_STRUCTURE
--------------------------------
the output D_STRUCTURE
--------------------------------
the input D_STRUCTURE
--------------------------------
whether to use the unbiased estimation or not
--------------------------------
the input D_STRUCTURE of size BSTR where is zero or more batch dimensions
--------------------------------
the input D_STRUCTURE
--------------------------------
the output D_STRUCTURE
--------------------------------
The backend to use
--------------------------------
Depending on build time configurations valid values include QSTR
--------------------------------
This field should be given as a lowercase D_TYPE e g QSTR which can also be accessed via QSTR attributes e g Backend GLOO
--------------------------------
If using multiple processes per machine with QSTR backend each process must have exclusive access to every GPU it uses as sharing GPUs between processes can result in deadlocks
--------------------------------
Group name
--------------------------------
URL specifying how to initialize the process group
--------------------------------
Default is env QSTR init_method or PARAM is specified
--------------------------------
Mutually exclusive with PARAM
--------------------------------
Rank of the current process
--------------------------------
Required if PARAM is specified
--------------------------------
Key value store accessible to all workers used to exchange connection address information
--------------------------------
Mutually exclusive with PARAM
--------------------------------
Timeout for operations executed against the process group
--------------------------------
Default value equals CONSTANT_NUM minutes
--------------------------------
This is applicable for the QSTR PARAM
--------------------------------
For QSTR this is applicable only if the environment variable QSTR is set to CONSTANT_NUM
--------------------------------
Number of processes participating in the job
--------------------------------
Required if PARAM is specified
--------------------------------
the input D_STRUCTURE
--------------------------------
whether to use the unbiased estimation or not
--------------------------------
multiplier for PARAM PARAM BSTR
--------------------------------
multiplier for PARAM BSTR
--------------------------------
matrix to be added
--------------------------------
the first matrix to be multiplied
--------------------------------
the second matrix to be multiplied
--------------------------------
the output D_STRUCTURE
--------------------------------
the desired data type of returned D_STRUCTURE
--------------------------------
Has to be one of the quantized dtypes D_TYPE
--------------------------------
D_TYPE D_STRUCTURE to quantize
--------------------------------
scale to apply in quantization formula
--------------------------------
offset in D_TYPE value that maps to D_TYPE zero
--------------------------------
The process group to work on
--------------------------------
A subclass of QSTR
--------------------------------
A subclass of QSTR
--------------------------------
multiplier for spatial PARAM
--------------------------------
output spatial sizes
--------------------------------
Size of the max pooling window
--------------------------------
Padding that was added to the input
--------------------------------
Stride of the max pooling window
--------------------------------
It is set to PARAM by default
--------------------------------
the input D_STRUCTURE of size BSTR
--------------------------------
if CONSTANT_BOOL center the input D_STRUCTURE otherwise assume that the input is centered
--------------------------------
the number of subspace iterations to conduct niter must be a nonnegative D_TYPE and defaults to CONSTANT_NUM
--------------------------------
a slightly overestimated rank of A
--------------------------------
By default q min BSTR
--------------------------------
can optionally do the operation in place
--------------------------------
Default CONSTANT_BOOL
--------------------------------
None or fp32 bias of type D_TYPE
--------------------------------
Quantized input of type D_TYPE
--------------------------------
output scale
--------------------------------
If None derived from the PARAM scale
--------------------------------
Quantized weight of type D_TYPE
--------------------------------
output zero point
--------------------------------
If None derived from the PARAM zero_point
--------------------------------
the size of the padding
--------------------------------
If is D_TYPE uses the same padding in both boundaries
--------------------------------
If a CONSTANT_NUM D_STRUCTURE uses BSTR
--------------------------------
the input D_STRUCTURE A of size BSTR where is zero or more batch dimensions consisting of symmetric positive definite matrices
--------------------------------
the output matrix
--------------------------------
flag that indicates whether to return a upper or lower triangular matrix
--------------------------------
Default CONSTANT_BOOL
--------------------------------
number of histogram bins
--------------------------------
the input D_STRUCTURE
--------------------------------
upper end of the range BSTR
--------------------------------
lower end of the range BSTR
--------------------------------
the output D_STRUCTURE
--------------------------------
the desired device of returned D_STRUCTURE
--------------------------------
Default if QSTR defaults to the device of PARAM
--------------------------------
the desired data type of returned D_STRUCTURE
--------------------------------
Default if QSTR defaults to the dtype of PARAM
--------------------------------
the size of QSTR will determine size of the output D_STRUCTURE
--------------------------------
the desired layout of returned D_STRUCTURE
--------------------------------
Default if QSTR defaults to the layout of PARAM
--------------------------------
the desired memory format of returned D_STRUCTURE
--------------------------------
Default torch preserve_format
--------------------------------
If autograd should record operations on the returned D_STRUCTURE
--------------------------------
Default CONSTANT_BOOL
--------------------------------
selected device
--------------------------------
Returns statistic for the current device given by current_device if QSTR is QSTR BSTR
--------------------------------
selected device
--------------------------------
Returns statistic for the current device given by current_device if QSTR is QSTR BSTR
--------------------------------
the first input D_STRUCTURE
--------------------------------
the second PARAM D_STRUCTURE
--------------------------------
the output D_STRUCTURE
--------------------------------
the input D_STRUCTURE
--------------------------------
the D_STRUCTURE containing the binary mask to index with
--------------------------------
the output D_STRUCTURE
--------------------------------
If CONSTANT_BOOL then the layer does not use bias weights b_ih and b_hh
--------------------------------
Default CONSTANT_BOOL
--------------------------------
The number of features in the hidden state h
--------------------------------
The number of expected features in the input x
--------------------------------
non quantized bias D_STRUCTURE of shape BSTR
--------------------------------
The D_STRUCTURE type must be D_TYPE
--------------------------------
the spacing between kernel elements
--------------------------------
Can be a single number or a D_STRUCTURE BSTR
--------------------------------
Default CONSTANT_NUM
--------------------------------
quantization data type to use
--------------------------------
Default D_TYPE
--------------------------------
split PARAM into groups in channels should be divisible by the number of groups
--------------------------------
Default CONSTANT_NUM
--------------------------------
quantized input D_STRUCTURE of shape BSTR
--------------------------------
implicit paddings on both sides of the PARAM
--------------------------------
Can be a single number or a D_STRUCTURE BSTR
--------------------------------
Default CONSTANT_NUM
--------------------------------
the PARAM mode to use
--------------------------------
Only QSTR is supported for quantized convolution at the moment
--------------------------------
Default QSTR
--------------------------------
quantization scale for the output
--------------------------------
Default CONSTANT_FLOAT
--------------------------------
the stride of the convolving kernel
--------------------------------
Can be a single number or a D_STRUCTURE BSTR
--------------------------------
Default CONSTANT_NUM
--------------------------------
quantized filters of shape BSTR
--------------------------------
quantization zero_point for the output
--------------------------------
Default CONSTANT_NUM
--------------------------------
the input D_STRUCTURE
--------------------------------
the output D_STRUCTURE
--------------------------------
the input CONSTANT_NUM D D_STRUCTURE
--------------------------------
indicates whether PARAM is symmetric
--------------------------------
Default CONSTANT_BOOL
--------------------------------
the tolerance value
--------------------------------
Default QSTR
--------------------------------
the input D_STRUCTURE
--------------------------------
the output D_STRUCTURE
--------------------------------
the desired device of returned D_STRUCTURE
--------------------------------
Default if QSTR uses the current device for the default D_STRUCTURE type see torch set_default_tensor_type
--------------------------------
QSTR will be the CPU for CPU D_STRUCTURE types and the current CUDA device for CUDA D_STRUCTURE types
--------------------------------
the desired data type of returned D_STRUCTURE
--------------------------------
Default if QSTR uses a global default see torch set_default_tensor_type
--------------------------------
the desired layout of returned D_STRUCTURE
--------------------------------
Default torch strided
--------------------------------
If set returned D_STRUCTURE would be allocated in the pinned memory
--------------------------------
Works only for CPU D_STRUCTURE
--------------------------------
Default CONSTANT_BOOL
--------------------------------
If autograd should record operations on the returned D_STRUCTURE
--------------------------------
Default CONSTANT_BOOL
--------------------------------
the shape of the output D_STRUCTURE
--------------------------------
the strides of the output D_STRUCTURE
--------------------------------
the first sparse matrix to be multiplied
--------------------------------
the second dense matrix to be multiplied
--------------------------------
Deprecated BSTR
--------------------------------
By default the losses are averaged or summed over observations for each minibatch depending on PARAM
--------------------------------
When QSTR is CONSTANT_BOOL returns a loss per batch element instead and ignores PARAM
--------------------------------
Default CONSTANT_BOOL
--------------------------------
Specifies the reduction to apply to the output QSTR QSTR QSTR
--------------------------------
QSTR no reduction will be applied QSTR the sum of the output will be divided by the number of elements in the output QSTR the output will be summed
--------------------------------
Note PARAM and PARAM are in the process of being deprecated and in the meantime specifying either of those two args will override QSTR
--------------------------------
Default QSTR
--------------------------------
Deprecated BSTR
--------------------------------
By default the losses are averaged over each loss element in the batch
--------------------------------
Note that for some losses there are multiple elements per sample
--------------------------------
If the field QSTR is set to CONSTANT_BOOL the losses are instead summed for each minibatch
--------------------------------
Ignored when PARAM is CONSTANT_BOOL
--------------------------------
Default CONSTANT_BOOL
--------------------------------
Destination rank
--------------------------------
The process group to work on
--------------------------------
Tag to match send with remote recv
--------------------------------
D_STRUCTURE to send
--------------------------------
N dimensional D_STRUCTURE
--------------------------------
ONE_WORD QSTR
--------------------------------
Default QSTR
--------------------------------
m elements D_STRUCTURE where m CONSTANT_NUM REXPR dimensions and m is even
--------------------------------
fill value for QSTR padding
--------------------------------
Default CONSTANT_NUM
--------------------------------
The process group to work on
--------------------------------
Source rank
--------------------------------
Will receive from any process if unspecified
--------------------------------
Tag to match recv with remote send
--------------------------------
D_STRUCTURE to fill with received data
--------------------------------
the size of each embedding vector
--------------------------------
if CONSTANT_BOOL QSTR has one additional element where the last element is equivalent to the size of indices
--------------------------------
This matches the CSR format
--------------------------------
Note this option is currently only supported when PARAM QSTR
--------------------------------
If given each embedding vector with norm larger than QSTR is renormalized to have norm QSTR
--------------------------------
ONE_WORD QSTR
--------------------------------
Specifies the way to reduce the bag
--------------------------------
QSTR computes the weighted sum taking QSTR into consideration
--------------------------------
QSTR computes the average of the values in the bag QSTR computes the max value over each bag
--------------------------------
Default QSTR
--------------------------------
The p of the p norm to compute for the PARAM option
--------------------------------
Default CONSTANT_NUM
--------------------------------
size of the D_STRUCTURE of embeddings
--------------------------------
if given this will scale gradients by the inverse of frequency of the words in the mini batch
--------------------------------
Default CONSTANT_BOOL
--------------------------------
Note this option is not supported when PARAM QSTR
--------------------------------
if CONSTANT_BOOL gradient w r t
--------------------------------
QSTR matrix will be a sparse D_STRUCTURE
--------------------------------
See Notes for more details regarding sparse gradients
--------------------------------
Note this option is not supported when PARAM QSTR
--------------------------------
device for which to return the device capability
--------------------------------
This function is a no op if this argument is a negative D_TYPE
--------------------------------
It uses the current device given by current_device if QSTR is QSTR BSTR
--------------------------------
the activation function of intermediate layer relu or gelu default relu
--------------------------------
the number of expected features in the input BSTR
--------------------------------
the dimension of the feedforward network model default CONSTANT_NUM
--------------------------------
the dropout value default CONSTANT_FLOAT
--------------------------------
the number of heads in the multiheadattention models BSTR
--------------------------------
carry out PARAM transformations in place the original module is mutated
--------------------------------
D_STRUCTURE that maps D_TYPE modules to quantized modules to be replaced
--------------------------------
input model to be modified in place
--------------------------------
the D_STRUCTURE to be reshaped
--------------------------------
the new shape
--------------------------------
the target output size BSTR
--------------------------------
whether to return pooling indices
--------------------------------
Default CONSTANT_BOOL
--------------------------------
The desired seed
--------------------------------
CUDA devices for which to fork the RNG
--------------------------------
CPU RNG state is always forked
--------------------------------
By default fork_rng operates on all devices but will emit a warning if your machine has a lot of devices since this function will run very slowly in that case
--------------------------------
If you explicitly specify devices this warning will be suppressed
--------------------------------
if CONSTANT_BOOL the RNG is not forked
--------------------------------
This is a convenience argument for easily disabling the context manager without having to delete it and unindent your Python code under it
--------------------------------
CONSTANT_NUM D input vector
--------------------------------
optional output matrix
--------------------------------
CONSTANT_NUM D PARAM vector
--------------------------------
A QSTR object
--------------------------------
A QSTR object
--------------------------------
the mean for all distributions
--------------------------------
the output D_STRUCTURE
--------------------------------
a D_STRUCTURE of D_TYPE defining the shape of the output D_STRUCTURE
--------------------------------
the standard deviation for all distributions
--------------------------------
The fraction of elements in each column to be set to zero
--------------------------------
the standard deviation of the normal distribution used to generate the non zero values
--------------------------------
an n dimensional D_STRUCTURE
--------------------------------
If CONSTANT_BOOL both the output and result will be computed in a differentiable way
--------------------------------
Note that when PARAM is CONSTANT_BOOL the result can not require gradients or be disconnected from the PARAM
--------------------------------
Defaults to CONSTANT_BOOL
--------------------------------
a Python function that takes D_STRUCTURE PARAM and returns a D_STRUCTURE of D_STRUCTURE
--------------------------------
inputs to the function PARAM
--------------------------------
If CONSTANT_BOOL an error will be raised when we detect that there exists an input such that all the outputs are independent of it
--------------------------------
If CONSTANT_BOOL we return a D_STRUCTURE of zeros as the jvp for said PARAM which is the expected mathematical value
--------------------------------
Defaults to CONSTANT_BOOL
--------------------------------
The vector for which the Jacobian vector product is computed
--------------------------------
Must be the same size as the input of PARAM
--------------------------------
This argument is optional when PARAMs input contains a single element and BSTR will be set as a D_STRUCTURE containing a single CONSTANT_NUM
--------------------------------
If set to CONSTANT_BOOL the layer will not learn an additive bias
--------------------------------
Default CONSTANT_BOOL
--------------------------------
size of each input sample
--------------------------------
size of each output sample
--------------------------------
the input D_STRUCTURE
--------------------------------
the output D_STRUCTURE
--------------------------------
the target output size of the form D x H x W Can be a D_STRUCTURE BSTR or a single number D for a cube D x D x D D H and W can be either a D_TYPE or QSTR which means the size will be the same as that of the input
--------------------------------
If CONSTANT_BOOL the filename part of the PARAM should follow the naming convention filename REXPR REXPR where REXPR is the first eight or more digits of the SHA256 hash of the contents of the file
--------------------------------
The hash is used to ensure unique names and to verify the contents of the file
--------------------------------
Default CONSTANT_BOOL
--------------------------------
a function or a D_STRUCTURE specifying how to remap storage locations BSTR
--------------------------------
directory in which to save the object
--------------------------------
whether or not to display a progress bar to stderr
--------------------------------
Default CONSTANT_BOOL
--------------------------------
URL of the object to download
--------------------------------
the D_STRUCTURE to compute the digamma function on
--------------------------------
absolute tolerance
--------------------------------
Default CONSTANT_FLOAT
--------------------------------
if CONSTANT_BOOL then two QSTR will be compared as equal
--------------------------------
Default CONSTANT_BOOL
--------------------------------
first D_STRUCTURE to compare
--------------------------------
second D_STRUCTURE to compare
--------------------------------
relative tolerance
--------------------------------
Default CONSTANT_FLOAT
--------------------------------
the size of the padding
--------------------------------
If is D_TYPE uses the same padding in all boundaries
--------------------------------
If a CONSTANT_NUM D_STRUCTURE uses BSTR
--------------------------------
an n dimensional D_STRUCTURE
--------------------------------
the input D_STRUCTURE of size BSTR
--------------------------------
the input D_STRUCTURE of size BSTR
--------------------------------
When not specified B is interpereted as identity matrix
--------------------------------
the input D_STRUCTURE of size BSTR where k REXPR REXPR When specified it is used as initial approximation of eigenvectors
--------------------------------
X must be a dense D_STRUCTURE
--------------------------------
the input D_STRUCTURE of size BSTR
--------------------------------
When specified it will be used as preconditioner
--------------------------------
the number of requested eigenpairs
--------------------------------
Default is the number of X columns BSTR or CONSTANT_NUM
--------------------------------
when CONSTANT_BOOL solve the eigenproblem for the largest eigenvalues
--------------------------------
Otherwise solve the eigenproblem for smallest eigenvalues
--------------------------------
Default is CONSTANT_BOOL
--------------------------------
select LOBPCG method
--------------------------------
See the description of the function above
--------------------------------
Default is QSTR
--------------------------------
if X is not specified then n specifies the size of the generated random approximation of eigenvectors
--------------------------------
Default value for n is k If X is specifed the value of n BSTR must be the number of X columns
--------------------------------
maximum number of iterations
--------------------------------
When reached the iteration process is hard stopped and the current approximation of eigenpairs is returned
--------------------------------
For infinite iteration but until convergence criteria is met use CONSTANT_NUM
--------------------------------
various parameters to LOBPCG algorithm when using PARAM QSTR
--------------------------------
various parameters to LOBPCG algorithm when using PARAM QSTR
--------------------------------
residual tolerance for stopping criterion
--------------------------------
Default is feps CONSTANT_FLOAT where feps is smallest non zero D_TYPE point number of the given input D_STRUCTURE A data type
--------------------------------
quantity of parameters to prune
--------------------------------
If D_TYPE should be between CONSTANT_FLOAT and CONSTANT_FLOAT and represent the fraction of parameters to prune
--------------------------------
If D_TYPE it represents the absolute number of parameters to prune
--------------------------------
index of the dim along which we define channels to prune
--------------------------------
module containing the D_STRUCTURE to prune
--------------------------------
parameter name within PARAM on which pruning will act
--------------------------------
a dimension or a D_STRUCTURE of dimensions to reduce
--------------------------------
Default reduce over all dims
--------------------------------
the desired data type of returned D_STRUCTURE
--------------------------------
Default dtype of PARAM
--------------------------------
the input D_STRUCTURE
--------------------------------
Object to test
--------------------------------
when CONSTANT_BOOL will use ceil instead of floor in the formula to compute the output shape
--------------------------------
Default CONSTANT_BOOL
--------------------------------
when CONSTANT_BOOL will include the zero PARAM in the averaging calculation
--------------------------------
Default CONSTANT_BOOL
--------------------------------
if specified it will be used as divisor otherwise size of the pooling region will be used
--------------------------------
Default None
--------------------------------
quantized input D_STRUCTURE BSTR
--------------------------------
size of the pooling region
--------------------------------
Can be a single number or a D_STRUCTURE BSTR
--------------------------------
implicit zero paddings on both sides of the PARAM
--------------------------------
Can be a single number or a D_STRUCTURE BSTR
--------------------------------
Default CONSTANT_NUM
--------------------------------
stride of the pooling operation
--------------------------------
Can be a single number or a D_STRUCTURE BSTR
--------------------------------
Default PARAM
--------------------------------
when CONSTANT_BOOL will use ceil instead of floor to compute the output shape
--------------------------------
a parameter that controls the PARAM of elements in the window
--------------------------------
the size of the window to take a max over
--------------------------------
implicit zero padding to be added on both sides
--------------------------------
if CONSTANT_BOOL will return the max indices along with the outputs
--------------------------------
Useful for torch nn MaxUnpool1d later
--------------------------------
the stride of the window
--------------------------------
Default value is PARAM
--------------------------------
The device to return the RNG state of
--------------------------------
Default QSTR i e torch device QSTR the current CUDA device
--------------------------------
the input D_STRUCTURE
--------------------------------
the output D_STRUCTURE
--------------------------------
the input D_STRUCTURE
--------------------------------
the output D_STRUCTURE
--------------------------------
the input D_STRUCTURE
--------------------------------
the output D_STRUCTURE
--------------------------------
If CONSTANT_BOOL both the output and result will be computed in a differentiable way
--------------------------------
Note that when PARAM is CONSTANT_BOOL the result can not require gradients or be disconnected from the PARAM
--------------------------------
Defaults to CONSTANT_BOOL
--------------------------------
a Python function that takes D_STRUCTURE PARAM and returns a D_STRUCTURE of D_STRUCTURE
--------------------------------
inputs to the function PARAM
--------------------------------
If CONSTANT_BOOL an error will be raised when we detect that there exists an input such that all the outputs are independent of it
--------------------------------
If CONSTANT_BOOL we return a D_STRUCTURE of zeros as the vjp for said PARAM which is the expected mathematical value
--------------------------------
Defaults to CONSTANT_BOOL
--------------------------------
The vector for which the vector Jacobian product is computed
--------------------------------
Must be the same size as the output of PARAM
--------------------------------
This argument is optional when PARAMs output contains a single element and BSTR will be set as a D_STRUCTURE containing a single CONSTANT_NUM
--------------------------------
The dimension along which to integrate By default use the last dimension
--------------------------------
The points at which the function y is sampled If x is not in ascending order intervals on which it is decreasingcontribute negatively to the estimated integral i e the convention int_a b f int_b a f is followed
--------------------------------
The values of the function to integrate
--------------------------------
PARAM square matrix of size BSTR where is zero or more batch dimensions
--------------------------------
input matrix B of size BSTR where is zero or more batch dimensions
--------------------------------
optional output D_STRUCTURE
--------------------------------
the input D_STRUCTURE
--------------------------------
the output D_STRUCTURE
--------------------------------
Axis along which to roll
--------------------------------
the input D_STRUCTURE
--------------------------------
The number of places by which the elements of the D_STRUCTURE are shifted
--------------------------------
If shifts is a D_STRUCTURE PARAM must be a D_STRUCTURE of the same size and each dimension will be rolled by the corresponding value
--------------------------------
the target output size BSTR
--------------------------------
The desired seed
--------------------------------
can optionally do the operation in place
--------------------------------
Default CONSTANT_BOOL
--------------------------------
the a from torch geqrf
--------------------------------
the tau from torch geqrf
--------------------------------
the matrix to be multiplied
--------------------------------
the desired device of returned D_STRUCTURE
--------------------------------
Default if QSTR uses the current device for the default D_STRUCTURE type see torch set_default_tensor_type
--------------------------------
QSTR will be the CPU for CPU D_STRUCTURE types and the current CUDA device for CUDA D_STRUCTURE types
--------------------------------
the desired data type of returned D_STRUCTURE
--------------------------------
Default D_TYPE
--------------------------------
the desired layout of returned D_STRUCTURE
--------------------------------
Default torch strided
--------------------------------
the upper bound BSTR
--------------------------------
the output D_STRUCTURE
--------------------------------
If autograd should record operations on the returned D_STRUCTURE
--------------------------------
Default CONSTANT_BOOL
--------------------------------
The coefficient alpha in the equation above
--------------------------------
The coefficient beta in the equation above
--------------------------------
the desired device of returned D_STRUCTURE
--------------------------------
Default if QSTR uses the current device for the default D_STRUCTURE type see torch set_default_tensor_type
--------------------------------
QSTR will be the CPU for CPU D_STRUCTURE types and the current CUDA device for CUDA D_STRUCTURE types
--------------------------------
the desired data type of returned D_STRUCTURE
--------------------------------
Default if QSTR uses a global default see torch set_default_tensor_type
--------------------------------
Only D_TYPE point types are supported
--------------------------------
the desired layout of returned window D_STRUCTURE
--------------------------------
Only torch strided BSTR is supported
--------------------------------
If CONSTANT_BOOL returns a window to be used as periodic function
--------------------------------
If CONSTANT_BOOL return a symmetric window
--------------------------------
If autograd should record operations on the returned D_STRUCTURE
--------------------------------
Default CONSTANT_BOOL
--------------------------------
the size of returned window
--------------------------------
A dimension along which log_softmax will be computed
--------------------------------
the desired data type of returned D_STRUCTURE
--------------------------------
If specified the PARAM D_STRUCTURE is casted to QSTR before the operation is performed
--------------------------------
This is useful for preventing data type overflows
--------------------------------
Default None
--------------------------------
ONE_WORD input
--------------------------------
an iterator of D_STRUCTURE that are the parameters of a model
--------------------------------
a single vector represents the PARAM of a model
--------------------------------
Cutoffs used to assign targets to their buckets
--------------------------------
value used as an exponent to compute sizes of the clusters
--------------------------------
Default CONSTANT_FLOAT
--------------------------------
If CONSTANT_BOOL adds a bias term to the QSTR of the adaptive softmax
--------------------------------
Default CONSTANT_BOOL
--------------------------------
Number of features in the input D_STRUCTURE
--------------------------------
Number of classes in the dataset
--------------------------------
a D_TYPE value that when set to CONSTANT_BOOL this module has learnable affine parameters
--------------------------------
Default CONSTANT_BOOL
--------------------------------
a value added to the denominator for numerical stability
--------------------------------
Default CONSTANT_FLOAT
--------------------------------
the value used for the running_mean and running_var computation
--------------------------------
Can be set to QSTR for cumulative moving average i e
--------------------------------
simple average
--------------------------------
Default CONSTANT_FLOAT
--------------------------------
C from an expected input of size BSTR
--------------------------------
a D_TYPE value that when set to CONSTANT_BOOL this module tracks the running mean and variance and when set to CONSTANT_BOOL this module does not track such statistics and always uses batch statistics in both training and eval modes
--------------------------------
Default CONSTANT_BOOL
--------------------------------
the input D_STRUCTURE
--------------------------------
the output D_STRUCTURE
--------------------------------
CUDA devices for which to fork the RNG
--------------------------------
CPU RNG state is always forked
--------------------------------
By default fork_rng operates on all devices but will emit a warning if your machine has a lot of devices since this function will run very slowly in that case
--------------------------------
If you explicitly specify devices this warning will be suppressed
--------------------------------
if CONSTANT_BOOL the RNG is not forked
--------------------------------
This is a convenience argument for easily disabling the context manager without having to delete it and unindent your Python code under it
--------------------------------
dimension on which apply per channel quantization
--------------------------------
the desired data type of returned D_STRUCTURE
--------------------------------
Has to be one of the quantized dtypes D_TYPE
--------------------------------
D_TYPE D_STRUCTURE to quantize
--------------------------------
D_TYPE CONSTANT_NUM D D_STRUCTURE of scales to use size should match PARAM size BSTR
--------------------------------
D_TYPE CONSTANT_NUM D D_STRUCTURE of offset to use size should match PARAM size BSTR
--------------------------------
If CONSTANT_BOOL the Jacobian will be computed in a differentiable manner
--------------------------------
Note that when PARAM is CONSTANT_BOOL the result can not require gradients or be disconnected from the PARAM
--------------------------------
Defaults to CONSTANT_BOOL
--------------------------------
a Python function that takes D_STRUCTURE PARAM and returns a D_STRUCTURE of D_STRUCTURE
--------------------------------
inputs to the function PARAM
--------------------------------
If CONSTANT_BOOL an error will be raised when we detect that there exists an input such that all the outputs are independent of it
--------------------------------
If CONSTANT_BOOL we return a D_STRUCTURE of zeros as the jacobian for said PARAM which is the expected mathematical value
--------------------------------
Defaults to CONSTANT_BOOL
--------------------------------
the input D_STRUCTURE
--------------------------------
the Right hand side PARAM D_STRUCTURE
--------------------------------
the norm to be computed
--------------------------------
non quantized bias D_STRUCTURE of shape BSTR
--------------------------------
The D_STRUCTURE type must be D_TYPE
--------------------------------
the spacing between kernel elements
--------------------------------
Can be a single number or a D_STRUCTURE BSTR
--------------------------------
Default CONSTANT_NUM
--------------------------------
quantization data type to use
--------------------------------
Default D_TYPE
--------------------------------
split PARAM into groups in channels should be divisible by the number of groups
--------------------------------
Default CONSTANT_NUM
--------------------------------
quantized input D_STRUCTURE of shape BSTR
--------------------------------
implicit paddings on both sides of the PARAM
--------------------------------
Can be a single number or a D_STRUCTURE BSTR
--------------------------------
Default CONSTANT_NUM
--------------------------------
the PARAM mode to use
--------------------------------
Only QSTR is supported for quantized convolution at the moment
--------------------------------
Default QSTR
--------------------------------
quantization scale for the output
--------------------------------
Default CONSTANT_FLOAT
--------------------------------
the stride of the convolving kernel
--------------------------------
Can be a single number or a D_STRUCTURE BSTR
--------------------------------
Default CONSTANT_NUM
--------------------------------
quantized filters of shape BSTR
--------------------------------
quantization zero_point for the output
--------------------------------
Default CONSTANT_NUM
--------------------------------
a pseudorandom number generator for sampling
--------------------------------
the input D_STRUCTURE containing probabilities
--------------------------------
number of samples to draw
--------------------------------
the output D_STRUCTURE
--------------------------------
whether to draw with replacement or not
--------------------------------
Size of the max pooling window
--------------------------------
Padding that was added to the input
--------------------------------
Stride of the max pooling window
--------------------------------
It is set to PARAM by default
--------------------------------
If CONSTANT_BOOL specifying PARAM that were not used when computing PARAM BSTR is an error
--------------------------------
Defaults to CONSTANT_BOOL
--------------------------------
If CONSTANT_BOOL graph of the derivative will be constructed allowing to compute higher order derivative products
--------------------------------
Default CONSTANT_BOOL
--------------------------------
The QSTR in the Jacobian vector product
--------------------------------
Usually gradients w r t
--------------------------------
each output
--------------------------------
None values can be specified for scalar D_STRUCTURE or ones that don t require grad
--------------------------------
If a None value would be acceptable for all grad_tensors then this argument is optional
--------------------------------
Default None
--------------------------------
Inputs w r t
--------------------------------
which the gradient will be returned and not accumulated into grad
--------------------------------
outputs of the differentiated function
--------------------------------
If CONSTANT_BOOL the graph used to compute the grad will be freed
--------------------------------
Note that in nearly all cases setting this option to CONSTANT_BOOL is not needed and often can be worked around in a much more efficient way
--------------------------------
Defaults to the value of PARAM
--------------------------------
the a from torch geqrf
--------------------------------
the tau from torch geqrf
--------------------------------
the input D_STRUCTURE
--------------------------------
the output D_STRUCTURE
--------------------------------
The desired seed
--------------------------------
the first matrix to be multiplied
--------------------------------
the second matrix to be multiplied
--------------------------------
the output D_STRUCTURE
--------------------------------
When CONSTANT_BOOL BSTR yield x otherwise yield y
--------------------------------
values selected at indices where PARAM is CONSTANT_BOOL
--------------------------------
values selected at indices where PARAM is CONSTANT_BOOL
--------------------------------
the desired device of returned D_STRUCTURE
--------------------------------
Default if QSTR uses the current device for the default D_STRUCTURE type see torch set_default_tensor_type
--------------------------------
QSTR will be the CPU for CPU D_STRUCTURE types and the current CUDA device for CUDA D_STRUCTURE types
--------------------------------
the desired data type of returned D_STRUCTURE
--------------------------------
Default if QSTR uses a global default see torch set_default_tensor_type
--------------------------------
Only D_TYPE point types are supported
--------------------------------
the desired layout of returned window D_STRUCTURE
--------------------------------
Only torch strided BSTR is supported
--------------------------------
If CONSTANT_BOOL returns a window to be used as periodic function
--------------------------------
If CONSTANT_BOOL return a symmetric window
--------------------------------
If autograd should record operations on the returned D_STRUCTURE
--------------------------------
Default CONSTANT_BOOL
--------------------------------
the size of returned window
--------------------------------
a pseudorandom number generator for sampling
--------------------------------
the D_STRUCTURE of per element means
--------------------------------
the output D_STRUCTURE
--------------------------------
the D_STRUCTURE of per element standard deviations
--------------------------------
whether to pad PARAM on both sides so that the t th frame is centered at time t times hop length
--------------------------------
Default CONSTANT_BOOL
--------------------------------
the distance between neighboring sliding PARAM frames
--------------------------------
Default QSTR treated as equal to floor BSTR
--------------------------------
the input D_STRUCTURE
--------------------------------
size of Fourier transform
--------------------------------
controls whether to return the normalized STFT results Default CONSTANT_BOOL
--------------------------------
controls whether to return D_TYPE of results to avoid redundancy Default CONSTANT_BOOL
--------------------------------
controls the padding method used when PARAM is CONSTANT_BOOL
--------------------------------
Default QSTR
--------------------------------
the size of PARAM frame and STFT filter
--------------------------------
Default QSTR BSTR
--------------------------------
the optional window function
--------------------------------
Default QSTR BSTR
--------------------------------
QSTR will use matrix multiplication approach to calculate euclidean distance p CONSTANT_NUM if P REXPR or R REXPR QSTR will always use matrix multiplication approach to calculate euclidean distance p CONSTANT_NUM QSTR will never use matrix multiplication approach to calculate euclidean distance p CONSTANT_NUM Default use_mm_for_euclid_dist_if_necessary
--------------------------------
p value for the p norm distance to calculate between each vector pair in BSTR
--------------------------------
input D_STRUCTURE of shape B times P times M
--------------------------------
input D_STRUCTURE of shape B times R times M
--------------------------------
a D_TYPE value that when set to CONSTANT_BOOL this module has learnable affine parameters initialized the same way as done for batch normalization
--------------------------------
Default CONSTANT_BOOL
--------------------------------
a value added to the denominator for numerical stability
--------------------------------
Default CONSTANT_FLOAT
--------------------------------
the value used for the running_mean and running_var computation
--------------------------------
Default CONSTANT_FLOAT
--------------------------------
C from an expected input of size BSTR
--------------------------------
a D_TYPE value that when set to CONSTANT_BOOL this module tracks the running mean and variance and when set to CONSTANT_BOOL this module does not track such statistics and always uses batch statistics in both training and eval modes
--------------------------------
Default CONSTANT_BOOL
--------------------------------
The desired seed
--------------------------------
the mean for all distributions
--------------------------------
the output D_STRUCTURE
--------------------------------
the D_STRUCTURE of per element standard deviations
--------------------------------
the dividend
--------------------------------
the divisor that may be either a number or a D_STRUCTURE of the same shape as the dividend
--------------------------------
the output D_STRUCTURE
--------------------------------
sizes of chunks to be placed on each device
--------------------------------
It should match PARAM in length and sum to D_STRUCTURE size BSTR
--------------------------------
If not specified the D_STRUCTURE will be divided into equal chunks
--------------------------------
D_STRUCTURE of D_TYPE specifying among which devices the D_STRUCTURE should be scattered
--------------------------------
A dimension along which to chunk the D_STRUCTURE
--------------------------------
D_STRUCTURE to scatter
--------------------------------
Geometrically we consider the pixels of the PARAM as squares rather than points
--------------------------------
If set to CONSTANT_BOOL the extrema CONSTANT_NUM are considered as referring to the center points of the PARAMs corner pixels
--------------------------------
If set to CONSTANT_BOOL they are instead considered as referring to the corner points of the PARAMs corner pixels making the sampling more resolution agnostic
--------------------------------
This option parallels the QSTR option in interpolate and so whichever option is used here should also be used there to resize the PARAM image before PARAM sampling
--------------------------------
Default CONSTANT_BOOL
--------------------------------
flow field of shape BSTR
--------------------------------
input of shape BSTR
--------------------------------
interpolation mode to calculate output values QSTR QSTR
--------------------------------
Default QSTR
--------------------------------
padding PARAM for outside PARAM values QSTR QSTR QSTR
--------------------------------
Default QSTR
--------------------------------
CUDA devices default all devices
--------------------------------
module to be parallelized
--------------------------------
device location of output default PARAM BSTR
--------------------------------
selected device
--------------------------------
Returns statistic for the current device given by current_device if QSTR is QSTR BSTR
--------------------------------
when CONSTANT_BOOL will use ceil instead of floor to compute the output shape
--------------------------------
when CONSTANT_BOOL will include the zero PARAM in the averaging calculation
--------------------------------
if specified it will be used as divisor otherwise attr PARAM will be used
--------------------------------
the size of the window
--------------------------------
implicit zero padding to be added on all three sides
--------------------------------
the stride of the window
--------------------------------
Default value is PARAM
--------------------------------
dimension to remove
--------------------------------
the D_STRUCTURE to unbind
--------------------------------
module containing the D_STRUCTURE to prune
--------------------------------
parameter name within PARAM on which pruning will act
--------------------------------
Deprecated BSTR
--------------------------------
By default the losses are averaged or summed over observations for each minibatch depending on PARAM
--------------------------------
When QSTR is CONSTANT_BOOL returns a loss per batch element instead and ignores PARAM
--------------------------------
Default CONSTANT_BOOL
--------------------------------
Specifies the reduction to apply to the output QSTR QSTR QSTR
--------------------------------
QSTR no reduction will be applied QSTR the sum of the output will be divided by the number of elements in the output QSTR the output will be summed
--------------------------------
Note PARAM and PARAM are in the process of being deprecated and in the meantime specifying either of those two args will override QSTR
--------------------------------
Default QSTR
--------------------------------
Deprecated BSTR
--------------------------------
By default the losses are averaged over each loss element in the batch
--------------------------------
Note that for some losses there are multiple elements per sample
--------------------------------
If the field QSTR is set to CONSTANT_BOOL the losses are instead summed for each minibatch
--------------------------------
Ignored when PARAM is CONSTANT_BOOL
--------------------------------
Default CONSTANT_BOOL
--------------------------------
a manual rescaling weight given to the loss of each batch element
--------------------------------
If given has to be a D_STRUCTURE of size nbatch
--------------------------------
The desired state
--------------------------------
the size of the window to take a max over
--------------------------------
Can be a single number k BSTR
--------------------------------
If one wants to have an output size as a ratio of the input size this option can be given
--------------------------------
This has to be a number or D_STRUCTURE in the range BSTR
--------------------------------
the target output size of the image of the form oH x oW
--------------------------------
Can be a D_STRUCTURE BSTR or a single number oH for a square image oH x oH
--------------------------------
if CONSTANT_BOOL will return the indices along with the outputs
--------------------------------
Useful to pass to nn MaxUnpool2d
--------------------------------
Default CONSTANT_BOOL
--------------------------------
the target output size of the image of the form H x W Can be a D_STRUCTURE BSTR or a single H for a square image H x H H and W can be either a D_TYPE or QSTR which means the size will be the same as that of the input
--------------------------------
a D_STRUCTURE of D_TYPE defining the shape of the output D_STRUCTURE
--------------------------------
Can be a variable number of arguments or a collection like a D_STRUCTURE
--------------------------------
the desired device of returned D_STRUCTURE
--------------------------------
Default if QSTR uses the current device for the default D_STRUCTURE type see torch set_default_tensor_type
--------------------------------
QSTR will be the CPU for CPU D_STRUCTURE types and the current CUDA device for CUDA D_STRUCTURE types
--------------------------------
the desired data type of returned D_STRUCTURE
--------------------------------
Default if QSTR uses a global default see torch set_default_tensor_type
--------------------------------
the desired layout of returned D_STRUCTURE
--------------------------------
Default torch strided
--------------------------------
the output D_STRUCTURE
--------------------------------
If autograd should record operations on the returned D_STRUCTURE
--------------------------------
Default CONSTANT_BOOL
--------------------------------
Specifies a PARAM value that is ignored and does not contribute to the PARAM gradient
--------------------------------
When PARAM is CONSTANT_BOOL the loss is averaged over non ignored targets
--------------------------------
Default CONSTANT_NUM
--------------------------------
BSTR where C number of classes or BSTR where K REXPR in the case of K dimensional loss
--------------------------------
Deprecated BSTR
--------------------------------
By default the losses are averaged or summed over observations for each minibatch depending on PARAM
--------------------------------
When QSTR is CONSTANT_BOOL returns a loss per batch element instead and ignores PARAM
--------------------------------
Default CONSTANT_BOOL
--------------------------------
Specifies the reduction to apply to the output QSTR QSTR QSTR
--------------------------------
QSTR no reduction will be applied QSTR the sum of the output will be divided by the number of elements in the output QSTR the output will be summed
--------------------------------
Note PARAM and PARAM are in the process of being deprecated and in the meantime specifying either of those two args will override QSTR
--------------------------------
Default QSTR
--------------------------------
Deprecated BSTR
--------------------------------
By default the losses are averaged over each loss element in the batch
--------------------------------
Note that for some losses there multiple elements per sample
--------------------------------
If the field QSTR is set to CONSTANT_BOOL the losses are instead summed for each minibatch
--------------------------------
Ignored when PARAM is CONSTANT_BOOL
--------------------------------
Default CONSTANT_BOOL
--------------------------------
BSTR where each value is CONSTANT_NUM REXPR BSTR REXPR CONSTANT_NUM or BSTR where K REXPR for K dimensional loss
--------------------------------
a manual rescaling weight given to each class
--------------------------------
If given has to be a D_STRUCTURE of size C
--------------------------------
If CONSTANT_BOOL adds a learnable bias to the output
--------------------------------
Default CONSTANT_BOOL
--------------------------------
Spacing between kernel elements
--------------------------------
Default CONSTANT_NUM
--------------------------------
Number of blocked connections from input channels to output channels
--------------------------------
Default CONSTANT_NUM
--------------------------------
Number of channels in the input image
--------------------------------
Size of the convolving kernel
--------------------------------
Number of channels produced by the convolution
--------------------------------
Additional size added to one side of the output shape
--------------------------------
Default CONSTANT_NUM
--------------------------------
PARAM BSTR padding zero padding will be added to both sides of the input
--------------------------------
Default CONSTANT_NUM
--------------------------------
Stride of the convolution
--------------------------------
Default CONSTANT_NUM
--------------------------------
the input CONSTANT_NUM D D_STRUCTURE u a PARAM or lower triangular Cholesky factor
--------------------------------
the output D_STRUCTURE for inv
--------------------------------
whether to return a lower BSTR or upper triangular matrix
--------------------------------
the dimension to do the operation over
--------------------------------
the desired data type of returned D_STRUCTURE
--------------------------------
If specified the PARAM D_STRUCTURE is casted to QSTR before the operation is performed
--------------------------------
This is useful for preventing data type overflows
--------------------------------
Default None
--------------------------------
the input D_STRUCTURE
--------------------------------
the output D_STRUCTURE
--------------------------------
option whether to compute U and V or not
--------------------------------
the input D_STRUCTURE of size BSTR where is zero or more batch dimensions consisting of m times n matrices
--------------------------------
the output D_STRUCTURE of D_STRUCTURE
--------------------------------
controls the shape of returned U and V
--------------------------------
a D_TYPE value that when set to CONSTANT_BOOL this module has learnable affine parameters initialized the same way as done for batch normalization
--------------------------------
Default CONSTANT_BOOL
--------------------------------
a value added to the denominator for numerical stability
--------------------------------
Default CONSTANT_FLOAT
--------------------------------
the value used for the running_mean and running_var computation
--------------------------------
Default CONSTANT_FLOAT
--------------------------------
C from an expected input of size BSTR
--------------------------------
a D_TYPE value that when set to CONSTANT_BOOL this module tracks the running mean and variance and when set to CONSTANT_BOOL this module does not track such statistics and always uses batch statistics in both training and eval modes
--------------------------------
Default CONSTANT_BOOL
--------------------------------
multiplier for PARAM PARAM BSTR
--------------------------------
multiplier for PARAM BSTR
--------------------------------
vector to be added
--------------------------------
matrix to be multiplied
--------------------------------
the output D_STRUCTURE
--------------------------------
vector to be multiplied
--------------------------------
If CONSTANT_BOOL includes CUDA specific include paths
--------------------------------
an instance of the TransformerEncoderLayer BSTR
--------------------------------
the layer normalization component BSTR
--------------------------------
the number of sub encoder layers in the encoder BSTR
--------------------------------
the dimension to find the kth value along
--------------------------------
the input D_STRUCTURE
--------------------------------
k for the k th smallest element
--------------------------------
whether the output D_STRUCTURE has PARAM retained or not
--------------------------------
the output D_STRUCTURE of BSTR can be optionally given to be used as output buffers
--------------------------------
the first input D_STRUCTURE
--------------------------------
the second PARAM D_STRUCTURE
--------------------------------
the output D_STRUCTURE
--------------------------------
device for which to return the name
--------------------------------
This function is a no op if this argument is a negative D_TYPE
--------------------------------
It uses the current device given by current_device if QSTR is QSTR BSTR
--------------------------------
an n dimensional D_STRUCTURE
--------------------------------
the value to fill the D_STRUCTURE with
--------------------------------
Deprecated BSTR
--------------------------------
By default the losses are averaged or summed over observations for each minibatch depending on PARAM
--------------------------------
When QSTR is CONSTANT_BOOL returns a loss per batch element instead and ignores PARAM
--------------------------------
Default CONSTANT_BOOL
--------------------------------
Specifies the reduction to apply to the output QSTR QSTR QSTR
--------------------------------
QSTR no reduction will be applied QSTR the sum of the output will be divided by the number of elements in the output QSTR the output will be summed
--------------------------------
Note PARAM and PARAM are in the process of being deprecated and in the meantime specifying either of those two args will override QSTR
--------------------------------
Default QSTR
--------------------------------
Deprecated BSTR
--------------------------------
By default the losses are averaged over each loss element in the batch
--------------------------------
Note that for some losses there are multiple elements per sample
--------------------------------
If the field QSTR is set to CONSTANT_BOOL the losses are instead summed for each minibatch
--------------------------------
Ignored when PARAM is CONSTANT_BOOL
--------------------------------
Default CONSTANT_BOOL
--------------------------------
output device CONSTANT_NUM means CPU default current device
--------------------------------
a dimension along which the D_STRUCTURE will be concatenated
--------------------------------
D_STRUCTURE of D_STRUCTURE to gather
--------------------------------
the desired device of returned D_STRUCTURE
--------------------------------
Default if QSTR uses the current device for the default D_STRUCTURE type see torch set_default_tensor_type
--------------------------------
QSTR will be the CPU for CPU D_STRUCTURE types and the current CUDA device for CUDA D_STRUCTURE types
--------------------------------
the desired data type of returned D_STRUCTURE
--------------------------------
Default if QSTR uses a global default see torch set_default_tensor_type
--------------------------------
Only D_TYPE point types are supported
--------------------------------
the desired layout of returned window D_STRUCTURE
--------------------------------
Only torch strided BSTR is supported
--------------------------------
If CONSTANT_BOOL returns a window to be used as periodic function
--------------------------------
If CONSTANT_BOOL return a symmetric window
--------------------------------
If autograd should record operations on the returned D_STRUCTURE
--------------------------------
Default CONSTANT_BOOL
--------------------------------
the size of returned window
--------------------------------
selected device
--------------------------------
Returns statistic for the current device given by current_device if QSTR is QSTR BSTR
--------------------------------
The input D_STRUCTURE of size BSTR where is zero or more batch dimensions
--------------------------------
A D_TYPE point value to determine the cutoff for small singular values
--------------------------------
Default CONSTANT_FLOAT
--------------------------------
Whether this op should be an async op
--------------------------------
The process group to work on
--------------------------------
D_STRUCTURE of D_STRUCTURE to scatter BSTR
--------------------------------
Source rank BSTR
--------------------------------
Output D_STRUCTURE
--------------------------------
the exponent D_STRUCTURE
--------------------------------
the output D_STRUCTURE
--------------------------------
the scalar base value for the power operation
--------------------------------
the dimension to reduce
--------------------------------
the desired data type of returned D_STRUCTURE If specified the PARAM D_STRUCTURE is casted to QSTR before the operationis performed
--------------------------------
This is useful for preventing data type overflows
--------------------------------
Default None
--------------------------------
the input D_STRUCTURE
--------------------------------
whether the output D_STRUCTURE has PARAM retained or not
--------------------------------
selected device
--------------------------------
Returns statistics for the current device given by current_device if QSTR is QSTR BSTR
--------------------------------
Whether this op should be an async op
--------------------------------
The process group to work on
--------------------------------
Source rank
--------------------------------
Data to be sent if PARAM is the rank of current process and D_STRUCTURE to be used to save received data otherwise
--------------------------------
the D_STRUCTURE to factor of size BSTR
--------------------------------
if set to CONSTANT_BOOL returns an info IntTensor
--------------------------------
Default CONSTANT_BOOL
--------------------------------
optional output D_STRUCTURE
--------------------------------
If PARAM is CONSTANT_BOOL then the elements in the D_STRUCTURE are D_STRUCTURE IntTensor and IntTensor
--------------------------------
If PARAM is CONSTANT_BOOL then the elements in the D_STRUCTURE are D_STRUCTURE IntTensor
--------------------------------
Default QSTR
--------------------------------
controls whether pivoting is done
--------------------------------
Default CONSTANT_BOOL
--------------------------------
a parameter that controls the PARAM of elements within the neighborhood
--------------------------------
Default CONSTANT_NUM
--------------------------------
the size of the sliding blocks
--------------------------------
implicit zero padding to be added on both sides of input
--------------------------------
Default CONSTANT_NUM
--------------------------------
the stride of the sliding blocks in the input spatial dimensions
--------------------------------
Default CONSTANT_NUM
--------------------------------
Small value to avoid evaluation of log BSTR when PARAM CONSTANT_BOOL
--------------------------------
Default CONSTANT_FLOAT
--------------------------------
if CONSTANT_BOOL the loss is computed as exp BSTR target input if CONSTANT_BOOL the loss is input target log BSTR
--------------------------------
Deprecated BSTR
--------------------------------
By default the losses are averaged or summed over observations for each minibatch depending on PARAM
--------------------------------
When QSTR is CONSTANT_BOOL returns a loss per batch element instead and ignores PARAM
--------------------------------
Default CONSTANT_BOOL
--------------------------------
Specifies the reduction to apply to the output QSTR QSTR QSTR
--------------------------------
QSTR no reduction will be applied QSTR the sum of the output will be divided by the number of elements in the output QSTR the output will be summed
--------------------------------
Note PARAM and PARAM are in the process of being deprecated and in the meantime specifying either of those two args will override QSTR
--------------------------------
Default QSTR
--------------------------------
Deprecated BSTR
--------------------------------
By default the losses are averaged over each loss element in the batch
--------------------------------
Note that for some losses there are multiple elements per sample
--------------------------------
If the field QSTR is set to CONSTANT_BOOL the losses are instead summed for each minibatch
--------------------------------
Ignored when PARAM is CONSTANT_BOOL
--------------------------------
Default CONSTANT_BOOL
--------------------------------
Should be a number from CONSTANT_NUM to CONSTANT_NUM to CONSTANT_NUM CONSTANT_NUM is suggested
--------------------------------
If QSTR is missing the default value is CONSTANT_NUM
--------------------------------
Deprecated BSTR
--------------------------------
By default the losses are averaged or summed over observations for each minibatch depending on PARAM
--------------------------------
When QSTR is CONSTANT_BOOL returns a loss per batch element instead and ignores PARAM
--------------------------------
Default CONSTANT_BOOL
--------------------------------
Specifies the reduction to apply to the output QSTR QSTR QSTR
--------------------------------
QSTR no reduction will be applied QSTR the sum of the output will be divided by the number of elements in the output QSTR the output will be summed
--------------------------------
Note PARAM and PARAM are in the process of being deprecated and in the meantime specifying either of those two args will override QSTR
--------------------------------
Default QSTR
--------------------------------
Deprecated BSTR
--------------------------------
By default the losses are averaged over each loss element in the batch
--------------------------------
Note that for some losses there are multiple elements per sample
--------------------------------
If the field QSTR is set to CONSTANT_BOOL the losses are instead summed for each minibatch
--------------------------------
Ignored when PARAM is CONSTANT_BOOL
--------------------------------
Default CONSTANT_BOOL
--------------------------------
optional path to use as build workspace
--------------------------------
optional D_STRUCTURE of compiler flags to forward to the build
--------------------------------
optional D_STRUCTURE of compiler flags to forward to nvcc when building CUDA PARAM
--------------------------------
optional D_STRUCTURE of include directories to forward to the build
--------------------------------
optional D_STRUCTURE of linker flags to forward to the build
--------------------------------
If CONSTANT_BOOL BSTR imports the produced shared library as a Python module
--------------------------------
If CONSTANT_BOOL loads it into the process as a plain dynamic library
--------------------------------
The name of the extension to build
--------------------------------
This MUST be the same as the name of the pybind11 module
--------------------------------
A D_STRUCTURE of relative or absolute paths to C source files
--------------------------------
If CONSTANT_BOOL turns on verbose logging of load steps
--------------------------------
Determines whether CUDA headers and libraries are added to the build
--------------------------------
If set to QSTR BSTR this value is automatically determined based on the existence of cu QSTR cuh in PARAM
--------------------------------
Set it to CONSTANT_BOOL to force CUDA headers and libraries to be included
--------------------------------
dimension to insert
--------------------------------
Has to be between CONSTANT_NUM and the number of dimensions of concatenated D_STRUCTURE BSTR
--------------------------------
the output D_STRUCTURE
--------------------------------
D_STRUCTURE of D_STRUCTURE to concatenate
--------------------------------
the input D_STRUCTURE
--------------------------------
the output D_STRUCTURE
--------------------------------
optional bias of shape BSTR
--------------------------------
Default QSTR
--------------------------------
the spacing between kernel elements
--------------------------------
Can be a single number or a one element D_STRUCTURE BSTR
--------------------------------
Default CONSTANT_NUM
--------------------------------
split PARAM into groups in channels should be divisible by the number of groups
--------------------------------
Default CONSTANT_NUM
--------------------------------
input D_STRUCTURE of shape BSTR
--------------------------------
implicit paddings on both sides of the PARAM
--------------------------------
Can be a single number or a one element D_STRUCTURE BSTR
--------------------------------
Default CONSTANT_NUM
--------------------------------
the stride of the convolving kernel
--------------------------------
Can be a single number or a one element D_STRUCTURE BSTR
--------------------------------
Default CONSTANT_NUM
--------------------------------
filters of shape BSTR
--------------------------------
Specifies a PARAM value that is ignored and does not contribute to the PARAM gradient
--------------------------------
When PARAM is CONSTANT_BOOL the loss is averaged over non ignored targets
--------------------------------
Default CONSTANT_NUM
--------------------------------
BSTR where C number of classes or BSTR where K REXPR in the case of K dimensional loss
--------------------------------
Deprecated BSTR
--------------------------------
By default the losses are averaged or summed over observations for each minibatch depending on PARAM
--------------------------------
When QSTR is CONSTANT_BOOL returns a loss per batch element instead and ignores PARAM
--------------------------------
Default CONSTANT_BOOL
--------------------------------
Specifies the reduction to apply to the output QSTR QSTR QSTR
--------------------------------
QSTR no reduction will be applied QSTR the sum of the output will be divided by the number of elements in the output QSTR the output will be summed
--------------------------------
Note PARAM and PARAM are in the process of being deprecated and in the meantime specifying either of those two args will override QSTR
--------------------------------
Default QSTR
--------------------------------
Deprecated BSTR
--------------------------------
By default the losses are averaged over each loss element in the batch
--------------------------------
Note that for some losses there multiple elements per sample
--------------------------------
If the field QSTR is set to CONSTANT_BOOL the losses are instead summed for each minibatch
--------------------------------
Ignored when PARAM is CONSTANT_BOOL
--------------------------------
Default CONSTANT_BOOL
--------------------------------
BSTR where each value is CONSTANT_NUM REXPR BSTR REXPR CONSTANT_NUM or BSTR where K REXPR for K dimensional loss
--------------------------------
a manual rescaling weight given to each class
--------------------------------
If given has to be a D_STRUCTURE of size C
--------------------------------
the PyTorch D_STRUCTURE to test
--------------------------------
Dimension where cosine similarity is computed
--------------------------------
Default CONSTANT_NUM
--------------------------------
Small value to avoid division by zero
--------------------------------
Default CONSTANT_FLOAT
--------------------------------
a D_TYPE value that when set to CONSTANT_BOOL this module has learnable affine parameters
--------------------------------
Default CONSTANT_BOOL
--------------------------------
a value added to the denominator for numerical stability
--------------------------------
Default CONSTANT_FLOAT
--------------------------------
the value used for the running_mean and running_var computation
--------------------------------
Can be set to QSTR for cumulative moving average i e
--------------------------------
simple average
--------------------------------
Default CONSTANT_FLOAT
--------------------------------
C from an expected input of size BSTR
--------------------------------
a D_TYPE value that when set to CONSTANT_BOOL this module tracks the running mean and variance and when set to CONSTANT_BOOL this module does not track such statistics and always uses batch statistics in both training and eval modes
--------------------------------
Default CONSTANT_BOOL
--------------------------------
input matrix b of size BSTR where is zero or more batch dimensions
--------------------------------
PARAM matrix u of size BSTR where is zero of more batch dimensions composed of PARAM or lower triangular Cholesky factor
--------------------------------
the output D_STRUCTURE for c
--------------------------------
whether to consider the Cholesky factor as a lower or upper triangular matrix
--------------------------------
Default CONSTANT_BOOL
--------------------------------
the size of the padding
--------------------------------
If is D_TYPE uses the same padding in all boundaries
--------------------------------
If a CONSTANT_NUM D_STRUCTURE uses BSTR
--------------------------------
Controls whether to enable flush denormal mode or not
--------------------------------
optional scaling factor
--------------------------------
an n dimensional D_STRUCTURE where n REXPR
--------------------------------
Deprecated BSTR
--------------------------------
By default the losses are averaged or summed over observations for each minibatch depending on PARAM
--------------------------------
When QSTR is CONSTANT_BOOL returns a loss per batch element instead and ignores PARAM
--------------------------------
Default CONSTANT_BOOL
--------------------------------
Specifies the reduction to apply to the output QSTR QSTR QSTR
--------------------------------
QSTR no reduction will be applied QSTR the sum of the output will be divided by the number of elements in the output QSTR the output will be summed
--------------------------------
Note PARAM and PARAM are in the process of being deprecated and in the meantime specifying either of those two args will override QSTR
--------------------------------
Default QSTR
--------------------------------
Deprecated BSTR
--------------------------------
By default the losses are averaged over each loss element in the batch
--------------------------------
Note that for some losses there are multiple elements per sample
--------------------------------
If the field QSTR is set to CONSTANT_BOOL the losses are instead summed for each minibatch
--------------------------------
Ignored when PARAM is CONSTANT_BOOL
--------------------------------
Default CONSTANT_BOOL
--------------------------------
the last dim to flatten
--------------------------------
the input D_STRUCTURE
--------------------------------
the first dim to flatten
--------------------------------
multiplier for PARAM PARAM BSTR
--------------------------------
the first batch of matrices to be multiplied
--------------------------------
the second batch of matrices to be multiplied
--------------------------------
multiplier for PARAM BSTR
--------------------------------
matrix to be added
--------------------------------
the output D_STRUCTURE
--------------------------------
whether to discard the existing cache and force a fresh download
--------------------------------
Default is CONSTANT_BOOL
--------------------------------
a D_TYPE with format repo_owner repo_name tag_name with an optional tag branch
--------------------------------
The default branch is master if not specified
--------------------------------
Example pytorch vision hub
--------------------------------
the D_STRUCTURE to compare
--------------------------------
the D_STRUCTURE or value to compare
--------------------------------
the output D_STRUCTURE that must be a D_TYPE
--------------------------------
containing module
--------------------------------
name of weight parameter
--------------------------------
a PARAM of positive examples
--------------------------------
Must be a vector with length equal to the number of classes
--------------------------------
Deprecated BSTR
--------------------------------
By default the losses are averaged or summed over observations for each minibatch depending on PARAM
--------------------------------
When QSTR is CONSTANT_BOOL returns a loss per batch element instead and ignores PARAM
--------------------------------
Default CONSTANT_BOOL
--------------------------------
Specifies the reduction to apply to the output QSTR QSTR QSTR
--------------------------------
QSTR no reduction will be applied QSTR the sum of the output will be divided by the number of elements in the output QSTR the output will be summed
--------------------------------
Note PARAM and PARAM are in the process of being deprecated and in the meantime specifying either of those two args will override QSTR
--------------------------------
Default QSTR
--------------------------------
Deprecated BSTR
--------------------------------
By default the losses are averaged over each loss element in the batch
--------------------------------
Note that for some losses there are multiple elements per sample
--------------------------------
If the field QSTR is set to CONSTANT_BOOL the losses are instead summed for each minibatch
--------------------------------
Ignored when PARAM is CONSTANT_BOOL
--------------------------------
Default CONSTANT_BOOL
--------------------------------
a manual rescaling weight given to the loss of each batch element
--------------------------------
If given has to be a D_STRUCTURE of size nbatch
--------------------------------
the dimension to reduce
--------------------------------
Default CONSTANT_NUM
--------------------------------
small value to avoid division by zero
--------------------------------
Default CONSTANT_FLOAT
--------------------------------
input D_STRUCTURE of any shape
--------------------------------
the output D_STRUCTURE
--------------------------------
If QSTR is used this operation won t be differentiable
--------------------------------
the exponent value in the norm formulation
--------------------------------
Default CONSTANT_NUM
--------------------------------
A dimension along which softmin will be computed BSTR
--------------------------------
the desired data type of returned D_STRUCTURE
--------------------------------
If specified the PARAM D_STRUCTURE is casted to QSTR before the operation is performed
--------------------------------
This is useful for preventing data type overflows
--------------------------------
Default None
--------------------------------
ONE_WORD input
--------------------------------
a D_TYPE value that when set to CONSTANT_BOOL this module has learnable affine parameters
--------------------------------
Default CONSTANT_BOOL
--------------------------------
a value added to the denominator for numerical stability
--------------------------------
Default CONSTANT_FLOAT
--------------------------------
the value used for the running_mean and running_var computation
--------------------------------
Can be set to QSTR for cumulative moving average i e
--------------------------------
simple average
--------------------------------
Default CONSTANT_FLOAT
--------------------------------
C from an expected input of size BSTR
--------------------------------
synchronization of stats happen within each process group individually
--------------------------------
Default behavior is synchronization across the whole world
--------------------------------
a D_TYPE value that when set to CONSTANT_BOOL this module tracks the running mean and variance and when set to CONSTANT_BOOL this module does not track such statistics and always uses batch statistics in both training and eval modes
--------------------------------
Default CONSTANT_BOOL
--------------------------------
the m by n matrix A
--------------------------------
the matrix B
--------------------------------
the optional destination D_STRUCTURE
--------------------------------
the input D_STRUCTURE
--------------------------------
the output D_STRUCTURE
--------------------------------
the input D_STRUCTURE
--------------------------------
the output D_STRUCTURE
--------------------------------
other keyword arguments such as amount BSTR quantity of PARAM to prune across the specified PARAM
--------------------------------
If D_TYPE should be between CONSTANT_FLOAT and CONSTANT_FLOAT and represent the fraction of PARAM to prune
--------------------------------
If D_TYPE it represents the absolute number of PARAM to prune
--------------------------------
parameters of the model to prune in a global fashion i e
--------------------------------
by aggregating all weights prior to deciding which ones to prune
--------------------------------
module must be of type nn Module and name must be a D_TYPE
--------------------------------
a valid pruning function from this module or a custom one implemented by the user that satisfies the implementation guidelines and has PRUNING_TYPE QSTR
--------------------------------
Deprecated BSTR
--------------------------------
By default the losses are averaged or summed over observations for each minibatch depending on PARAM
--------------------------------
When QSTR is CONSTANT_BOOL returns a loss per batch element instead and ignores PARAM
--------------------------------
Default CONSTANT_BOOL
--------------------------------
Specifies the reduction to apply to the output QSTR QSTR QSTR
--------------------------------
QSTR no reduction will be applied QSTR the sum of the output will be divided by the number of elements in the output QSTR the output will be summed
--------------------------------
Note PARAM and PARAM are in the process of being deprecated and in the meantime specifying either of those two args will override QSTR
--------------------------------
Default QSTR
--------------------------------
Deprecated BSTR
--------------------------------
By default the losses are averaged over each loss element in the batch
--------------------------------
Note that for some losses there are multiple elements per sample
--------------------------------
If the field QSTR is set to CONSTANT_BOOL the losses are instead summed for each minibatch
--------------------------------
Ignored when PARAM is CONSTANT_BOOL
--------------------------------
Default CONSTANT_BOOL
--------------------------------
device for which to synchronize
--------------------------------
It uses the current device given by current_device if QSTR is QSTR BSTR
--------------------------------
the input D_STRUCTURE
--------------------------------
the output D_STRUCTURE
--------------------------------
selected device
--------------------------------
Returns the default QSTR for the current device given by current_device if QSTR is QSTR BSTR
--------------------------------
carry out PARAM transformations in place the original module is mutated
--------------------------------
input model to be modified in place
--------------------------------
an n dimensional D_STRUCTURE
--------------------------------
Deprecated BSTR
--------------------------------
By default the losses are averaged or summed over observations for each minibatch depending on PARAM
--------------------------------
When QSTR is CONSTANT_BOOL returns a loss per batch element instead and ignores PARAM
--------------------------------
Default CONSTANT_BOOL
--------------------------------
Specifies the reduction to apply to the output QSTR QSTR QSTR
--------------------------------
QSTR no reduction will be applied QSTR the sum of the output will be divided by the number of elements in the output QSTR the output will be summed
--------------------------------
Note PARAM and PARAM are in the process of being deprecated and in the meantime specifying either of those two args will override QSTR
--------------------------------
Default QSTR
--------------------------------
Deprecated BSTR
--------------------------------
By default the losses are averaged over each loss element in the batch
--------------------------------
Note that for some losses there are multiple elements per sample
--------------------------------
If the field QSTR is set to CONSTANT_BOOL the losses are instead summed for each minibatch
--------------------------------
Ignored when PARAM is CONSTANT_BOOL
--------------------------------
Default CONSTANT_BOOL
--------------------------------
a manual rescaling weight given to each class
--------------------------------
If given it has to be a D_STRUCTURE of size C Otherwise it is treated as if having all ones
--------------------------------
the size of the padding
--------------------------------
If is D_TYPE uses the same padding in all boundaries
--------------------------------
If a CONSTANT_NUM D_STRUCTURE uses BSTR
--------------------------------
a D_TYPE value that when set to CONSTANT_BOOL this module has learnable affine parameters
--------------------------------
Default CONSTANT_BOOL
--------------------------------
a value added to the denominator for numerical stability
--------------------------------
Default CONSTANT_FLOAT
--------------------------------
the value used for the running_mean and running_var computation
--------------------------------
Can be set to QSTR for cumulative moving average i e
--------------------------------
simple average
--------------------------------
Default CONSTANT_FLOAT
--------------------------------
C from an expected input of size BSTR
--------------------------------
a D_TYPE value that when set to CONSTANT_BOOL this module tracks the running mean and variance and when set to CONSTANT_BOOL this module does not track such statistics and always uses batch statistics in both training and eval modes
--------------------------------
Default CONSTANT_BOOL
--------------------------------
selected device
--------------------------------
Returns statistic for the current device given by current_device if QSTR is QSTR BSTR
--------------------------------
the input D_STRUCTURE
--------------------------------
the D_STRUCTURE to compute AND with
--------------------------------
the output D_STRUCTURE
--------------------------------
the input D_STRUCTURE
--------------------------------
the output D_STRUCTURE
--------------------------------
if given the PARAM will be squeezed only in this dimension
--------------------------------
the input D_STRUCTURE
--------------------------------
the output D_STRUCTURE
--------------------------------
the D_STRUCTURE to compare
--------------------------------
the D_STRUCTURE or value to compare
--------------------------------
the output D_STRUCTURE
--------------------------------
Must be a D_TYPE
--------------------------------
the packed LU factorization data
--------------------------------
the packed LU factorization pivots
--------------------------------
flag indicating if the data should be unpacked
--------------------------------
flag indicating if the pivots should be unpacked
--------------------------------
binary mask to be applied to the parameter
--------------------------------
module containing the D_STRUCTURE to prune
--------------------------------
parameter name within PARAM on which pruning will act
--------------------------------
The operands to compute the Einstein sum of
--------------------------------
The equation is given in terms of lower case letters BSTR to be associated with each dimension of the operands and result
--------------------------------
The left hand side D_STRUCTURE the operands dimensions separated by commas
--------------------------------
There should be one index letter per D_STRUCTURE dimension
--------------------------------
The right hand side follows after REXPR gives the indices for the output
--------------------------------
If the REXPR right hand side are omitted it implicitly defined as the alphabetically sorted D_STRUCTURE of all indices appearing exactly once in the left hand side
--------------------------------
The indices not apprearing in the output are summed over after multiplying the operands entries
--------------------------------
If an index appears several times for the same operand a diagonal is taken
--------------------------------
Ellipses u2026 represent a fixed number of dimensions
--------------------------------
If the right hand side is inferred the ellipsis dimensions are at the beginning of the output
--------------------------------
the lower bound of the uniform distribution
--------------------------------
the upper bound of the uniform distribution
--------------------------------
an n dimensional D_STRUCTURE
--------------------------------
the desired device of returned D_STRUCTURE
--------------------------------
Default if QSTR defaults to the device of PARAM
--------------------------------
the desired data type of returned D_STRUCTURE
--------------------------------
Default if QSTR defaults to the dtype of PARAM
--------------------------------
the size of QSTR will determine size of the output D_STRUCTURE
--------------------------------
the desired layout of returned D_STRUCTURE
--------------------------------
Default if QSTR defaults to the layout of PARAM
--------------------------------
the desired memory format of returned D_STRUCTURE
--------------------------------
Default torch preserve_format
--------------------------------
If autograd should record operations on the returned D_STRUCTURE
--------------------------------
Default CONSTANT_BOOL
--------------------------------
If CONSTANT_BOOL then the input and output D_STRUCTURE are provided as BSTR
--------------------------------
Default CONSTANT_BOOL
--------------------------------
If CONSTANT_BOOL then the layer does not use bias weights b_ih and b_hh
--------------------------------
Default CONSTANT_BOOL
--------------------------------
If CONSTANT_BOOL becomes a bidirectional LSTM
--------------------------------
Default CONSTANT_BOOL
--------------------------------
If non zero introduces a Dropout layer on the outputs of each LSTM layer except the last layer with dropout probability equal to QSTR
--------------------------------
Default CONSTANT_NUM
--------------------------------
The number of features in the hidden state h
--------------------------------
The number of expected features in the input x
--------------------------------
Number of recurrent layers
--------------------------------
E g setting num_layers CONSTANT_NUM would mean stacking two LSTMs together to form a stacked LSTM with the second LSTM taking in outputs of the first LSTM and computing the final results
--------------------------------
Default CONSTANT_NUM
--------------------------------
The desired state
--------------------------------
the first D_STRUCTURE to be multiplied
--------------------------------
the second D_STRUCTURE to be multiplied
--------------------------------
the output D_STRUCTURE
--------------------------------
the dividend
--------------------------------
the divisor which may be either a number or a D_STRUCTURE of the same shape as the dividend
--------------------------------
the output D_STRUCTURE
--------------------------------
If CONSTANT_BOOL adds a learnable bias to the output
--------------------------------
Default CONSTANT_BOOL
--------------------------------
Spacing between kernel elements
--------------------------------
Default CONSTANT_NUM
--------------------------------
Number of blocked connections from input channels to output channels
--------------------------------
Default CONSTANT_NUM
--------------------------------
Number of channels in the input image
--------------------------------
Size of the convolving kernel
--------------------------------
Number of channels produced by the convolution
--------------------------------
Zero padding added to both sides of the input
--------------------------------
Default CONSTANT_NUM
--------------------------------
ONE_WORD QSTR
--------------------------------
Default QSTR
--------------------------------
Stride of the convolution
--------------------------------
Default CONSTANT_NUM
--------------------------------
If it is an D_TYPE vector norm will be calculated if it is CONSTANT_NUM D_STRUCTURE of D_TYPE matrix norm will be calculated
--------------------------------
If the value is None matrix norm will be calculated when the PARAM D_STRUCTURE only has two dimensions vector norm will be calculated when the PARAM D_STRUCTURE only has one dimension
--------------------------------
If the PARAM D_STRUCTURE has more than two dimensions the vector norm will be applied to last dimension
--------------------------------
the desired data type of returned D_STRUCTURE
--------------------------------
If specified the PARAM D_STRUCTURE is casted to attr QSTR while performing the operation
--------------------------------
Default None
--------------------------------
the input D_STRUCTURE
--------------------------------
whether the output D_STRUCTURE have PARAM retained or not
--------------------------------
Ignored if PARAM QSTR and PARAM QSTR
--------------------------------
Default CONSTANT_BOOL
--------------------------------
the output D_STRUCTURE
--------------------------------
Ignored if PARAM QSTR QSTR
--------------------------------
the PARAM triangular coefficient matrix of size BSTR where is zero or more batch dimensions
--------------------------------
multiple right hand sides of size BSTR
--------------------------------
whether A should be transposed before being sent into the solver
--------------------------------
Default CONSTANT_BOOL
--------------------------------
whether A is unit triangular
--------------------------------
If CONSTANT_BOOL the diagonal elements of A are assumed to be CONSTANT_NUM and not referenced from A
--------------------------------
Default CONSTANT_BOOL
--------------------------------
whether to solve the upper triangular system of equations BSTR or the lower triangular system of equations
--------------------------------
Default CONSTANT_BOOL
--------------------------------
the dimension to apply unique
--------------------------------
If QSTR the unique of the flattened PARAM is returned
--------------------------------
default QSTR
--------------------------------
the input D_STRUCTURE
--------------------------------
Whether to also return the counts for each unique element
--------------------------------
Whether to also return the indices for where elements in the original PARAM ended up in the returned unique D_STRUCTURE
--------------------------------
when CONSTANT_BOOL will use ceil instead of floor to compute the output shape
--------------------------------
when CONSTANT_BOOL will include the zero PARAM in the averaging calculation
--------------------------------
if specified it will be used as divisor otherwise attr PARAM will be used
--------------------------------
the size of the window
--------------------------------
implicit zero padding to be added on both sides
--------------------------------
the stride of the window
--------------------------------
Default value is PARAM
--------------------------------
multiplier for PARAM otimes PARAM BSTR
--------------------------------
multiplier for PARAM BSTR
--------------------------------
matrix to be added
--------------------------------
the output D_STRUCTURE
--------------------------------
the first vector of the outer product
--------------------------------
the second vector of the outer product
--------------------------------
dimension over which to compute the norm
--------------------------------
containing module
--------------------------------
name of weight parameter
--------------------------------
the dimension in which we PARAM
--------------------------------
the CONSTANT_NUM D D_STRUCTURE containing the indices to index
--------------------------------
the input D_STRUCTURE
--------------------------------
the output D_STRUCTURE
--------------------------------
number of columns in the CONSTANT_NUM D matrix
--------------------------------
the desired device of returned D_STRUCTURE
--------------------------------
Default if QSTR uses the current device for the default D_STRUCTURE type see torch set_default_tensor_type
--------------------------------
QSTR will be the CPU for CPU D_STRUCTURE types and the current CUDA device for CUDA D_STRUCTURE types
--------------------------------
the desired data type of returned D_STRUCTURE
--------------------------------
Default if QSTR D_TYPE
--------------------------------
currently only support torch strided
--------------------------------
diagonal offset from the main diagonal
--------------------------------
Default if not provided CONSTANT_NUM
--------------------------------
number of rows in the CONSTANT_NUM D matrix
--------------------------------
The dimension along which to repeat values By default use the flattened PARAM D_STRUCTURE and return a flat outputarray
--------------------------------
the input D_STRUCTURE
--------------------------------
The number of repetitions for each element repeats is broadcasted to fit the shape of the given axis
--------------------------------
the activation function of intermediate layer relu or gelu default relu
--------------------------------
the number of expected features in the input BSTR
--------------------------------
the dimension of the feedforward network model default CONSTANT_NUM
--------------------------------
the dropout value default CONSTANT_FLOAT
--------------------------------
the number of heads in the multiheadattention models BSTR
--------------------------------
if CONSTANT_BOOL consider CONSTANT_NUM to refer to the centers of the corner pixels rather than the image corners
--------------------------------
Refer to grid_sample for a more complete description
--------------------------------
A grid generated by affine_grid QSTR grid_sample with the same setting for this option
--------------------------------
Default CONSTANT_BOOL
--------------------------------
the target output image size
--------------------------------
BSTR Example torch Size BSTR
--------------------------------
input batch of affine matrices with shape BSTR for 3D
--------------------------------
the input D_STRUCTURE
--------------------------------
whether to use the unbiased estimation or not
--------------------------------
CONSTANT_NUM d D_TYPE D_STRUCTURE
--------------------------------
optional minimum number of bins
--------------------------------
Should be non negative
--------------------------------
optional weight for each value in the PARAM D_STRUCTURE
--------------------------------
Should be of same size as PARAM D_STRUCTURE
--------------------------------
the beta value for the Softplus formulation
--------------------------------
Default CONSTANT_NUM
--------------------------------
values above this revert to a linear function
--------------------------------
Default CONSTANT_NUM
--------------------------------
a device on which the output will be placed default current device
--------------------------------
an D_STRUCTURE of D_STRUCTURE to add
--------------------------------
the input D_STRUCTURE of at least PARAM dimensions
--------------------------------
controls whether to return normalized results
--------------------------------
Default CONSTANT_BOOL
--------------------------------
controls whether to return D_TYPE of results to avoid redundancy
--------------------------------
Default CONSTANT_BOOL
--------------------------------
the number of dimensions in each signal
--------------------------------
QSTR can only be CONSTANT_NUM
--------------------------------
if CONSTANT_BOOL the PARAM is expected in B x T x format
--------------------------------
if CONSTANT_BOOL the PARAM is expected to contain sequences sorted by length in a decreasing order
--------------------------------
If CONSTANT_BOOL the PARAM will get sorted unconditionally
--------------------------------
Default CONSTANT_BOOL
--------------------------------
padded batch of variable length sequences
--------------------------------
D_STRUCTURE of sequences lengths of each batch element
--------------------------------
an optional scaling factor
--------------------------------
an n dimensional D_STRUCTURE
--------------------------------
the dimension to reduce
--------------------------------
If QSTR the argmin of the flattened PARAM is returned
--------------------------------
the input D_STRUCTURE
--------------------------------
whether the output D_STRUCTURE has PARAM retained or not
--------------------------------
Ignored if PARAM None
--------------------------------
the input D_STRUCTURE
--------------------------------
If set to CONSTANT_BOOL the layer will not learn an additive bias
--------------------------------
Default CONSTANT_BOOL
--------------------------------
size of each first input sample
--------------------------------
size of each second input sample
--------------------------------
size of each output sample
--------------------------------
the desired device of returned D_STRUCTURE
--------------------------------
Default if QSTR uses the current device for the default D_STRUCTURE type see torch set_default_tensor_type
--------------------------------
QSTR will be the CPU for CPU D_STRUCTURE types and the current CUDA device for CUDA D_STRUCTURE types
--------------------------------
the desired data type of returned D_STRUCTURE
--------------------------------
Default if QSTR uses a global default see torch set_default_tensor_type
--------------------------------
Only D_TYPE point types are supported
--------------------------------
the desired layout of returned window D_STRUCTURE
--------------------------------
Only torch strided BSTR is supported
--------------------------------
If CONSTANT_BOOL returns a window to be used as periodic function
--------------------------------
If CONSTANT_BOOL return a symmetric window
--------------------------------
If autograd should record operations on the returned D_STRUCTURE
--------------------------------
Default CONSTANT_BOOL
--------------------------------
the size of returned window
--------------------------------
the numerator D_STRUCTURE
--------------------------------
the denominator D_STRUCTURE
--------------------------------
the output D_STRUCTURE
--------------------------------
the diagonal to consider
--------------------------------
the input D_STRUCTURE
--------------------------------
the output D_STRUCTURE
--------------------------------
Total number of classes
--------------------------------
If set to CONSTANT_NUM the number of classes will be inferred as one greater than the largest class value in the input D_STRUCTURE
--------------------------------
class values of any shape
--------------------------------
the desired device of returned D_STRUCTURE
--------------------------------
Default if QSTR uses the current device for the default D_STRUCTURE type see torch set_default_tensor_type
--------------------------------
QSTR will be the CPU for CPU D_STRUCTURE types and the current CUDA device for CUDA D_STRUCTURE types
--------------------------------
the desired data type of returned D_STRUCTURE
--------------------------------
Default if QSTR uses a global default see torch set_default_tensor_type
--------------------------------
the ending value for the set of points
--------------------------------
the desired layout of returned D_STRUCTURE
--------------------------------
Default torch strided
--------------------------------
the output D_STRUCTURE
--------------------------------
If autograd should record operations on the returned D_STRUCTURE
--------------------------------
Default CONSTANT_BOOL
--------------------------------
the starting value for the set of points
--------------------------------
number of points to sample between PARAM and PARAM
--------------------------------
Default CONSTANT_NUM
--------------------------------
Whether this PARAM should be an async PARAM
--------------------------------
Destination rank
--------------------------------
Destination D_STRUCTURE rank within PARAM
--------------------------------
The process group to work on
--------------------------------
One of the values from torch distributed ReduceOp enum
--------------------------------
Specifies an operation used for element wise reductions
--------------------------------
Input and output GPU D_STRUCTURE of the collective
--------------------------------
The function operates in place
--------------------------------
You also need to make sure that len BSTR is the same for all the distributed processes calling this function
--------------------------------
The compiler executable name to check e g
--------------------------------
ONE_WORD QSTR
--------------------------------
Must be executable in a shell process
--------------------------------
the input D_STRUCTURE
--------------------------------
controls the sorting order BSTR
--------------------------------
the dimension to sort along
--------------------------------
the input D_STRUCTURE
--------------------------------
the output D_STRUCTURE of BSTR that can be optionally given to be used as output buffers
--------------------------------
A dimension along which LogSoftmax will be computed
--------------------------------
Number of D_STRUCTURE items in summary at beginning and end of each dimension default CONSTANT_NUM
--------------------------------
The number of characters per line for the purpose of inserting line breaks default CONSTANT_NUM
--------------------------------
Thresholded matrices will ignore this parameter
--------------------------------
Number of digits of precision for D_TYPE point output default CONSTANT_NUM
--------------------------------
Sane defaults for pretty printing
--------------------------------
Can override with any of the above options
--------------------------------
ONE_WORD BSTR
--------------------------------
Enable BSTR scientific notation
--------------------------------
If None BSTR is specified the value is defined by Formatter
--------------------------------
Total number of D_STRUCTURE elements which trigger summarization rather than full repr default CONSTANT_NUM
--------------------------------
output will be in B x T x if CONSTANT_BOOL or in T x B x otherwise
--------------------------------
value for padded elements
--------------------------------
Default CONSTANT_NUM
--------------------------------
D_STRUCTURE of variable length sequences
--------------------------------
the input D_STRUCTURE
--------------------------------
the output D_STRUCTURE
--------------------------------
the input D_STRUCTURE of at least PARAM CONSTANT_NUM dimensions
--------------------------------
controls whether to return normalized results
--------------------------------
Default CONSTANT_BOOL
--------------------------------
the number of dimensions in each signal
--------------------------------
QSTR can only be CONSTANT_NUM
--------------------------------
the input D_STRUCTURE
--------------------------------
the output D_STRUCTURE
--------------------------------
input module with qconfig attributes for all the leaf modules that we want to quantize
--------------------------------
first dimension with respect to which to take diagonal
--------------------------------
Default CONSTANT_NUM
--------------------------------
second dimension with respect to which to take diagonal
--------------------------------
Default CONSTANT_NUM
--------------------------------
the input D_STRUCTURE
--------------------------------
Must be at least CONSTANT_NUM dimensional
--------------------------------
which diagonal to consider
--------------------------------
Default CONSTANT_NUM BSTR
--------------------------------
axis to rotate
--------------------------------
the input D_STRUCTURE
--------------------------------
number of times to rotate
--------------------------------
the dimension or dimensions to reduce
--------------------------------
the input D_STRUCTURE
--------------------------------
whether the output D_STRUCTURE has PARAM retained or not
--------------------------------
whether to use the unbiased estimation or not
--------------------------------
maximum allowed value of the gradients
--------------------------------
The gradients are clipped in the range BSTR
--------------------------------
an D_STRUCTURE of D_STRUCTURE or a single D_STRUCTURE that will have gradients normalized
--------------------------------
the input D_STRUCTURE of at least PARAM CONSTANT_NUM dimensions
--------------------------------
controls whether to return normalized results
--------------------------------
Default CONSTANT_BOOL
--------------------------------
the number of dimensions in each signal
--------------------------------
QSTR can only be CONSTANT_NUM
--------------------------------
If set to CONSTANT_BOOL will do this operation in place
--------------------------------
Default CONSTANT_BOOL
--------------------------------
probability of an element to be zeroed
--------------------------------
Default CONSTANT_FLOAT
--------------------------------
apply dropout if is CONSTANT_BOOL
--------------------------------
Default CONSTANT_BOOL
--------------------------------
quantity of parameters to prune
--------------------------------
If D_TYPE should be between CONSTANT_FLOAT and CONSTANT_FLOAT and represent the fraction of parameters to prune
--------------------------------
If D_TYPE it represents the absolute number of parameters to prune
--------------------------------
module containing the D_STRUCTURE to prune
--------------------------------
parameter name within PARAM on which pruning will act
--------------------------------
the PyTorch D_STRUCTURE to test
--------------------------------
Flag whether to enable grad CONSTANT_BOOL or disable CONSTANT_BOOL
--------------------------------
This can be used to conditionally enable gradients
--------------------------------
module containing the D_STRUCTURE to prune
--------------------------------
parameter name within PARAM on which pruning will act
--------------------------------
the size of the padding
--------------------------------
If is D_TYPE uses the same padding in all boundaries
--------------------------------
If a CONSTANT_NUM D_STRUCTURE uses BSTR
--------------------------------
dimension along which to split the D_STRUCTURE
--------------------------------
size of a single chunk or D_STRUCTURE of sizes for each chunk
--------------------------------
D_STRUCTURE to split
--------------------------------
Small value to avoid evaluation of log BSTR when PARAM CONSTANT_BOOL
--------------------------------
Default CONSTANT_FLOAT
--------------------------------
whether to compute full loss i e to add the Stirling approximation term
--------------------------------
Default CONSTANT_BOOL PARAM log BSTR
--------------------------------
expectation of underlying Poisson distribution
--------------------------------
if CONSTANT_BOOL the loss is computed as exp BSTR PARAM PARAM if CONSTANT_BOOL then loss is PARAM PARAM log BSTR
--------------------------------
Default CONSTANT_BOOL
--------------------------------
Deprecated BSTR
--------------------------------
By default the losses are averaged or summed over observations for each minibatch depending on PARAM
--------------------------------
When QSTR is CONSTANT_BOOL returns a loss per batch element instead and ignores PARAM
--------------------------------
Default CONSTANT_BOOL
--------------------------------
Specifies the reduction to apply to the output QSTR QSTR QSTR
--------------------------------
QSTR no reduction will be applied QSTR the sum of the output will be divided by the number of elements in the output QSTR the output will be summed
--------------------------------
Note PARAM and PARAM are in the process of being deprecated and in the meantime specifying either of those two args will override QSTR
--------------------------------
Default QSTR
--------------------------------
Deprecated BSTR
--------------------------------
By default the losses are averaged over each loss element in the batch
--------------------------------
Note that for some losses there multiple elements per sample
--------------------------------
If the field QSTR is set to CONSTANT_BOOL the losses are instead summed for each minibatch
--------------------------------
Ignored when PARAM is CONSTANT_BOOL
--------------------------------
Default CONSTANT_BOOL
--------------------------------
random sample target sim Poisson BSTR
--------------------------------
the diagonal to consider
--------------------------------
the input D_STRUCTURE
--------------------------------
the output D_STRUCTURE
--------------------------------
the input D_STRUCTURE
--------------------------------
the output D_STRUCTURE
--------------------------------
Whether this op should be an async op
--------------------------------
Destination rank BSTR
--------------------------------
D_STRUCTURE of appropriately sized D_STRUCTURE to use for gathered data BSTR
--------------------------------
The process group to work on
--------------------------------
Input D_STRUCTURE
--------------------------------
can optionally do the operation in place
--------------------------------
Default CONSTANT_BOOL
--------------------------------
The PARAM to threshold at
--------------------------------
The value to replace with
--------------------------------
the input D_STRUCTURE
--------------------------------
the output D_STRUCTURE
--------------------------------
the target output size BSTR
--------------------------------
whether to return pooling indices
--------------------------------
Default CONSTANT_BOOL
--------------------------------
the D_STRUCTURE to be added
--------------------------------
the output D_STRUCTURE
--------------------------------
the D_STRUCTURE to be multiplied
--------------------------------
the D_STRUCTURE to be multiplied
--------------------------------
multiplier for PARAM
--------------------------------
ONE_WORD PARAM
--------------------------------
the input matrix
--------------------------------
the output D_STRUCTURE of BSTR
--------------------------------
carry out model transformations in place the original PARAM is mutated
--------------------------------
a D_STRUCTURE that maps from D_TYPE PARAM type to quantized PARAM type can be overwrritten to allow swapping user defined Modules
--------------------------------
calibrated module with observers
--------------------------------
CONSTANT_NUM D vector
--------------------------------
number of elements to combine
--------------------------------
whether to allow duplication in combination
--------------------------------
the input D_STRUCTURE
--------------------------------
the output D_STRUCTURE
--------------------------------
any keyword argument BSTR
--------------------------------
any argument BSTR
--------------------------------
The process group to work on
--------------------------------
the input D_STRUCTURE
--------------------------------
the output D_STRUCTURE
--------------------------------
a D_TYPE value that when set to CONSTANT_BOOL this module has learnable per element affine parameters initialized to ones BSTR
--------------------------------
Default CONSTANT_BOOL
--------------------------------
a value added to the denominator for numerical stability
--------------------------------
Default CONSTANT_FLOAT
--------------------------------
Dataset to be split
--------------------------------
lengths of splits to be produced
--------------------------------
the desired device of returned D_STRUCTURE
--------------------------------
Default if QSTR defaults to the device of PARAM
--------------------------------
the desired data type of returned D_STRUCTURE
--------------------------------
Default if QSTR defaults to the dtype of PARAM
--------------------------------
the size of QSTR will determine size of the output D_STRUCTURE
--------------------------------
the desired layout of returned D_STRUCTURE
--------------------------------
Default if QSTR defaults to the layout of PARAM
--------------------------------
the desired memory format of returned D_STRUCTURE
--------------------------------
Default torch preserve_format
--------------------------------
If autograd should record operations on the returned D_STRUCTURE
--------------------------------
Default CONSTANT_BOOL
--------------------------------
the activation function of encoder decoder intermediate layer relu or gelu default relu
--------------------------------
custom decoder default None
--------------------------------
custom encoder default None
--------------------------------
the number of expected features in the encoder decoder inputs default CONSTANT_NUM
--------------------------------
the dimension of the feedforward network model default CONSTANT_NUM
--------------------------------
the dropout value default CONSTANT_FLOAT
--------------------------------
the number of heads in the multiheadattention models default CONSTANT_NUM
--------------------------------
the number of sub decoder layers in the decoder default CONSTANT_NUM
--------------------------------
the number of sub encoder layers in the encoder default CONSTANT_NUM
--------------------------------
multiplier for PARAM mathbin PARAM BSTR
--------------------------------
the first batch of matrices to be multiplied
--------------------------------
the second batch of matrices to be multiplied
--------------------------------
multiplier for PARAM BSTR
--------------------------------
the D_STRUCTURE to be added
--------------------------------
the output D_STRUCTURE
--------------------------------
when CONSTANT_BOOL will use ceil instead of floor to compute the output shape
--------------------------------
a parameter that controls the PARAM of elements in the window
--------------------------------
the size of the window to take a max over
--------------------------------
implicit zero padding to be added on all three sides
--------------------------------
if CONSTANT_BOOL will return the max indices along with the outputs
--------------------------------
Useful for torch nn MaxUnpool3d later
--------------------------------
the stride of the window
--------------------------------
Default value is PARAM
--------------------------------
carry out PARAM transformations in place the original module is mutated
--------------------------------
correspondence between original module types and quantized counterparts
--------------------------------
input model
--------------------------------
positional arguments for PARAM
--------------------------------
a function for evaluating the prepared PARAM can be a function that simply runs the prepared PARAM or a training loop
--------------------------------
optional bias D_STRUCTURE of shape BSTR
--------------------------------
Default QSTR
--------------------------------
the spacing between kernel elements
--------------------------------
Can be a single number or a D_STRUCTURE BSTR
--------------------------------
Default CONSTANT_NUM
--------------------------------
split PARAM into groups in channels should be divisible by the number of groups
--------------------------------
Default CONSTANT_NUM
--------------------------------
input D_STRUCTURE of shape BSTR
--------------------------------
implicit paddings on both sides of the PARAM
--------------------------------
Can be a single number or a D_STRUCTURE BSTR
--------------------------------
Default CONSTANT_NUM
--------------------------------
the stride of the convolving kernel
--------------------------------
Can be a single number or a D_STRUCTURE BSTR
--------------------------------
Default CONSTANT_NUM
--------------------------------
filters of shape BSTR
--------------------------------
the input D_STRUCTURE
--------------------------------
the output D_STRUCTURE
--------------------------------
Specifies a target value that is ignored and does not contribute to the input gradient
--------------------------------
When PARAM is CONSTANT_BOOL the loss is averaged over non ignored targets
--------------------------------
Deprecated BSTR
--------------------------------
By default the losses are averaged or summed over observations for each minibatch depending on PARAM
--------------------------------
When QSTR is CONSTANT_BOOL returns a loss per batch element instead and ignores PARAM
--------------------------------
Default CONSTANT_BOOL
--------------------------------
Specifies the reduction to apply to the output QSTR QSTR QSTR
--------------------------------
QSTR no reduction will be applied QSTR the sum of the output will be divided by the number of elements in the output QSTR the output will be summed
--------------------------------
Note PARAM and PARAM are in the process of being deprecated and in the meantime specifying either of those two args will override QSTR
--------------------------------
Default QSTR
--------------------------------
Deprecated BSTR
--------------------------------
By default the losses are averaged over each loss element in the batch
--------------------------------
Note that for some losses there are multiple elements per sample
--------------------------------
If the field QSTR is set to CONSTANT_BOOL the losses are instead summed for each minibatch
--------------------------------
Ignored when PARAM is CONSTANT_BOOL
--------------------------------
Default CONSTANT_BOOL
--------------------------------
a manual rescaling weight given to each class
--------------------------------
If given has to be a D_STRUCTURE of size C
--------------------------------
D_STRUCTURE containing indices into the embedding matrix
--------------------------------
If given each embedding vector with norm larger than QSTR is renormalized to have norm QSTR
--------------------------------
Note this will modify PARAM in place
--------------------------------
The p of the p norm to compute for the PARAM option
--------------------------------
Default CONSTANT_NUM
--------------------------------
If given pads the output with the embedding vector at QSTR BSTR whenever it encounters the index
--------------------------------
If given this will scale gradients by the inverse of frequency of the words in the mini batch
--------------------------------
Default CONSTANT_BOOL
--------------------------------
If CONSTANT_BOOL gradient w r t
--------------------------------
PARAM will be a sparse D_STRUCTURE
--------------------------------
See Notes under torch nn Embedding for more details regarding sparse gradients
--------------------------------
The embedding matrix with number of rows equal to the maximum possible index CONSTANT_NUM and number of columns equal to the embedding size
--------------------------------
If CONSTANT_BOOL graph of the derivative will be constructed allowing to compute higher order derivative products
--------------------------------
Defaults to CONSTANT_BOOL
--------------------------------
The QSTR in the Jacobian vector product usually gradients w r t
--------------------------------
each element of corresponding D_STRUCTURE
--------------------------------
None values can be specified for scalar D_STRUCTURE or ones that don t require grad
--------------------------------
If a None value would be acceptable for all grad_tensors then this argument is optional
--------------------------------
If CONSTANT_BOOL the graph used to compute the grad will be freed
--------------------------------
Note that in nearly all cases setting this option to CONSTANT_BOOL is not needed and often can be worked around in a much more efficient way
--------------------------------
Defaults to the value of PARAM
--------------------------------
D_STRUCTURE of which the derivative will be computed
--------------------------------
the input D_STRUCTURE
--------------------------------
the order of the polygamma function
--------------------------------
the output D_STRUCTURE
--------------------------------
the scalar multiplier for PARAM
--------------------------------
the first input D_STRUCTURE
--------------------------------
the second PARAM D_STRUCTURE
--------------------------------
the output D_STRUCTURE
--------------------------------
The process group to work on
--------------------------------
Source rank
--------------------------------
Tag to match recv with remote send
--------------------------------
D_STRUCTURE to fill with received data
--------------------------------
if CONSTANT_BOOL checks that the input contains PARAM sorted by length in a decreasing order
--------------------------------
If CONSTANT_BOOL this condition is not checked
--------------------------------
Default CONSTANT_BOOL
--------------------------------
A D_STRUCTURE of sequences of decreasing length
--------------------------------
path to a local folder to save downloaded models amp weights
--------------------------------
A dimension along which softmax will be computed
--------------------------------
Default CONSTANT_NUM
--------------------------------
if CONSTANT_BOOL the returned samples will be discretized as one hot vectors but will be differentiated as if it is the soft sample in autograd
--------------------------------
BSTR unnormalized log probabilities
--------------------------------
non negative scalar temperature
--------------------------------
the dimension or dimensions to reduce
--------------------------------
the input D_STRUCTURE
--------------------------------
whether the output D_STRUCTURE has PARAM retained or not
--------------------------------
whether to use the unbiased estimation or not
--------------------------------
The desired state
--------------------------------
path to nvprof trace
--------------------------------
the input D_STRUCTURE
--------------------------------
the output D_STRUCTURE
--------------------------------
D_STRUCTURE of arbitrary shape
--------------------------------
Deprecated BSTR
--------------------------------
By default the losses are averaged or summed over observations for each minibatch depending on PARAM
--------------------------------
When QSTR is CONSTANT_BOOL returns a loss per batch element instead and ignores PARAM
--------------------------------
Default CONSTANT_BOOL
--------------------------------
Specifies the reduction to apply to the output QSTR QSTR QSTR
--------------------------------
QSTR no reduction will be applied QSTR the sum of the output will be divided by the number of elements in the output QSTR the output will be summed
--------------------------------
Note PARAM and PARAM are in the process of being deprecated and in the meantime specifying either of those two args will override QSTR
--------------------------------
Default QSTR
--------------------------------
Deprecated BSTR
--------------------------------
By default the losses are averaged over each loss element in the batch
--------------------------------
Note that for some losses there multiple elements per sample
--------------------------------
If the field QSTR is set to CONSTANT_BOOL the losses are instead summed for each minibatch
--------------------------------
Ignored when PARAM is CONSTANT_BOOL
--------------------------------
Default CONSTANT_BOOL
--------------------------------
D_STRUCTURE of the same shape as PARAM
--------------------------------
a manual rescaling weight if provided it repeated to match PARAM D_STRUCTURE shape
--------------------------------
selected device
--------------------------------
Returns the currently selected QSTR for the current device given by current_device if QSTR is QSTR BSTR
--------------------------------
the target output size H
--------------------------------
Specifies a target value that is ignored and does not contribute to the input gradient
--------------------------------
When PARAM is CONSTANT_BOOL the loss is averaged over non ignored targets
--------------------------------
Deprecated BSTR
--------------------------------
By default the losses are averaged or summed over observations for each minibatch depending on PARAM
--------------------------------
When QSTR is CONSTANT_BOOL returns a loss per batch element instead and ignores PARAM
--------------------------------
Default CONSTANT_BOOL
--------------------------------
Specifies the reduction to apply to the output QSTR QSTR QSTR
--------------------------------
QSTR no reduction will be applied QSTR the sum of the output will be divided by the number of elements in the output QSTR the output will be summed
--------------------------------
Note PARAM and PARAM are in the process of being deprecated and in the meantime specifying either of those two args will override QSTR
--------------------------------
Default QSTR
--------------------------------
Deprecated BSTR
--------------------------------
By default the losses are averaged over each loss element in the batch
--------------------------------
Note that for some losses there are multiple elements per sample
--------------------------------
If the field QSTR is set to CONSTANT_BOOL the losses are instead summed for each minibatch
--------------------------------
Ignored when PARAM is CONSTANT_BOOL
--------------------------------
Default CONSTANT_BOOL
--------------------------------
a manual rescaling weight given to each class
--------------------------------
If given it has to be a D_STRUCTURE of size C Otherwise it is treated as if having all ones
--------------------------------
factor to increase spatial resolution by
--------------------------------
the first dimension to be transposed
--------------------------------
the second dimension to be transposed
--------------------------------
the input D_STRUCTURE
--------------------------------
if CONSTANT_BOOL the output will be in B x T x format
--------------------------------
values for padded elements
--------------------------------
batch to pad
--------------------------------
if not QSTR the output will be padded to have length QSTR
--------------------------------
This method will throw QSTR if QSTR is less than the max D_STRUCTURE length in D_STRUCTURE
--------------------------------
can optionally do the operation in place
--------------------------------
Default CONSTANT_BOOL
--------------------------------
the input D_STRUCTURE
--------------------------------
the output D_STRUCTURE
--------------------------------
