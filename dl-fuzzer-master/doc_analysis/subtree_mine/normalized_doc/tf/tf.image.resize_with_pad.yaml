constraints:
  antialias:
    default: 'False'
    descp: Whether to use anti-aliasing when resizing. See 'image.resize()'.
    normalized_default: DEFAULT CONSTANT_BOOL
    normalized_descp:
    - Whether to use anti aliasing when resizing
    - See PARAM resize
  image:
    descp: 4-D Tensor of shape `[batch, height, width, channels]` or 3-D Tensor of
      shape `[height, width, channels]`.
    normalized_descp:
    - CONSTANT_NUM-D D_STRUCTURE of shape BSTR or CONSTANT_NUM-D D_STRUCTURE of shape
      BSTR
  method:
    default: ResizeMethod.BILINEAR
    descp: Method to use for resizing image. See `image.resize()`
    normalized_default: ResizeMethod BILINEAR
    normalized_descp:
    - Method to use for resizing PARAM
    - See PARAM resize
  target_height:
    descp: Target height.
    normalized_descp:
    - Target height
  target_width:
    descp: Target width.
    normalized_descp:
    - Target width
exceptions:
- ValueError: if `target_height` or `target_width` are zero or negative.
inputs:
  optional:
  - method
  - antialias
  required:
  - image
  - target_height
  - target_width
link: https://www.tensorflow.org/versions/r2.1/api_docs/python/tf/image/resize_with_pad
outputs: Resized and padded image. If `images` was 4-D, a 4-D float Tensor of shape`[batch,
  new_height, new_width, channels]`. If `images` was 3-D, a 3-D float Tensor of shape`[new_height,
  new_width, channels]`.
package: tensorflow
target: resize_with_pad
title: tf.image.resize_with_pad
version: 2.1.0
