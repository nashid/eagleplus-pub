constraints:
  '**kwargs':
    descp: ''
  anchor:
    default: None
    descp: Multibox prior anchor boxes
    doc_dtype: NDArray
    structure:
    - ndarray
  background_id:
    default: _Null
    descp: Background id.
    doc_dtype: int, optional, default='0'
    dtype:
    - int
    - numpy.int64
    ndim:
    - '0'
    - '1'
    range:
    - '[0,inf)'
  clip:
    default: _Null
    descp: Clip out-of-boundary boxes.
    doc_dtype: boolean, optional, default=1
    dtype:
    - boolean
    - int
    - numeric
    - numpy.dtype
    - numpy.int64
    - string
    ndim:
    - '0'
    - '1'
    range:
    - '[0,inf)'
  cls_prob:
    default: None
    descp: Class probabilities.
    doc_dtype: NDArray
    structure:
    - ndarray
  force_suppress:
    default: _Null
    descp: Suppress all detections regardless of class_id.
    doc_dtype: boolean, optional, default=0
    dtype:
    - boolean
    - int
    - numpy.int64
    ndim:
    - '0'
    - '1'
    range:
    - '[0,inf)'
  loc_pred:
    default: None
    descp: Location regression predictions.
    doc_dtype: NDArray
    structure:
    - ndarray
  name:
    default: None
    descp: ''
  nms_threshold:
    default: _Null
    descp: Non-maximum suppression threshold.
    doc_dtype: float, optional, default=0.5
    dtype:
    - float
    ndim:
    - '0'
  nms_topk:
    default: _Null
    descp: Keep maximum top k detections before nms, -1 for no limit.
    doc_dtype: int, optional, default='-1'
    dtype:
    - int
    - numpy.int64
    ndim:
    - '0'
    - '1'
    range:
    - '[0,inf)'
  out:
    default: None
    descp: The output NDArray to hold the result.
    doc_dtype: NDArray, optional
    dtype:
    - boolean
    - int
    - numeric
    - numpy.dtype
    - string
    ndim:
    - '0'
    - '1'
    range:
    - '[0,inf)'
    structure:
    - ndarray
  threshold:
    default: _Null
    descp: Threshold to be a positive prediction.
    doc_dtype: float, optional, default=0.00999999978
    dtype:
    - float
    ndim:
    - '0'
  variances:
    default: _Null
    descp: Variances to be decoded from box regression output.
    doc_dtype: tuple of <float>, optional, default=[0.1,0.1,0.2,0.2]
    dtype:
    - boolean
    - int
    - numeric
    - numpy.dtype
    - string
    ndim:
    - '0'
    - '1'
    - '4'
    range:
    - '[0,inf)'
    - '[0.1,0.1,0.2,0.2]'
    shape:
    - '[0.1,0.1,0.2,0.2]'
    structure:
    - tuple
inputs:
  optional:
  - cls_prob
  - loc_pred
  - anchor
  - clip
  - threshold
  - background_id
  - nms_threshold
  - force_suppress
  - variances
  - nms_topk
  - out
  - name
  required:
  - '**kwargs'
link: https://mxnet.apache.org/versions/1.6/api/python/docs/api/contrib/ndarray/index.html#mxnet.contrib.ndarray.MultiBoxDetection
package: mxnet
target: MultiBoxDetection
title: mxnet.contrib.ndarray.MultiBoxDetection
version: 1.6.0
