aliases:
- tf.image.decode_image
- tf.compat.v1.image.decode_image
- tf.compat.v1.io.decode_image
constraints:
  channels:
    default: None
    descp: An optional `int`. Defaults to `0`. Number of color channels for the decoded
      image.
    normalized_default: DEFAULT None
    normalized_descp:
    - An optional D_TYPE
    - Defaults to CONSTANT_NUM
    - Number of color channels for the decoded image
  contents:
    descp: 0-D `string`. The encoded image bytes.
    normalized_descp:
    - CONSTANT_NUM D D_TYPE
    - The encoded image bytes
  dtype:
    default: tf.dtypes.uint8
    descp: The desired DType of the returned `Tensor`.
    normalized_default: D_TYPE D_TYPE
    normalized_descp:
    - The desired DType of the returned D_STRUCTURE
  expand_animations:
    default: 'True'
    descp: Controls the shape of the returned op's output. If`True`, the returned
      op will produce a 3-D tensor for PNG, JPEG, and BMP files; and a 4-D tensor
      for all GIFs, whether animated or not. If,`False`, the returned op will produce
      a 3-D tensor for all file types and will truncate animated GIFs to the first
      frame.
    normalized_default: DEFAULT CONSTANT_BOOL
    normalized_descp:
    - Controls the shape of the returned op output
    - If CONSTANT_BOOL the returned op will produce a CONSTANT_NUM D D_STRUCTURE for
      PNG JPEG and BMP files and a CONSTANT_NUM D D_STRUCTURE for all GIFs whether
      animated or not
    - If CONSTANT_BOOL the returned op will produce a CONSTANT_NUM D D_STRUCTURE for
      all file types and will truncate animated GIFs to the first frame
  name:
    default: None
    descp: A name for the operation (optional)
    normalized_default: DEFAULT None
    normalized_descp:
    - A name for the operation BSTR
exceptions:
- ValueError: On incorrect number of channels.
inputs:
  optional:
  - channels
  - dtype
  - name
  - expand_animations
  required:
  - contents
link: https://www.tensorflow.org/versions/r2.1/api_docs/python/tf/io/decode_image
outputs: '`Tensor` with type `dtype` and a 3- or 4-dimensional shape, depending on
  the file type and the value of the `expand_animations` parameter.'
package: tensorflow
target: decode_image
title: tf.io.decode_image
version: 2.1.0
