API,Arg,Descp,Normalized_descp,dtype,tensor_t,structure,shape,ndim,range,enum
mxnet.gluon.utils.split_data,data,A batch of data.,A batch of data,,,,,,,
mxnet.contrib.quantization.quantize_model,excluded_sym_names,A list of strings representing the names of the symbols that users want to excluding from being quantized.,A D_STRUCTURE of D_TYPE representing the names of the symbols that users want to excluding from being quantized,D_TYPE,,D_STRUCTURE,,,,
mxnet.ndarray.contrib.quantized_flatten,data,A ndarray/symbol of type float32,A D_STRUCTURE symbol of type D_TYPE,D_TYPE,,D_STRUCTURE,,,,
mxnet.ndarray.contrib.quantize_v2,data,A ndarray/symbol of type float32,A D_STRUCTURE symbol of type D_TYPE,D_TYPE,,D_STRUCTURE,,,,
mxnet.contrib.quantization.quantize_model,calib_data,A data iterator initialized by the calibration dataset.,A data iterator initialized by the calibration dataset,,,,,,,
mxnet.test_utils.verify_generator,generator,A function that is assumed to generate i.i.d samples from a specific distribution.generator(N) should generate N random samples.,A function that is assumed to generate i i d samples from a specific distribution generator BSTR should generate N random samples,,,,,,,
mxnet.ndarray.op.lamb_update_phase1,epsilon,A small constant for numerical stability.,A small constant for numerical stability,numeric,,,,0,,
mxnet.ndarray.op.InstanceNorm,beta,"A vector of length 'channel', which is added to the product of the normalized input and the weight.",A D_STRUCTURE of length QSTR which is added to the product of the normalized input and the weight,,,D_STRUCTURE,[BSTR],1,,
mxnet.test_utils.get_zip_data,data_dir,Absolute or relative path of the directory name to store zip files,Absolute or relative path of the directory name to store zip files,string,,,,0,,
mxnet.ndarray.contrib.allclose,atol,Absolute tolerance.,Absolute tolerance,,,,,,"[0,inf)",
mxnet.gluon.nn.Conv3DTranspose,activation,"Activation function to use. See `Activation()`. If you don't specify anything, no activation is applied (ie. ""linear"" activation: a(x) = x).",Activation function to use,,,,,,,
mxnet.ndarray.contrib.Proposal,output_score,Add score to outputs,Add score to outputs,,,,,,,
mxnet.ndarray.random.multinomial,data,"An n dimensional array whose last dimension has length k, where k is the number of possible outcomes of each multinomial distribution. For example, data with shape (m, n, k) specifies m*n multinomial distributions each with k possible outcomes.",An n dimensional D_STRUCTURE whose last dimension has length k where k is the number of possible outcomes of each multinomial distribution,,,D_STRUCTURE,,,,
mxnet.ndarray.ones,ctx,An optional device context. Defaults to the current default context (`mxnet.context.current_context()`).,An optional device context,,,,,,,
mxnet.ndarray.empty,ctx,An optional device context (default is the current default context).,An optional device context BSTR,,,,,,,
mxnet.gluon.nn.Conv2DTranspose,groups,"Controls the connections between inputs and outputs. At groups=1, all inputs are convolved to all outputs. At groups=2, the operation becomes equivalent to having two conv layers side by side, each seeing half the input channels, and producing half the output channels, and both subsequently concatenated.",At groups CONSTANT_NUM all inputs are convolved to all outputs,,,,,,,CONSTANT_NUM
mxnet.gluon.nn.Conv2DTranspose,groups,"Controls the connections between inputs and outputs. At groups=1, all inputs are convolved to all outputs. At groups=2, the operation becomes equivalent to having two conv layers side by side, each seeing half the input channels, and producing half the output channels, and both subsequently concatenated.",At groups CONSTANT_NUM the operation becomes equivalent to having two conv layers side by side each seeing half the input PARAM and producing half the output PARAM and both subsequently concatenated,,,,,,,CONSTANT_NUM
mxnet.io.ImageDetRecordIter,mean_img,Augmentation Param: Mean Image to be subtracted.,Augmentation Param Mean Image to be subtracted,numeric,,,,,,
mxnet.io.ImageDetRecordIter,min_crop_overlaps,Augmentation Param: Minimum crop IOU between crop_box and ground-truths.,Augmentation Param Minimum crop IOU between crop_box and ground truths,numeric,,,,,,
mxnet.io.ImageDetRecordIter,min_crop_object_coverages,Augmentation Param: Minimum ratio of intersect/gt_area between crop box and ground-truths.,Augmentation Param Minimum ratio of intersect gt_area between crop box and ground truths,numeric,,,,,,
mxnet.io.ImageDetRecordIter,std_b,Augmentation Param: Standard deviation on B channel.,Augmentation Param Standard deviation on B channel,numeric,,,,,,
mxnet.io.ImageDetRecordIter,std_r,Augmentation Param: Standard deviation on R channel.,Augmentation Param Standard deviation on R channel,numeric,,,,,,
mxnet.io.CSVIter,batch_size,Batch size.,Batch size,int,,,,,"[0,inf)",
mxnet.ndarray.sparse.FullyConnected,bias,Bias parameter.,Bias parameter,,,,,,,
mxnet.image.imdecode,buf,Binary image data as string or numpy ndarray.,Binary image data as D_TYPE or numpy D_STRUCTURE,D_TYPE,,D_STRUCTURE,,,,
mxnet.ndarray.space_to_depth,block_size,Blocks of [block_size. block_size] are moved,block_size are moved,,,,,,,
mxnet.ndarray.space_to_depth,block_size,Blocks of [block_size. block_size] are moved,Blocks of block_size,,,,,,,
mxnet.image.CreateAugmenter,rand_gray,"[0, 1], probability to convert to grayscale for all channels, the number of channels will not be reduced to 1",BSTR probability to convert to grayscale for all channels the number of channels will not be reduced to CONSTANT_NUM,numeric,,,,CONSTANT_NUM,"[0,1];BSTR",
mxnet.ndarray.contrib.box_encode,matches,"(B, N) value range [0, M)",BSTR value range BSTR,,,,BSTR,,BSTR,
mxnet.ndarray.load_frombuffer,buf,Buffer containing contents of a file as a string or bytes.,Buffer containing contents of a file as a D_TYPE or bytes,D_TYPE,,,,,,
mxnet.image.CreateAugmenter,inter_method,"Interpolation method for all resizing operations Possible values: 0: Nearest Neighbors Interpolation. 1: Bilinear interpolation. 2: Bicubic interpolation over 4x4 pixel neighborhood. 3: Area-based (resampling using pixel area relation). It may be a preferred method for image decimation, as it gives moire-free results. But when the image is zoomed, it is similar to the Nearest Neighbors method. (used by default). 4: Lanczos interpolation over 8x8 pixel neighborhood. 9: Cubic for enlarge, area for shrink, bilinear for others 10: Random select from interpolation method metioned above. Note: When shrinking an image, it will generally look best with AREA-based interpolation, whereas, when enlarging an image, it will generally look best with Bicubic (slow) or Bilinear (faster but still looks OK). ",But when the image is zoomed it is similar to the Nearest Neighbors method,,,,,,,
mxnet.ndarray.op.repeat,axis,"The axis along which to repeat values. The negative numbers are interpreted counting from the backward. By default, use the flattened input array, and return a flat output array.",By default use the flattened input D_STRUCTURE and return a flat output D_STRUCTURE,,,,,,,
mxnet.ndarray.slice_like,axes,List of axes on which input data will be sliced according to the corresponding size of the second input. By default will slice on all axes. Negative axes are supported.,By default will slice on all axes,,,,,,,
mxnet.ndarray.moveaxis,source,Original position of the axes to move. Can be negative but must be unique.,Can be negative but must be unique,,,,,,,
mxnet.gluon.rnn.BidirectionalCell,r_cell,Cell for backward unrolling,Cell for backward unrolling,,,,,,,
mxnet.io.ImageRecordIter,max_random_area,"Change the area (namely width * height) to a random value in `[min_random_area, max_random_area]`. Ignored if `random_resized_crop` is False.",Change the area BSTR to a random value in BSTR,,,,,,,
mxnet.io.ImageRecordIter,max_aspect_ratio,"Change the aspect (namely width/height) to a random value. If min_aspect_ratio is None then the aspect ratio ins sampled from [1 - max_aspect_ratio, 1 + max_aspect_ratio], else it is in `[min_aspect_ratio, max_aspect_ratio]`",Change the aspect BSTR to a random value,,,,,,,
mxnet.ndarray.op.multi_mp_sgd_update,clip_gradient,"Clip gradient to the range of [-clip_gradient, clip_gradient] If clip_gradient <= 0, gradient clipping is turned off. grad = max(min(grad, clip_gradient), -clip_gradient).",Clip gradient to the range of BSTR If clip_gradient REXPR gradient clipping is turned off,numeric,,,,0,,
mxnet.ndarray.multi_sgd_mom_update,clip_gradient,"Clip gradient to the range of [-clip_gradient, clip_gradient] If clip_gradient <= 0, gradient clipping is turned off. grad = max(min(grad, clip_gradient), -clip_gradient).",Clip gradient to the range of BSTR If clip_gradient REXPR gradient clipping is turned off,numeric,,,,0,,
mxnet.ndarray.contrib.quadratic,b,Coefficient of the linear term in the quadratic function.,Coefficient of the linear term in the quadratic function,numeric,,,,,,
mxnet.ndarray.Embedding,sparse_grad,"Compute row sparse gradient in the backward calculation. If set to True, the grad's storage type is row_sparse.",Compute row sparse gradient in the backward calculation,,,,,,,
mxnet.image.CreateAugmenter,inter_method,"Interpolation method for all resizing operations Possible values: 0: Nearest Neighbors Interpolation. 1: Bilinear interpolation. 2: Bicubic interpolation over 4x4 pixel neighborhood. 3: Area-based (resampling using pixel area relation). It may be a preferred method for image decimation, as it gives moire-free results. But when the image is zoomed, it is similar to the Nearest Neighbors method. (used by default). 4: Lanczos interpolation over 8x8 pixel neighborhood. 9: Cubic for enlarge, area for shrink, bilinear for others 10: Random select from interpolation method metioned above. Note: When shrinking an image, it will generally look best with AREA-based interpolation, whereas, when enlarging an image, it will generally look best with Bicubic (slow) or Bilinear (faster but still looks OK). ",CONSTANT_NUM Area based BSTR,int,,,,0,,QSTR
mxnet.image.CreateAugmenter,inter_method,"Interpolation method for all resizing operations Possible values: 0: Nearest Neighbors Interpolation. 1: Bilinear interpolation. 2: Bicubic interpolation over 4x4 pixel neighborhood. 3: Area-based (resampling using pixel area relation). It may be a preferred method for image decimation, as it gives moire-free results. But when the image is zoomed, it is similar to the Nearest Neighbors method. (used by default). 4: Lanczos interpolation over 8x8 pixel neighborhood. 9: Cubic for enlarge, area for shrink, bilinear for others 10: Random select from interpolation method metioned above. Note: When shrinking an image, it will generally look best with AREA-based interpolation, whereas, when enlarging an image, it will generally look best with Bicubic (slow) or Bilinear (faster but still looks OK). ",CONSTANT_NUM Bicubic interpolation over 4x4 pixel neighborhood,int,,,,0,,QSTR
mxnet.image.CreateAugmenter,inter_method,"Interpolation method for all resizing operations Possible values: 0: Nearest Neighbors Interpolation. 1: Bilinear interpolation. 2: Bicubic interpolation over 4x4 pixel neighborhood. 3: Area-based (resampling using pixel area relation). It may be a preferred method for image decimation, as it gives moire-free results. But when the image is zoomed, it is similar to the Nearest Neighbors method. (used by default). 4: Lanczos interpolation over 8x8 pixel neighborhood. 9: Cubic for enlarge, area for shrink, bilinear for others 10: Random select from interpolation method metioned above. Note: When shrinking an image, it will generally look best with AREA-based interpolation, whereas, when enlarging an image, it will generally look best with Bicubic (slow) or Bilinear (faster but still looks OK). ",CONSTANT_NUM Bilinear interpolation,int,,,,0,,QSTR
mxnet.gluon.contrib.rnn.Conv2DRNNCell,h2h_dilate,"DF: (1,1)",CONSTANT_NUM CONSTANT_NUM,int,,,,1,,
mxnet.gluon.contrib.rnn.Conv2DGRUCell,h2h_dilate,"DF: (1,1)",CONSTANT_NUM CONSTANT_NUM,int,,,,1,,
mxnet.gluon.contrib.rnn.Conv3DGRUCell,i2h_pad,"DF: (0,0,0)",CONSTANT_NUM CONSTANT_NUM CONSTANT_NUM,int,,,,1,,
mxnet.gluon.nn.AvgPool3D,pool_size,"DF: (2,2,2)",CONSTANT_NUM CONSTANT_NUM CONSTANT_NUM,int,,,,1,,
mxnet.ndarray.linalg_extracttrian,offset,"Offset of the diagonal versus the main diagonal. 0 corresponds to the main diagonal, a negative/positive value to diagonals below/above the main diagonal.",CONSTANT_NUM corresponds to the main diagonal a negative positive value to diagonals below above the main diagonal,int,,,,0,,
mxnet.image.CreateAugmenter,inter_method,"Interpolation method for all resizing operations Possible values: 0: Nearest Neighbors Interpolation. 1: Bilinear interpolation. 2: Bicubic interpolation over 4x4 pixel neighborhood. 3: Area-based (resampling using pixel area relation). It may be a preferred method for image decimation, as it gives moire-free results. But when the image is zoomed, it is similar to the Nearest Neighbors method. (used by default). 4: Lanczos interpolation over 8x8 pixel neighborhood. 9: Cubic for enlarge, area for shrink, bilinear for others 10: Random select from interpolation method metioned above. Note: When shrinking an image, it will generally look best with AREA-based interpolation, whereas, when enlarging an image, it will generally look best with Bicubic (slow) or Bilinear (faster but still looks OK). ",CONSTANT_NUM Cubic for enlarge area for shrink bilinear for others CONSTANT_NUM Random select from interpolation method metioned above,int,,,,0,,QSTR
mxnet.image.CreateAugmenter,inter_method,"Interpolation method for all resizing operations Possible values: 0: Nearest Neighbors Interpolation. 1: Bilinear interpolation. 2: Bicubic interpolation over 4x4 pixel neighborhood. 3: Area-based (resampling using pixel area relation). It may be a preferred method for image decimation, as it gives moire-free results. But when the image is zoomed, it is similar to the Nearest Neighbors method. (used by default). 4: Lanczos interpolation over 8x8 pixel neighborhood. 9: Cubic for enlarge, area for shrink, bilinear for others 10: Random select from interpolation method metioned above. Note: When shrinking an image, it will generally look best with AREA-based interpolation, whereas, when enlarging an image, it will generally look best with Bicubic (slow) or Bilinear (faster but still looks OK). ",CONSTANT_NUM Lanczos interpolation over 8x8 pixel neighborhood,int,,,,0,,QSTR
mxnet.gluon.nn.MaxPool2D,strides,"Factor by which to downscale. E.g. 2 will halve the input size. If None, it will default to pool_size.",CONSTANT_NUM will halve the input size,int,,,,,,
mxnet.gluon.rnn.LSTMCell,params,Container for weight sharing between cells. Created if None.,Container for weight sharing between cells,,,,,,,
mxnet.gluon.contrib.rnn.Conv2DGRUCell,params,Container for weight sharing between cells. Created if None.,Container for weight sharing between cells,,,,,,,
mxnet.gluon.rnn.RNNCell,params,Container for weight sharing between cells. Created if None.,Container for weight sharing between cells,,,,,,,
mxnet.gluon.rnn.GRUCell,params,Container for weight sharing between cells. Created if None.,Container for weight sharing between cells,,,,,,,
mxnet.gluon.model_zoo.vision.vgg19,ctx,"DD: Context, default CPU",Context default CPU,,,,,,,
mxnet.ndarray.random_uniform,ctx,"Context of output, in format [cpu|gpu|cpu_pinned](n). Only used for imperative calls.",Context of output in format cpu gpu cpu_pinned BSTR,,,,,,,
mxnet.ndarray.linspace,ctx,"DD: Context, optional",Context optional,,,,,,,
mxnet.ndarray.ones,ctx,"DD: Context, optional",Context optional,,,,,,,
mxnet.ndarray.empty,ctx,"DD: Context, optional",Context optional,,,,,,,
mxnet.gluon.nn.Conv2DTranspose,groups,"Controls the connections between inputs and outputs. At groups=1, all inputs are convolved to all outputs. At groups=2, the operation becomes equivalent to having two conv layers side by side, each seeing half the input channels, and producing half the output channels, and both subsequently concatenated.",Controls the connections between inputs and outputs,,,,,,,
mxnet.ndarray.contrib.quantized_conv,dilate,"Convolution dilate: (w,), (h, w) or (d, h, w). Defaults to 1 for each dimension.",Convolution dilate BSTR,,,,BSTR,,,
mxnet.ndarray.op.Convolution,dilate,"Convolution dilate: (w,), (h, w) or (d, h, w). Defaults to 1 for each dimension.",Convolution dilate BSTR,,,,BSTR,,,
mxnet.contrib.quantization.quantize_model,ctx,DF: cpu(0),cpu CONSTANT_NUM,,,,,,,
mxnet.contrib.quantization.quantize_net,ctx,DF: cpu(0),cpu CONSTANT_NUM,,,,,,,
mxnet.gluon.rnn.LSTMCell,params,Container for weight sharing between cells. Created if None.,Created if None,,,,,,,
mxnet.gluon.contrib.rnn.Conv2DGRUCell,params,Container for weight sharing between cells. Created if None.,Created if None,,,,,,,
mxnet.gluon.rnn.RNNCell,params,Container for weight sharing between cells. Created if None.,Created if None,,,,,,,
mxnet.gluon.rnn.GRUCell,params,Container for weight sharing between cells. Created if None.,Created if None,,,,,,,
mxnet.contrib.quantization.quantize_model,ctx,"Defines the device that users want to run forward propagation on the calibration dataset for collecting layer output statistics. Currently, only supports single context.",Currently only supports single context,,,,,,,
mxnet.contrib.quantization.quantize_net,ctx,"Defines the device that users want to run forward propagation on the calibration dataset for collecting layer output statistics. Currently, only supports single context.",Currently only supports single context,,,,,,,
mxnet.ndarray.slice_like,axes,List of axes on which input data will be sliced according to the corresponding size of the second input. By default will slice on all axes. Negative axes are supported.,D_STRUCTURE of axes on which input PARAM will be sliced according to the corresponding size of the second input,int,,D_STRUCTURE,,,,
mxnet.autograd.grad,variables,DD: NDArray or list of NDArray,D_STRUCTURE of D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.contrib.quantization.quantize_model,excluded_sym_names,DD: list of strings,D_STRUCTURE of D_TYPE,D_TYPE,,D_STRUCTURE,,,,
mxnet.ndarray.linalg_makediag,A,Tensor of diagonal entries,D_STRUCTURE of diagonal entries,,D_STRUCTURE,,,,,
mxnet.ndarray.linalg.gemm2,A,Tensor of input matrices,D_STRUCTURE of input matrices,numeric,D_STRUCTURE,,,,,
mxnet.test_utils.check_symbolic_backward,expected,DD: list of np.ndarray or dict of str to np.ndarray,D_STRUCTURE of np D_STRUCTURE of D_TYPE to np D_STRUCTURE,D_TYPE,,D_STRUCTURE,,,,
mxnet.ndarray.op.linalg_trsm,A,Tensor of lower triangular matrices,D_STRUCTURE of PARAM triangular matrices,numeric,D_STRUCTURE,,,,,
mxnet.io.ImageDetRecordIter,min_crop_overlaps,"DD: tuple of <float>, optional, default=[0]",D_STRUCTURE of REXPR optional default BSTR,REXPR,,D_STRUCTURE,,1,,
mxnet.io.ImageDetRecordIter,min_crop_object_coverages,"DD: tuple of <float>, optional, default=[0]",D_STRUCTURE of REXPR optional default BSTR,REXPR,,D_STRUCTURE,,1,,
mxnet.contrib.ndarray.MultiBoxPrior,out,"DD: NDArray, optional",D_STRUCTURE optional,,,D_STRUCTURE,,,,
mxnet.ndarray.op.reshape_like,out,"DD: NDArray, optional",D_STRUCTURE optional,,,D_STRUCTURE,,,,
mxnet.ndarray.op.trunc,out,"DD: NDArray, optional",D_STRUCTURE optional,,,D_STRUCTURE,,,,
mxnet.contrib.ndarray.quantized_fully_connected,out,"DD: NDArray, optional",D_STRUCTURE optional,,,D_STRUCTURE,,,,
mxnet.ndarray.sparse.rint,out,"DD: NDArray, optional",D_STRUCTURE optional,,,D_STRUCTURE,,,,
mxnet.ndarray.contrib.index_array,out,"DD: NDArray, optional",D_STRUCTURE optional,,,D_STRUCTURE,,,,
mxnet.ndarray.contrib.AdaptiveAvgPooling2D,out,"DD: NDArray, optional",D_STRUCTURE optional,,,D_STRUCTURE,,,,
mxnet.ndarray.sparse.elemwise_sub,out,"DD: NDArray, optional",D_STRUCTURE optional,,,D_STRUCTURE,,,,
mxnet.ndarray.sigmoid,out,"DD: NDArray, optional",D_STRUCTURE optional,,,D_STRUCTURE,,,,
mxnet.contrib.ndarray.interleaved_matmul_selfatt_valatt,out,"DD: NDArray, optional",D_STRUCTURE optional,,,D_STRUCTURE,,,,
mxnet.ndarray.image.random_flip_left_right,out,"DD: NDArray, optional",D_STRUCTURE optional,,,D_STRUCTURE,,,,
mxnet.ndarray.op.min_axis,out,"DD: NDArray, optional",D_STRUCTURE optional,,,D_STRUCTURE,,,,
mxnet.ndarray.op.shape_array,out,"DD: NDArray, optional",D_STRUCTURE optional,,,D_STRUCTURE,,,,
mxnet.ndarray.cos,out,"DD: NDArray, optional",D_STRUCTURE optional,,,D_STRUCTURE,,,,
mxnet.contrib.ndarray.box_non_maximum_suppression,out,"DD: NDArray, optional",D_STRUCTURE optional,,,D_STRUCTURE,,,,
mxnet.ndarray.op.GroupNorm,out,"DD: NDArray, optional",D_STRUCTURE optional,,,D_STRUCTURE,,,,
mxnet.ndarray.SoftmaxOutput,out,"DD: NDArray, optional",D_STRUCTURE optional,,,D_STRUCTURE,,,,
mxnet.ndarray.op.smooth_l1,out,"DD: NDArray, optional",D_STRUCTURE optional,,,D_STRUCTURE,,,,
mxnet.ndarray.sparse.expm1,out,"DD: NDArray, optional",D_STRUCTURE optional,,,D_STRUCTURE,,,,
mxnet.ndarray.random_uniform,out,"DD: NDArray, optional",D_STRUCTURE optional,,,D_STRUCTURE,,,,
mxnet.contrib.ndarray.backward_index_copy,out,"DD: NDArray, optional",D_STRUCTURE optional,,,D_STRUCTURE,,,,
mxnet.ndarray.op.FullyConnected,out,"DD: NDArray, optional",D_STRUCTURE optional,,,D_STRUCTURE,,,,
mxnet.ndarray.op.random_randint,out,"DD: NDArray, optional",D_STRUCTURE optional,,,D_STRUCTURE,,,,
mxnet.ndarray.random.shuffle,out,"DD: NDArray, optional",D_STRUCTURE optional,,,D_STRUCTURE,,,,
mxnet.ndarray.op.transpose,out,"DD: NDArray, optional",D_STRUCTURE optional,,,D_STRUCTURE,,,,
mxnet.ndarray.contrib.quantized_concat,out,"DD: NDArray, optional",D_STRUCTURE optional,,,D_STRUCTURE,,,,
mxnet.ndarray.op.sign,out,"DD: NDArray, optional",D_STRUCTURE optional,,,D_STRUCTURE,,,,
mxnet.ndarray.random_normal,out,"DD: NDArray, optional",D_STRUCTURE optional,,,D_STRUCTURE,,,,
mxnet.ndarray.op.preloaded_multi_mp_sgd_mom_update,out,"DD: NDArray, optional",D_STRUCTURE optional,,,D_STRUCTURE,,,,
mxnet.ndarray.multi_sgd_update,out,"DD: NDArray, optional",D_STRUCTURE optional,,,D_STRUCTURE,,,,
mxnet.contrib.ndarray.round_ste,out,"DD: NDArray, optional",D_STRUCTURE optional,,,D_STRUCTURE,,,,
mxnet.ndarray.sample_multinomial,out,"DD: NDArray, optional",D_STRUCTURE optional,,,D_STRUCTURE,,,,
mxnet.ndarray.random_gamma,out,"DD: NDArray, optional",D_STRUCTURE optional,,,D_STRUCTURE,,,,
mxnet.ndarray.op.flatten,out,"DD: NDArray, optional",D_STRUCTURE optional,,,D_STRUCTURE,,,,
mxnet.ndarray.op.arcsinh,out,"DD: NDArray, optional",D_STRUCTURE optional,,,D_STRUCTURE,,,,
mxnet.ndarray.topk,out,"DD: NDArray, optional",D_STRUCTURE optional,,,D_STRUCTURE,,,,
mxnet.ndarray.op.broadcast_div,out,"DD: NDArray, optional",D_STRUCTURE optional,,,D_STRUCTURE,,,,
mxnet.ndarray.sparse.adam_update,out,"DD: NDArray, optional",D_STRUCTURE optional,,,D_STRUCTURE,,,,
mxnet.ndarray.sparse.broadcast_minus,out,"DD: NDArray, optional",D_STRUCTURE optional,,,D_STRUCTURE,,,,
mxnet.ndarray.sparse.log1p,out,"DD: NDArray, optional",D_STRUCTURE optional,,,D_STRUCTURE,,,,
mxnet.ndarray.LRN,out,"DD: NDArray, optional",D_STRUCTURE optional,,,D_STRUCTURE,,,,
mxnet.ndarray.linalg.slogdet,out,"DD: NDArray, optional",D_STRUCTURE optional,,,D_STRUCTURE,,,,
mxnet.ndarray.op.broadcast_lesser,out,"DD: NDArray, optional",D_STRUCTURE optional,,,D_STRUCTURE,,,,
mxnet.ndarray.lamb_update_phase1,out,"DD: NDArray, optional",D_STRUCTURE optional,,,D_STRUCTURE,,,,
mxnet.ndarray.nag_mom_update,out,"DD: NDArray, optional",D_STRUCTURE optional,,,D_STRUCTURE,,,,
mxnet.ndarray.op.identity,out,"DD: NDArray, optional",D_STRUCTURE optional,,,D_STRUCTURE,,,,
mxnet.ndarray.random.shuffle,out,Array to store the result.,D_STRUCTURE to store the result,,,D_STRUCTURE,,,,
mxnet.ndarray.op.Correlation,max_displacement,"DD: int (non-negative), optional, default=1",D_TYPE BSTR optional default CONSTANT_NUM,D_TYPE,,,,0,"[0,inf)",
mxnet.contrib.ndarray.quantized_conv,num_group,"DD: int (non-negative), optional, default=1",D_TYPE BSTR optional default CONSTANT_NUM,D_TYPE,,,,0,"[0,inf)",
mxnet.ndarray.Correlation,stride2,"DD: int (non-negative), optional, default=1",D_TYPE BSTR optional default CONSTANT_NUM,D_TYPE,,,,0,"[0,inf)",
mxnet.io.CSVIter,batch_size,"DD: int (non-negative), required",D_TYPE BSTR required,D_TYPE,,,,,"[0,inf)",
mxnet.ndarray.Deconvolution,num_filter,"DD: int (non-negative), required",D_TYPE BSTR required,D_TYPE,,,,CONSTANT_NUM,"[0,inf)",
mxnet.image.imdecode,buf,DD: str/bytes/bytearray or numpy.ndarray,D_TYPE bytes bytearray or numpy D_STRUCTURE,D_TYPE,,D_STRUCTURE,,,,
mxnet.gluon.nn.MaxPool2D,strides,"DD: int, list/tuple of 2 ints, or None.",D_TYPE D_STRUCTURE of CONSTANT_NUM D_TYPE or None,D_TYPE,,D_STRUCTURE,[CONSTANT_NUM],1,,
mxnet.gluon.model_zoo.vision.vgg19_bn,pretrained,"DD: bool, default False",D_TYPE default CONSTANT_BOOL,bool,,,,0,,
mxnet.gluon.model_zoo.vision.mobilenet0_25,pretrained,"DD: bool, default False",D_TYPE default CONSTANT_BOOL,bool,,,,0,,
mxnet.gluon.model_zoo.vision.squeezenet1_0,pretrained,"DD: bool, default False",D_TYPE default CONSTANT_BOOL,bool,,,,0,,
mxnet.gluon.rnn.LSTM,bidirectional,"DD: bool, default False",D_TYPE default CONSTANT_BOOL,bool,,,,0,,
mxnet.gluon.utils.download,verify_ssl,"DD: bool, default True",D_TYPE default CONSTANT_BOOL,bool,,,,0,,
mxnet.gluon.utils.split_and_load,even_split,"DD: bool, default True",D_TYPE default CONSTANT_BOOL,bool,,,,0,,
mxnet.gluon.nn.LayerNorm,axis,"DD: int, default -1",D_TYPE default CONSTANT_NUM,D_TYPE,,,,0,,
mxnet.gluon.nn.InstanceNorm,in_channels,"DD: int, default 0",D_TYPE default CONSTANT_NUM,D_TYPE,,,,0,,
mxnet.gluon.nn.Conv3D,in_channels,"DD: int, default 0",D_TYPE default CONSTANT_NUM,D_TYPE,,,,0,,
mxnet.gluon.utils.split_data,batch_axis,"DD: int, default 0",D_TYPE default CONSTANT_NUM,D_TYPE,,,,0,,
mxnet.gluon.nn.BatchNorm,axis,"DD: int, default 1",D_TYPE default CONSTANT_NUM,D_TYPE,,,,0,,
mxnet.image.CreateAugmenter,inter_method,"DD: int, default=2(Area-based",D_TYPE default CONSTANT_NUM Area based,D_TYPE,,,,0,,
mxnet.gluon.model_zoo.vision.squeezenet1_1,root,"DD: str, default '$MXNET_HOME/models'",D_TYPE default MXNET_HOME models,D_TYPE,,,,0,,
mxnet.gluon.model_zoo.vision.resnet34_v1,root,"DD: str, default '$MXNET_HOME/models'",D_TYPE default MXNET_HOME models,D_TYPE,,,,0,,
mxnet.gluon.nn.GlobalMaxPool1D,layout,"DD: str, default 'NCW'",D_TYPE default QSTR,D_TYPE,,,,0,,
mxnet.test_utils.numeric_grad,eps,"DD: float, optional",D_TYPE optional,D_TYPE,,,,,,
mxnet.ndarray.random.multinomial,dtype,"DD: str or numpy.dtype, optional",D_TYPE optional,D_TYPE,,,,,,
mxnet.log.get_logger,name,"DD: str, optional",D_TYPE optional,D_TYPE,,,,,,
mxnet.test_utils.check_speed,typ,"DD: str, optional",D_TYPE optional,D_TYPE,,,,,,
mxnet.test_utils.download,dirname,"DD: str, optional",D_TYPE optional,D_TYPE,,,,,,
mxnet.io.ImageDetRecordIter,mean_img,"DD: string, optional, default=''",D_TYPE optional default,D_TYPE,,,,,,
mxnet.ndarray.random_uniform,ctx,"DD: string, optional, default=''",D_TYPE optional default,D_TYPE,,,,,,
mxnet.ndarray.image.random_lighting,alpha_std,"DD: float, optional, default=0.0500000007",D_TYPE optional default CONSTANT_FLOAT,D_TYPE,,,,0,,
mxnet.contrib.ndarray.box_nms,overlap_thresh,"DD: float, optional, default=0.5",D_TYPE optional default CONSTANT_FLOAT,D_TYPE,,,,0,,
mxnet.ndarray.op.ftml_update,beta2,"DD: float, optional, default=0.999000013",D_TYPE optional default CONSTANT_FLOAT,D_TYPE,,,,0,,
mxnet.ndarray.contrib.allclose,atol,"DD: float, optional, default=9.99999994e-09",D_TYPE optional default CONSTANT_FLOAT,D_TYPE,,,,0,,
mxnet.ndarray.op.lamb_update_phase1,epsilon,"DD: float, optional, default=9.99999997e-07",D_TYPE optional default CONSTANT_FLOAT,D_TYPE,,,,0,,
mxnet.ndarray.linalg_trmm,transpose,"DD: boolean, optional, default=0",D_TYPE optional default CONSTANT_NUM,D_TYPE,,,,0,,
mxnet.ndarray.op.Softmax,use_ignore,"DD: boolean, optional, default=0",D_TYPE optional default CONSTANT_NUM,D_TYPE,,,,0,,
mxnet.ndarray.FullyConnected,no_bias,"DD: boolean, optional, default=0",D_TYPE optional default CONSTANT_NUM,D_TYPE,,,,0,,
mxnet.ndarray.op.linalg_trsm,transpose,"DD: boolean, optional, default=0",D_TYPE optional default CONSTANT_NUM,D_TYPE,,,,0,,
mxnet.ndarray.Convolution,cudnn_off,"DD: boolean, optional, default=0",D_TYPE optional default CONSTANT_NUM,D_TYPE,,,,0,,
mxnet.ndarray.Softmax,multi_output,"DD: boolean, optional, default=0",D_TYPE optional default CONSTANT_NUM,D_TYPE,,,,0,,
mxnet.ndarray.linalg.gemm2,transpose_a,"DD: boolean, optional, default=0",D_TYPE optional default CONSTANT_NUM,D_TYPE,,,,0,,
mxnet.ndarray.Embedding,sparse_grad,"DD: boolean, optional, default=0",D_TYPE optional default CONSTANT_NUM,D_TYPE,,,,0,,
mxnet.ndarray.Pooling,global_pool,"DD: boolean, optional, default=0",D_TYPE optional default CONSTANT_NUM,D_TYPE,,,,0,,
mxnet.ndarray.contrib.SyncBatchNorm,output_mean_var,"DD: boolean, optional, default=0",D_TYPE optional default CONSTANT_NUM,D_TYPE,,,,0,,
mxnet.ndarray.sparse.mean,keepdims,"DD: boolean, optional, default=0",D_TYPE optional default CONSTANT_NUM,D_TYPE,,,,0,,
mxnet.ndarray.op.Softmax,out_grad,"DD: boolean, optional, default=0",D_TYPE optional default CONSTANT_NUM,D_TYPE,,,,0,,
mxnet.ndarray.contrib.quantized_conv,cudnn_off,"DD: boolean, optional, default=0",D_TYPE optional default CONSTANT_NUM,D_TYPE,,,,0,,
mxnet.ndarray.contrib.Proposal,output_score,"DD: boolean, optional, default=0",D_TYPE optional default CONSTANT_NUM,D_TYPE,,,,0,,
mxnet.ndarray.op.moments,keepdims,"DD: boolean, optional, default=0",D_TYPE optional default CONSTANT_NUM,D_TYPE,,,,0,,
mxnet.ndarray.op.FullyConnected,no_bias,"DD: boolean, optional, default=0",D_TYPE optional default CONSTANT_NUM,D_TYPE,,,,0,,
mxnet.ndarray.argmax,keepdims,"DD: boolean, optional, default=0",D_TYPE optional default CONSTANT_NUM,D_TYPE,,,,0,,
mxnet.ndarray.linalg.trmm,transpose,"DD: boolean, optional, default=0",D_TYPE optional default CONSTANT_NUM,D_TYPE,,,,0,,
mxnet.ndarray.contrib.box_nms,force_suppress,"DD: boolean, optional, default=0",D_TYPE optional default CONSTANT_NUM,D_TYPE,,,,0,,
mxnet.ndarray.SequenceReverse,use_sequence_length,"DD: boolean, optional, default=0",D_TYPE optional default CONSTANT_NUM,D_TYPE,,,,0,,
mxnet.ndarray.sparse.dot,transpose_a,"DD: boolean, optional, default=0",D_TYPE optional default CONSTANT_NUM,D_TYPE,,,,0,,
mxnet.ndarray.contrib.CTCLoss,use_label_lengths,"DD: boolean, optional, default=0",D_TYPE optional default CONSTANT_NUM,D_TYPE,,,,0,,
mxnet.ndarray.mean,keepdims,"DD: boolean, optional, default=0",D_TYPE optional default CONSTANT_NUM,D_TYPE,,,,0,,
mxnet.ndarray.linalg.trsm,transpose,"DD: boolean, optional, default=0",D_TYPE optional default CONSTANT_NUM,D_TYPE,,,,0,,
mxnet.ndarray.contrib.quantized_conv,no_bias,"DD: boolean, optional, default=0",D_TYPE optional default CONSTANT_NUM,D_TYPE,,,,0,,
mxnet.ndarray.sparse.sgd_mom_update,lazy_update,"DD: boolean, optional, default=1",D_TYPE optional default CONSTANT_NUM,D_TYPE,,,,0,,
mxnet.ndarray.contrib.SyncBatchNorm,fix_gamma,"DD: boolean, optional, default=1",D_TYPE optional default CONSTANT_NUM,D_TYPE,,,,0,,
mxnet.ndarray.sparse.adam_update,lazy_update,"DD: boolean, optional, default=1",D_TYPE optional default CONSTANT_NUM,D_TYPE,,,,0,,
mxnet.ndarray.linalg_extracttrian,lower,"DD: boolean, optional, default=1",D_TYPE optional default CONSTANT_NUM,D_TYPE,,,,0,,
mxnet.ndarray.Deconvolution,no_bias,"DD: boolean, optional, default=1",D_TYPE optional default CONSTANT_NUM,D_TYPE,,,,0,,
mxnet.ndarray.argsort,is_ascend,"DD: boolean, optional, default=1",D_TYPE optional default CONSTANT_NUM,D_TYPE,,,,0,,
mxnet.ndarray.linalg.trsm,alpha,"DD: double, optional, default=1",D_TYPE optional default CONSTANT_NUM,D_TYPE,,,,0,,
mxnet.ndarray.linalg_gemm2,alpha,"DD: double, optional, default=1",D_TYPE optional default CONSTANT_NUM,D_TYPE,,,,0,,
mxnet.ndarray.contrib.MultiBoxTarget,negative_mining_ratio,"DD: float, optional, default=-1",D_TYPE optional default CONSTANT_NUM,D_TYPE,,,,0,,
mxnet.ndarray.op.multi_mp_sgd_update,clip_gradient,"DD: float, optional, default=-1",D_TYPE optional default CONSTANT_NUM,D_TYPE,,,,0,,
mxnet.ndarray.multi_sgd_mom_update,clip_gradient,"DD: float, optional, default=-1",D_TYPE optional default CONSTANT_NUM,D_TYPE,,,,0,,
mxnet.io.ImageRecordIter,mean_r,"DD: float, optional, default=0",D_TYPE optional default CONSTANT_NUM,D_TYPE,,,,0,,
mxnet.io.ImageDetRecordIter,std_b,"DD: float, optional, default=0",D_TYPE optional default CONSTANT_NUM,D_TYPE,,,,0,,
mxnet.io.ImageRecordIter,max_aspect_ratio,"DD: float, optional, default=0",D_TYPE optional default CONSTANT_NUM,D_TYPE,,,,0,,
mxnet.io.ImageRecordIter,mean_b,"DD: float, optional, default=0",D_TYPE optional default CONSTANT_NUM,D_TYPE,,,,0,,
mxnet.ndarray.op.sgd_mom_update,momentum,"DD: float, optional, default=0",D_TYPE optional default CONSTANT_NUM,D_TYPE,,,,0,,
mxnet.ndarray.contrib.quadratic,b,"DD: float, optional, default=0",D_TYPE optional default CONSTANT_NUM,D_TYPE,,,,0,,
mxnet.ndarray.contrib.DeformablePSROIPooling,trans_std,"DD: float, optional, default=0",D_TYPE optional default CONSTANT_NUM,D_TYPE,,,,0,,
mxnet.ndarray.nag_mom_update,wd,"DD: float, optional, default=0",D_TYPE optional default CONSTANT_NUM,D_TYPE,,,,0,,
mxnet.ndarray.op.random_uniform,low,"DD: float, optional, default=0",D_TYPE optional default CONSTANT_NUM,D_TYPE,,,,0,,
mxnet.io.ImageDetRecordIter,std_r,"DD: float, optional, default=0",D_TYPE optional default CONSTANT_NUM,D_TYPE,,,,0,,
mxnet.ndarray.preloaded_multi_sgd_update,rescale_grad,"DD: float, optional, default=1",D_TYPE optional default CONSTANT_NUM,D_TYPE,,,,0,,
mxnet.io.ImageRecordIter,max_random_area,"DD: float, optional, default=1",D_TYPE optional default CONSTANT_NUM,D_TYPE,,,,0,,
mxnet.ndarray.random.generalized_negative_binomial_like,mu,"DD: float, optional, default=1",D_TYPE optional default CONSTANT_NUM,D_TYPE,,,,0,,
mxnet.ndarray.mp_nag_mom_update,rescale_grad,"DD: float, optional, default=1",D_TYPE optional default CONSTANT_NUM,D_TYPE,,,,0,,
mxnet.ndarray.random.exponential_like,lam,"DD: float, optional, default=1",D_TYPE optional default CONSTANT_NUM,D_TYPE,,,,0,,
mxnet.ndarray.MAERegressionOutput,grad_scale,"DD: float, optional, default=1",D_TYPE optional default CONSTANT_NUM,D_TYPE,,,,0,,
mxnet.ndarray.op.multi_lars,rescale_grad,"DD: float, optional, default=1",D_TYPE optional default CONSTANT_NUM,D_TYPE,,,,0,,
mxnet.ndarray.op.multi_mp_sgd_mom_update,rescale_grad,"DD: float, optional, default=1",D_TYPE optional default CONSTANT_NUM,D_TYPE,,,,0,,
mxnet.ndarray.op.SoftmaxOutput,grad_scale,"DD: float, optional, default=1",D_TYPE optional default CONSTANT_NUM,D_TYPE,,,,0,,
mxnet.contrib.ndarray.group_adagrad_update,rescale_grad,"DD: float, optional, default=1",D_TYPE optional default CONSTANT_NUM,D_TYPE,,,,0,,
mxnet.ndarray.op.LRN,knorm,"DD: float, optional, default=2",D_TYPE optional default CONSTANT_NUM,D_TYPE,,,,0,,
mxnet.contrib.ndarray.box_nms,background_id,"DD: int, optional, default='-1'",D_TYPE optional default CONSTANT_NUM,D_TYPE,,,,0,,
mxnet.ndarray.linalg_extracttrian,offset,"DD: int, optional, default='0'",D_TYPE optional default CONSTANT_NUM,D_TYPE,,,,0,,
mxnet.ndarray.take,axis,"DD: int, optional, default='0'",D_TYPE optional default CONSTANT_NUM,D_TYPE,,,,0,,
mxnet.ndarray.swapaxes,dim1,"DD: int, optional, default='0'",D_TYPE optional default CONSTANT_NUM,D_TYPE,,,,0,,
mxnet.io.ImageRecordIter,shuffle_chunk_seed,"DD: int, optional, default='0'",D_TYPE optional default CONSTANT_NUM,D_TYPE,,,,0,,
mxnet.ndarray.GroupNorm,num_groups,"DD: int, optional, default='1'",D_TYPE optional default CONSTANT_NUM,D_TYPE,,,,0,,
mxnet.contrib.ndarray.SyncBatchNorm,ndev,"DD: int, optional, default='1'",D_TYPE optional default CONSTANT_NUM,D_TYPE,,,,0,,
mxnet.ndarray.op.multi_sgd_update,num_weights,"DD: int, optional, default='1'",D_TYPE optional default CONSTANT_NUM,D_TYPE,,,,0,,
mxnet.contrib.ndarray.arange_like,repeat,"DD: int, optional, default='1'",D_TYPE optional default CONSTANT_NUM,D_TYPE,,,,0,,
mxnet.contrib.ndarray.DeformablePSROIPooling,sample_per_part,"DD: int, optional, default='1'",D_TYPE optional default CONSTANT_NUM,D_TYPE,,,,0,,
mxnet.ndarray.preloaded_multi_mp_sgd_update,num_weights,"DD: int, optional, default='1'",D_TYPE optional default CONSTANT_NUM,D_TYPE,,,,0,,
mxnet.ndarray.multi_mp_sgd_update,num_weights,"DD: int, optional, default='1'",D_TYPE optional default CONSTANT_NUM,D_TYPE,,,,0,,
mxnet.ndarray.contrib.DeformableConvolution,num_deformable_group,"DD: int, optional, default='1'",D_TYPE optional default CONSTANT_NUM,D_TYPE,,,,0,,
mxnet.io.LibSVMIter,num_parts,"DD: int, optional, default='1'",D_TYPE optional default CONSTANT_NUM,D_TYPE,,,,0,,
mxnet.ndarray.contrib.MultiProposal,rpn_min_size,"DD: int, optional, default='16'",D_TYPE optional default CONSTANT_NUM,D_TYPE,,,,0,,
mxnet.image.center_crop,interp,"DD: int, optional, default=2",D_TYPE optional default CONSTANT_NUM,D_TYPE,,,,0,,
mxnet.io.LibSVMIter,label_libsvm,"DD: string, optional, default='NULL'",D_TYPE optional default QSTR,D_TYPE,,,,0,,
mxnet.io.MNISTIter,label,"DD: string, optional, default='./train-labels-idx1-ubyte'",D_TYPE optional default train labels idx1 ubyte,D_TYPE,,,,0,,
mxnet.gluon.nn.AvgPool3D,pool_size,"DD: int or list/tuple of 3 ints,",D_TYPE or D_STRUCTURE of CONSTANT_NUM D_TYPE,D_TYPE,,D_STRUCTURE,[CONSTANT_NUM],0;1,,
mxnet.ndarray.moveaxis,source,DD: int or sequence of int,D_TYPE or D_STRUCTURE of D_TYPE,D_TYPE,,D_STRUCTURE,,,,
mxnet.gluon.contrib.rnn.Conv1DLSTMCell,i2h_kernel,DD: int or tuple of int,D_TYPE or D_STRUCTURE of D_TYPE,D_TYPE,,D_STRUCTURE,,0;1,,
mxnet.ndarray.zeros,shape,DD: int or tuple of int,D_TYPE or D_STRUCTURE of D_TYPE,D_TYPE,,D_STRUCTURE,,0;1,,
mxnet.gluon.contrib.rnn.Conv3DGRUCell,i2h_pad,"DD: int or tuple of int, default (0, 0, 0",D_TYPE or D_STRUCTURE of D_TYPE default CONSTANT_NUM,D_TYPE,,D_STRUCTURE,,0;1,,
mxnet.gluon.contrib.rnn.Conv2DRNNCell,h2h_dilate,"DD: int or tuple of int, default (1, 1",D_TYPE or D_STRUCTURE of D_TYPE default CONSTANT_NUM,D_TYPE,,D_STRUCTURE,,0;1,,
mxnet.gluon.contrib.rnn.Conv2DGRUCell,h2h_dilate,"DD: int or tuple of int, default (1, 1",D_TYPE or D_STRUCTURE of D_TYPE default CONSTANT_NUM,D_TYPE,,D_STRUCTURE,,0;1,,
mxnet.gluon.rnn.LSTMCell,i2h_weight_initializer,DD: str or Initializer,D_TYPE or Initializer,D_TYPE,,,,,,
mxnet.gluon.contrib.rnn.LSTMPCell,i2h_weight_initializer,DD: str or Initializer,D_TYPE or Initializer,D_TYPE,,,,,,
mxnet.gluon.contrib.rnn.Conv2DLSTMCell,h2h_weight_initializer,DD: str or Initializer,D_TYPE or Initializer,D_TYPE,,,,,,
mxnet.gluon.nn.Conv2D,weight_initializer,DD: str or Initializer,D_TYPE or Initializer,D_TYPE,,,,,,
mxnet.gluon.contrib.rnn.Conv1DLSTMCell,i2h_weight_initializer,DD: str or Initializer,D_TYPE or Initializer,D_TYPE,,,,,,
mxnet.gluon.contrib.nn.SyncBatchNorm,running_variance_initializer,"DD: str or Initializer, default ‘ones’",D_TYPE or Initializer default ones,D_TYPE,,,,,,
mxnet.gluon.nn.LayerNorm,gamma_initializer,"DD: str or Initializer, default ‘ones’",D_TYPE or Initializer default ones,D_TYPE,,,,,,
mxnet.ndarray.pick,axis,"int or None. The axis to picking the elements. Negative values means indexing from right to left. If is None, the elements in the index w.r.t the flattened input will be picked.",D_TYPE or None,D_TYPE,,,,,,
mxnet.ndarray.pick,axis,"DD: int or None, optional, default='-1'",D_TYPE or None optional default CONSTANT_NUM,D_TYPE,,,,0,,
mxnet.ndarray.op.Pooling,count_include_pad,"DD: boolean or None, optional, default=None",D_TYPE or None optional default None,D_TYPE,,,,,,
mxnet.contrib.ndarray.quantized_pooling,count_include_pad,"DD: boolean or None, optional, default=None",D_TYPE or None optional default None,D_TYPE,,,,,,
mxnet.ndarray.op.BilinearSampler,cudnn_off,"DD: boolean or None, optional, default=None",D_TYPE or None optional default None,D_TYPE,,,,,,
mxnet.ndarray.RNN,lstm_state_clip_max,"DD: double or None, optional, default=None",D_TYPE or None optional default None,D_TYPE,,,,,,
mxnet.ndarray.op.repeat,axis,"DD: int or None, optional, default='None'",D_TYPE or None optional default QSTR,D_TYPE,,,,,,
mxnet.ndarray.rmspropalex_update,lr,"DD: float, required",D_TYPE required,D_TYPE,,,,,,
mxnet.ndarray.multi_lars,eps,"DD: float, required",D_TYPE required,D_TYPE,,,,,,
mxnet.ndarray.op.mp_lamb_update_phase1,wd,"DD: float, required",D_TYPE required,D_TYPE,,,,,,
mxnet.ndarray.contrib.bipartite_matching,threshold,"DD: float, required",D_TYPE required,D_TYPE,,,,,,
mxnet.ndarray.mp_sgd_mom_update,lr,"DD: float, required",D_TYPE required,D_TYPE,,,,,,
mxnet.ndarray.contrib.interleaved_matmul_selfatt_qk,heads,"DD: int, required",D_TYPE required,D_TYPE,,,,,,
mxnet.image.imresize,h,"DD: int, required",D_TYPE required,D_TYPE,,,,,,
mxnet.ndarray.space_to_depth,block_size,"DD: int, required",D_TYPE required,D_TYPE,,,,,,
mxnet.contrib.ndarray.PSROIPooling,output_dim,"DD: int, required",D_TYPE required,D_TYPE,,,,,,
mxnet.image.copyMakeBorder,top,"DD: int, required",D_TYPE required,D_TYPE,,,,,,
mxnet.ndarray.contrib.SparseEmbedding,output_dim,"DD: int, required",D_TYPE required,D_TYPE,,,,,,
mxnet.contrib.ndarray.PSROIPooling,pooled_size,"DD: int, required",D_TYPE required,D_TYPE,,,,,,
mxnet.io.LibSVMIter,data_libsvm,"DD: string, required",D_TYPE required,D_TYPE,,,,,,
mxnet.ndarray.squeeze,data,data to squeeze,data to squeeze,,,,,,,
mxnet.contrib.onnx.export_model,input_type,DD: data type,data type,dtype,,,,,,
mxnet.io.MNISTIter,label,Dataset Param: Mnist label path.,Dataset Param Mnist label path,,,,,,,
mxnet.gluon.rnn.LSTM,bidirectional,DF: False,DEFAULT CONSTANT_BOOL,bool,,,,0,,
mxnet.gluon.model_zoo.vision.alexnet,pretrained,DF: False,DEFAULT CONSTANT_BOOL,bool,,,,0,,
mxnet.util.np_shape,active,DF: True,DEFAULT CONSTANT_BOOL,bool,,,,0,,
mxnet.gluon.utils.download,verify_ssl,DF: True,DEFAULT CONSTANT_BOOL,bool,,,,0,,
mxnet.gluon.utils.split_and_load,even_split,DF: True,DEFAULT CONSTANT_BOOL,bool,,,,0,,
mxnet.test_utils.numeric_grad,eps,DF: 0.0001,DEFAULT CONSTANT_FLOAT,float,,,,0,,
mxnet.image.CreateDetAugmenter,min_eject_coverage,DF: 0.3,DEFAULT CONSTANT_FLOAT,float,,,,0,,
mxnet.gluon.nn.LayerNorm,axis,DF: -1,DEFAULT CONSTANT_NUM,int,,,,0,,
mxnet.gluon.contrib.rnn.Conv1DGRUCell,h2h_dilate,"DF: (1,)",DEFAULT CONSTANT_NUM,int,,,,1,,
mxnet.gluon.nn.InstanceNorm,in_channels,DF: 0,DEFAULT CONSTANT_NUM,int,,,,0,,
mxnet.gluon.nn.Conv3D,in_channels,DF: 0,DEFAULT CONSTANT_NUM,int,,,,0,,
mxnet.image.CreateAugmenter,rand_gray,DF: 0,DEFAULT CONSTANT_NUM,int,,,,0,,
mxnet.gluon.utils.split_data,batch_axis,DF: 0,DEFAULT CONSTANT_NUM,int,,,,0,,
mxnet.ndarray.random.uniform,low,DF: 0,DEFAULT CONSTANT_NUM,int,,,,0,,
mxnet.gluon.rnn.RNN,input_size,DF: 0,DEFAULT CONSTANT_NUM,int,,,,0,,
mxnet.gluon.nn.Conv2DTranspose,groups,DF: 1,DEFAULT CONSTANT_NUM,int,,,,0,,
mxnet.gluon.nn.BatchNorm,axis,DF: 1,DEFAULT CONSTANT_NUM,int,,,,0,,
mxnet.gluon.nn.GroupNorm,num_groups,DF: 1,DEFAULT CONSTANT_NUM,int,,,,0,,
mxnet.image.CreateAugmenter,inter_method,DF: 2,DEFAULT CONSTANT_NUM,int,,,,0,,
mxnet.image.center_crop,interp,DF: 2,DEFAULT CONSTANT_NUM,int,,,,0,,
mxnet.ndarray.linspace,ctx,Device context. Default context is the current default context.,Default context is the current default context,,,,,,,
mxnet.ndarray.random.multinomial,dtype,DF: int32,DEFAULT D_TYPE,dtype,,,,0,,
mxnet.contrib.quantization.quantize_model,calib_mode,DF: entropy,DEFAULT DF_STR,string,,,,0,,
mxnet.gluon.nn.Conv2D,layout,DF: NCHW,DEFAULT DF_STR,string,,,,0,,
mxnet.gluon.nn.MaxPool2D,layout,DF: NCHW,DEFAULT DF_STR,string,,,,0,,
mxnet.gluon.nn.GlobalMaxPool1D,layout,DF: NCW,DEFAULT DF_STR,string,,,,0,,
mxnet.gluon.nn.MaxPool1D,layout,DF: NCW,DEFAULT DF_STR,string,,,,0,,
mxnet.gluon.contrib.nn.SyncBatchNorm,running_variance_initializer,DF: ones,DEFAULT DF_STR,string,,,,0,,
mxnet.gluon.nn.LayerNorm,gamma_initializer,DF: ones,DEFAULT DF_STR,string,,,,0,,
mxnet.profiler.dumps,sort_by,DF: total,DEFAULT DF_STR,string,,,,0,,
mxnet.test_utils.check_speed,typ,DF: whole,DEFAULT DF_STR,string,,,,0,,
mxnet.test_utils.check_symbolic_backward,grad_req,DF: write,DEFAULT DF_STR,string,,,,0,,
mxnet.recordio.pack_img,img_fmt,DF: .jpg,DEFAULT jpg,,,,,,,
mxnet.contrib.ndarray.MultiBoxPrior,out,DF: None,DEFAULT None,,,,,,,
mxnet.ndarray.op.reshape_like,out,DF: None,DEFAULT None,,,,,,,
mxnet.ndarray.op.trunc,out,DF: None,DEFAULT None,,,,,,,
mxnet.ndarray.op.lamb_update_phase2,r1,DF: None,DEFAULT None,,,,,,,
mxnet.gluon.nn.MaxPool2D,strides,DF: None,DEFAULT None,,,,,,,
mxnet.ndarray.sparse.Embedding,data,DF: None,DEFAULT None,,,,,,,
mxnet.contrib.ndarray.quantized_fully_connected,out,DF: None,DEFAULT None,,,,,,,
mxnet.ndarray.broadcast_hypot,rhs,DF: None,DEFAULT None,,,,,,,
mxnet.ndarray.contrib.ROIAlign,data,DF: None,DEFAULT None,,,,,,,
mxnet.ndarray.sparse.FullyConnected,bias,DF: None,DEFAULT None,,,,,,,
mxnet.ndarray.preloaded_multi_sgd_update,rescale_grad,DF: None,DEFAULT None,,,,,,,
mxnet.ndarray.op.BilinearSampler,grid,DF: None,DEFAULT None,,,,,,,
mxnet.io.ImageRecordIter,max_random_area,DF: None,DEFAULT None,,,,,,,
mxnet.ndarray.broadcast_axis,data,DF: None,DEFAULT None,,,,,,,
mxnet.ndarray.sparse.broadcast_minus,rhs,DF: None,DEFAULT None,,,,,,,
mxnet.gluon.rnn.LSTMCell,i2h_weight_initializer,DF: None,DEFAULT None,,,,,,,
mxnet.io.ImageRecordIter,mean_r,DF: None,DEFAULT None,,,,,,,
mxnet.ndarray.max,data,DF: None,DEFAULT None,,,,,,,
mxnet.ndarray.sparse.rint,out,DF: None,DEFAULT None,,,,,,,
mxnet.ndarray.contrib.box_encode,matches,DF: None,DEFAULT None,,,,,,,
mxnet.ndarray.contrib.index_array,out,DF: None,DEFAULT None,,,,,,,
mxnet.ndarray.SequenceLast,data,DF: None,DEFAULT None,,,,,,,
mxnet.ndarray.op.multi_sgd_update,num_weights,DF: None,DEFAULT None,,,,,,,
mxnet.ndarray.op.adam_update,weight,DF: None,DEFAULT None,,,,,,,
mxnet.ndarray.contrib.AdaptiveAvgPooling2D,out,DF: None,DEFAULT None,,,,,,,
mxnet.ndarray.sparse.elemwise_sub,out,DF: None,DEFAULT None,,,,,,,
mxnet.ndarray.sigmoid,out,DF: None,DEFAULT None,,,,,,,
mxnet.contrib.ndarray.interleaved_matmul_selfatt_valatt,out,DF: None,DEFAULT None,,,,,,,
mxnet.gluon.contrib.rnn.LSTMPCell,i2h_weight_initializer,DF: None,DEFAULT None,,,,,,,
mxnet.contrib.ndarray.MultiProposal,cls_prob,DF: None,DEFAULT None,,,,,,,
mxnet.log.get_logger,name,DF: None,DEFAULT None,,,,,,,
mxnet.gluon.model_zoo.vision.vgg19,ctx,DF: None,DEFAULT None,,,,,,,
mxnet.ndarray.image.random_flip_left_right,out,DF: None,DEFAULT None,,,,,,,
mxnet.ndarray.broadcast_equal,rhs,DF: None,DEFAULT None,,,,,,,
mxnet.ndarray.op.sgd_update,weight,DF: None,DEFAULT None,,,,,,,
mxnet.ndarray.broadcast_not_equal,rhs,DF: None,DEFAULT None,,,,,,,
mxnet.ndarray.op.min_axis,out,DF: None,DEFAULT None,,,,,,,
mxnet.ndarray.linspace,ctx,DF: None,DEFAULT None,,,,,,,
mxnet.ndarray.op.sum,data,DF: None,DEFAULT None,,,,,,,
mxnet.ndarray.op.shape_array,out,DF: None,DEFAULT None,,,,,,,
mxnet.contrib.quantization.quantize_model,calib_data,DF: None,DEFAULT None,,,,,,,
mxnet.ndarray.cos,out,DF: None,DEFAULT None,,,,,,,
mxnet.ndarray.sparse.cbrt,data,DF: None,DEFAULT None,,,,,,,
mxnet.ndarray.image.flip_top_bottom,data,DF: None,DEFAULT None,,,,,,,
mxnet.ndarray.op.pick,data,DF: None,DEFAULT None,,,,,,,
mxnet.contrib.ndarray.box_non_maximum_suppression,out,DF: None,DEFAULT None,,,,,,,
mxnet.ndarray.op.GroupNorm,out,DF: None,DEFAULT None,,,,,,,
mxnet.ndarray.op.SequenceLast,data,DF: None,DEFAULT None,,,,,,,
mxnet.ndarray.sgd_update,grad,DF: None,DEFAULT None,,,,,,,
mxnet.ndarray.op.degrees,data,DF: None,DEFAULT None,,,,,,,
mxnet.io.LibSVMIter,label_libsvm,DF: None,DEFAULT None,,,,,,,
mxnet.ndarray.SoftmaxOutput,out,DF: None,DEFAULT None,,,,,,,
mxnet.ndarray.op.Deconvolution,weight,DF: None,DEFAULT None,,,,,,,
mxnet.ndarray.op.smooth_l1,out,DF: None,DEFAULT None,,,,,,,
mxnet.ndarray.sparse.expm1,out,DF: None,DEFAULT None,,,,,,,
mxnet.contrib.ndarray.quantized_batch_norm,min_data,DF: None,DEFAULT None,,,,,,,
mxnet.io.ImageDetRecordIter,mean_img,DF: None,DEFAULT None,,,,,,,
mxnet.ndarray.squeeze,data,DF: None,DEFAULT None,,,,,,,
mxnet.ndarray.random_uniform,out,DF: None,DEFAULT None,,,,,,,
mxnet.contrib.ndarray.allclose,a,DF: None,DEFAULT None,,,,,,,
mxnet.ndarray.op.linalg_trsm,A,DF: None,DEFAULT None,,,,,,,
mxnet.contrib.ndarray.backward_index_copy,out,DF: None,DEFAULT None,,,,,,,
mxnet.gluon.rnn.LSTMCell,params,DF: None,DEFAULT None,,,,,,,
mxnet.gluon.model_zoo.vision.vgg19_bn,pretrained,DF: None,DEFAULT None,,,,,,,
mxnet.contrib.ndarray.quantized_conv,min_data,DF: None,DEFAULT None,,,,,,,
mxnet.ndarray.op.FullyConnected,out,DF: None,DEFAULT None,,,,,,,
mxnet.ndarray.mp_nag_mom_update,weight,DF: None,DEFAULT None,,,,,,,
mxnet.ndarray.op.signsgd_update,weight,DF: None,DEFAULT None,,,,,,,
mxnet.gluon.nn.Conv3DTranspose,activation,DF: None,DEFAULT None,,,,,,,
mxnet.io.MNISTIter,label,DF: None,DEFAULT None,,,,,,,
mxnet.ndarray.op.LRN,data,DF: None,DEFAULT None,,,,,,,
mxnet.ndarray.op.mp_lamb_update_phase2,weight32,DF: None,DEFAULT None,,,,,,,
mxnet.ndarray.op.random_randint,out,DF: None,DEFAULT None,,,,,,,
mxnet.ndarray.broadcast_plus,rhs,DF: None,DEFAULT None,,,,,,,
mxnet.ndarray.op.batch_dot,lhs,DF: None,DEFAULT None,,,,,,,
mxnet.ndarray.broadcast_greater,rhs,DF: None,DEFAULT None,,,,,,,
mxnet.ndarray.argsort,data,DF: None,DEFAULT None,,,,,,,
mxnet.ndarray.BlockGrad,data,DF: None,DEFAULT None,,,,,,,
mxnet.io.ImageDetRecordIter,std_b,DF: None,DEFAULT None,,,,,,,
mxnet.io.ImageRecordIter,max_aspect_ratio,DF: None,DEFAULT None,,,,,,,
mxnet.ndarray.random.shuffle,out,DF: None,DEFAULT None,,,,,,,
mxnet.ndarray.make_loss,data,DF: None,DEFAULT None,,,,,,,
mxnet.contrib.ndarray.edge_id,v,DF: None,DEFAULT None,,,,,,,
mxnet.contrib.quantization.quantize_model,excluded_sym_names,DF: None,DEFAULT None,,,,,,,
mxnet.io.ImageRecordIter,mean_b,DF: None,DEFAULT None,,,,,,,
mxnet.ndarray.ones,ctx,DF: None,DEFAULT None,,,,,,,
mxnet.ndarray.op.transpose,out,DF: None,DEFAULT None,,,,,,,
mxnet.test_utils.assert_almost_equal,rtol,DF: None,DEFAULT None,,,,,,,
mxnet.ndarray.sparse.negative,data,DF: None,DEFAULT None,,,,,,,
mxnet.ndarray.ceil,data,DF: None,DEFAULT None,,,,,,,
mxnet.ndarray.contrib.quantized_concat,out,DF: None,DEFAULT None,,,,,,,
mxnet.ndarray.op.depth_to_space,data,DF: None,DEFAULT None,,,,,,,
mxnet.ndarray.op.sign,out,DF: None,DEFAULT None,,,,,,,
mxnet.contrib.ndarray.quantized_fully_connected,max_data,DF: None,DEFAULT None,,,,,,,
mxnet.gluon.model_zoo.vision.mobilenet0_25,pretrained,DF: None,DEFAULT None,,,,,,,
mxnet.ndarray.random_normal,out,DF: None,DEFAULT None,,,,,,,
mxnet.ndarray.op.multi_mp_sgd_mom_update,rescale_grad,DF: None,DEFAULT None,,,,,,,
mxnet.ndarray.op.InstanceNorm,beta,DF: None,DEFAULT None,,,,,,,
mxnet.ndarray.contrib.edge_id,u,DF: None,DEFAULT None,,,,,,,
mxnet.gluon.model_zoo.vision.squeezenet1_1,root,DF: None,DEFAULT None,,,,,,,
mxnet.ndarray.op.preloaded_multi_mp_sgd_mom_update,out,DF: None,DEFAULT None,,,,,,,
mxnet.ndarray.multi_sgd_update,out,DF: None,DEFAULT None,,,,,,,
mxnet.gluon.model_zoo.vision.squeezenet1_0,pretrained,DF: None,DEFAULT None,,,,,,,
mxnet.contrib.ndarray.round_ste,out,DF: None,DEFAULT None,,,,,,,
mxnet.ndarray.sample_multinomial,out,DF: None,DEFAULT None,,,,,,,
mxnet.ndarray.op.RNN,state_cell,DF: None,DEFAULT None,,,,,,,
mxnet.ndarray.random_gamma,out,DF: None,DEFAULT None,,,,,,,
mxnet.ndarray.broadcast_minimum,rhs,DF: None,DEFAULT None,,,,,,,
mxnet.ndarray.op.flatten,out,DF: None,DEFAULT None,,,,,,,
mxnet.ndarray.erfinv,data,DF: None,DEFAULT None,,,,,,,
mxnet.gluon.contrib.rnn.Conv2DGRUCell,params,DF: None,DEFAULT None,,,,,,,
mxnet.ndarray.op.arcsinh,out,DF: None,DEFAULT None,,,,,,,
mxnet.ndarray.elemwise_add,lhs,DF: None,DEFAULT None,,,,,,,
mxnet.ndarray.topk,out,DF: None,DEFAULT None,,,,,,,
mxnet.ndarray.op.sgd_update,grad,DF: None,DEFAULT None,,,,,,,
mxnet.ndarray.linalg_makediag,A,DF: None,DEFAULT None,,,,,,,
mxnet.ndarray.op.dot,lhs,DF: None,DEFAULT None,,,,,,,
mxnet.ndarray.contrib.ctc_loss,data_lengths,DF: None,DEFAULT None,,,,,,,
mxnet.gluon.rnn.RNNCell,params,DF: None,DEFAULT None,,,,,,,
mxnet.ndarray.log1p,data,DF: None,DEFAULT None,,,,,,,
mxnet.ndarray.op.broadcast_div,out,DF: None,DEFAULT None,,,,,,,
mxnet.gluon.contrib.rnn.Conv2DLSTMCell,h2h_weight_initializer,DF: None,DEFAULT None,,,,,,,
mxnet.ndarray.preloaded_multi_mp_sgd_update,num_weights,DF: None,DEFAULT None,,,,,,,
mxnet.gluon.nn.Conv2D,weight_initializer,DF: None,DEFAULT None,,,,,,,
mxnet.ndarray.sum_axis,data,DF: None,DEFAULT None,,,,,,,
mxnet.io.ImageDetRecordIter,min_crop_overlaps,DF: None,DEFAULT None,,,,,,,
mxnet.ndarray.multi_mp_sgd_update,num_weights,DF: None,DEFAULT None,,,,,,,
mxnet.test_utils.download,dirname,DF: None,DEFAULT None,,,,,,,
mxnet.ndarray.sparse.adam_update,out,DF: None,DEFAULT None,,,,,,,
mxnet.io.ImageDetRecordIter,min_crop_object_coverages,DF: None,DEFAULT None,,,,,,,
mxnet.ndarray.sparse.broadcast_minus,out,DF: None,DEFAULT None,,,,,,,
mxnet.ndarray.op.multi_lars,lrs,DF: None,DEFAULT None,,,,,,,
mxnet.ndarray.SwapAxis,data,DF: None,DEFAULT None,,,,,,,
mxnet.ndarray.op.multi_mp_sgd_update,clip_gradient,DF: None,DEFAULT None,,,,,,,
mxnet.ndarray.ctc_loss,data,DF: None,DEFAULT None,,,,,,,
mxnet.ndarray.broadcast_equal,lhs,DF: None,DEFAULT None,,,,,,,
mxnet.ndarray.sinh,data,DF: None,DEFAULT None,,,,,,,
mxnet.ndarray.sparse.sgd_mom_update,mom,DF: None,DEFAULT None,,,,,,,
mxnet.ndarray.empty,ctx,DF: None,DEFAULT None,,,,,,,
mxnet.ndarray.contrib.quantized_flatten,data,DF: None,DEFAULT None,,,,,,,
mxnet.ndarray.contrib.DeformablePSROIPooling,trans,DF: None,DEFAULT None,,,,,,,
mxnet.gluon.rnn.GRUCell,params,DF: None,DEFAULT None,,,,,,,
mxnet.ndarray.linalg.gemm2,A,DF: None,DEFAULT None,,,,,,,
mxnet.ndarray.sparse.log1p,out,DF: None,DEFAULT None,,,,,,,
mxnet.ndarray.LRN,out,DF: None,DEFAULT None,,,,,,,
mxnet.io.ImageDetRecordIter,std_r,DF: None,DEFAULT None,,,,,,,
mxnet.ndarray.split,data,DF: None,DEFAULT None,,,,,,,
mxnet.ndarray.linalg.slogdet,out,DF: None,DEFAULT None,,,,,,,
mxnet.ndarray.op.broadcast_lesser,out,DF: None,DEFAULT None,,,,,,,
mxnet.ndarray.op.broadcast_power,rhs,DF: None,DEFAULT None,,,,,,,
mxnet.ndarray.contrib.div_sqrt_dim,data,DF: None,DEFAULT None,,,,,,,
mxnet.ndarray.contrib.quantize_v2,data,DF: None,DEFAULT None,,,,,,,
mxnet.ndarray.multi_sgd_mom_update,clip_gradient,DF: None,DEFAULT None,,,,,,,
mxnet.io.ImageRecordIter,shuffle_chunk_seed,DF: None,DEFAULT None,,,,,,,
mxnet.gluon.model_zoo.vision.resnet34_v1,root,DF: None,DEFAULT None,,,,,,,
mxnet.ndarray.lamb_update_phase1,out,DF: None,DEFAULT None,,,,,,,
mxnet.ndarray.contrib.sign_ste,data,DF: None,DEFAULT None,,,,,,,
mxnet.ndarray.contrib.BilinearResize2D,data,DF: None,DEFAULT None,,,,,,,
mxnet.gluon.contrib.rnn.Conv1DLSTMCell,i2h_weight_initializer,DF: None,DEFAULT None,,,,,,,
mxnet.ndarray.contrib.quantized_fully_connected,min_bias,DF: None,DEFAULT None,,,,,,,
mxnet.ndarray.slice,data,DF: None,DEFAULT None,,,,,,,
mxnet.ndarray.nag_mom_update,out,DF: None,DEFAULT None,,,,,,,
mxnet.ndarray.contrib.box_non_maximum_suppression,data,DF: None,DEFAULT None,,,,,,,
mxnet.ndarray.op.identity,out,DF: None,DEFAULT None,,,,,,,
mxnet.io.LibSVMIter,num_parts,DF: None,DEFAULT None,,,,,,,
mxnet.contrib.ndarray.hawkesll,max_time,DF: None,DEFAULT None,,,,,,,
mxnet.ndarray.op.where,condition,DF: None,DEFAULT None,,,,,,,
mxnet.ndarray.op.broadcast_greater_equal,out,DF: None,DEFAULT None,,,,,,,
mxnet.ndarray.linalg_trsm,out,DF: None,DEFAULT None,,,,,,,
mxnet.ndarray.contrib.quantized_fully_connected,out,DF: None,DEFAULT None,,,,,,,
mxnet.contrib.ndarray.MultiBoxDetection,out,DF: None,DEFAULT None,,,,,,,
mxnet.ndarray.linalg_trsm,B,DF: None,DEFAULT None,,,,,,,
mxnet.ndarray.arctanh,out,DF: None,DEFAULT None,,,,,,,
mxnet.ndarray.multi_mp_sgd_mom_update,out,DF: None,DEFAULT None,,,,,,,
mxnet.io.ImageDetRecordIter,resize_mode,DF: None,DEFAULT None,,,,,,,
mxnet.ndarray.ones_like,out,DF: None,DEFAULT None,,,,,,,
mxnet.ndarray.Dropout,out,DF: None,DEFAULT None,,,,,,,
mxnet.contrib.autograd.grad,argnum,DF: None,DEFAULT None,,,,,,,
mxnet.ndarray.op.linalg_gemm2,A,DF: None,DEFAULT None,,,,,,,
mxnet.ndarray.op.diag,out,DF: None,DEFAULT None,,,,,,,
mxnet.ndarray.random.generalized_negative_binomial,ctx,DF: None,DEFAULT None,,,,,,,
mxnet.ndarray.sparse.cosh,data,DF: None,DEFAULT None,,,,,,,
mxnet.ndarray.space_to_depth,out,DF: None,DEFAULT None,,,,,,,
mxnet.ndarray.pick,index,DF: None,DEFAULT None,,,,,,,
mxnet.ndarray.rmsprop_update,weight,DF: None,DEFAULT None,,,,,,,
mxnet.gluon.model_zoo.vision.vgg16_bn,ctx,DF: None,DEFAULT None,,,,,,,
mxnet.ndarray.contrib.quantized_conv,max_weight,DF: None,DEFAULT None,,,,,,,
mxnet.ndarray.LayerNorm,beta,DF: None,DEFAULT None,,,,,,,
mxnet.ndarray.op.CTCLoss,label_lengths,DF: None,DEFAULT None,,,,,,,
mxnet.ndarray.BatchNorm,moving_mean,DF: None,DEFAULT None,,,,,,,
mxnet.ndarray.mp_nag_mom_update,weight32,DF: None,DEFAULT None,,,,,,,
mxnet.ndarray.random_pdf_dirichlet,sample,DF: None,DEFAULT None,,,,,,,
mxnet.ndarray.contrib.quantized_conv,out,DF: None,DEFAULT None,,,,,,,
mxnet.ndarray.contrib.group_adagrad_update,grad,DF: None,DEFAULT None,,,,,,,
mxnet.ndarray.signum_update,grad,DF: None,DEFAULT None,,,,,,,
mxnet.gluon.model_zoo.vision.densenet161,ctx,DF: None,DEFAULT None,,,,,,,
mxnet.image.imresize,interp,DF: None,DEFAULT None,,,,,,,
mxnet.ndarray.contrib.backward_gradientmultiplier,data,DF: None,DEFAULT None,,,,,,,
mxnet.ndarray.op.swapaxes,data,DF: None,DEFAULT None,,,,,,,
mxnet.ndarray.FullyConnected,bias,DF: None,DEFAULT None,,,,,,,
mxnet.contrib.ndarray.hawkesll,state,DF: None,DEFAULT None,,,,,,,
mxnet.profiler.set_config,continuous_dump,DF: None,DEFAULT None,,,,,,,
mxnet.gluon.nn.Dense,activation,DF: None,DEFAULT None,,,,,,,
mxnet.ndarray.image.random_lighting,data,DF: None,DEFAULT None,,,,,,,
mxnet.ndarray.MakeLoss,out,DF: None,DEFAULT None,,,,,,,
mxnet.ndarray.sparse.log,data,DF: None,DEFAULT None,,,,,,,
mxnet.ndarray.op.linalg_gelqf,out,DF: None,DEFAULT None,,,,,,,
mxnet.ndarray.op.transpose,data,DF: None,DEFAULT None,,,,,,,
mxnet.ndarray.expm1,data,DF: None,DEFAULT None,,,,,,,
mxnet.io.ImageDetRecordIter,scale,DF: None,DEFAULT None,,,,,,,
mxnet.ndarray.linalg_trsm,A,DF: None,DEFAULT None,,,,,,,
mxnet.contrib.ndarray.quantized_act,data,DF: None,DEFAULT None,,,,,,,
mxnet.ndarray.op.elemwise_add,lhs,DF: None,DEFAULT None,,,,,,,
mxnet.ndarray.op.all_finite,data,DF: None,DEFAULT None,,,,,,,
mxnet.ndarray.random.normal,out,DF: None,DEFAULT None,,,,,,,
mxnet.ndarray.random.randint,ctx,DF: None,DEFAULT None,,,,,,,
mxnet.ndarray.op.log,data,DF: None,DEFAULT None,,,,,,,
mxnet.ndarray.sparse.log2,data,DF: None,DEFAULT None,,,,,,,
mxnet.contrib.ndarray.SparseEmbedding,out,DF: None,DEFAULT None,,,,,,,
mxnet.ndarray.contrib.DeformablePSROIPooling,rois,DF: None,DEFAULT None,,,,,,,
mxnet.contrib.ndarray.getnnz,out,DF: None,DEFAULT None,,,,,,,
mxnet.ndarray.Activation,out,DF: None,DEFAULT None,,,,,,,
mxnet.gluon.model_zoo.vision.mobilenet_v2_1_0,ctx,DF: None,DEFAULT None,,,,,,,
mxnet.ndarray.op.ftml_update,weight,DF: None,DEFAULT None,,,,,,,
mxnet.ndarray.contrib.backward_hawkesll,out,DF: None,DEFAULT None,,,,,,,
mxnet.io.ImageRecordIter,mean_g,DF: None,DEFAULT None,,,,,,,
mxnet.ndarray.shuffle,data,DF: None,DEFAULT None,,,,,,,
mxnet.gluon.contrib.rnn.Conv3DGRUCell,params,DF: None,DEFAULT None,,,,,,,
mxnet.contrib.ndarray.DeformableConvolution,weight,DF: None,DEFAULT None,,,,,,,
mxnet.ndarray.preloaded_multi_mp_sgd_update,out,DF: None,DEFAULT None,,,,,,,
mxnet.io.CSVIter,dtype,DF: None,DEFAULT None,,,,,,,
mxnet.test_utils.numeric_grad,aux_states,DF: None,DEFAULT None,,,,,,,
mxnet.ndarray.ElementWiseSum,out,DF: None,DEFAULT None,,,,,,,
mxnet.ndarray.multi_sgd_mom_update,momentum,DF: None,DEFAULT None,,,,,,,
mxnet.ndarray.contrib.CTCLoss,label_lengths,DF: None,DEFAULT None,,,,,,,
mxnet.ndarray.contrib.CTCLoss,data_lengths,DF: None,DEFAULT None,,,,,,,
mxnet.ndarray.op.pad,out,DF: None,DEFAULT None,,,,,,,
mxnet.ndarray.mp_sgd_update,weight32,DF: None,DEFAULT None,,,,,,,
mxnet.ndarray.LayerNorm,out,DF: None,DEFAULT None,,,,,,,
mxnet.ndarray.op.arccosh,out,DF: None,DEFAULT None,,,,,,,
mxnet.ndarray.ones,out,DF: None,DEFAULT None,,,,,,,
mxnet.ndarray.take,out,DF: None,DEFAULT None,,,,,,,
mxnet.gluon.model_zoo.vision.resnet152_v2,root,DF: None,DEFAULT None,,,,,,,
mxnet.ndarray.lamb_update_phase2,g,DF: None,DEFAULT None,,,,,,,
mxnet.ndarray.sqrt,data,DF: None,DEFAULT None,,,,,,,
mxnet.ndarray.sparse.log,out,DF: None,DEFAULT None,,,,,,,
mxnet.ndarray.op.linalg_trmm,A,DF: None,DEFAULT None,,,,,,,
mxnet.ndarray.sparse.elemwise_sub,rhs,DF: None,DEFAULT None,,,,,,,
mxnet.ndarray.broadcast_logical_and,out,DF: None,DEFAULT None,,,,,,,
mxnet.ndarray.op.ceil,out,DF: None,DEFAULT None,,,,,,,
mxnet.ndarray.radians,data,DF: None,DEFAULT None,,,,,,,
mxnet.ndarray.op.sample_multinomial,data,DF: None,DEFAULT None,,,,,,,
mxnet.contrib.ndarray.AdaptiveAvgPooling2D,out,DF: None,DEFAULT None,,,,,,,
mxnet.gluon.contrib.rnn.Conv1DGRUCell,prefix,DF: None,DEFAULT None,,,,,,,
mxnet.gluon.model_zoo.vision.densenet121,ctx,DF: None,DEFAULT None,,,,,,,
mxnet.io.ImageDetRecordIter,aug_seq,DF: None,DEFAULT None,,,,,,,
mxnet.ndarray.scatter_nd,data,DF: None,DEFAULT None,,,,,,,
mxnet.ndarray.sparse.cosh,out,DF: None,DEFAULT None,,,,,,,
mxnet.gluon.rnn.RNNCell,i2h_weight_initializer,DF: None,DEFAULT None,,,,,,,
mxnet.ndarray.op.multi_mp_sgd_mom_update,momentum,DF: None,DEFAULT None,,,,,,,
mxnet.ndarray.ctc_loss,label,DF: None,DEFAULT None,,,,,,,
mxnet.ndarray.sample_exponential,out,DF: None,DEFAULT None,,,,,,,
mxnet.ndarray.GroupNorm,num_groups,DF: _Null,DEFAULT Null,,,,,,,
mxnet.ndarray.linalg_trmm,transpose,DF: _Null,DEFAULT Null,,,,,,,
mxnet.ndarray.random_normal,shape,DF: _Null,DEFAULT Null,,,,,,,
mxnet.contrib.ndarray.SyncBatchNorm,ndev,DF: _Null,DEFAULT Null,,,,,,,
mxnet.ndarray.rmspropalex_update,lr,DF: _Null,DEFAULT Null,,,,,,,
mxnet.ndarray.pick,axis,DF: _Null,DEFAULT Null,,,,,,,
mxnet.ndarray.op.nansum,axis,DF: _Null,DEFAULT Null,,,,,,,
mxnet.ndarray.op.lamb_update_phase1,epsilon,DF: _Null,DEFAULT Null,,,,,,,
mxnet.ndarray.contrib.interleaved_matmul_selfatt_qk,heads,DF: _Null,DEFAULT Null,,,,,,,
mxnet.ndarray.contrib.quantized_conv,dilate,DF: _Null,DEFAULT Null,,,,,,,
mxnet.ndarray.op.Softmax,use_ignore,DF: _Null,DEFAULT Null,,,,,,,
mxnet.ndarray.FullyConnected,no_bias,DF: _Null,DEFAULT Null,,,,,,,
mxnet.ndarray.image.random_lighting,alpha_std,DF: _Null,DEFAULT Null,,,,,,,
mxnet.ndarray.ravel_multi_index,shape,DF: _Null,DEFAULT Null,,,,,,,
mxnet.ndarray.op.Correlation,max_displacement,DF: _Null,DEFAULT Null,,,,,,,
mxnet.ndarray.op.sample_poisson,shape,DF: _Null,DEFAULT Null,,,,,,,
mxnet.ndarray.op.Pooling,count_include_pad,DF: _Null,DEFAULT Null,,,,,,,
mxnet.contrib.ndarray.arange_like,repeat,DF: _Null,DEFAULT Null,,,,,,,
mxnet.ndarray.op.repeat,axis,DF: _Null,DEFAULT Null,,,,,,,
mxnet.ndarray.contrib.MultiBoxTarget,negative_mining_ratio,DF: _Null,DEFAULT Null,,,,,,,
mxnet.ndarray.random.generalized_negative_binomial_like,mu,DF: _Null,DEFAULT Null,,,,,,,
mxnet.ndarray.op.norm,out_dtype,DF: _Null,DEFAULT Null,,,,,,,
mxnet.ndarray.multi_lars,eps,DF: _Null,DEFAULT Null,,,,,,,
mxnet.ndarray.op.linalg_trsm,transpose,DF: _Null,DEFAULT Null,,,,,,,
mxnet.ndarray.Convolution,cudnn_off,DF: _Null,DEFAULT Null,,,,,,,
mxnet.ndarray.Softmax,multi_output,DF: _Null,DEFAULT Null,,,,,,,
mxnet.ndarray.op.broadcast_axes,axis,DF: _Null,DEFAULT Null,,,,,,,
mxnet.ndarray.reverse,axis,DF: _Null,DEFAULT Null,,,,,,,
mxnet.ndarray.mp_nag_mom_update,rescale_grad,DF: _Null,DEFAULT Null,,,,,,,
mxnet.contrib.ndarray.BilinearResize2D,mode,DF: _Null,DEFAULT Null,,,,,,,
mxnet.ndarray.linalg.gemm2,transpose_a,DF: _Null,DEFAULT Null,,,,,,,
mxnet.ndarray.Embedding,sparse_grad,DF: _Null,DEFAULT Null,,,,,,,
mxnet.ndarray.Pooling,global_pool,DF: _Null,DEFAULT Null,,,,,,,
mxnet.contrib.ndarray.box_nms,background_id,DF: _Null,DEFAULT Null,,,,,,,
mxnet.ndarray.contrib.SyncBatchNorm,output_mean_var,DF: _Null,DEFAULT Null,,,,,,,
mxnet.ndarray.sparse.mean,keepdims,DF: _Null,DEFAULT Null,,,,,,,
mxnet.ndarray.op.Softmax,out_grad,DF: _Null,DEFAULT Null,,,,,,,
mxnet.ndarray.contrib.quantized_conv,cudnn_off,DF: _Null,DEFAULT Null,,,,,,,
mxnet.ndarray.linalg_extracttrian,offset,DF: _Null,DEFAULT Null,,,,,,,
mxnet.ndarray.contrib.Proposal,output_score,DF: _Null,DEFAULT Null,,,,,,,
mxnet.ndarray.op.moments,keepdims,DF: _Null,DEFAULT Null,,,,,,,
mxnet.ndarray.take,axis,DF: _Null,DEFAULT Null,,,,,,,
mxnet.ndarray.op.scatter_nd,shape,DF: _Null,DEFAULT Null,,,,,,,
mxnet.ndarray.random.exponential_like,lam,DF: _Null,DEFAULT Null,,,,,,,
mxnet.ndarray.contrib.box_nms,in_format,DF: _Null,DEFAULT Null,,,,,,,
mxnet.ndarray.RNN,lstm_state_clip_max,DF: _Null,DEFAULT Null,,,,,,,
mxnet.ndarray.contrib.MultiProposal,rpn_min_size,DF: _Null,DEFAULT Null,,,,,,,
mxnet.contrib.ndarray.CTCLoss,blank_label,DF: _Null,DEFAULT Null,,,,,,,
mxnet.ndarray.op.smooth_l1,scalar,DF: _Null,DEFAULT Null,,,,,,,
mxnet.contrib.ndarray.quantized_conv,num_group,DF: _Null,DEFAULT Null,,,,,,,
mxnet.ndarray.op.FullyConnected,no_bias,DF: _Null,DEFAULT Null,,,,,,,
mxnet.ndarray.MAERegressionOutput,grad_scale,DF: _Null,DEFAULT Null,,,,,,,
mxnet.contrib.ndarray.quantized_pooling,count_include_pad,DF: _Null,DEFAULT Null,,,,,,,
mxnet.ndarray.space_to_depth,block_size,DF: _Null,DEFAULT Null,,,,,,,
mxnet.ndarray.op.ftml_update,beta2,DF: _Null,DEFAULT Null,,,,,,,
mxnet.ndarray.argmax,keepdims,DF: _Null,DEFAULT Null,,,,,,,
mxnet.contrib.ndarray.PSROIPooling,output_dim,DF: _Null,DEFAULT Null,,,,,,,
mxnet.ndarray.op.softmax,dtype,DF: _Null,DEFAULT Null,,,,,,,
mxnet.contrib.ndarray.quantized_conv,cudnn_tune,DF: _Null,DEFAULT Null,,,,,,,
mxnet.ndarray.op.multi_lars,rescale_grad,DF: _Null,DEFAULT Null,,,,,,,
mxnet.ndarray.op.sgd_mom_update,momentum,DF: _Null,DEFAULT Null,,,,,,,
mxnet.ndarray.min,axis,DF: _Null,DEFAULT Null,,,,,,,
mxnet.ndarray.op.mp_lamb_update_phase1,wd,DF: _Null,DEFAULT Null,,,,,,,
mxnet.image.copyMakeBorder,top,DF: _Null,DEFAULT Null,,,,,,,
mxnet.ndarray.Deconvolution,num_filter,DF: _Null,DEFAULT Null,,,,,,,
mxnet.ndarray.linalg.trmm,transpose,DF: _Null,DEFAULT Null,,,,,,,
mxnet.ndarray.op.random_uniform,dtype,DF: _Null,DEFAULT Null,,,,,,,
mxnet.ndarray.Correlation,stride2,DF: _Null,DEFAULT Null,,,,,,,
mxnet.ndarray.op.BilinearSampler,cudnn_off,DF: _Null,DEFAULT Null,,,,,,,
mxnet.ndarray.contrib.quadratic,b,DF: _Null,DEFAULT Null,,,,,,,
mxnet.ndarray.contrib.box_nms,force_suppress,DF: _Null,DEFAULT Null,,,,,,,
mxnet.ndarray.contrib.DeformablePSROIPooling,trans_std,DF: _Null,DEFAULT Null,,,,,,,
mxnet.ndarray.SequenceReverse,use_sequence_length,DF: _Null,DEFAULT Null,,,,,,,
mxnet.ndarray.ROIPooling,pooled_size,DF: _Null,DEFAULT Null,,,,,,,
mxnet.ndarray.linalg.trsm,alpha,DF: _Null,DEFAULT Null,,,,,,,
mxnet.ndarray.contrib.allclose,atol,DF: _Null,DEFAULT Null,,,,,,,
mxnet.ndarray.nag_mom_update,wd,DF: _Null,DEFAULT Null,,,,,,,
mxnet.ndarray.Pooling,pooling_convention,DF: _Null,DEFAULT Null,,,,,,,
mxnet.ndarray.sparse.sgd_mom_update,lazy_update,DF: _Null,DEFAULT Null,,,,,,,
mxnet.ndarray.contrib.SyncBatchNorm,fix_gamma,DF: _Null,DEFAULT Null,,,,,,,
mxnet.ndarray.sparse.dot,transpose_a,DF: _Null,DEFAULT Null,,,,,,,
mxnet.contrib.ndarray.DeformablePSROIPooling,sample_per_part,DF: _Null,DEFAULT Null,,,,,,,
mxnet.ndarray.swapaxes,dim1,DF: _Null,DEFAULT Null,,,,,,,
mxnet.ndarray.op.max_axis,axis,DF: _Null,DEFAULT Null,,,,,,,
mxnet.ndarray.contrib.SparseEmbedding,output_dim,DF: _Null,DEFAULT Null,,,,,,,
mxnet.ndarray.op.Convolution,dilate,DF: _Null,DEFAULT Null,,,,,,,
mxnet.ndarray.contrib.bipartite_matching,threshold,DF: _Null,DEFAULT Null,,,,,,,
mxnet.ndarray.op.Pooling,stride,DF: _Null,DEFAULT Null,,,,,,,
mxnet.ndarray.op.SoftmaxOutput,grad_scale,DF: _Null,DEFAULT Null,,,,,,,
mxnet.contrib.ndarray.group_adagrad_update,rescale_grad,DF: _Null,DEFAULT Null,,,,,,,
mxnet.ndarray.contrib.CTCLoss,use_label_lengths,DF: _Null,DEFAULT Null,,,,,,,
mxnet.contrib.ndarray.box_nms,overlap_thresh,DF: _Null,DEFAULT Null,,,,,,,
mxnet.ndarray.op.random_uniform,low,DF: _Null,DEFAULT Null,,,,,,,
mxnet.ndarray.op.log_softmax,dtype,DF: _Null,DEFAULT Null,,,,,,,
mxnet.ndarray.contrib.DeformableConvolution,num_deformable_group,DF: _Null,DEFAULT Null,,,,,,,
mxnet.ndarray.mean,keepdims,DF: _Null,DEFAULT Null,,,,,,,
mxnet.ndarray.linalg.trsm,transpose,DF: _Null,DEFAULT Null,,,,,,,
mxnet.ndarray.linalg_gemm2,alpha,DF: _Null,DEFAULT Null,,,,,,,
mxnet.ndarray.sparse.adam_update,lazy_update,DF: _Null,DEFAULT Null,,,,,,,
mxnet.ndarray.contrib.quantize,out_type,DF: _Null,DEFAULT Null,,,,,,,
mxnet.contrib.ndarray.PSROIPooling,pooled_size,DF: _Null,DEFAULT Null,,,,,,,
mxnet.ndarray.random_uniform,ctx,DF: _Null,DEFAULT Null,,,,,,,
mxnet.ndarray.linalg_extracttrian,lower,DF: _Null,DEFAULT Null,,,,,,,
mxnet.ndarray.contrib.quantized_conv,no_bias,DF: _Null,DEFAULT Null,,,,,,,
mxnet.ndarray.slice_like,axes,DF: _Null,DEFAULT Null,,,,,,,
mxnet.ndarray.op.LRN,knorm,DF: _Null,DEFAULT Null,,,,,,,
mxnet.ndarray.Deconvolution,no_bias,DF: _Null,DEFAULT Null,,,,,,,
mxnet.ndarray.argsort,is_ascend,DF: _Null,DEFAULT Null,,,,,,,
mxnet.ndarray.MakeLoss,normalization,DF: _Null,DEFAULT Null,,,,,,,
mxnet.ndarray.mp_sgd_mom_update,lr,DF: _Null,DEFAULT Null,,,,,,,
mxnet.ndarray.op.GridGenerator,target_shape,DF: _Null,DEFAULT Null,,,,,,,
mxnet.ndarray.random.negative_binomial_like,p,DF: _Null,DEFAULT Null,,,,,,,
mxnet.ndarray.op.signsgd_update,rescale_grad,DF: _Null,DEFAULT Null,,,,,,,
mxnet.ndarray.op.rmsprop_update,rescale_grad,DF: _Null,DEFAULT Null,,,,,,,
mxnet.ndarray.sgd_mom_update,lr,DF: _Null,DEFAULT Null,,,,,,,
mxnet.ndarray.contrib.bipartite_matching,topk,DF: _Null,DEFAULT Null,,,,,,,
mxnet.ndarray.split,num_outputs,DF: _Null,DEFAULT Null,,,,,,,
mxnet.ndarray.Dropout,mode,DF: _Null,DEFAULT Null,,,,,,,
mxnet.ndarray.op.ftrl_update,wd,DF: _Null,DEFAULT Null,,,,,,,
mxnet.ndarray.random.normal_like,loc,DF: _Null,DEFAULT Null,,,,,,,
mxnet.ndarray.op.nansum,exclude,DF: _Null,DEFAULT Null,,,,,,,
mxnet.ndarray.sample_multinomial,get_prob,DF: _Null,DEFAULT Null,,,,,,,
mxnet.ndarray.sparse.adam_update,rescale_grad,DF: _Null,DEFAULT Null,,,,,,,
mxnet.ndarray.multi_lars,rescale_grad,DF: _Null,DEFAULT Null,,,,,,,
mxnet.ndarray.op.Pooling,pooling_convention,DF: _Null,DEFAULT Null,,,,,,,
mxnet.ndarray.op.diag,axis2,DF: _Null,DEFAULT Null,,,,,,,
mxnet.ndarray.random_pdf_gamma,is_log,DF: _Null,DEFAULT Null,,,,,,,
mxnet.ndarray.signsgd_update,rescale_grad,DF: _Null,DEFAULT Null,,,,,,,
mxnet.ndarray.ftrl_update,beta,DF: _Null,DEFAULT Null,,,,,,,
mxnet.ndarray.transpose,axes,DF: _Null,DEFAULT Null,,,,,,,
mxnet.ndarray.ftml_update,rescale_grad,DF: _Null,DEFAULT Null,,,,,,,
mxnet.ndarray.min_axis,keepdims,DF: _Null,DEFAULT Null,,,,,,,
mxnet.ndarray.Deconvolution,cudnn_tune,DF: _Null,DEFAULT Null,,,,,,,
mxnet.ndarray.op.sum_axis,exclude,DF: _Null,DEFAULT Null,,,,,,,
mxnet.ndarray.op.LeakyReLU,slope,DF: _Null,DEFAULT Null,,,,,,,
mxnet.ndarray.SwapAxis,dim2,DF: _Null,DEFAULT Null,,,,,,,
mxnet.ndarray.BatchNorm,fix_gamma,DF: _Null,DEFAULT Null,,,,,,,
mxnet.ndarray.op.ftrl_update,lr,DF: _Null,DEFAULT Null,,,,,,,
mxnet.ndarray.contrib.arange_like,step,DF: _Null,DEFAULT Null,,,,,,,
mxnet.ndarray.op.SequenceMask,value,DF: _Null,DEFAULT Null,,,,,,,
mxnet.contrib.ndarray.SparseEmbedding,input_dim,DF: _Null,DEFAULT Null,,,,,,,
mxnet.ndarray.contrib.quantized_batch_norm,output_mean_var,DF: _Null,DEFAULT Null,,,,,,,
mxnet.ndarray.ctc_loss,blank_label,DF: _Null,DEFAULT Null,,,,,,,
mxnet.ndarray.op.max,axis,DF: _Null,DEFAULT Null,,,,,,,
mxnet.ndarray.GroupNorm,output_mean_var,DF: _Null,DEFAULT Null,,,,,,,
mxnet.ndarray.op.ftml_update,lr,DF: _Null,DEFAULT Null,,,,,,,
mxnet.ndarray.random.generalized_negative_binomial,dtype,DF: _Null,DEFAULT Null,,,,,,,
mxnet.ndarray.LRN,nsize,DF: _Null,DEFAULT Null,,,,,,,
mxnet.ndarray.op.split,squeeze_axis,DF: _Null,DEFAULT Null,,,,,,,
mxnet.contrib.ndarray.BilinearResize2D,scale_width,DF: _Null,DEFAULT Null,,,,,,,
mxnet.ndarray.contrib.box_decode,std2,DF: _Null,DEFAULT Null,,,,,,,
mxnet.ndarray.pick,mode,DF: _Null,DEFAULT Null,,,,,,,
mxnet.ndarray.contrib.BilinearResize2D,mode,DF: _Null,DEFAULT Null,,,,,,,
mxnet.ndarray.mp_lamb_update_phase2,lr,DF: _Null,DEFAULT Null,,,,,,,
mxnet.contrib.onnx.export_model,input_type,DF: <classnumpy.float32>,DEFAULT REXPR,,,,,,,
mxnet.test_utils.assert_almost_equal,rtol,The relative threshold. Default threshold will be used if set to `None`.,Default threshold will be used if set to QSTR,,,,,,,
mxnet.ndarray.op.Pooling,count_include_pad,"Only used for AvgPool, specify whether to count padding elements for averagecalculation. For example, with a 5*5 kernel on a 3*3 corner of a image,the sum of the 9 valid elements will be divided by 25 if this is set to true,or it will be divided by 9 if this is set to false. Defaults to true.",Defaults to CONSTANT_BOOL,bool,,,,0,,
mxnet.contrib.ndarray.quantized_pooling,count_include_pad,"Only used for AvgPool, specify whether to count padding elements for averagecalculation. For example, with a 5*5 kernel on a 3*3 corner of a image,the sum of the 9 valid elements will be divided by 25 if this is set to true,or it will be divided by 9 if this is set to false. Defaults to true.",Defaults to CONSTANT_BOOL,bool,,,,0,,
mxnet.ndarray.contrib.quantized_conv,dilate,"Convolution dilate: (w,), (h, w) or (d, h, w). Defaults to 1 for each dimension.",Defaults to CONSTANT_NUM for each dimension,,,,,,,
mxnet.ndarray.op.Convolution,dilate,"Convolution dilate: (w,), (h, w) or (d, h, w). Defaults to 1 for each dimension.",Defaults to CONSTANT_NUM for each dimension,,,,,,,
mxnet.ndarray.op.Pooling,stride,"Stride: for pooling (y, x) or (d, y, x). Defaults to 1 for each dimension.",Defaults to CONSTANT_NUM for each dimension,,,,,,,
mxnet.ndarray.op.random_uniform,dtype,DType of the output in case this can't be inferred. Defaults to float32 if not defined (dtype=None).,Defaults to D_TYPE if not defined dtype None,dtype,,,,0,,
mxnet.ndarray.ones,ctx,An optional device context. Defaults to the current default context (`mxnet.context.current_context()`).,Defaults to the current default context mxnet context current_context,,,,,,,
mxnet.ndarray.op.softmax,dtype,DType of the output in case this can't be inferred. Defaults to the same as input's dtype if not defined (dtype=None).,Defaults to the same as input dtype if not defined dtype None,,,,,,,
mxnet.ndarray.op.log_softmax,dtype,DType of the output in case this can't be inferred. Defaults to the same as input's dtype if not defined (dtype=None).,Defaults to the same as input dtype if not defined dtype None,,,,,,,
mxnet.contrib.quantization.quantize_model,ctx,"Defines the device that users want to run forward propagation on the calibration dataset for collecting layer output statistics. Currently, only supports single context.",Defines the device that users want to run forward propagation on the calibration dataset for collecting layer output statistics,,,,,,,
mxnet.contrib.quantization.quantize_net,ctx,"Defines the device that users want to run forward propagation on the calibration dataset for collecting layer output statistics. Currently, only supports single context.",Defines the device that users want to run forward propagation on the calibration dataset for collecting layer output statistics,,,,,,,
mxnet.ndarray.linspace,ctx,Device context. Default context is the current default context.,Device context,,,,,,,
mxnet.ndarray.contrib.SparseEmbedding,output_dim,Dimension of the embedding vectors.,Dimension of the embedding D_STRUCTURE,int,,,,,,
mxnet.gluon.nn.GlobalMaxPool1D,layout,"Dimension ordering of data and out ('NCW' or 'NWC'). 'N', 'C', 'W' stands for batch, channel, and width (time) dimensions respectively. Pooling is applied on the W dimension.",Dimension ordering of data and out QSTR,int,,,,,,
mxnet.ndarray.op.random_uniform,dtype,DType of the output in case this can't be inferred. Defaults to float32 if not defined (dtype=None).,DType of the output in case this can t be inferred,dtype,,,,,,
mxnet.ndarray.op.softmax,dtype,DType of the output in case this can't be inferred. Defaults to the same as input's dtype if not defined (dtype=None).,DType of the output in case this can t be inferred,dtype,,,,,,
mxnet.ndarray.op.log_softmax,dtype,DType of the output in case this can't be inferred. Defaults to the same as input's dtype if not defined (dtype=None).,DType of the output in case this can t be inferred,dtype,,,,,,
mxnet.gluon.nn.MaxPool2D,strides,"Factor by which to downscale. E.g. 2 will halve the input size. If None, it will default to pool_size.",E g,,,,,,,
mxnet.contrib.ndarray.arange_like,repeat,"The repeating time of all elements. E.g repeat=3, the element a will be repeated three times -> a, a, a.",E g repeat CONSTANT_NUM the element a will be repeated three times REXPR a a,,,,,,,
mxnet.test_utils.numeric_grad,eps,Epsilon for the finite-difference method.,Epsilon for the finite difference method,,,,,,,
mxnet.test_utils.check_symbolic_backward,expected,expected gradient values   if type is list of np.ndarrayContains arrays corresponding to exe.grad_arrays,expected gradient values if type is D_STRUCTURE of np ndarrayContains D_STRUCTURE corresponding to exe grad_arrays,numeric,,,,,,
mxnet.gluon.nn.MaxPool2D,strides,"Factor by which to downscale. E.g. 2 will halve the input size. If None, it will default to pool_size.",Factor by which to downscale,numeric,,,,,,
mxnet.ndarray.modulo,lhs,First array in modulo.,First D_STRUCTURE in modulo,,,D_STRUCTURE,,,,
mxnet.ndarray.maximum,lhs,First array to be compared.,First D_STRUCTURE to be compared,,,D_STRUCTURE,,,,
mxnet.ndarray.elemwise_add,lhs,first input,first input,,,,,,,
mxnet.ndarray.broadcast_equal,lhs,First input to the function,First input to the function,,,,,,,
mxnet.contrib.ndarray.PSROIPooling,output_dim,fix output dim,fix output dim,int,,,,,,
mxnet.ndarray.contrib.SyncBatchNorm,fix_gamma,Fix gamma while training,Fix PARAM while training,,,,,CONSTANT_NUM,,
mxnet.contrib.ndarray.PSROIPooling,pooled_size,fix pooled size,fix pooled size,int,,,,,"[0,inf)",
mxnet.contrib.ndarray.DeformablePSROIPooling,sample_per_part,fix samples per part,fix samples per part,,,,,,,
mxnet.ndarray.contrib.DeformablePSROIPooling,trans_std,fix transition std,fix transition std,,,,,,,
mxnet.ndarray.random.multinomial,data,"An n dimensional array whose last dimension has length k, where k is the number of possible outcomes of each multinomial distribution. For example, data with shape (m, n, k) specifies m*n multinomial distributions each with k possible outcomes.",For example data with PARAM BSTR specifies m n multinomial distributions each with k possible outcomes,,,,,,,
mxnet.ndarray.op.Pooling,count_include_pad,"Only used for AvgPool, specify whether to count padding elements for averagecalculation. For example, with a 5*5 kernel on a 3*3 corner of a image,the sum of the 9 valid elements will be divided by 25 if this is set to true,or it will be divided by 9 if this is set to false. Defaults to true.",For example with a CONSTANT_NUM CONSTANT_NUM PARAM on a CONSTANT_NUM CONSTANT_NUM corner of a image the sum of the CONSTANT_NUM valid elements will be divided by CONSTANT_NUM if this is set to CONSTANT_BOOL or it will be divided by CONSTANT_NUM if this is set to CONSTANT_BOOL,,,,,,,
mxnet.contrib.ndarray.quantized_pooling,count_include_pad,"Only used for AvgPool, specify whether to count padding elements for averagecalculation. For example, with a 5*5 kernel on a 3*3 corner of a image,the sum of the 9 valid elements will be divided by 25 if this is set to true,or it will be divided by 9 if this is set to false. Defaults to true.",For example with a CONSTANT_NUM CONSTANT_NUM PARAM on a CONSTANT_NUM CONSTANT_NUM corner of a image the sum of the CONSTANT_NUM valid elements will be divided by CONSTANT_NUM if this is set to CONSTANT_BOOL or it will be divided by CONSTANT_NUM if this is set to CONSTANT_BOOL,,,,,,,
mxnet.gluon.nn.BatchNorm,axis,"The axis that should be normalized. This is typically the channels (C) axis. For instance, after a Conv2D layer with layout='NCHW', set axis=1 in BatchNorm. If layout='NHWC', then set axis=3.",For instance after a Conv2D layer with layout QSTR set axis CONSTANT_NUM in BatchNorm,,,,,,,
mxnet.ndarray.op.ftml_update,beta2,Generally close to 1.,Generally close to CONSTANT_NUM,int,,,,,,
mxnet.ndarray.op.multi_mp_sgd_update,clip_gradient,"Clip gradient to the range of [-clip_gradient, clip_gradient] If clip_gradient <= 0, gradient clipping is turned off. grad = max(min(grad, clip_gradient), -clip_gradient).",grad max BSTR,,,,,,,
mxnet.ndarray.multi_sgd_mom_update,clip_gradient,"Clip gradient to the range of [-clip_gradient, clip_gradient] If clip_gradient <= 0, gradient clipping is turned off. grad = max(min(grad, clip_gradient), -clip_gradient).",grad max BSTR,,,,,,,
mxnet.ndarray.op.multi_lars,rescale_grad,Gradient rescaling factor,Gradient rescaling factor,,,,,,,
mxnet.image.imresize,h,Height of resized image.,Height of resized image,numeric,,,,,"[0,inf)",
mxnet.ndarray.op.nansum,axis,"The axis or axes along which to perform the reduction.  The default, axis=(), will compute over all elements into a scalar array with shape (1,). If axis is int, a reduction is performed on a particular axis. If axis is a tuple of ints, a reduction is performed on all the axes specified in the tuple. If exclude is true, reduction will be performed on the axes that are NOT in axis instead. Negative values means indexing from right to left.  ",If axis is a D_STRUCTURE of D_TYPE a reduction is performed on all the axes specified in the D_STRUCTURE,D_TYPE,,D_STRUCTURE,,,,
mxnet.ndarray.min,axis,"The axis or axes along which to perform the reduction.  The default, axis=(), will compute over all elements into a scalar array with shape (1,). If axis is int, a reduction is performed on a particular axis. If axis is a tuple of ints, a reduction is performed on all the axes specified in the tuple. If exclude is true, reduction will be performed on the axes that are NOT in axis instead. Negative values means indexing from right to left.  ",If axis is a D_STRUCTURE of D_TYPE a reduction is performed on all the axes specified in the D_STRUCTURE,D_TYPE,,D_STRUCTURE,,,,
mxnet.ndarray.op.max_axis,axis,"The axis or axes along which to perform the reduction.  The default, axis=(), will compute over all elements into a scalar array with shape (1,). If axis is int, a reduction is performed on a particular axis. If axis is a tuple of ints, a reduction is performed on all the axes specified in the tuple. If exclude is true, reduction will be performed on the axes that are NOT in axis instead. Negative values means indexing from right to left.  ",If axis is a D_STRUCTURE of D_TYPE a reduction is performed on all the axes specified in the D_STRUCTURE,D_TYPE,,D_STRUCTURE,,,,
mxnet.ndarray.op.nansum,axis,"The axis or axes along which to perform the reduction.  The default, axis=(), will compute over all elements into a scalar array with shape (1,). If axis is int, a reduction is performed on a particular axis. If axis is a tuple of ints, a reduction is performed on all the axes specified in the tuple. If exclude is true, reduction will be performed on the axes that are NOT in axis instead. Negative values means indexing from right to left.  ",If axis is D_TYPE a reduction is performed on a particular axis,D_TYPE,,,,,,
mxnet.ndarray.min,axis,"The axis or axes along which to perform the reduction.  The default, axis=(), will compute over all elements into a scalar array with shape (1,). If axis is int, a reduction is performed on a particular axis. If axis is a tuple of ints, a reduction is performed on all the axes specified in the tuple. If exclude is true, reduction will be performed on the axes that are NOT in axis instead. Negative values means indexing from right to left.  ",If axis is D_TYPE a reduction is performed on a particular axis,D_TYPE,,,,,,
mxnet.ndarray.op.max_axis,axis,"The axis or axes along which to perform the reduction.  The default, axis=(), will compute over all elements into a scalar array with shape (1,). If axis is int, a reduction is performed on a particular axis. If axis is a tuple of ints, a reduction is performed on all the axes specified in the tuple. If exclude is true, reduction will be performed on the axes that are NOT in axis instead. Negative values means indexing from right to left.  ",If axis is D_TYPE a reduction is performed on a particular axis,D_TYPE,,,,,,
mxnet.gluon.rnn.LSTM,bidirectional,"If True, becomes a bidirectional RNN.",If CONSTANT_BOOL becomes a bidirectional RNN,bool,,,,0,,
mxnet.ndarray.sparse.adam_update,lazy_update,"If true, lazy updates are applied if gradient's stype is row_sparse and all of w, m and v have the same stype",If CONSTANT_BOOL lazy updates are applied if gradient stype is row_sparse and all of w m and v have the same stype,bool,,,,0,,
mxnet.ndarray.sparse.sgd_mom_update,lazy_update,"If true, lazy updates are applied if gradient's stype is row_sparse and both weight and momentum have the same stype",If CONSTANT_BOOL lazy updates are applied if gradient stype is row_sparse and both PARAM and PARAM have the same stype,bool,,,,0,,
mxnet.ndarray.contrib.CTCLoss,use_label_lengths,"Whether the label lenghts are decided by label_lengths, or derived from padding_mask. If false, the lengths are derived from the first occurrence of the value of padding_mask. The value of padding_mask is `0` when first CTC label is reserved for blank, and `-1` when last label is reserved for blank. See blank_label.",If CONSTANT_BOOL the lengths are derived from the first occurrence of the value of padding_mask,bool,,,,0,,
mxnet.ndarray.sparse.dot,transpose_a,If true then transpose the first input before dot.,If CONSTANT_BOOL then transpose the first input before dot,bool,,,,0,,
mxnet.ndarray.pick,axis,"int or None. The axis to picking the elements. Negative values means indexing from right to left. If is None, the elements in the index w.r.t the flattened input will be picked.",If is None the elements in the PARAM w r t the flattened input will be picked,,,,,,,
mxnet.gluon.nn.BatchNorm,axis,"The axis that should be normalized. This is typically the channels (C) axis. For instance, after a Conv2D layer with layout='NCHW', set axis=1 in BatchNorm. If layout='NHWC', then set axis=3.",If layout QSTR then set axis CONSTANT_NUM,,,,,,,
mxnet.gluon.nn.MaxPool2D,strides,"Factor by which to downscale. E.g. 2 will halve the input size. If None, it will default to pool_size.",If None it will default to PARAM,,,,,,,
mxnet.test_utils.download,dirname,"output directory name. If None, then guess from fname or use the current directory",If None then guess from PARAM or use the current directory,,,,,,,
mxnet.gluon.nn.InstanceNorm,in_channels,"Number of channels (feature maps) in input data. If not specified, initialization will be deferred to the first time forward is called and in_channels will be inferred from the shape of input data.",If not specified initialization will be deferred to the first time forward is called and in_channels will be inferred from the shape of input data,,,,,,,
mxnet.gluon.nn.Conv3D,in_channels,"The number of input channels to this layer. If not specified, initialization will be deferred to the first time forward is called and in_channels will be inferred from the shape of input data.",If not specified initialization will be deferred to the first time forward is called and in_channels will be inferred from the shape of input data,,,,,,,
mxnet.io.LibSVMIter,label_libsvm,"The input LibSVM label file or a directory path. If NULL, all labels will be read from `data_libsvm`.",If NULL all labels will be read from PARAM,,,,,,,
mxnet.ndarray.op.nansum,axis,"The axis or axes along which to perform the reduction.  The default, axis=(), will compute over all elements into a scalar array with shape (1,). If axis is int, a reduction is performed on a particular axis. If axis is a tuple of ints, a reduction is performed on all the axes specified in the tuple. If exclude is true, reduction will be performed on the axes that are NOT in axis instead. Negative values means indexing from right to left.  ",If PARAM is CONSTANT_BOOL reduction will be performed on the axes that are NOT in axis instead,,,,,,,
mxnet.ndarray.min,axis,"The axis or axes along which to perform the reduction.  The default, axis=(), will compute over all elements into a scalar array with shape (1,). If axis is int, a reduction is performed on a particular axis. If axis is a tuple of ints, a reduction is performed on all the axes specified in the tuple. If exclude is true, reduction will be performed on the axes that are NOT in axis instead. Negative values means indexing from right to left.  ",If PARAM is CONSTANT_BOOL reduction will be performed on the axes that are NOT in axis instead,,,,,,,
mxnet.ndarray.op.max_axis,axis,"The axis or axes along which to perform the reduction.  The default, axis=(), will compute over all elements into a scalar array with shape (1,). If axis is int, a reduction is performed on a particular axis. If axis is a tuple of ints, a reduction is performed on all the axes specified in the tuple. If exclude is true, reduction will be performed on the axes that are NOT in axis instead. Negative values means indexing from right to left.  ",If PARAM is CONSTANT_BOOL reduction will be performed on the axes that are NOT in axis instead,,,,,,,
mxnet.io.ImageRecordIter,max_aspect_ratio,"Change the aspect (namely width/height) to a random value. If min_aspect_ratio is None then the aspect ratio ins sampled from [1 - max_aspect_ratio, 1 + max_aspect_ratio], else it is in `[min_aspect_ratio, max_aspect_ratio]`",If PARAM is None then the aspect ratio ins sampled from BSTR else it is in BSTR,,,,,,,
mxnet.ndarray.power,exp,"The exponent array. If `base.shape != exp.shape`, they must be broadcastable to a common shape.",If PARAM shape exp shape they must be broadcastable to a common shape,,,,,,,
mxnet.ndarray.multiply,rhs,"Second array to be multiplied. If `lhs.shape != rhs.shape`, they must be broadcastable to a common shape.",If PARAM shape rhs shape they must be broadcastable to a common shape,,,,,,,
mxnet.ndarray.logical_xor,rhs,"Second input of the function. If `lhs.shape != rhs.shape`, they must be broadcastable to a common shape.",If PARAM shape rhs shape they must be broadcastable to a common shape,,,,,,,
mxnet.contrib.ndarray.CTCLoss,blank_label,"Set the label that is reserved for blank label.If ""first"", 0-th label is reserved, and label values for tokens in the vocabulary are between `1` and `alphabet_size-1`, and the padding mask is `-1`. If ""last"", last label value `alphabet_size-1` is reserved for blank label instead, and label values for tokens in the vocabulary are between `0` and `alphabet_size-2`, and the padding mask is `0`.",If QSTR last PARAM value alphabet_size CONSTANT_NUM is reserved for blank PARAM instead and PARAM values for tokens in the vocabulary are between CONSTANT_NUM and alphabet_size CONSTANT_NUM and the padding mask is CONSTANT_NUM,,,,,,,QSTR
mxnet.ndarray.Embedding,sparse_grad,"Compute row sparse gradient in the backward calculation. If set to True, the grad's storage type is row_sparse.",If set to CONSTANT_BOOL the grad storage type is row_sparse,bool,,,,0,,
mxnet.ndarray.op.Softmax,use_ignore,"If set to `true`, the ignore_label value will not contribute to the backward gradient.",If set to CONSTANT_BOOL the PARAM value will not contribute to the backward gradient,bool,,,,0,,
mxnet.ndarray.Softmax,multi_output,"If set to `true`, the softmax function will be computed along axis `1`. This is applied when the shape of input array differs from the shape of label array.",If set to CONSTANT_BOOL the softmax function will be computed along axis CONSTANT_NUM,bool,,,,0,,
mxnet.ndarray.SequenceReverse,use_sequence_length,"If set to true, this layer takes in an extra input parameter sequence_length to specify variable length sequence",If set to CONSTANT_BOOL this layer takes in an extra input parameter PARAM to specify variable length D_STRUCTURE,bool,,,,0,,
mxnet.ndarray.MakeLoss,normalization,"If this is set to null, the output gradient will not be normalized. If this is set to batch, the output gradient will be divided by the batch size. If this is set to valid, the output gradient will be divided by the number of valid input elements.",If this is set to batch the output gradient will be divided by the batch size,,,,,,,
mxnet.ndarray.sparse.mean,keepdims,"If this is set to True, the reduced axes are left in the result as dimension with size one.",If this is set to CONSTANT_BOOL the reduced axes are left in the result as dimension with size one,bool,,,,0,,
mxnet.ndarray.mean,keepdims,"If this is set to True, the reduced axes are left in the result as dimension with size one.",If this is set to CONSTANT_BOOL the reduced axes are left in the result as dimension with size one,bool,,,,0,,
mxnet.ndarray.argmax,keepdims,"If this is set to True, the reduced axis is left in the result as dimension with size one.",If this is set to CONSTANT_BOOL the reduced PARAM is left in the result as dimension with size one,bool,,,,0,,
mxnet.ndarray.MakeLoss,normalization,"If this is set to null, the output gradient will not be normalized. If this is set to batch, the output gradient will be divided by the batch size. If this is set to valid, the output gradient will be divided by the number of valid input elements.",If this is set to null the output gradient will not be normalized,,,,,,,
mxnet.ndarray.MakeLoss,normalization,"If this is set to null, the output gradient will not be normalized. If this is set to batch, the output gradient will be divided by the batch size. If this is set to valid, the output gradient will be divided by the number of valid input elements.",If this is set to valid the output gradient will be divided by the number of valid input elements,,,,,,,
mxnet.ndarray.op.GridGenerator,target_shape,"Specifies the output shape (H, W). This is required if transformation type is affine. If transformation type is warp, this parameter is ignored.",If transformation type is warp this parameter is ignored,,,,,,,
mxnet.gluon.nn.Conv3DTranspose,activation,"Activation function to use. See `Activation()`. If you don't specify anything, no activation is applied (ie. ""linear"" activation: a(x) = x).",If you don t specify anything no activation is applied ie,,,,,,,
mxnet.ndarray.contrib.bipartite_matching,threshold,"Ignore matching when score < thresh, if is_ascend=false, or ignore score > thresh, if is_ascend=true.",Ignore matching when score REXPR if PARAM CONSTANT_BOOL or ignore score REXPR if PARAM CONSTANT_BOOL,,,,,,,
mxnet.ndarray.Pooling,global_pool,"Ignore kernel size, do global pooling based on current input feature map.",Ignore PARAM size do global pooling based on current input feature map,,,,,,,
mxnet.io.ImageRecordIter,max_random_area,"Change the area (namely width * height) to a random value in `[min_random_area, max_random_area]`. Ignored if `random_resized_crop` is False.",Ignored if PARAM is CONSTANT_BOOL,,,,,,,
mxnet.util.np_shape,active,Indicates whether to activate NumPy-shape semantics.,Indicates whether to activate NumPy shape semantics,bool,,,,0,,
mxnet.ndarray.op.RNN,state_cell,initial cell state for LSTM networks (only for LSTM),initial cell PARAM for LSTM networks BSTR,,,,,,,
mxnet.gluon.nn.LayerNorm,gamma_initializer,Initializer for the gamma weight.,Initializer for the gamma weight,,,,,,,
mxnet.gluon.contrib.rnn.Conv1DLSTMCell,i2h_weight_initializer,"Initializer for the input weights matrix, used for the input convolutions.",Initializer for the input weights matrix used for the input convolutions,,,,,,,
mxnet.gluon.rnn.LSTMCell,i2h_weight_initializer,"Initializer for the input weights matrix, used for the linear transformation of the inputs.",Initializer for the input weights matrix used for the linear transformation of the inputs,,,,,,,
mxnet.gluon.contrib.rnn.LSTMPCell,i2h_weight_initializer,"Initializer for the input weights matrix, used for the linear transformation of the inputs.",Initializer for the input weights matrix used for the linear transformation of the inputs,,,,,,,
mxnet.gluon.contrib.rnn.Conv2DLSTMCell,h2h_weight_initializer,"Initializer for the recurrent weights matrix, used for the input convolutions.",Initializer for the recurrent weights matrix used for the input convolutions,,,,,,,
mxnet.gluon.contrib.nn.SyncBatchNorm,running_variance_initializer,Initializer for the running variance.,Initializer for the running variance,,,,,,,
mxnet.gluon.nn.Conv2D,weight_initializer,Initializer for the weight weights matrix.,Initializer for the weight weights matrix,,,,,,,
mxnet.gluon.contrib.rnn.Conv1DLSTMCell,i2h_kernel,Input convolution kernel sizes.,Input convolution kernel sizes,int,,,,,"[0,inf)",
mxnet.ndarray.SwapAxis,data,Input array.,Input D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.ndarray.op.depth_to_space,data,Input ndarray,Input D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.ndarray.ctc_loss,data,Input ndarray,Input D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.contrib.ndarray.allclose,a,Input array a,Input D_STRUCTURE a,,,D_STRUCTURE,,,,
mxnet.ndarray.contrib.BilinearResize2D,data,Input data,Input data,,,,,,,
mxnet.ndarray.op.LRN,data,Input data to LRN,Input data to LRN,,,,,,,
mxnet.ndarray.contrib.ROIAlign,data,"Input data to the pooling operator, a 4D Feature maps",Input data to the pooling operator a CONSTANT_NUM D Feature maps,,,,,,,
mxnet.contrib.onnx.export_model,input_type,Input data type e.g. np.float32,Input data type e g,,,,,,,
mxnet.ndarray.op.BilinearSampler,grid,"Input grid to the BilinearsamplerOp.grid has two channels: x_src, y_src",Input grid to the BilinearsamplerOp grid has two channels x_src y_src,,,,,,,
mxnet.autograd.grad,variables,Input variables to compute gradients for.,Input variables to compute gradients for,,,,,,,
mxnet.image.center_crop,interp,Interpolation method. See resize_short for details.,Interpolation method,,,,,,,
mxnet.image.CreateAugmenter,inter_method,"Interpolation method for all resizing operations Possible values: 0: Nearest Neighbors Interpolation. 1: Bilinear interpolation. 2: Bicubic interpolation over 4x4 pixel neighborhood. 3: Area-based (resampling using pixel area relation). It may be a preferred method for image decimation, as it gives moire-free results. But when the image is zoomed, it is similar to the Nearest Neighbors method. (used by default). 4: Lanczos interpolation over 8x8 pixel neighborhood. 9: Cubic for enlarge, area for shrink, bilinear for others 10: Random select from interpolation method metioned above. Note: When shrinking an image, it will generally look best with AREA-based interpolation, whereas, when enlarging an image, it will generally look best with Bicubic (slow) or Bilinear (faster but still looks OK). ",Interpolation method for all resizing operations Possible values CONSTANT_NUM Nearest Neighbors Interpolation,,,,,,,
mxnet.test_utils.var_check,generator,The generator function. It's expected to generate N i.i.d samples by calling generator(N).,It expected to generate N i i d samples by calling generator BSTR,,,,,,,
mxnet.image.CreateAugmenter,inter_method,"Interpolation method for all resizing operations Possible values: 0: Nearest Neighbors Interpolation. 1: Bilinear interpolation. 2: Bicubic interpolation over 4x4 pixel neighborhood. 3: Area-based (resampling using pixel area relation). It may be a preferred method for image decimation, as it gives moire-free results. But when the image is zoomed, it is similar to the Nearest Neighbors method. (used by default). 4: Lanczos interpolation over 8x8 pixel neighborhood. 9: Cubic for enlarge, area for shrink, bilinear for others 10: Random select from interpolation method metioned above. Note: When shrinking an image, it will generally look best with AREA-based interpolation, whereas, when enlarging an image, it will generally look best with Bicubic (slow) or Bilinear (faster but still looks OK). ",It may be a preferred method for image decimation as it gives moire free results,,,,,,,
mxnet.ndarray.random.exponential_like,lam,Lambda parameter (rate) of the exponential distribution.,Lambda parameter BSTR of the exponential distribution,numeric,,,,,,
mxnet.ndarray.multi_lars,eps,LARS eps,LARS eps,,,,,,,
mxnet.ndarray.rmspropalex_update,lr,Learning rate,Learning rate,numeric,,,,,"[0,1]",
mxnet.ndarray.mp_sgd_mom_update,lr,Learning rate,Learning rate,numeric,,,,,"[0,1]",
mxnet.ndarray.op.multi_lars,lrs,Learning rates to scale by LARS coefficient,Learning rates to scale by LARS coefficient,numeric,,,,,"[0,1]",
mxnet.ndarray.contrib.ctc_loss,data_lengths,Lengths of data for each of the samples. Only required when use_data_lengths is true.,Lengths of PARAM for each of the samples,int,,,,,"[0,inf)",
mxnet.ndarray.image.random_lighting,alpha_std,Level of the lighting noise.,Level of the lighting noise,D_TYPE,,,,CONSTANT_NUM,,
mxnet.gluon.model_zoo.vision.squeezenet1_1,root,Location for keeping the model parameters.,Location for keeping the model parameters,,,,,,,
mxnet.gluon.model_zoo.vision.resnet34_v1,root,Location for keeping the model parameters.,Location for keeping the model parameters,,,,,,,
mxnet.ndarray.op.random_uniform,low,Lower bound of the distribution.,Lower bound of the distribution,,,,,,,
mxnet.ndarray.op.Correlation,max_displacement,Max displacement of Correlation,Max displacement of Correlation,,,,,,,
mxnet.ndarray.contrib.MultiBoxTarget,negative_mining_ratio,"Max negative to positive samples ratio, use -1 to disable mining",Max negative to positive samples ratio use CONSTANT_NUM to disable mining,numeric,,,,,,
mxnet.ndarray.RNN,lstm_state_clip_max,Maximum clip value of LSTM states. This option must be used together with lstm_state_clip_min.,Maximum clip value of LSTM states,,,,,,,
mxnet.contrib.ndarray.quantized_fully_connected,max_data,Maximum value of data.,Maximum value of PARAM,numeric,,,,,,
mxnet.ndarray.random.generalized_negative_binomial_like,mu,Mean of the negative binomial distribution.,Mean of the negative binomial distribution,numeric,,,,,,
mxnet.ndarray.contrib.MultiProposal,rpn_min_size,Minimum height or width in proposal,Minimum height or width in proposal,numeric,,,,,,
mxnet.ndarray.contrib.quantized_fully_connected,min_bias,Minimum value of bias.,Minimum value of PARAM,numeric,,,,,,
mxnet.contrib.ndarray.quantized_batch_norm,min_data,Minimum value of data.,Minimum value of PARAM,numeric,,,,,,
mxnet.contrib.ndarray.quantized_conv,min_data,Minimum value of data.,Minimum value of PARAM,numeric,,,,,,
mxnet.contrib.onnx.export_model,onnx_file_path,DF: model.onnx,model onnx,,,,,,,
mxnet.ndarray.op.Softmax,out_grad,Multiplies gradient with output gradient element-wise.,Multiplies gradient with output gradient element wise,,,,,,,
mxnet.ndarray.linalg.gemm2,transpose_a,Multiply with transposed of first input (A).,Multiply with transposed of first input BSTR,,,,,,,
mxnet.ndarray.SequenceLast,data,"n-dimensional input array of the form [max_sequence_length, batch_size, other_feature_dims] where n>2",n dimensional input D_STRUCTURE of the form BSTR where n REXPR,,,D_STRUCTURE,BSTR,,,
mxnet.ndarray.op.SequenceLast,data,"n-dimensional input array of the form [max_sequence_length, batch_size, other_feature_dims] where n>2",n dimensional input D_STRUCTURE of the form BSTR where n REXPR,,,D_STRUCTURE,BSTR,,,
mxnet.log.get_logger,name,Name of the logger.,Name of the logger,string,,,,0,,
mxnet.ndarray.slice_like,axes,List of axes on which input data will be sliced according to the corresponding size of the second input. By default will slice on all axes. Negative axes are supported.,Negative axes are supported,,,,,,,
mxnet.ndarray.pick,axis,"int or None. The axis to picking the elements. Negative values means indexing from right to left. If is None, the elements in the index w.r.t the flattened input will be picked.",Negative values means indexing from right to left,,,,,,,
mxnet.ndarray.op.nansum,axis,"The axis or axes along which to perform the reduction.  The default, axis=(), will compute over all elements into a scalar array with shape (1,). If axis is int, a reduction is performed on a particular axis. If axis is a tuple of ints, a reduction is performed on all the axes specified in the tuple. If exclude is true, reduction will be performed on the axes that are NOT in axis instead. Negative values means indexing from right to left.  ",Negative values means indexing from right to left,,,,,,,
mxnet.ndarray.min,axis,"The axis or axes along which to perform the reduction.  The default, axis=(), will compute over all elements into a scalar array with shape (1,). If axis is int, a reduction is performed on a particular axis. If axis is a tuple of ints, a reduction is performed on all the axes specified in the tuple. If exclude is true, reduction will be performed on the axes that are NOT in axis instead. Negative values means indexing from right to left.  ",Negative values means indexing from right to left,,,,,,,
mxnet.ndarray.op.max_axis,axis,"The axis or axes along which to perform the reduction.  The default, axis=(), will compute over all elements into a scalar array with shape (1,). If axis is int, a reduction is performed on a particular axis. If axis is a tuple of ints, a reduction is performed on all the axes specified in the tuple. If exclude is true, reduction will be performed on the axes that are NOT in axis instead. Negative values means indexing from right to left.  ",Negative values means indexing from right to left,,,,,,,
mxnet.registry.get_register_func,nickname,nickname of base_class for logging,nickname of PARAM for logging,string,,,,0,,
mxnet.test_utils.assert_almost_equal,rtol,DD: None or float,None or D_TYPE,D_TYPE,,,,,,
mxnet.contrib.ndarray.quantized_conv,cudnn_tune,"DD: {None, 'fastest', 'limited_workspace', 'off'},optional, default='None'",None QSTR optional default QSTR,,,,,,,QSTR
mxnet.ndarray.op.norm,out_dtype,"DD: {None, 'float16', 'float32', 'float64', 'int32', 'int64', 'int8'},optional, default='None'",None QSTR optional default QSTR,,,,,,,QSTR
mxnet.ndarray.op.softmax,dtype,"DD: {None, 'float16', 'float32', 'float64'},optional, default='None'",None QSTR optional default QSTR,,,,,,,QSTR
mxnet.ndarray.op.log_softmax,dtype,"DD: {None, 'float16', 'float32', 'float64'},optional, default='None'",None QSTR optional default QSTR,,,,,,,QSTR
mxnet.ndarray.random.multinomial,dtype,Data type of the sample output array. The default is int32. Note that the data type of the log likelihood array is the same with that of data.,Note that the PARAM type of the log likelihood D_STRUCTURE is the same with that of PARAM,,,,,,,
mxnet.image.CreateAugmenter,inter_method,"Interpolation method for all resizing operations Possible values: 0: Nearest Neighbors Interpolation. 1: Bilinear interpolation. 2: Bicubic interpolation over 4x4 pixel neighborhood. 3: Area-based (resampling using pixel area relation). It may be a preferred method for image decimation, as it gives moire-free results. But when the image is zoomed, it is similar to the Nearest Neighbors method. (used by default). 4: Lanczos interpolation over 8x8 pixel neighborhood. 9: Cubic for enlarge, area for shrink, bilinear for others 10: Random select from interpolation method metioned above. Note: When shrinking an image, it will generally look best with AREA-based interpolation, whereas, when enlarging an image, it will generally look best with Bicubic (slow) or Bilinear (faster but still looks OK). ",Note When shrinking an image it will generally look best with AREA based interpolation whereas when enlarging an image it will generally look best with Bicubic BSTR,,,,,,,
mxnet.gluon.nn.InstanceNorm,in_channels,"Number of channels (feature maps) in input data. If not specified, initialization will be deferred to the first time forward is called and in_channels will be inferred from the shape of input data.",Number of channels BSTR in input data,int,,,,0,"[0,inf)",
mxnet.ndarray.contrib.DeformableConvolution,num_deformable_group,Number of deformable group partitions.,Number of deformable group partitions,int,,,,0,"[0,inf)",
mxnet.contrib.ndarray.quantized_conv,num_group,Number of group partitions.,Number of group partitions,int,,,,0,"[0,inf)",
mxnet.ndarray.Deconvolution,num_filter,Number of output filters.,Number of output filters,int,,,,0,"[0,inf)",
mxnet.gluon.rnn.LSTMCell,hidden_size,Number of units in output symbol.,Number of units in output symbol,int,,,,0,"[0,inf)",
mxnet.ndarray.op.multi_sgd_update,num_weights,Number of updated weights.,Number of updated weights,int,,,,0,"[0,inf)",
mxnet.ndarray.preloaded_multi_mp_sgd_update,num_weights,Number of updated weights.,Number of updated weights,int,,,,0,"[0,inf)",
mxnet.ndarray.multi_mp_sgd_update,num_weights,Number of updated weights.,Number of updated weights,int,,,,0,"[0,inf)",
mxnet.gluon.model_zoo.vision.get_resnet,num_layers,"Numbers of layers. Options are 18, 34, 50, 101, 152.",Numbers of layers,int,,,,0,"[0,inf)",
mxnet.ndarray.linalg_extracttrian,offset,"Offset of the diagonal versus the main diagonal. 0 corresponds to the main diagonal, a negative/positive value to diagonals below/above the main diagonal.",Offset of the diagonal versus the main diagonal,,,,,,,
mxnet.image.CreateAugmenter,inter_method,"Interpolation method for all resizing operations Possible values: 0: Nearest Neighbors Interpolation. 1: Bilinear interpolation. 2: Bicubic interpolation over 4x4 pixel neighborhood. 3: Area-based (resampling using pixel area relation). It may be a preferred method for image decimation, as it gives moire-free results. But when the image is zoomed, it is similar to the Nearest Neighbors method. (used by default). 4: Lanczos interpolation over 8x8 pixel neighborhood. 9: Cubic for enlarge, area for shrink, bilinear for others 10: Random select from interpolation method metioned above. Note: When shrinking an image, it will generally look best with AREA-based interpolation, whereas, when enlarging an image, it will generally look best with Bicubic (slow) or Bilinear (faster but still looks OK). ",ONE_WORD BSTR,,,,,,,
mxnet.contrib.quantization.quantize_model,ctx,DD: Context,ONE_WORD Context,,,,,,,
mxnet.contrib.quantization.quantize_net,ctx,DD: Context,ONE_WORD Context,,,,,,,
mxnet.gluon.utils.split_data,data,DD: NDArray,ONE_WORD D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.ndarray.op.lamb_update_phase2,r1,DD: NDArray,ONE_WORD D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.ndarray.sparse.Embedding,data,DD: NDArray,ONE_WORD D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.ndarray.broadcast_hypot,rhs,DD: NDArray,ONE_WORD D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.ndarray.contrib.ROIAlign,data,DD: NDArray,ONE_WORD D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.ndarray.sparse.FullyConnected,bias,DD: NDArray,ONE_WORD D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.ndarray.op.BilinearSampler,grid,DD: NDArray,ONE_WORD D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.ndarray.random.multinomial,data,DD: NDArray,ONE_WORD D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.ndarray.broadcast_axis,data,DD: NDArray,ONE_WORD D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.ndarray.sparse.broadcast_minus,rhs,DD: NDArray,ONE_WORD D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.ndarray.max,data,DD: NDArray,ONE_WORD D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.ndarray.contrib.box_encode,matches,DD: NDArray,ONE_WORD D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.ndarray.SequenceLast,data,DD: NDArray,ONE_WORD D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.ndarray.op.adam_update,weight,DD: NDArray,ONE_WORD D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.contrib.ndarray.MultiProposal,cls_prob,DD: NDArray,ONE_WORD D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.ndarray.broadcast_equal,rhs,DD: NDArray,ONE_WORD D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.ndarray.op.sgd_update,weight,DD: NDArray,ONE_WORD D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.ndarray.broadcast_not_equal,rhs,DD: NDArray,ONE_WORD D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.ndarray.op.sum,data,DD: NDArray,ONE_WORD D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.ndarray.sparse.cbrt,data,DD: NDArray,ONE_WORD D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.ndarray.image.flip_top_bottom,data,DD: NDArray,ONE_WORD D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.ndarray.op.pick,data,DD: NDArray,ONE_WORD D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.ndarray.op.SequenceLast,data,DD: NDArray,ONE_WORD D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.ndarray.sgd_update,grad,DD: NDArray,ONE_WORD D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.ndarray.op.degrees,data,DD: NDArray,ONE_WORD D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.ndarray.op.Deconvolution,weight,DD: NDArray,ONE_WORD D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.contrib.ndarray.quantized_batch_norm,min_data,DD: NDArray,ONE_WORD D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.ndarray.squeeze,data,DD: NDArray,ONE_WORD D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.contrib.ndarray.allclose,a,DD: NDArray,ONE_WORD D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.ndarray.op.linalg_trsm,A,DD: NDArray,ONE_WORD D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.contrib.ndarray.quantized_conv,min_data,DD: NDArray,ONE_WORD D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.ndarray.mp_nag_mom_update,weight,DD: NDArray,ONE_WORD D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.ndarray.op.signsgd_update,weight,DD: NDArray,ONE_WORD D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.image.resize_short,src,DD: NDArray,ONE_WORD D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.ndarray.op.LRN,data,DD: NDArray,ONE_WORD D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.ndarray.op.mp_lamb_update_phase2,weight32,DD: NDArray,ONE_WORD D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.ndarray.broadcast_plus,rhs,DD: NDArray,ONE_WORD D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.ndarray.op.batch_dot,lhs,DD: NDArray,ONE_WORD D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.ndarray.broadcast_greater,rhs,DD: NDArray,ONE_WORD D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.ndarray.argsort,data,DD: NDArray,ONE_WORD D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.ndarray.BlockGrad,data,DD: NDArray,ONE_WORD D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.ndarray.make_loss,data,DD: NDArray,ONE_WORD D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.contrib.ndarray.edge_id,v,DD: NDArray,ONE_WORD D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.ndarray.sparse.negative,data,DD: NDArray,ONE_WORD D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.ndarray.ceil,data,DD: NDArray,ONE_WORD D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.ndarray.op.depth_to_space,data,DD: NDArray,ONE_WORD D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.contrib.ndarray.quantized_fully_connected,max_data,DD: NDArray,ONE_WORD D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.ndarray.op.InstanceNorm,beta,DD: NDArray,ONE_WORD D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.ndarray.contrib.edge_id,u,DD: NDArray,ONE_WORD D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.ndarray.op.RNN,state_cell,DD: NDArray,ONE_WORD D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.ndarray.broadcast_minimum,rhs,DD: NDArray,ONE_WORD D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.ndarray.erfinv,data,DD: NDArray,ONE_WORD D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.ndarray.elemwise_add,lhs,DD: NDArray,ONE_WORD D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.ndarray.op.sgd_update,grad,DD: NDArray,ONE_WORD D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.ndarray.linalg_makediag,A,DD: NDArray,ONE_WORD D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.ndarray.op.dot,lhs,DD: NDArray,ONE_WORD D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.ndarray.contrib.ctc_loss,data_lengths,DD: NDArray,ONE_WORD D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.ndarray.log1p,data,DD: NDArray,ONE_WORD D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.ndarray.sum_axis,data,DD: NDArray,ONE_WORD D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.ndarray.op.multi_lars,lrs,DD: NDArray,ONE_WORD D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.ndarray.SwapAxis,data,DD: NDArray,ONE_WORD D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.ndarray.ctc_loss,data,DD: NDArray,ONE_WORD D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.ndarray.broadcast_equal,lhs,DD: NDArray,ONE_WORD D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.ndarray.sinh,data,DD: NDArray,ONE_WORD D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.ndarray.sparse.sgd_mom_update,mom,DD: NDArray,ONE_WORD D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.ndarray.contrib.quantized_flatten,data,DD: NDArray,ONE_WORD D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.ndarray.linalg.gemm2,A,DD: NDArray,ONE_WORD D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.ndarray.split,data,DD: NDArray,ONE_WORD D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.ndarray.op.broadcast_power,rhs,DD: NDArray,ONE_WORD D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.ndarray.contrib.div_sqrt_dim,data,DD: NDArray,ONE_WORD D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.ndarray.contrib.quantize_v2,data,DD: NDArray,ONE_WORD D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.ndarray.contrib.sign_ste,data,DD: NDArray,ONE_WORD D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.ndarray.contrib.BilinearResize2D,data,DD: NDArray,ONE_WORD D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.ndarray.contrib.quantized_fully_connected,min_bias,DD: NDArray,ONE_WORD D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.ndarray.slice,data,DD: NDArray,ONE_WORD D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.ndarray.contrib.box_non_maximum_suppression,data,DD: NDArray,ONE_WORD D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.ndarray.op.preloaded_multi_sgd_mom_update,*data,DD: NDArray[],ONE_WORD D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.util.np_shape,active,DD: bool,ONE_WORD D_TYPE,D_TYPE,,,,,,
mxnet.ndarray.op.smooth_l1,scalar,DD: float,ONE_WORD D_TYPE,D_TYPE,,,,,,
mxnet.image.CreateAugmenter,rand_gray,DD: float,ONE_WORD D_TYPE,D_TYPE,,,,,,
mxnet.image.CreateDetAugmenter,min_eject_coverage,DD: float,ONE_WORD D_TYPE,D_TYPE,,,,,,
mxnet.gluon.model_zoo.vision.get_resnet,num_layers,DD: int,ONE_WORD D_TYPE,D_TYPE,,,,,,
mxnet.gluon.nn.Conv2DTranspose,groups,DD: int,ONE_WORD D_TYPE,D_TYPE,,,,,,
mxnet.gluon.rnn.LSTMCell,hidden_size,DD: int,ONE_WORD D_TYPE,D_TYPE,,,,,,
mxnet.gluon.rnn.GRU,hidden_size,DD: int,ONE_WORD D_TYPE,D_TYPE,,,,,,
mxnet.gluon.nn.Conv1D,channels,DD: int,ONE_WORD D_TYPE,D_TYPE,,,,,,
mxnet.gluon.nn.Conv3DTranspose,activation,DD: str,ONE_WORD D_TYPE,D_TYPE,,,,,,
mxnet.test_utils.get_zip_data,data_dir,DD: str,ONE_WORD D_TYPE,D_TYPE,,,,,,
mxnet.registry.get_register_func,nickname,DD: str,ONE_WORD D_TYPE,D_TYPE,,,,,,
mxnet.ndarray.load_frombuffer,buf,DD: str,ONE_WORD D_TYPE,D_TYPE,,,,,,
mxnet.util.np_ufunc_legal_option,value,DD: string,ONE_WORD D_TYPE,D_TYPE,,,,,,
mxnet.contrib.onnx.export_model,input_type,Input data type e.g. np.float32,ONE_WORD D_TYPE,D_TYPE,,,,,,
mxnet.contrib.quantization.quantize_model,calib_data,DD: DataIter,ONE_WORD DataIter,,,,,,,
mxnet.test_utils.var_check,generator,DD: function,ONE_WORD function,,,,,,,
mxnet.test_utils.verify_generator,generator,DD: function,ONE_WORD function,,,,,,,
mxnet.ndarray.sgd_update,grad,Gradient,ONE_WORD Gradient,,,,,,,
mxnet.ndarray.op.sgd_update,grad,Gradient,ONE_WORD Gradient,,,,,,,
mxnet.ndarray.linspace,start,DD: number,ONE_WORD number,numeric,,,,,,
mxnet.ndarray.sparse.sgd_mom_update,mom,Momentum,ONE_WORD PARAM,,,,,,,
mxnet.ndarray.op.lamb_update_phase2,r1,r1,ONE_WORD r1,,,,,,,
mxnet.gluon.rnn.BidirectionalCell,r_cell,DD: RecurrentCell,ONE_WORD RecurrentCell,,,,,,,
mxnet.ndarray.contrib.DeformablePSROIPooling,trans,DD: Symbol,ONE_WORD Symbol,,,,,,,
mxnet.ndarray.op.adam_update,weight,Weight,ONE_WORD Weight,numeric,,,,,,
mxnet.ndarray.op.sgd_update,weight,Weight,ONE_WORD Weight,numeric,,,,,,
mxnet.ndarray.mp_nag_mom_update,weight,Weight,ONE_WORD Weight,numeric,,,,,,
mxnet.ndarray.op.signsgd_update,weight,Weight,ONE_WORD Weight,numeric,,,,,,
mxnet.ndarray.op.mp_lamb_update_phase2,weight32,Weight32,ONE_WORD Weight32,numeric,,,,,,
mxnet.ndarray.linalg_extracttrian,lower,"Refer to the lower triangular matrix if lower=true, refer to the upper otherwise. Only relevant when offset=0",Only relevant when PARAM CONSTANT_NUM,,,,,,,
mxnet.ndarray.contrib.ctc_loss,data_lengths,Lengths of data for each of the samples. Only required when use_data_lengths is true.,Only required when PARAM is CONSTANT_BOOL,,,,,,,
mxnet.ndarray.op.Pooling,count_include_pad,"Only used for AvgPool, specify whether to count padding elements for averagecalculation. For example, with a 5*5 kernel on a 3*3 corner of a image,the sum of the 9 valid elements will be divided by 25 if this is set to true,or it will be divided by 9 if this is set to false. Defaults to true.",Only used for AvgPool specify whether to count padding elements for averagecalculation,,,,,,,
mxnet.contrib.ndarray.quantized_pooling,count_include_pad,"Only used for AvgPool, specify whether to count padding elements for averagecalculation. For example, with a 5*5 kernel on a 3*3 corner of a image,the sum of the 9 valid elements will be divided by 25 if this is set to true,or it will be divided by 9 if this is set to false. Defaults to true.",Only used for AvgPool specify whether to count padding elements for averagecalculation,,,,,,,
mxnet.ndarray.random_uniform,ctx,"Context of output, in format [cpu|gpu|cpu_pinned](n). Only used for imperative calls.",Only used for imperative calls,,,,,,,
mxnet.contrib.ndarray.box_nms,background_id,"Optional, id of the background class which will be ignored in nms.",Optional id of the background class which will be ignored in nms,int,,,,0,"[0,inf)",
mxnet.ndarray.contrib.box_nms,force_suppress,"Optional, if set false and id_index is provided, nms will only apply to boxes belongs to the same category",Optional if set CONSTANT_BOOL and PARAM is provided nms will only apply to boxes belongs to the same category,bool,,,,0,,
mxnet.gluon.model_zoo.vision.get_resnet,num_layers,"Numbers of layers. Options are 18, 34, 50, 101, 152.",Options are CONSTANT_NUM,,,,,,,CONSTANT_NUM
mxnet.ndarray.moveaxis,source,Original position of the axes to move. Can be negative but must be unique.,Original position of the axes to move,,,,,,,
mxnet.ndarray.contrib.SyncBatchNorm,output_mean_var,"Output All,normal mean and var",Output All normal mean and var,,,,,,,
mxnet.test_utils.download,dirname,"output directory name. If None, then guess from fname or use the current directory",output directory name,string,,,,0,,
mxnet.ndarray.contrib.quantize,out_type,Output data type.,Output PARAM type,dtype,,,,,,
mxnet.contrib.ndarray.box_nms,overlap_thresh,Overlapping(IoU) threshold to suppress object with smaller score.,Overlapping BSTR threshold to suppress object with smaller score,,,,,,,
mxnet.gluon.contrib.rnn.Conv3DGRUCell,i2h_pad,Pad for input convolution.,Pad for input convolution,,,,,,,
mxnet.ndarray.op.mp_lamb_update_phase1,wd,Weight decay augments the objective function with a regularization term that penalizes large weights. The penalty scales with the square of the magnitude of each weight.,PARAM decay augments the objective function with a regularization term that penalizes large weights,numeric,,,,,,
mxnet.ndarray.nag_mom_update,wd,Weight decay augments the objective function with a regularization term that penalizes large weights. The penalty scales with the square of the magnitude of each weight.,PARAM decay augments the objective function with a regularization term that penalizes large weights,numeric,,,,,,
mxnet.contrib.ndarray.BilinearResize2D,mode,"DD: {'like', 'odd_scale', 'size', 'to_even_down', 'to_even_up', 'to_odd_down', 'to_odd_up'},optional, default='size'",PARAM QSTR optional default QSTR,,,,,,,QSTR
mxnet.ndarray.random.multinomial,dtype,Data type of the sample output array. The default is int32. Note that the data type of the log likelihood array is the same with that of data.,PARAM type of the sample output D_STRUCTURE,dtype,,,,0,,
mxnet.gluon.rnn.RNNCell,params,DD: Parameter or None,Parameter or None,,,,,,,
mxnet.gluon.rnn.LSTMCell,params,"DD: Parameter or None, default None",Parameter or None default None,,,,,,,
mxnet.gluon.rnn.GRUCell,params,"DD: Parameter or None, default None",Parameter or None default None,,,,,,,
mxnet.io.LibSVMIter,num_parts,partition the data into multiple parts,partition the data into multiple parts,,,,,,,
mxnet.ndarray.Pooling,pooling_convention,Pooling convention to be applied.,Pooling convention to be applied,,,,,,,
mxnet.gluon.nn.GlobalMaxPool1D,layout,"Dimension ordering of data and out ('NCW' or 'NWC'). 'N', 'C', 'W' stands for batch, channel, and width (time) dimensions respectively. Pooling is applied on the W dimension.",Pooling is applied on the W dimension,,,,,,,
mxnet.ndarray.op.moments,keepdims,produce moments with the same dimensionality as the input.,produce moments with the same dimensionality as the input,,,,,,,
mxnet.gluon.nn.Conv3DTranspose,activation,"Activation function to use. See `Activation()`. If you don't specify anything, no activation is applied (ie. ""linear"" activation: a(x) = x).",QSTR activation a BSTR x,,,,,,,
mxnet.ndarray.contrib.box_nms,in_format,"The input box encoding type. ""corner"" means boxes are encoded as [xmin, ymin, xmax, ymax], ""center"" means boxes are encodes as [x, y, width, height].",QSTR means boxes are encoded as BSTR QSTR means boxes are encodes as BSTR,,,,,,,QSTR
mxnet.ndarray.MakeLoss,normalization,"DD: {'batch', 'null', 'valid'},optional, default='null'",QSTR optional default QSTR,,,,,,,QSTR
mxnet.ndarray.contrib.box_nms,in_format,"DD: {'center', 'corner'},optional, default='corner'",QSTR optional default QSTR,,,,,,,QSTR
mxnet.contrib.ndarray.CTCLoss,blank_label,"DD: {'first', 'last'},optional, default='first'",QSTR optional default QSTR,,,,,,,QSTR
mxnet.ndarray.Pooling,pooling_convention,"DD: {'full', 'same', 'valid'},optional, default='valid'",QSTR optional default QSTR,,,,,,,QSTR
mxnet.ndarray.contrib.quantize,out_type,"DD: {'int8', 'uint8'},optional, default='uint8'",QSTR optional default QSTR,,,,,,,QSTR
mxnet.ndarray.op.random_uniform,dtype,"DD: {'None', 'float16', 'float32', 'float64'},optional, default='None'",QSTR optional default QSTR,,,,,,,QSTR
mxnet.contrib.ndarray.BilinearResize2D,mode,"resizing mode. ""simple"" - output height equals parameter ""height"" if ""scale_height"" parameter is not defined or input height multiplied by ""scale_height"" otherwise. Same for width;""odd_scale"" - if original height or width is odd, then result height is calculated like result_h = (original_h - 1) * scale + 1; for scale > 1 the result shape would be like if we did deconvolution with kernel = (1, 1) and stride = (height_scale, width_scale); and for scale < 1 shape would be like we did convolution with kernel = (1, 1) and stride = (int(1 / height_scale), int( 1/ width_scale);""like"" - resize first input to the height and width of second input; ""to_even_down"" - resize input to nearest lower even height and width (if original height is odd then result height = original height - 1);""to_even_up"" - resize input to nearest bigger even height and width (if original height is odd then result height = original height + 1);""to_odd_down"" - resize input to nearest odd height and width (if original height is odd then result height = original height - 1);""to_odd_up"" - resize input to nearest odd height and width (if original height is odd then result height = original height + 1);",QSTR output PARAM equals parameter PARAM if PARAM parameter is not defined or input PARAM multiplied by PARAM otherwise,,,,,,,
mxnet.gluon.nn.GlobalMaxPool1D,layout,"Dimension ordering of data and out ('NCW' or 'NWC'). 'N', 'C', 'W' stands for batch, channel, and width (time) dimensions respectively. Pooling is applied on the W dimension.",QSTR stands for batch channel and width BSTR dimensions respectively,,,,,,,
mxnet.test_utils.check_speed,typ,"""whole"" or ""forward""   ""whole""Test the forward_backward speed.   ",QSTR Test the forward_backward speed,,,,,,,QSTR
mxnet.gluon.contrib.rnn.Conv2DRNNCell,h2h_dilate,Recurrent convolution dilate.,Recurrent convolution dilate,,,,,,,
mxnet.gluon.contrib.rnn.Conv2DGRUCell,h2h_dilate,Recurrent convolution dilate.,Recurrent convolution dilate,,,,,,,
mxnet.ndarray.linalg_extracttrian,lower,"Refer to the lower triangular matrix if lower=true, refer to the upper otherwise. Only relevant when offset=0",Refer to the lower triangular matrix if lower CONSTANT_BOOL refer to the upper otherwise,,,,,,,
mxnet.ndarray.preloaded_multi_sgd_update,rescale_grad,Rescale gradient to grad = rescale_grad*grad.,Rescale gradient to grad rescale_grad grad,,,,,,,
mxnet.ndarray.op.multi_mp_sgd_mom_update,rescale_grad,Rescale gradient to grad = rescale_grad*grad.,Rescale gradient to grad rescale_grad grad,,,,,,,
mxnet.ndarray.mp_nag_mom_update,rescale_grad,Rescale gradient to grad = rescale_grad*grad.,Rescale gradient to PARAM rescale_grad PARAM,,,,,,,
mxnet.contrib.ndarray.group_adagrad_update,rescale_grad,Rescale gradient to grad = rescale_grad*grad.,Rescale gradient to PARAM rescale_grad PARAM,,,,,,,
mxnet.contrib.ndarray.BilinearResize2D,mode,"resizing mode. ""simple"" - output height equals parameter ""height"" if ""scale_height"" parameter is not defined or input height multiplied by ""scale_height"" otherwise. Same for width;""odd_scale"" - if original height or width is odd, then result height is calculated like result_h = (original_h - 1) * scale + 1; for scale > 1 the result shape would be like if we did deconvolution with kernel = (1, 1) and stride = (height_scale, width_scale); and for scale < 1 shape would be like we did convolution with kernel = (1, 1) and stride = (int(1 / height_scale), int( 1/ width_scale);""like"" - resize first input to the height and width of second input; ""to_even_down"" - resize input to nearest lower even height and width (if original height is odd then result height = original height - 1);""to_even_up"" - resize input to nearest bigger even height and width (if original height is odd then result height = original height + 1);""to_odd_down"" - resize input to nearest odd height and width (if original height is odd then result height = original height - 1);""to_odd_up"" - resize input to nearest odd height and width (if original height is odd then result height = original height + 1);",resizing mode,,,,,,,
mxnet.gluon.contrib.rnn.Conv2DGRUCell,params,"DD: RNNParams, default None",RNNParams default None,,,,,,,
mxnet.ndarray.ROIPooling,pooled_size,"ROI pooling output shape (h,w)",ROI pooling output shape BSTR,,,,,,,
mxnet.contrib.ndarray.BilinearResize2D,mode,"resizing mode. ""simple"" - output height equals parameter ""height"" if ""scale_height"" parameter is not defined or input height multiplied by ""scale_height"" otherwise. Same for width;""odd_scale"" - if original height or width is odd, then result height is calculated like result_h = (original_h - 1) * scale + 1; for scale > 1 the result shape would be like if we did deconvolution with kernel = (1, 1) and stride = (height_scale, width_scale); and for scale < 1 shape would be like we did convolution with kernel = (1, 1) and stride = (int(1 / height_scale), int( 1/ width_scale);""like"" - resize first input to the height and width of second input; ""to_even_down"" - resize input to nearest lower even height and width (if original height is odd then result height = original height - 1);""to_even_up"" - resize input to nearest bigger even height and width (if original height is odd then result height = original height + 1);""to_odd_down"" - resize input to nearest odd height and width (if original height is odd then result height = original height - 1);""to_odd_up"" - resize input to nearest odd height and width (if original height is odd then result height = original height + 1);",Same for PARAM QSTR if original PARAM or PARAM is odd then result PARAM is calculated PARAM result_h BSTR scale CONSTANT_NUM for scale REXPR the result shape would be PARAM if we did deconvolution with kernel BSTR and stride BSTR and for scale REXPR shape would be PARAM we did convolution with kernel BSTR and stride BSTR PARAM resize first input to the PARAM and PARAM of second input QSTR resize input to nearest lower even PARAM and PARAM if original PARAM is odd then result PARAM original PARAM CONSTANT_NUM QSTR resize input to nearest bigger even PARAM and PARAM if original PARAM is odd then result PARAM original PARAM CONSTANT_NUM QSTR resize input to nearest odd PARAM and PARAM if original PARAM is odd then result PARAM original PARAM CONSTANT_NUM QSTR resize input to nearest odd PARAM and PARAM if original PARAM is odd then result PARAM original PARAM CONSTANT_NUM,,,,,,,
mxnet.ndarray.linalg_gemm2,alpha,Scalar factor multiplied with A*B.,Scalar factor multiplied with A B,,,,,0,,
mxnet.ndarray.linalg.trsm,alpha,Scalar factor to be applied to the result.,Scalar factor to be applied to the result,,,,,0,,
mxnet.ndarray.op.smooth_l1,scalar,scalar input,scalar input,,,,,0,,
mxnet.ndarray.power,exp,DD: scalar or NDArray,scalar or D_STRUCTURE,,,D_STRUCTURE,,0,,
mxnet.ndarray.logical_xor,rhs,DD: scalar or mxnet.ndarray.array,scalar or mxnet D_STRUCTURE D_STRUCTURE,,,D_STRUCTURE,,0,,
mxnet.ndarray.modulo,lhs,DD: scalar or mxnet.ndarray.array,scalar or mxnet D_STRUCTURE D_STRUCTURE,,,D_STRUCTURE,,0,,
mxnet.ndarray.multiply,rhs,DD: scalar or mxnet.ndarray.array,scalar or mxnet D_STRUCTURE D_STRUCTURE,,,D_STRUCTURE,,0,,
mxnet.ndarray.maximum,lhs,DD: scalar or mxnet.ndarray.array,scalar or mxnet D_STRUCTURE D_STRUCTURE,,,D_STRUCTURE,,0,,
mxnet.ndarray.MAERegressionOutput,grad_scale,Scale the gradient by a float factor,Scale the gradient by a D_TYPE factor,,,,,,,
mxnet.ndarray.op.SoftmaxOutput,grad_scale,Scales the gradient by a float factor.,Scales the gradient by a D_TYPE factor,,,,,,,
mxnet.contrib.ndarray.MultiProposal,cls_prob,Score of how likely proposal is object.,Score of how likely proposal is object,,,,,,,
mxnet.ndarray.multiply,rhs,"Second array to be multiplied. If `lhs.shape != rhs.shape`, they must be broadcastable to a common shape.",Second D_STRUCTURE to be multiplied,,,D_STRUCTURE,,,,
mxnet.ndarray.logical_xor,rhs,"Second input of the function. If `lhs.shape != rhs.shape`, they must be broadcastable to a common shape.",Second input of the function,,,,,,,
mxnet.ndarray.broadcast_hypot,rhs,Second input to the function,Second input to the function,,,,,,,
mxnet.ndarray.sparse.broadcast_minus,rhs,Second input to the function,Second input to the function,,,,,,,
mxnet.ndarray.broadcast_equal,rhs,Second input to the function,Second input to the function,,,,,,,
mxnet.ndarray.broadcast_not_equal,rhs,Second input to the function,Second input to the function,,,,,,,
mxnet.ndarray.broadcast_plus,rhs,Second input to the function,Second input to the function,,,,,,,
mxnet.ndarray.broadcast_greater,rhs,Second input to the function,Second input to the function,,,,,,,
mxnet.ndarray.broadcast_minimum,rhs,Second input to the function,Second input to the function,,,,,,,
mxnet.ndarray.op.broadcast_power,rhs,Second input to the function,Second input to the function,,,,,,,
mxnet.gluon.nn.Conv3DTranspose,activation,"Activation function to use. See `Activation()`. If you don't specify anything, no activation is applied (ie. ""linear"" activation: a(x) = x).",See Activation,,,,,,,
mxnet.ndarray.contrib.CTCLoss,use_label_lengths,"Whether the label lenghts are decided by label_lengths, or derived from padding_mask. If false, the lengths are derived from the first occurrence of the value of padding_mask. The value of padding_mask is `0` when first CTC label is reserved for blank, and `-1` when last label is reserved for blank. See blank_label.",See PARAM,,,,,,,
mxnet.image.center_crop,interp,Interpolation method. See resize_short for details.,See resize_short for details,,,,,,,
mxnet.ndarray.contrib.interleaved_matmul_selfatt_qk,heads,Set number of heads,Set number of heads,int,,,,0,"[0,inf)",
mxnet.contrib.ndarray.CTCLoss,blank_label,"Set the label that is reserved for blank label.If ""first"", 0-th label is reserved, and label values for tokens in the vocabulary are between `1` and `alphabet_size-1`, and the padding mask is `-1`. If ""last"", last label value `alphabet_size-1` is reserved for blank label instead, and label values for tokens in the vocabulary are between `0` and `alphabet_size-2`, and the padding mask is `0`.",Set the PARAM that is reserved for blank PARAM If QSTR CONSTANT_NUM th PARAM is reserved and PARAM values for tokens in the vocabulary are between CONSTANT_NUM and alphabet_size CONSTANT_NUM and the padding mask is CONSTANT_NUM,,,,,,,
mxnet.ndarray.contrib.quantized_conv,dilate,"DD: Shape(tuple), optional, default=[]",Shape BSTR optional default,int,,BSTR,,1,"[0,inf)",
mxnet.ndarray.op.sample_poisson,shape,"DD: Shape(tuple), optional, default=[]",Shape BSTR optional default,int,,BSTR,,1,"[0,inf)",
mxnet.ndarray.op.broadcast_axes,axis,"DD: Shape(tuple), optional, default=[]",Shape BSTR optional default,int,,BSTR,,1,"[0,inf)",
mxnet.ndarray.op.Convolution,dilate,"DD: Shape(tuple), optional, default=[]",Shape BSTR optional default,int,,BSTR,,1,"[0,inf)",
mxnet.ndarray.op.Pooling,stride,"DD: Shape(tuple), optional, default=[]",Shape BSTR optional default,int,,BSTR,,1,"[0,inf)",
mxnet.ndarray.slice_like,axes,"DD: Shape(tuple), optional, default=[]",Shape BSTR optional default,int,,BSTR,,1,"[0,inf)",
mxnet.ndarray.op.GridGenerator,target_shape,"DD: Shape(tuple), optional, default=[0,0]",Shape BSTR optional default BSTR,int,,BSTR,,1,"[0,inf)",
mxnet.ndarray.random_normal,shape,"DD: Shape(tuple), optional, default=None",Shape BSTR optional default None,int,,BSTR,,1,"[0,inf)",
mxnet.ndarray.ravel_multi_index,shape,"DD: Shape(tuple), optional, default=None",Shape BSTR optional default None,int,,BSTR,,1,"[0,inf)",
mxnet.ndarray.reverse,axis,"DD: Shape(tuple), required",Shape BSTR required,int,,BSTR,,1,"[0,inf)",
mxnet.ndarray.op.scatter_nd,shape,"DD: Shape(tuple), required",Shape BSTR required,int,,BSTR,,1,"[0,inf)",
mxnet.ndarray.ROIPooling,pooled_size,"DD: Shape(tuple), required",Shape BSTR required,int,,BSTR,,1,"[0,inf)",
mxnet.ndarray.op.scatter_nd,shape,Shape of output.,Shape of output,int,,,,1,"[0,inf)",
mxnet.ndarray.ravel_multi_index,shape,Shape of the array into which the multi-indices apply.,Shape of the D_STRUCTURE into which the multi indices apply,int,,,,1,"[0,inf)",
mxnet.ndarray.random_normal,shape,Shape of the output.,Shape of the output,int,,,,1,"[0,inf)",
mxnet.ndarray.op.nansum,axis,"DD: Shape or None, optional, default=None",Shape or None optional default None,int,,,,1,"[0,inf)",
mxnet.ndarray.min,axis,"DD: Shape or None, optional, default=None",Shape or None optional default None,int,,,,1,"[0,inf)",
mxnet.ndarray.op.max_axis,axis,"DD: Shape or None, optional, default=None",Shape or None optional default None,int,,,,1,"[0,inf)",
mxnet.ndarray.op.sample_poisson,shape,Shape to be sampled from each random distribution.,Shape to be sampled from each random distribution,int,,,,1,"[0,inf)",
mxnet.gluon.nn.AvgPool3D,pool_size,Size of the average pooling windows.,Size of the average pooling windows,int,,,,,"[0,inf)",
mxnet.ndarray.slice,data,Source input,Source input,,,,,,,
mxnet.ndarray.op.GridGenerator,target_shape,"Specifies the output shape (H, W). This is required if transformation type is affine. If transformation type is warp, this parameter is ignored.",Specifies the output shape BSTR,int,,,BSTR,1,"[0,inf)",
mxnet.ndarray.linspace,start,Start of interval.,Start of interval,numeric,,,,,,
mxnet.ndarray.op.Pooling,stride,"Stride: for pooling (y, x) or (d, y, x). Defaults to 1 for each dimension.",Stride for pooling BSTR,int,,,,,"[0,inf)",
mxnet.ndarray.Correlation,stride2,stride2 quantize data2 within the neighborhood centered around data1,stride2 quantize PARAM within the neighborhood centered around PARAM,int,,,,,"[0,inf)",
mxnet.ndarray.op.broadcast_axes,axis,The axes to perform the broadcasting.,The axes to perform the broadcasting,int,,,,,,
mxnet.ndarray.op.repeat,axis,"The axis along which to repeat values. The negative numbers are interpreted counting from the backward. By default, use the flattened input array, and return a flat output array.",The axis along which to repeat values,int,,,,0,,
mxnet.gluon.utils.split_data,batch_axis,The axis along which to slice.,The axis along which to slice,int,,,,0,,
mxnet.ndarray.take,axis,"The axis of input array to be taken.For input tensor of rank r, it could be in the range of [-r, r-1]",The axis of input D_STRUCTURE to be taken For input D_STRUCTURE of rank r it could be in the range of BSTR,int,,,,0,,
mxnet.ndarray.op.nansum,axis,"The axis or axes along which to perform the reduction.  The default, axis=(), will compute over all elements into a scalar array with shape (1,). If axis is int, a reduction is performed on a particular axis. If axis is a tuple of ints, a reduction is performed on all the axes specified in the tuple. If exclude is true, reduction will be performed on the axes that are NOT in axis instead. Negative values means indexing from right to left.  ",The axis or axes along which to perform the reduction,int,,,,0,,
mxnet.ndarray.min,axis,"The axis or axes along which to perform the reduction.  The default, axis=(), will compute over all elements into a scalar array with shape (1,). If axis is int, a reduction is performed on a particular axis. If axis is a tuple of ints, a reduction is performed on all the axes specified in the tuple. If exclude is true, reduction will be performed on the axes that are NOT in axis instead. Negative values means indexing from right to left.  ",The axis or axes along which to perform the reduction,int,,,,0,,
mxnet.ndarray.op.max_axis,axis,"The axis or axes along which to perform the reduction.  The default, axis=(), will compute over all elements into a scalar array with shape (1,). If axis is int, a reduction is performed on a particular axis. If axis is a tuple of ints, a reduction is performed on all the axes specified in the tuple. If exclude is true, reduction will be performed on the axes that are NOT in axis instead. Negative values means indexing from right to left.  ",The axis or axes along which to perform the reduction,int,,,,0,,
mxnet.gluon.nn.LayerNorm,axis,The axis that should be normalized. This is typically the axis of the channels.,The axis that should be normalized,int,,,,0,,
mxnet.gluon.nn.BatchNorm,axis,"The axis that should be normalized. This is typically the channels (C) axis. For instance, after a Conv2D layer with layout='NCHW', set axis=1 in BatchNorm. If layout='NHWC', then set axis=3.",The axis that should be normalized,int,,,,0,,
mxnet.ndarray.pick,axis,"int or None. The axis to picking the elements. Negative values means indexing from right to left. If is None, the elements in the index w.r.t the flattened input will be picked.",The axis to picking the elements,int,,,,0,,
mxnet.ndarray.reverse,axis,The axis which to reverse elements.,The axis which to reverse elements,int,,,,0,,
mxnet.gluon.model_zoo.vision.vgg19,ctx,The context in which to load the pretrained weights.,The context in which to load the PARAM weights,,,,,,,
mxnet.contrib.ndarray.SyncBatchNorm,ndev,The count of GPU devices,The count of GPU devices,int,,,,0,"[0,inf)",
mxnet.ndarray.op.sgd_mom_update,momentum,The decay rate of momentum estimates at each epoch.,The decay rate of momentum estimates at each epoch,numeric,,,,,"[0,1]",
mxnet.ndarray.op.nansum,axis,"The axis or axes along which to perform the reduction.  The default, axis=(), will compute over all elements into a scalar array with shape (1,). If axis is int, a reduction is performed on a particular axis. If axis is a tuple of ints, a reduction is performed on all the axes specified in the tuple. If exclude is true, reduction will be performed on the axes that are NOT in axis instead. Negative values means indexing from right to left.  ",The default axis BSTR,,,,,,,
mxnet.ndarray.min,axis,"The axis or axes along which to perform the reduction.  The default, axis=(), will compute over all elements into a scalar array with shape (1,). If axis is int, a reduction is performed on a particular axis. If axis is a tuple of ints, a reduction is performed on all the axes specified in the tuple. If exclude is true, reduction will be performed on the axes that are NOT in axis instead. Negative values means indexing from right to left.  ",The default axis BSTR,,,,,,,
mxnet.ndarray.op.max_axis,axis,"The axis or axes along which to perform the reduction.  The default, axis=(), will compute over all elements into a scalar array with shape (1,). If axis is int, a reduction is performed on a particular axis. If axis is a tuple of ints, a reduction is performed on all the axes specified in the tuple. If exclude is true, reduction will be performed on the axes that are NOT in axis instead. Negative values means indexing from right to left.  ",The default axis BSTR,,,,,,,
mxnet.ndarray.random.multinomial,dtype,Data type of the sample output array. The default is int32. Note that the data type of the log likelihood array is the same with that of data.,The default is D_TYPE,dtype,,,,0,,
mxnet.gluon.nn.Conv1D,channels,"The dimensionality of the output space, i.e. the number of output channels (filters) in the convolution.",The dimensionality of the output space i e,int,,,,,,
mxnet.ndarray.power,exp,"The exponent array. If `base.shape != exp.shape`, they must be broadcastable to a common shape.",The exponent D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.ndarray.swapaxes,dim1,the first axis to be swapped.,the first axis to be swapped,int,,,,0,,
mxnet.ndarray.op.batch_dot,lhs,The first input,The first input,,,,,,,
mxnet.ndarray.op.dot,lhs,The first input,The first input,,,,,,,
mxnet.test_utils.var_check,generator,The generator function. It's expected to generate N i.i.d samples by calling generator(N).,The generator function,,,,,,,
mxnet.ndarray.broadcast_axis,data,The input,The input,,,,,,,
mxnet.ndarray.max,data,The input,The input,,,,,,,
mxnet.ndarray.op.sum,data,The input,The input,,,,,,,
mxnet.ndarray.sum_axis,data,The input,The input,,,,,,,
mxnet.ndarray.split,data,The input,The input,,,,,,,
mxnet.ndarray.contrib.box_non_maximum_suppression,data,The input,The input,,,,,,,
mxnet.ndarray.image.flip_top_bottom,data,The input.,The input,,,,,,,
mxnet.ndarray.contrib.box_nms,in_format,"The input box encoding type. ""corner"" means boxes are encoded as [xmin, ymin, xmax, ymax], ""center"" means boxes are encodes as [x, y, width, height].",The input box encoding type,,,,,,,
mxnet.ndarray.op.pick,data,The input array,The input D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.ndarray.argsort,data,The input array,The input D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.ndarray.sparse.cbrt,data,The input array.,The input D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.ndarray.op.degrees,data,The input array.,The input D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.ndarray.BlockGrad,data,The input array.,The input D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.ndarray.make_loss,data,The input array.,The input D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.ndarray.sparse.negative,data,The input array.,The input D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.ndarray.ceil,data,The input array.,The input D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.ndarray.erfinv,data,The input array.,The input D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.ndarray.log1p,data,The input array.,The input D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.ndarray.sinh,data,The input array.,The input D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.ndarray.contrib.div_sqrt_dim,data,The input array.,The input D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.ndarray.contrib.sign_ste,data,The input array.,The input D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.ndarray.sparse.Embedding,data,The input array to the embedding operator.,The input D_STRUCTURE to the embedding operator,,,D_STRUCTURE,,,,
mxnet.io.LibSVMIter,label_libsvm,"The input LibSVM label file or a directory path. If NULL, all labels will be read from `data_libsvm`.",The input LibSVM label file or a directory path,,,,,,,
mxnet.io.LibSVMIter,data_libsvm,The input zero-base indexed LibSVM data file or a directory path.,The input zero base indexed LibSVM data file or a directory path,,,,,,,
mxnet.io.ImageRecordIter,mean_b,The mean value to be subtracted on the B channel,The mean value to be subtracted on the B channel,numeric,,,,,,
mxnet.io.ImageRecordIter,mean_r,The mean value to be subtracted on the R channel,The mean value to be subtracted on the R channel,numeric,,,,,,
mxnet.image.CreateDetAugmenter,min_eject_coverage,"The minimum coverage of cropped sample w.r.t its original size. With this constraint, objects that have marginal area after crop will be discarded.",The minimum coverage of cropped sample w r t its original size,int,,,,,"[0,inf)",
mxnet.ndarray.op.repeat,axis,"The axis along which to repeat values. The negative numbers are interpreted counting from the backward. By default, use the flattened input array, and return a flat output array.",The negative numbers are interpreted counting from the backward,,,,,,,
mxnet.gluon.rnn.GRU,hidden_size,The number of features in the hidden state h,The number of features in the hidden state h,int,,,,0,"[0,inf)",
mxnet.gluon.nn.Conv3D,in_channels,"The number of input channels to this layer. If not specified, initialization will be deferred to the first time forward is called and in_channels will be inferred from the shape of input data.",The number of input PARAM to this layer,int,,,,0,"[0,inf)",
mxnet.gluon.nn.Conv1D,channels,"The dimensionality of the output space, i.e. the number of output channels (filters) in the convolution.",the number of output channels BSTR in the convolution,int,,,,0,"[0,inf)",
mxnet.image.resize_short,src,The original image.,The original image,numeric,,,,,,
mxnet.contrib.ndarray.MultiBoxPrior,out,The output NDArray to hold the result.,The output D_STRUCTURE to hold the result,,,D_STRUCTURE,,,,
mxnet.ndarray.op.reshape_like,out,The output NDArray to hold the result.,The output D_STRUCTURE to hold the result,,,D_STRUCTURE,,,,
mxnet.ndarray.op.trunc,out,The output NDArray to hold the result.,The output D_STRUCTURE to hold the result,,,D_STRUCTURE,,,,
mxnet.contrib.ndarray.quantized_fully_connected,out,The output NDArray to hold the result.,The output D_STRUCTURE to hold the result,,,D_STRUCTURE,,,,
mxnet.ndarray.sparse.rint,out,The output NDArray to hold the result.,The output D_STRUCTURE to hold the result,,,D_STRUCTURE,,,,
mxnet.ndarray.contrib.index_array,out,The output NDArray to hold the result.,The output D_STRUCTURE to hold the result,,,D_STRUCTURE,,,,
mxnet.ndarray.contrib.AdaptiveAvgPooling2D,out,The output NDArray to hold the result.,The output D_STRUCTURE to hold the result,,,D_STRUCTURE,,,,
mxnet.ndarray.sparse.elemwise_sub,out,The output NDArray to hold the result.,The output D_STRUCTURE to hold the result,,,D_STRUCTURE,,,,
mxnet.ndarray.sigmoid,out,The output NDArray to hold the result.,The output D_STRUCTURE to hold the result,,,D_STRUCTURE,,,,
mxnet.contrib.ndarray.interleaved_matmul_selfatt_valatt,out,The output NDArray to hold the result.,The output D_STRUCTURE to hold the result,,,D_STRUCTURE,,,,
mxnet.ndarray.image.random_flip_left_right,out,The output NDArray to hold the result.,The output D_STRUCTURE to hold the result,,,D_STRUCTURE,,,,
mxnet.ndarray.op.min_axis,out,The output NDArray to hold the result.,The output D_STRUCTURE to hold the result,,,D_STRUCTURE,,,,
mxnet.ndarray.op.shape_array,out,The output NDArray to hold the result.,The output D_STRUCTURE to hold the result,,,D_STRUCTURE,,,,
mxnet.ndarray.cos,out,The output NDArray to hold the result.,The output D_STRUCTURE to hold the result,,,D_STRUCTURE,,,,
mxnet.contrib.ndarray.box_non_maximum_suppression,out,The output NDArray to hold the result.,The output D_STRUCTURE to hold the result,,,D_STRUCTURE,,,,
mxnet.ndarray.op.GroupNorm,out,The output NDArray to hold the result.,The output D_STRUCTURE to hold the result,,,D_STRUCTURE,,,,
mxnet.ndarray.SoftmaxOutput,out,The output NDArray to hold the result.,The output D_STRUCTURE to hold the result,,,D_STRUCTURE,,,,
mxnet.ndarray.op.smooth_l1,out,The output NDArray to hold the result.,The output D_STRUCTURE to hold the result,,,D_STRUCTURE,,,,
mxnet.ndarray.sparse.expm1,out,The output NDArray to hold the result.,The output D_STRUCTURE to hold the result,,,D_STRUCTURE,,,,
mxnet.ndarray.random_uniform,out,The output NDArray to hold the result.,The output D_STRUCTURE to hold the result,,,D_STRUCTURE,,,,
mxnet.contrib.ndarray.backward_index_copy,out,The output NDArray to hold the result.,The output D_STRUCTURE to hold the result,,,D_STRUCTURE,,,,
mxnet.ndarray.op.FullyConnected,out,The output NDArray to hold the result.,The output D_STRUCTURE to hold the result,,,D_STRUCTURE,,,,
mxnet.ndarray.op.random_randint,out,The output NDArray to hold the result.,The output D_STRUCTURE to hold the result,,,D_STRUCTURE,,,,
mxnet.ndarray.op.transpose,out,The output NDArray to hold the result.,The output D_STRUCTURE to hold the result,,,D_STRUCTURE,,,,
mxnet.ndarray.contrib.quantized_concat,out,The output NDArray to hold the result.,The output D_STRUCTURE to hold the result,,,D_STRUCTURE,,,,
mxnet.ndarray.op.sign,out,The output NDArray to hold the result.,The output D_STRUCTURE to hold the result,,,D_STRUCTURE,,,,
mxnet.ndarray.random_normal,out,The output NDArray to hold the result.,The output D_STRUCTURE to hold the result,,,D_STRUCTURE,,,,
mxnet.ndarray.op.preloaded_multi_mp_sgd_mom_update,out,The output NDArray to hold the result.,The output D_STRUCTURE to hold the result,,,D_STRUCTURE,,,,
mxnet.ndarray.multi_sgd_update,out,The output NDArray to hold the result.,The output D_STRUCTURE to hold the result,,,D_STRUCTURE,,,,
mxnet.contrib.ndarray.round_ste,out,The output NDArray to hold the result.,The output D_STRUCTURE to hold the result,,,D_STRUCTURE,,,,
mxnet.ndarray.sample_multinomial,out,The output NDArray to hold the result.,The output D_STRUCTURE to hold the result,,,D_STRUCTURE,,,,
mxnet.ndarray.random_gamma,out,The output NDArray to hold the result.,The output D_STRUCTURE to hold the result,,,D_STRUCTURE,,,,
mxnet.ndarray.op.flatten,out,The output NDArray to hold the result.,The output D_STRUCTURE to hold the result,,,D_STRUCTURE,,,,
mxnet.ndarray.op.arcsinh,out,The output NDArray to hold the result.,The output D_STRUCTURE to hold the result,,,D_STRUCTURE,,,,
mxnet.ndarray.topk,out,The output NDArray to hold the result.,The output D_STRUCTURE to hold the result,,,D_STRUCTURE,,,,
mxnet.ndarray.op.broadcast_div,out,The output NDArray to hold the result.,The output D_STRUCTURE to hold the result,,,D_STRUCTURE,,,,
mxnet.ndarray.sparse.adam_update,out,The output NDArray to hold the result.,The output D_STRUCTURE to hold the result,,,D_STRUCTURE,,,,
mxnet.ndarray.sparse.broadcast_minus,out,The output NDArray to hold the result.,The output D_STRUCTURE to hold the result,,,D_STRUCTURE,,,,
mxnet.ndarray.sparse.log1p,out,The output NDArray to hold the result.,The output D_STRUCTURE to hold the result,,,D_STRUCTURE,,,,
mxnet.ndarray.LRN,out,The output NDArray to hold the result.,The output D_STRUCTURE to hold the result,,,D_STRUCTURE,,,,
mxnet.ndarray.linalg.slogdet,out,The output NDArray to hold the result.,The output D_STRUCTURE to hold the result,,,D_STRUCTURE,,,,
mxnet.ndarray.op.broadcast_lesser,out,The output NDArray to hold the result.,The output D_STRUCTURE to hold the result,,,D_STRUCTURE,,,,
mxnet.ndarray.lamb_update_phase1,out,The output NDArray to hold the result.,The output D_STRUCTURE to hold the result,,,D_STRUCTURE,,,,
mxnet.ndarray.nag_mom_update,out,The output NDArray to hold the result.,The output D_STRUCTURE to hold the result,,,D_STRUCTURE,,,,
mxnet.ndarray.op.identity,out,The output NDArray to hold the result.,The output D_STRUCTURE to hold the result,,,D_STRUCTURE,,,,
mxnet.ndarray.op.norm,out_dtype,The data type of the output.,The PARAM type of the output,dtype,,,,,,
mxnet.ndarray.op.LRN,knorm,The parameter \(k\) in the LRN expression.,The parameter k in the LRN expression,,,,,,,
mxnet.ndarray.op.mp_lamb_update_phase1,wd,Weight decay augments the objective function with a regularization term that penalizes large weights. The penalty scales with the square of the magnitude of each weight.,The penalty scales with the square of the magnitude of each PARAM,,,,,,,
mxnet.ndarray.nag_mom_update,wd,Weight decay augments the objective function with a regularization term that penalizes large weights. The penalty scales with the square of the magnitude of each weight.,The penalty scales with the square of the magnitude of each PARAM,,,,,,,
mxnet.io.ImageRecordIter,shuffle_chunk_seed,The random seed for shuffling,The random PARAM for shuffling,,,,,,,
mxnet.test_utils.assert_almost_equal,rtol,The relative threshold. Default threshold will be used if set to `None`.,The relative threshold,,,,,,,
mxnet.contrib.ndarray.arange_like,repeat,"The repeating time of all elements. E.g repeat=3, the element a will be repeated three times -> a, a, a.",The repeating time of all elements,int,,,,,"[0,inf)",
mxnet.ndarray.zeros,shape,The shape of the empty array,The shape of the empty D_STRUCTURE,int,,,,1,"[0,inf)",
mxnet.ndarray.contrib.CTCLoss,use_label_lengths,"Whether the label lenghts are decided by label_lengths, or derived from padding_mask. If false, the lengths are derived from the first occurrence of the value of padding_mask. The value of padding_mask is `0` when first CTC label is reserved for blank, and `-1` when last label is reserved for blank. See blank_label.",The value of padding_mask is CONSTANT_NUM when first CTC PARAM is reserved for blank and CONSTANT_NUM when last PARAM is reserved for blank,,,,,,,
mxnet.util.np_ufunc_legal_option,value,the value of the ufunc argument.,the value of the ufunc argument,,,,,,,
mxnet.ndarray.Softmax,multi_output,"If set to `true`, the softmax function will be computed along axis `1`. This is applied when the shape of input array differs from the shape of label array.",This is applied when the shape of input D_STRUCTURE differs from the shape of PARAM D_STRUCTURE,,,,,,,
mxnet.ndarray.op.GridGenerator,target_shape,"Specifies the output shape (H, W). This is required if transformation type is affine. If transformation type is warp, this parameter is ignored.",This is required if transformation type is affine,,,,,,,
mxnet.gluon.nn.LayerNorm,axis,The axis that should be normalized. This is typically the axis of the channels.,This is typically the axis of the channels,int,,,,0,,
mxnet.gluon.nn.BatchNorm,axis,"The axis that should be normalized. This is typically the channels (C) axis. For instance, after a Conv2D layer with layout='NCHW', set axis=1 in BatchNorm. If layout='NHWC', then set axis=3.",This is typically the channels BSTR axis,int,,,,0,,
mxnet.ndarray.RNN,lstm_state_clip_max,Maximum clip value of LSTM states. This option must be used together with lstm_state_clip_min.,This option must be used together with PARAM,,,,,,,
mxnet.image.copyMakeBorder,top,Top margin.,Top margin,,,,,,,
mxnet.ndarray.GroupNorm,num_groups,Total number of groups.,Total number of groups,int,,,,0,"[0,inf)",
mxnet.ndarray.contrib.DeformablePSROIPooling,trans,transition parameter,transition parameter,,,,,,,
mxnet.ndarray.Convolution,cudnn_off,Turn off cudnn for this layer.,Turn off cudnn for this layer,,,,,,,
mxnet.ndarray.contrib.quantized_conv,cudnn_off,Turn off cudnn for this layer.,Turn off cudnn for this layer,,,,,,,
mxnet.ndarray.contrib.edge_id,u,u ndarray,u D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.ndarray.linalg_trmm,transpose,Use transposed of the triangular matrix,Use transposed of the triangular matrix,,,,,,,
mxnet.ndarray.op.linalg_trsm,transpose,Use transposed of the triangular matrix,Use transposed of the triangular matrix,,,,,,,
mxnet.ndarray.linalg.trmm,transpose,Use transposed of the triangular matrix,Use transposed of the triangular matrix,,,,,,,
mxnet.ndarray.linalg.trsm,transpose,Use transposed of the triangular matrix,Use transposed of the triangular matrix,,,,,,,
mxnet.contrib.ndarray.edge_id,v,v ndarray,v D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.gluon.utils.download,verify_ssl,Verify SSL certificates.,Verify SSL certificates,,,,,,,
mxnet.ndarray.op.preloaded_multi_sgd_mom_update,*data,"Weights, gradients, momentum, learning rates and weight decays",Weights gradients PARAM learning rates and weight decays,numeric,,,,,,
mxnet.ndarray.op.Deconvolution,weight,Weights representing the kernel.,Weights representing the PARAM,numeric,,,,,,
mxnet.ndarray.contrib.CTCLoss,use_label_lengths,"Whether the label lenghts are decided by label_lengths, or derived from padding_mask. If false, the lengths are derived from the first occurrence of the value of padding_mask. The value of padding_mask is `0` when first CTC label is reserved for blank, and `-1` when last label is reserved for blank. See blank_label.",Whether the PARAM lenghts are decided by PARAM or derived from padding_mask,bool,,,,0,,
mxnet.ndarray.FullyConnected,no_bias,Whether to disable bias parameter.,Whether to disable PARAM parameter,bool,,,,0,,
mxnet.ndarray.op.FullyConnected,no_bias,Whether to disable bias parameter.,Whether to disable PARAM parameter,bool,,,,0,,
mxnet.ndarray.contrib.quantized_conv,no_bias,Whether to disable bias parameter.,Whether to disable PARAM parameter,bool,,,,0,,
mxnet.ndarray.Deconvolution,no_bias,Whether to disable bias parameter.,Whether to disable PARAM parameter,bool,,,,0,,
mxnet.gluon.utils.split_and_load,even_split,Whether to force all slices to have the same number of elements.,Whether to force all slices to have the same number of elements,bool,,,,0,,
mxnet.gluon.model_zoo.vision.vgg19_bn,pretrained,Whether to load the pretrained weights for model.,Whether to load the pretrained weights for model,bool,,,,0,,
mxnet.gluon.model_zoo.vision.mobilenet0_25,pretrained,Whether to load the pretrained weights for model.,Whether to load the pretrained weights for model,bool,,,,0,,
mxnet.gluon.model_zoo.vision.squeezenet1_0,pretrained,Whether to load the pretrained weights for model.,Whether to load the pretrained weights for model,bool,,,,0,,
mxnet.contrib.ndarray.quantized_conv,cudnn_tune,Whether to pick convolution algo by running performance test.,Whether to pick convolution algo by running performance test,bool,,,,0,,
mxnet.ndarray.argsort,is_ascend,Whether to sort in ascending or descending order.,Whether to sort in ascending or descending order,bool,,,,0,,
mxnet.ndarray.op.BilinearSampler,cudnn_off,whether to turn cudnn off,whether to turn cudnn off,bool,,,,0,,
mxnet.image.CreateDetAugmenter,min_eject_coverage,"The minimum coverage of cropped sample w.r.t its original size. With this constraint, objects that have marginal area after crop will be discarded.",With this constraint objects that have marginal area after crop will be discarded,,,,,,,
mxnet.test_utils.chi_square_check,generator,A function that is assumed to generate i.i.d samples from a specific distribution. generator(N) should generate N random samples.,A function that is assumed to generate i i d samples from a specific distribution,,,,,,,
mxnet.gluon.nn.Dense,activation,"Activation function to use. See help on Activation layer. If you don't specify anything, no activation is applied (ie. ""linear"" activation: a(x) = x).",activation function to use,,,,,,,
mxnet.io.ImageDetRecordIter,aug_seq,"Augmentation Param: the augmenter names to represent sequence of augmenters to be applied, seperated by comma. Additional keyword parameters will be seen by these augmenters. Make sure you don't use normal augmenters for detection tasks.",Additional keyword parameters will be seen by these augmenters,,,,,,,
mxnet.ndarray.random.uniform,low,Lower boundary of the output interval. All values generated will be greater than or equal to low. The default value is 0.,All values generated will be greater than or equal to low,,,,,,,
mxnet.ndarray.op.split,squeeze_axis,"If true, Removes the axis with length 1 from the shapes of the output arrays. Note that setting squeeze_axis to `true` removes axis with length 1 only along the axis which it is split. Also squeeze_axis can be set to `true` only if `input.shape[axis] == num_outputs`.",Also squeeze_axis can be set to CONSTANT_BOOL only if input shape BSTR PARAM,bool,,,,0,,
mxnet.contrib.autograd.grad,argnum,DD: an int or a list of int,an D_TYPE or a D_STRUCTURE of D_TYPE,D_TYPE,,D_STRUCTURE,,,,
mxnet.io.ImageDetRecordIter,resize_mode,"Augmentation Param: How image data fit in data_shape. force: force reshape to data_shape regardless of aspect ratio; shrink: ensure each side fit in data_shape, preserve aspect ratio; fit: fit image to data_shape, preserve ratio, will upscale if applicable.",Augmentation Param How image data fit in PARAM,,,,,,,
mxnet.io.ImageDetRecordIter,scale,Augmentation Param: Scale in color space.,Augmentation Param scale in color space,,,,,,,
mxnet.io.ImageDetRecordIter,aug_seq,"Augmentation Param: the augmenter names to represent sequence of augmenters to be applied, seperated by comma. Additional keyword parameters will be seen by these augmenters. Make sure you don't use normal augmenters for detection tasks.",Augmentation Param the augmenter names to represent D_STRUCTURE of augmenters to be applied seperated by comma,string,,,,0,,
mxnet.test_utils.numeric_grad,aux_states,Auxiliary states values used as location to compute gradient Maps the name of aux_states to the corresponding numpy.ndarray. Value of all the auxiliary arguments must be provided.,Auxiliary states values used as PARAM to compute gradient Maps the name of aux_states to the corresponding numpy D_STRUCTURE,,,,,,,
mxnet.ndarray.contrib.DeformablePSROIPooling,rois,"Bounding box coordinates, a 2D array of [[batch_index, x1, y1, x2, y2]]. (x1, y1) and (x2, y2) are top left and down right corners of designated region of interest. batch_index indicates the index of corresponding image in the input data",batch_index indicates the index of corresponding image in the input PARAM,int,,,,0,,
mxnet.ndarray.LayerNorm,beta,beta array,beta D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.ndarray.FullyConnected,bias,Bias parameter.,bias parameter,,,,,,,
mxnet.ndarray.contrib.DeformablePSROIPooling,rois,"Bounding box coordinates, a 2D array of [[batch_index, x1, y1, x2, y2]]. (x1, y1) and (x2, y2) are top left and down right corners of designated region of interest. batch_index indicates the index of corresponding image in the input data",Bounding box coordinates a CONSTANT_NUM D D_STRUCTURE of BSTR,,,D_STRUCTURE,BSTR,CONSTANT_NUM,,
mxnet.image.imresize,interp,"Interpolation method (default=cv2.INTER_LINEAR). Possible values: 0: Nearest Neighbors Interpolation. 1: Bilinear interpolation. 2: Bicubic interpolation over 4x4 pixel neighborhood. 3: Area-based (resampling using pixel area relation). It may be a preferred method for image decimation, as it gives moire-free results. But when the image is zoomed, it is similar to the Nearest Neighbors method. (used by default). 4: Lanczos interpolation over 8x8 pixel neighborhood. 9: Cubic for enlarge, area for shrink, bilinear for others 10: Random select from interpolation method metioned above. Note: When shrinking an image, it will generally look best with AREA-based interpolation, whereas, when enlarging an image, it will generally look best with Bicubic (slow) or Bilinear (faster but still looks OK). More details can be found in the documentation of OpenCV, please refer to http://docs.opencv.org/master/da/d54/group__imgproc__transform.html.",ONE_WORD BSTR,,,,,,,
mxnet.ndarray.op.LeakyReLU,slope,Init slope for the activation. (For leaky and elu only),ONE_WORD BSTR,,,,,,,
mxnet.ndarray.contrib.DeformablePSROIPooling,rois,"Bounding box coordinates, a 2D array of [[batch_index, x1, y1, x2, y2]]. (x1, y1) and (x2, y2) are top left and down right corners of designated region of interest. batch_index indicates the index of corresponding image in the input data",BSTR are top left and down right corners of designated region of interest,,,,,,,
mxnet.image.imresize,interp,"Interpolation method (default=cv2.INTER_LINEAR). Possible values: 0: Nearest Neighbors Interpolation. 1: Bilinear interpolation. 2: Bicubic interpolation over 4x4 pixel neighborhood. 3: Area-based (resampling using pixel area relation). It may be a preferred method for image decimation, as it gives moire-free results. But when the image is zoomed, it is similar to the Nearest Neighbors method. (used by default). 4: Lanczos interpolation over 8x8 pixel neighborhood. 9: Cubic for enlarge, area for shrink, bilinear for others 10: Random select from interpolation method metioned above. Note: When shrinking an image, it will generally look best with AREA-based interpolation, whereas, when enlarging an image, it will generally look best with Bicubic (slow) or Bilinear (faster but still looks OK). More details can be found in the documentation of OpenCV, please refer to http://docs.opencv.org/master/da/d54/group__imgproc__transform.html.",But when the image is zoomed it is similar to the Nearest Neighbors method,,,,,,,
mxnet.ndarray.transpose,axes,Target axis order. By default the axes will be inverted.,By default the axes will be inverted,,,,,,,
mxnet.profiler.dumps,sort_by,"can take 'total', 'avg', 'min', 'max', or 'count' by which stat to sort the entries in each category defaults to 'total'",can take QSTR by which stat to sort the entries in each category defaults to QSTR,,,,,,,QSTR
mxnet.ndarray.op.where,condition,condition array,condition D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.image.imresize,interp,"Interpolation method (default=cv2.INTER_LINEAR). Possible values: 0: Nearest Neighbors Interpolation. 1: Bilinear interpolation. 2: Bicubic interpolation over 4x4 pixel neighborhood. 3: Area-based (resampling using pixel area relation). It may be a preferred method for image decimation, as it gives moire-free results. But when the image is zoomed, it is similar to the Nearest Neighbors method. (used by default). 4: Lanczos interpolation over 8x8 pixel neighborhood. 9: Cubic for enlarge, area for shrink, bilinear for others 10: Random select from interpolation method metioned above. Note: When shrinking an image, it will generally look best with AREA-based interpolation, whereas, when enlarging an image, it will generally look best with Bicubic (slow) or Bilinear (faster but still looks OK). More details can be found in the documentation of OpenCV, please refer to http://docs.opencv.org/master/da/d54/group__imgproc__transform.html.",CONSTANT_NUM Area based BSTR,,,,,,,CONSTANT_NUM
mxnet.image.imresize,interp,"Interpolation method (default=cv2.INTER_LINEAR). Possible values: 0: Nearest Neighbors Interpolation. 1: Bilinear interpolation. 2: Bicubic interpolation over 4x4 pixel neighborhood. 3: Area-based (resampling using pixel area relation). It may be a preferred method for image decimation, as it gives moire-free results. But when the image is zoomed, it is similar to the Nearest Neighbors method. (used by default). 4: Lanczos interpolation over 8x8 pixel neighborhood. 9: Cubic for enlarge, area for shrink, bilinear for others 10: Random select from interpolation method metioned above. Note: When shrinking an image, it will generally look best with AREA-based interpolation, whereas, when enlarging an image, it will generally look best with Bicubic (slow) or Bilinear (faster but still looks OK). More details can be found in the documentation of OpenCV, please refer to http://docs.opencv.org/master/da/d54/group__imgproc__transform.html.",CONSTANT_NUM Bicubic interpolation over 4x4 pixel neighborhood,,,,,,,CONSTANT_NUM
mxnet.image.imresize,interp,"Interpolation method (default=cv2.INTER_LINEAR). Possible values: 0: Nearest Neighbors Interpolation. 1: Bilinear interpolation. 2: Bicubic interpolation over 4x4 pixel neighborhood. 3: Area-based (resampling using pixel area relation). It may be a preferred method for image decimation, as it gives moire-free results. But when the image is zoomed, it is similar to the Nearest Neighbors method. (used by default). 4: Lanczos interpolation over 8x8 pixel neighborhood. 9: Cubic for enlarge, area for shrink, bilinear for others 10: Random select from interpolation method metioned above. Note: When shrinking an image, it will generally look best with AREA-based interpolation, whereas, when enlarging an image, it will generally look best with Bicubic (slow) or Bilinear (faster but still looks OK). More details can be found in the documentation of OpenCV, please refer to http://docs.opencv.org/master/da/d54/group__imgproc__transform.html.",CONSTANT_NUM Bilinear interpolation,,,,,,,CONSTANT_NUM
mxnet.image.imresize,interp,"Interpolation method (default=cv2.INTER_LINEAR). Possible values: 0: Nearest Neighbors Interpolation. 1: Bilinear interpolation. 2: Bicubic interpolation over 4x4 pixel neighborhood. 3: Area-based (resampling using pixel area relation). It may be a preferred method for image decimation, as it gives moire-free results. But when the image is zoomed, it is similar to the Nearest Neighbors method. (used by default). 4: Lanczos interpolation over 8x8 pixel neighborhood. 9: Cubic for enlarge, area for shrink, bilinear for others 10: Random select from interpolation method metioned above. Note: When shrinking an image, it will generally look best with AREA-based interpolation, whereas, when enlarging an image, it will generally look best with Bicubic (slow) or Bilinear (faster but still looks OK). More details can be found in the documentation of OpenCV, please refer to http://docs.opencv.org/master/da/d54/group__imgproc__transform.html.",CONSTANT_NUM Cubic for enlarge area for shrink bilinear for others CONSTANT_NUM Random select from interpolation method metioned above,,,,,,,CONSTANT_NUM
mxnet.image.imresize,interp,"Interpolation method (default=cv2.INTER_LINEAR). Possible values: 0: Nearest Neighbors Interpolation. 1: Bilinear interpolation. 2: Bicubic interpolation over 4x4 pixel neighborhood. 3: Area-based (resampling using pixel area relation). It may be a preferred method for image decimation, as it gives moire-free results. But when the image is zoomed, it is similar to the Nearest Neighbors method. (used by default). 4: Lanczos interpolation over 8x8 pixel neighborhood. 9: Cubic for enlarge, area for shrink, bilinear for others 10: Random select from interpolation method metioned above. Note: When shrinking an image, it will generally look best with AREA-based interpolation, whereas, when enlarging an image, it will generally look best with Bicubic (slow) or Bilinear (faster but still looks OK). More details can be found in the documentation of OpenCV, please refer to http://docs.opencv.org/master/da/d54/group__imgproc__transform.html.",CONSTANT_NUM Lanczos interpolation over 8x8 pixel neighborhood,,,,,,,CONSTANT_NUM
mxnet.gluon.contrib.rnn.Conv3DGRUCell,params,Container for weight sharing between cells. Created if None.,Container for weight sharing between cells,numeric,,,,,,
mxnet.gluon.model_zoo.vision.vgg16_bn,ctx,"DD: Context, default CPU",Context default CPU,,,,,,,
mxnet.gluon.model_zoo.vision.densenet161,ctx,"DD: Context, default CPU",Context default CPU,,,,,,,
mxnet.gluon.model_zoo.vision.mobilenet_v2_1_0,ctx,"DD: Context, default CPU",Context default CPU,,,,,,,
mxnet.gluon.model_zoo.vision.densenet121,ctx,"DD: Context, default CPU",Context default CPU,,,,,,,
mxnet.ndarray.random.generalized_negative_binomial,ctx,"DD: Context, optional",Context optional,,,,,,,
mxnet.ndarray.random.randint,ctx,"DD: Context, optional",Context optional,,,,,,,
mxnet.gluon.nn.Conv2D,layout,"Dimension ordering of data and weight. Only supports 'NCHW' and 'NHWC' layout for now. 'N', 'C', 'H', 'W' stands for batch, channel, height, and width dimensions respectively. Convolution is applied on the 'H' and 'W' dimensions.",Convolution is applied on the QSTR dimensions,,,,,,,
mxnet.gluon.contrib.rnn.Conv3DGRUCell,params,Container for weight sharing between cells. Created if None.,Created if None,,,,,,,
mxnet.ndarray.op.all_finite,data,Array,ONE_WORD D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.ndarray.stack,*data,List of arrays to stack,D_STRUCTURE of D_STRUCTURE to stack,,,D_STRUCTURE,,,,
mxnet.image.CreateAugmenter,data_shape,DD: tuple of int,D_STRUCTURE of D_TYPE,D_TYPE,,D_STRUCTURE,,,,
mxnet.gluon.contrib.rnn.Conv2DRNNCell,input_shape,DD: tuple of int,D_STRUCTURE of D_TYPE,D_TYPE,,D_STRUCTURE,,,,
mxnet.model.save_checkpoint,arg_params,DD: dict of str to NDArray,D_STRUCTURE of D_TYPE to D_STRUCTURE,D_TYPE,,D_STRUCTURE,,,,
mxnet.ndarray.op.linalg_gemm2,A,Tensor of input matrices,D_STRUCTURE of input matrices,numeric,D_STRUCTURE,,,,,
mxnet.ndarray.linalg_trsm,B,Tensor of matrices,D_STRUCTURE of matrices,numeric,D_STRUCTURE,,,,,
mxnet.contrib.quantization.quantize_graph,aux_params,Dictionary of name to NDArray.,D_STRUCTURE of name to D_STRUCTURE,string,,D_STRUCTURE,,,,
mxnet.ndarray.linalg_trsm,A,Tensor of lower triangular matrices,D_STRUCTURE of PARAM triangular matrices,numeric,D_STRUCTURE,,,,,
mxnet.ndarray.op.linalg_trmm,A,Tensor of lower triangular matrices,D_STRUCTURE of PARAM triangular matrices,numeric,D_STRUCTURE,,,,,
mxnet.ndarray.op.broadcast_greater_equal,out,"DD: NDArray, optional",D_STRUCTURE optional,,,D_STRUCTURE,,,,
mxnet.ndarray.linalg_trsm,out,"DD: NDArray, optional",D_STRUCTURE optional,,,D_STRUCTURE,,,,
mxnet.ndarray.contrib.quantized_fully_connected,out,"DD: NDArray, optional",D_STRUCTURE optional,,,D_STRUCTURE,,,,
mxnet.contrib.ndarray.MultiBoxDetection,out,"DD: NDArray, optional",D_STRUCTURE optional,,,D_STRUCTURE,,,,
mxnet.ndarray.arctanh,out,"DD: NDArray, optional",D_STRUCTURE optional,,,D_STRUCTURE,,,,
mxnet.ndarray.multi_mp_sgd_mom_update,out,"DD: NDArray, optional",D_STRUCTURE optional,,,D_STRUCTURE,,,,
mxnet.ndarray.ones_like,out,"DD: NDArray, optional",D_STRUCTURE optional,,,D_STRUCTURE,,,,
mxnet.ndarray.Dropout,out,"DD: NDArray, optional",D_STRUCTURE optional,,,D_STRUCTURE,,,,
mxnet.ndarray.op.diag,out,"DD: NDArray, optional",D_STRUCTURE optional,,,D_STRUCTURE,,,,
mxnet.ndarray.space_to_depth,out,"DD: NDArray, optional",D_STRUCTURE optional,,,D_STRUCTURE,,,,
mxnet.ndarray.contrib.quantized_conv,out,"DD: NDArray, optional",D_STRUCTURE optional,,,D_STRUCTURE,,,,
mxnet.ndarray.MakeLoss,out,"DD: NDArray, optional",D_STRUCTURE optional,,,D_STRUCTURE,,,,
mxnet.ndarray.op.linalg_gelqf,out,"DD: NDArray, optional",D_STRUCTURE optional,,,D_STRUCTURE,,,,
mxnet.ndarray.random.normal,out,"DD: NDArray, optional",D_STRUCTURE optional,,,D_STRUCTURE,,,,
mxnet.contrib.ndarray.SparseEmbedding,out,"DD: NDArray, optional",D_STRUCTURE optional,,,D_STRUCTURE,,,,
mxnet.contrib.ndarray.getnnz,out,"DD: NDArray, optional",D_STRUCTURE optional,,,D_STRUCTURE,,,,
mxnet.ndarray.Activation,out,"DD: NDArray, optional",D_STRUCTURE optional,,,D_STRUCTURE,,,,
mxnet.ndarray.contrib.backward_hawkesll,out,"DD: NDArray, optional",D_STRUCTURE optional,,,D_STRUCTURE,,,,
mxnet.ndarray.preloaded_multi_mp_sgd_update,out,"DD: NDArray, optional",D_STRUCTURE optional,,,D_STRUCTURE,,,,
mxnet.ndarray.ElementWiseSum,out,"DD: NDArray, optional",D_STRUCTURE optional,,,D_STRUCTURE,,,,
mxnet.ndarray.op.pad,out,"DD: NDArray, optional",D_STRUCTURE optional,,,D_STRUCTURE,,,,
mxnet.ndarray.LayerNorm,out,"DD: NDArray, optional",D_STRUCTURE optional,,,D_STRUCTURE,,,,
mxnet.ndarray.op.arccosh,out,"DD: NDArray, optional",D_STRUCTURE optional,,,D_STRUCTURE,,,,
mxnet.ndarray.ones,out,"DD: NDArray, optional",D_STRUCTURE optional,,,D_STRUCTURE,,,,
mxnet.ndarray.take,out,"DD: NDArray, optional",D_STRUCTURE optional,,,D_STRUCTURE,,,,
mxnet.ndarray.sparse.log,out,"DD: NDArray, optional",D_STRUCTURE optional,,,D_STRUCTURE,,,,
mxnet.ndarray.broadcast_logical_and,out,"DD: NDArray, optional",D_STRUCTURE optional,,,D_STRUCTURE,,,,
mxnet.ndarray.op.ceil,out,"DD: NDArray, optional",D_STRUCTURE optional,,,D_STRUCTURE,,,,
mxnet.contrib.ndarray.AdaptiveAvgPooling2D,out,"DD: NDArray, optional",D_STRUCTURE optional,,,D_STRUCTURE,,,,
mxnet.ndarray.sparse.cosh,out,"DD: NDArray, optional",D_STRUCTURE optional,,,D_STRUCTURE,,,,
mxnet.ndarray.sample_exponential,out,"DD: NDArray, optional",D_STRUCTURE optional,,,D_STRUCTURE,,,,
mxnet.ndarray.LRN,nsize,"DD: int (non-negative), required",D_TYPE BSTR required,D_TYPE,,,,,"[0,inf)",
mxnet.gluon.model_zoo.vision.alexnet,pretrained,"DD: bool, default False",D_TYPE default CONSTANT_BOOL,D_TYPE,,,,,,
mxnet.gluon.nn.GroupNorm,num_groups,"DD: int, default 1",D_TYPE default CONSTANT_NUM,D_TYPE,,,,0,,
mxnet.gluon.rnn.RNN,input_size,"DD: int, default 0",D_TYPE default CONSTANT_NUM,D_TYPE,,,,0,,
mxnet.gluon.model_zoo.vision.resnet152_v2,root,"DD: str, default '$MXNET_HOME/models'",D_TYPE default MXNET_HOME models,D_TYPE,,,,,,
mxnet.gluon.nn.MaxPool1D,layout,"DD: str, default 'NCW'",D_TYPE default QSTR,D_TYPE,,,,,,
mxnet.gluon.nn.Conv2D,layout,"DD: str, default 'NCHW'",D_TYPE default QSTR,D_TYPE,,,,,,
mxnet.gluon.nn.MaxPool2D,layout,"DD: str, default 'NCHW'",D_TYPE default QSTR,D_TYPE,,,,,,
mxnet.gluon.contrib.rnn.Conv1DGRUCell,prefix,"DD: str, default `'conv_gru_`’",D_TYPE default QSTR,D_TYPE,,,,,,
mxnet.ndarray.op.LeakyReLU,slope,"DD: float, optional, default=0.25",D_TYPE optional default CONSTANT_FLOAT,D_TYPE,,,,0,,
mxnet.ndarray.random.negative_binomial_like,p,"DD: float, optional, default=1",D_TYPE optional default CONSTANT_NUM,D_TYPE,,,,0,,
mxnet.ndarray.op.signsgd_update,rescale_grad,"DD: float, optional, default=1",D_TYPE optional default CONSTANT_NUM,D_TYPE,,,,0,,
mxnet.ndarray.op.rmsprop_update,rescale_grad,"DD: float, optional, default=1",D_TYPE optional default CONSTANT_NUM,D_TYPE,,,,0,,
mxnet.ndarray.contrib.bipartite_matching,topk,"DD: int, optional, default='-1'",D_TYPE optional default CONSTANT_NUM,D_TYPE,,,,0,,
mxnet.ndarray.op.ftrl_update,wd,"DD: float, optional, default=0",D_TYPE optional default CONSTANT_NUM,D_TYPE,,,,0,,
mxnet.ndarray.random.normal_like,loc,"DD: float, optional, default=0",D_TYPE optional default CONSTANT_NUM,D_TYPE,,,,0,,
mxnet.ndarray.op.nansum,exclude,"DD: boolean, optional, default=0",D_TYPE optional default CONSTANT_NUM,D_TYPE,,,,0,,
mxnet.ndarray.sample_multinomial,get_prob,"DD: boolean, optional, default=0",D_TYPE optional default CONSTANT_NUM,D_TYPE,,,,0,,
mxnet.ndarray.sparse.adam_update,rescale_grad,"DD: float, optional, default=1",D_TYPE optional default CONSTANT_NUM,D_TYPE,,,,0,,
mxnet.ndarray.multi_lars,rescale_grad,"DD: float, optional, default=1",D_TYPE optional default CONSTANT_NUM,D_TYPE,,,,0,,
mxnet.ndarray.op.diag,axis2,"DD: int, optional, default='1'",D_TYPE optional default CONSTANT_NUM,D_TYPE,,,,0,,
mxnet.ndarray.random_pdf_gamma,is_log,"DD: boolean, optional, default=0",D_TYPE optional default CONSTANT_NUM,D_TYPE,,,,0,,
mxnet.ndarray.signsgd_update,rescale_grad,"DD: float, optional, default=1",D_TYPE optional default CONSTANT_NUM,D_TYPE,,,,0,,
mxnet.ndarray.ftrl_update,beta,"DD: float, optional, default=1",D_TYPE optional default CONSTANT_NUM,D_TYPE,,,,0,,
mxnet.ndarray.ftml_update,rescale_grad,"DD: float, optional, default=1",D_TYPE optional default CONSTANT_NUM,D_TYPE,,,,0,,
mxnet.ndarray.min_axis,keepdims,"DD: boolean, optional, default=0",D_TYPE optional default CONSTANT_NUM,D_TYPE,,,,0,,
mxnet.image.imresize,interp,"DD: int, optional, default=1",D_TYPE optional default CONSTANT_NUM,D_TYPE,,,,0,,
mxnet.ndarray.op.sum_axis,exclude,"DD: boolean, optional, default=0",D_TYPE optional default CONSTANT_NUM,D_TYPE,,,,0,,
mxnet.ndarray.SwapAxis,dim2,"DD: int, optional, default='0'",D_TYPE optional default CONSTANT_NUM,D_TYPE,,,,0,,
mxnet.ndarray.BatchNorm,fix_gamma,"DD: boolean, optional, default=1",D_TYPE optional default CONSTANT_NUM,D_TYPE,,,,0,,
mxnet.io.ImageDetRecordIter,scale,"DD: float, optional, default=1",D_TYPE optional default CONSTANT_NUM,D_TYPE,,,,0,,
mxnet.ndarray.contrib.arange_like,step,"DD: double, optional, default=1",D_TYPE optional default CONSTANT_NUM,D_TYPE,,,,0,,
mxnet.ndarray.op.SequenceMask,value,"DD: float, optional, default=0",D_TYPE optional default CONSTANT_NUM,D_TYPE,,,,0,,
mxnet.ndarray.contrib.quantized_batch_norm,output_mean_var,"DD: boolean, optional, default=0",D_TYPE optional default CONSTANT_NUM,D_TYPE,,,,0,,
mxnet.ndarray.GroupNorm,output_mean_var,"DD: boolean, optional, default=0",D_TYPE optional default CONSTANT_NUM,D_TYPE,,,,0,,
mxnet.io.ImageRecordIter,mean_g,"DD: float, optional, default=0",D_TYPE optional default CONSTANT_NUM,D_TYPE,,,,0,,
mxnet.ndarray.multi_sgd_mom_update,momentum,"DD: float, optional, default=0",D_TYPE optional default CONSTANT_NUM,D_TYPE,,,,0,,
mxnet.ndarray.op.split,squeeze_axis,"DD: boolean, optional, default=0",D_TYPE optional default CONSTANT_NUM,D_TYPE,,,,0,,
mxnet.ndarray.contrib.box_decode,std2,"DD: float, optional, default=1",D_TYPE optional default CONSTANT_NUM,D_TYPE,,,,0,,
mxnet.ndarray.op.multi_mp_sgd_mom_update,momentum,"DD: float, optional, default=0",D_TYPE optional default CONSTANT_NUM,D_TYPE,,,,0,,
mxnet.io.ImageDetRecordIter,aug_seq,"DD: string, optional, default='det_aug_default'",D_TYPE optional default QSTR,D_TYPE,,,,,,
mxnet.gluon.contrib.rnn.Conv1DGRUCell,h2h_dilate,"DD: int or tuple of int, default (1,",D_TYPE or D_STRUCTURE of D_TYPE default CONSTANT_NUM,D_TYPE,,D_STRUCTURE,,,,
mxnet.test_utils.check_symbolic_backward,grad_req,"DD: str or list of str or dict of str to str, optional",D_TYPE or D_STRUCTURE of D_TYPE or D_STRUCTURE of D_TYPE to D_TYPE optional,D_TYPE,,D_STRUCTURE,,,,
mxnet.ndarray.random.uniform,low,"DD: float or NDArray, optional",D_TYPE or D_STRUCTURE optional,D_TYPE,,D_STRUCTURE,,,,
mxnet.gluon.rnn.RNNCell,i2h_weight_initializer,DD: str or Initializer,D_TYPE or Initializer,D_TYPE,,,,,,
mxnet.contrib.ndarray.BilinearResize2D,scale_width,"DD: float or None, optional, default=None",D_TYPE or None optional default None,D_TYPE,,,,,,
mxnet.ndarray.sgd_mom_update,lr,"DD: float, required",D_TYPE required,D_TYPE,,,,,,
mxnet.ndarray.split,num_outputs,"DD: int, required",D_TYPE required,D_TYPE,,,,,,
mxnet.ndarray.op.ftrl_update,lr,"DD: float, required",D_TYPE required,D_TYPE,,,,,,
mxnet.contrib.ndarray.SparseEmbedding,input_dim,"DD: int, required",D_TYPE required,D_TYPE,,,,,,
mxnet.ndarray.op.ftml_update,lr,"DD: float, required",D_TYPE required,D_TYPE,,,,,,
mxnet.ndarray.mp_lamb_update_phase2,lr,"DD: float, required",D_TYPE required,D_TYPE,,,,,,
mxnet.ndarray.scatter_nd,data,data,ONE_WORD data,,,,,,,
mxnet.ndarray.shuffle,data,Data to be shuffled.,data to be shuffled,,,,,,,
mxnet.ndarray.random.generalized_negative_binomial,dtype,Data type of output samples. Default is 'float32',Data type of output samples,dtype,,,,,,
mxnet.ndarray.random.generalized_negative_binomial,ctx,Device context of output. Default is current context. Overridden by mu.context when mu is an NDArray.,Default is current context,,,,,,,
mxnet.ndarray.random.randint,ctx,Device context of output. Default is current context. Overridden by low.context when low is an NDArray.,Default is current context,,,,,,,
mxnet.ndarray.random.generalized_negative_binomial,dtype,Data type of output samples. Default is 'float32',Default is QSTR,,,,,,,
mxnet.ndarray.pick,mode,"Specify how out-of-bound indices behave. Default is ""clip"". ""clip"" means clip to the range. So, if all indices mentioned are too large, they are replaced by the index that addresses the last element along an axis.  ""wrap"" means to wrap around.",Default is QSTR,,,,,,,
mxnet.ndarray.random.generalized_negative_binomial,ctx,Device context of output. Default is current context. Overridden by mu.context when mu is an NDArray.,Device context of output,,,,,,,
mxnet.ndarray.random.randint,ctx,Device context of output. Default is current context. Overridden by low.context when low is an NDArray.,Device context of output,,,,,,,
mxnet.gluon.nn.MaxPool1D,layout,"Dimension ordering of data and out ('NCW' or 'NWC'). 'N', 'C', 'W' stands for batch, channel, and width (time) dimensions respectively. Pooling is applied on the W dimension.",Dimension ordering of data and out QSTR,,,,,,,
mxnet.gluon.nn.MaxPool2D,layout,"Dimension ordering of data and out ('NCHW' or 'NHWC'). 'N', 'C', 'H', 'W' stands for batch, channel, height, and width dimensions respectively. padding is applied on 'H' and 'W' dimension.",Dimension ordering of data and out QSTR,,,,,,,
mxnet.gluon.nn.Conv2D,layout,"Dimension ordering of data and weight. Only supports 'NCHW' and 'NHWC' layout for now. 'N', 'C', 'H', 'W' stands for batch, channel, height, and width dimensions respectively. Convolution is applied on the 'H' and 'W' dimensions.",Dimension ordering of data and weight,numeric,,,,,,
mxnet.ndarray.op.sample_multinomial,data,Distribution probabilities. Must sum to one on the last axis.,Distribution probabilities,,,,,,,
mxnet.recordio.pack_img,img_fmt,"Encoding of the image (.jpg for JPEG, .png for PNG).",Encoding of the image BSTR,,,,,,,
mxnet.ndarray.random.negative_binomial_like,p,Failure probability in each experiment.,Failure probability in each experiment,float,,,,,"[0,1]",
mxnet.ndarray.full,val,Fill value.,Fill value,,,,,,,
mxnet.ndarray.subtract,lhs,First array to be subtracted.,First D_STRUCTURE to be subtracted,,,D_STRUCTURE,,,,
mxnet.ndarray.op.elemwise_add,lhs,first input,first input,,,,,,,
mxnet.ndarray.BatchNorm,fix_gamma,Fix gamma while training,Fix PARAM while training,,,,,,,
mxnet.gluon.contrib.rnn.Conv2DRNNCell,input_shape,"Input tensor shape at each time step for each sample, excluding dimension of the batch size and sequence length. Must be consistent with conv_layout. For example, for layout 'NCHW' the shape should be (C, H, W).",For example for layout QSTR the shape should be BSTR,,,,,,,
mxnet.io.ImageDetRecordIter,resize_mode,"Augmentation Param: How image data fit in data_shape. force: force reshape to data_shape regardless of aspect ratio; shrink: ensure each side fit in data_shape, preserve aspect ratio; fit: fit image to data_shape, preserve ratio, will upscale if applicable.",force force reshape to PARAM regardless of aspect ratio shrink ensure each side fit in PARAM preserve aspect ratio fit fit image to PARAM preserve ratio will upscale if applicable,,,,,,,
mxnet.test_utils.chi_square_check,generator,A function that is assumed to generate i.i.d samples from a specific distribution. generator(N) should generate N random samples.,generator BSTR should generate N random samples,,,,,,,
mxnet.ndarray.contrib.group_adagrad_update,grad,Gradient,ONE_WORD Gradient,numeric,,,,,,
mxnet.ndarray.signum_update,grad,Gradient,ONE_WORD Gradient,numeric,,,,,,
mxnet.test_utils.check_symbolic_backward,grad_req,"Gradient requirements. 'write', 'add' or 'null'.",Gradient requirements,,,,,,,
mxnet.ndarray.multi_lars,rescale_grad,Gradient rescaling factor,Gradient rescaling factor,,,,,,,
mxnet.ndarray.ctc_loss,label,Ground-truth labels for the loss.,Ground truth labels for the loss,,,,,,,
mxnet.ndarray.op.max,axis,"The axis or axes along which to perform the reduction.  The default, axis=(), will compute over all elements into a scalar array with shape (1,). If axis is int, a reduction is performed on a particular axis. If axis is a tuple of ints, a reduction is performed on all the axes specified in the tuple. If exclude is true, reduction will be performed on the axes that are NOT in axis instead. Negative values means indexing from right to left.  ",If axis is a D_STRUCTURE of D_TYPE a reduction is performed on all the axes specified in the D_STRUCTURE,D_TYPE,,D_STRUCTURE,,,,
mxnet.ndarray.op.max,axis,"The axis or axes along which to perform the reduction.  The default, axis=(), will compute over all elements into a scalar array with shape (1,). If axis is int, a reduction is performed on a particular axis. If axis is a tuple of ints, a reduction is performed on all the axes specified in the tuple. If exclude is true, reduction will be performed on the axes that are NOT in axis instead. Negative values means indexing from right to left.  ",If axis is D_TYPE a reduction is performed on a particular axis,D_TYPE,,,,,,
mxnet.contrib.quantization.quantize_model,calib_mode,"If calib_mode='none', no calibration will be used and the thresholds for requantization after the corresponding layers will be calculated at runtime by calling min and max operators. The quantized models generated in this mode are normally 10-20% slower than those with calibrations during inference. If calib_mode='naive', the min and max values of the layer outputs from a calibration dataset will be directly taken as the thresholds for quantization. If calib_mode='entropy' (default mode), the thresholds for quantization will be derived such that the KL divergence between the distributions of FP32 layer outputs and quantized layer outputs is minimized based upon the calibration dataset.",If calib_mode QSTR BSTR the thresholds for quantization will be derived such that the KL divergence between the distributions of D_TYPE layer outputs and quantized layer outputs is minimized based upon the calibration dataset,,,,,,,QSTR
mxnet.contrib.quantization.quantize_model,calib_mode,"If calib_mode='none', no calibration will be used and the thresholds for requantization after the corresponding layers will be calculated at runtime by calling min and max operators. The quantized models generated in this mode are normally 10-20% slower than those with calibrations during inference. If calib_mode='naive', the min and max values of the layer outputs from a calibration dataset will be directly taken as the thresholds for quantization. If calib_mode='entropy' (default mode), the thresholds for quantization will be derived such that the KL divergence between the distributions of FP32 layer outputs and quantized layer outputs is minimized based upon the calibration dataset.",If calib_mode QSTR no calibration will be used and the thresholds for requantization after the corresponding layers will be calculated at runtime by calling min and max operators,,,,,,,QSTR
mxnet.contrib.quantization.quantize_model,calib_mode,"If calib_mode='none', no calibration will be used and the thresholds for requantization after the corresponding layers will be calculated at runtime by calling min and max operators. The quantized models generated in this mode are normally 10-20% slower than those with calibrations during inference. If calib_mode='naive', the min and max values of the layer outputs from a calibration dataset will be directly taken as the thresholds for quantization. If calib_mode='entropy' (default mode), the thresholds for quantization will be derived such that the KL divergence between the distributions of FP32 layer outputs and quantized layer outputs is minimized based upon the calibration dataset.",If calib_mode QSTR the min and max values of the layer outputs from a calibration dataset will be directly taken as the thresholds for quantization,,,,,,,QSTR
mxnet.ndarray.op.split,squeeze_axis,"If true, Removes the axis with length 1 from the shapes of the output arrays. Note that setting squeeze_axis to `true` removes axis with length 1 only along the axis which it is split. Also squeeze_axis can be set to `true` only if `input.shape[axis] == num_outputs`.",If CONSTANT_BOOL Removes the PARAM with length CONSTANT_NUM from the shapes of the output D_STRUCTURE,bool,,,,0,,
mxnet.gluon.rnn.RNN,input_size,"The number of expected features in the input x. If not specified, it will be inferred from input.",If not specified it will be inferred from input,,,,,,,
mxnet.ndarray.op.max,axis,"The axis or axes along which to perform the reduction.  The default, axis=(), will compute over all elements into a scalar array with shape (1,). If axis is int, a reduction is performed on a particular axis. If axis is a tuple of ints, a reduction is performed on all the axes specified in the tuple. If exclude is true, reduction will be performed on the axes that are NOT in axis instead. Negative values means indexing from right to left.  ",If PARAM is CONSTANT_BOOL reduction will be performed on the axes that are NOT in axis instead,,,,,,,
mxnet.ndarray.equal,rhs,"Second array to be compared. If `lhs.shape != rhs.shape`, they must be broadcastable to a common shape.",If PARAM shape rhs shape they must be broadcastable to a common shape,,,,,,,
mxnet.ndarray.minimum,rhs,"Second array to be compared. If `lhs.shape != rhs.shape`, they must be broadcastable to a common shape.",If PARAM shape rhs shape they must be broadcastable to a common shape,,,,,,,
mxnet.ndarray.ctc_loss,blank_label,"Set the label that is reserved for blank label.If ""first"", 0-th label is reserved, and label values for tokens in the vocabulary are between `1` and `alphabet_size-1`, and the padding mask is `-1`. If ""last"", last label value `alphabet_size-1` is reserved for blank label instead, and label values for tokens in the vocabulary are between `0` and `alphabet_size-2`, and the padding mask is `0`.",If QSTR last PARAM value QSTR is reserved for blank PARAM instead and PARAM values for tokens in the vocabulary are between CONSTANT_NUM and QSTR and the padding mask is CONSTANT_NUM,,,,,,,QSTR
mxnet.ndarray.random_pdf_gamma,is_log,"If set, compute the density of the log-probability instead of the probability.",If set compute the density of the log probability instead of the probability,,,,,,,
mxnet.ndarray.min_axis,keepdims,"If this is set to True, the reduced axes are left in the result as dimension with size one.",If this is set to CONSTANT_BOOL the reduced axes are left in the result as dimension with size one,bool,,,,0,,
mxnet.gluon.nn.Dense,activation,"Activation function to use. See help on Activation layer. If you don't specify anything, no activation is applied (ie. ""linear"" activation: a(x) = x).",If you don t specify anything no activation is applied ie,,,,,,,
mxnet.ndarray.op.diag,axis2,The second axis of the sub-arrays of interest. Ignored when the input is a 1-D array.,Ignored when the input is a CONSTANT_NUM D D_STRUCTURE,,,,,,,
mxnet.ndarray.sample_multinomial,get_prob,"Whether to also return the log probability of sampled result. This is usually used for differentiating through stochastic variables, e.g. in reinforcement learning.",in reinforcement learning,,,,,,,
mxnet.ndarray.op.LeakyReLU,slope,Init slope for the activation. (For leaky and elu only),Init slope for the activation,,,,,,,
mxnet.gluon.rnn.RNNCell,i2h_weight_initializer,"Initializer for the input weights matrix, used for the linear transformation of the inputs.",Initializer for the input weights matrix used for the linear transformation of the inputs,,,,,,,
mxnet.ndarray.op.swapaxes,data,Input array.,Input D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.gluon.contrib.rnn.Conv2DRNNCell,input_shape,"Input tensor shape at each time step for each sample, excluding dimension of the batch size and sequence length. Must be consistent with conv_layout. For example, for layout 'NCHW' the shape should be (C, H, W).",Input D_STRUCTURE shape at each time step for each sample excluding dimension of the batch size and D_STRUCTURE length,int,,,,,"[0,inf)",
mxnet.contrib.ndarray.quantized_act,data,Input data.,Input data,,,,,,,
mxnet.image.imresize,interp,"Interpolation method (default=cv2.INTER_LINEAR). Possible values: 0: Nearest Neighbors Interpolation. 1: Bilinear interpolation. 2: Bicubic interpolation over 4x4 pixel neighborhood. 3: Area-based (resampling using pixel area relation). It may be a preferred method for image decimation, as it gives moire-free results. But when the image is zoomed, it is similar to the Nearest Neighbors method. (used by default). 4: Lanczos interpolation over 8x8 pixel neighborhood. 9: Cubic for enlarge, area for shrink, bilinear for others 10: Random select from interpolation method metioned above. Note: When shrinking an image, it will generally look best with AREA-based interpolation, whereas, when enlarging an image, it will generally look best with Bicubic (slow) or Bilinear (faster but still looks OK). More details can be found in the documentation of OpenCV, please refer to http://docs.opencv.org/master/da/d54/group__imgproc__transform.html.",Interpolation method default cv2 INTER_LINEAR,,,,,,,
mxnet.image.imresize,interp,"Interpolation method (default=cv2.INTER_LINEAR). Possible values: 0: Nearest Neighbors Interpolation. 1: Bilinear interpolation. 2: Bicubic interpolation over 4x4 pixel neighborhood. 3: Area-based (resampling using pixel area relation). It may be a preferred method for image decimation, as it gives moire-free results. But when the image is zoomed, it is similar to the Nearest Neighbors method. (used by default). 4: Lanczos interpolation over 8x8 pixel neighborhood. 9: Cubic for enlarge, area for shrink, bilinear for others 10: Random select from interpolation method metioned above. Note: When shrinking an image, it will generally look best with AREA-based interpolation, whereas, when enlarging an image, it will generally look best with Bicubic (slow) or Bilinear (faster but still looks OK). More details can be found in the documentation of OpenCV, please refer to http://docs.opencv.org/master/da/d54/group__imgproc__transform.html.",It may be a preferred method for image decimation as it gives moire free results,,,,,,,
mxnet.ndarray.mp_lamb_update_phase2,lr,Learning rate,Learning rate,numeric,,,,0,"[0,1]",
mxnet.ndarray.op.ftml_update,lr,Learning rate.,Learning rate,numeric,,,,0,"[0,1]",
mxnet.ndarray.op.ftrl_update,lr,Learning rate,Learning rate,numeric,,,,0,"[0,1]",
mxnet.ndarray.sgd_mom_update,lr,Learning rate,Learning rate,numeric,,,,0,"[0,1]",
mxnet.ndarray.contrib.CTCLoss,label_lengths,Lengths of labels for each of the samples. Only required when use_label_lengths is true.,Lengths of labels for each of the samples,int,,,,,"[0,inf)",
mxnet.ndarray.op.CTCLoss,label_lengths,Lengths of labels for each of the samples. Only required when use_label_lengths is true.,Lengths of labels for each of the samples,int,,,,,"[0,inf)",
mxnet.ndarray.contrib.CTCLoss,data_lengths,Lengths of data for each of the samples. Only required when use_data_lengths is true.,Lengths of PARAM for each of the samples,int,,,,,"[0,inf)",
mxnet.ndarray.contrib.bipartite_matching,topk,"Limit the number of matches to topk, set -1 for no limit",Limit the number of matches to topk set CONSTANT_NUM for no limit,,,,,,,
mxnet.gluon.model_zoo.vision.resnet152_v2,root,Location for keeping the model parameters.,Location for keeping the model parameters,,,,,,,
mxnet.ndarray.random.uniform,low,Lower boundary of the output interval. All values generated will be greater than or equal to low. The default value is 0.,Lower boundary of the output interval,,,,,,,
mxnet.io.ImageDetRecordIter,aug_seq,"Augmentation Param: the augmenter names to represent sequence of augmenters to be applied, seperated by comma. Additional keyword parameters will be seen by these augmenters. Make sure you don't use normal augmenters for detection tasks.",Make sure you don t use normal augmenters for detection tasks,,,,,,,
mxnet.ndarray.contrib.quantized_conv,max_weight,Maximum value of weight.,Maximum value of PARAM,numeric,,,,,,
mxnet.ndarray.random.normal_like,loc,Mean of the distribution.,Mean of the distribution,numeric,,,,0,,
mxnet.model.save_checkpoint,arg_params,"Model parameter, dict of name to NDArray of net's weights.",Model parameter D_STRUCTURE of name to D_STRUCTURE of net weights,string,,D_STRUCTURE,,,,
mxnet.image.imresize,interp,"Interpolation method (default=cv2.INTER_LINEAR). Possible values: 0: Nearest Neighbors Interpolation. 1: Bilinear interpolation. 2: Bicubic interpolation over 4x4 pixel neighborhood. 3: Area-based (resampling using pixel area relation). It may be a preferred method for image decimation, as it gives moire-free results. But when the image is zoomed, it is similar to the Nearest Neighbors method. (used by default). 4: Lanczos interpolation over 8x8 pixel neighborhood. 9: Cubic for enlarge, area for shrink, bilinear for others 10: Random select from interpolation method metioned above. Note: When shrinking an image, it will generally look best with AREA-based interpolation, whereas, when enlarging an image, it will generally look best with Bicubic (slow) or Bilinear (faster but still looks OK). More details can be found in the documentation of OpenCV, please refer to http://docs.opencv.org/master/da/d54/group__imgproc__transform.html.",More details can be found in the documentation of OpenCV please refer to http docs opencv org master da d54 group__imgproc__transform html,,,,,,,
mxnet.gluon.contrib.rnn.Conv2DRNNCell,input_shape,"Input tensor shape at each time step for each sample, excluding dimension of the batch size and sequence length. Must be consistent with conv_layout. For example, for layout 'NCHW' the shape should be (C, H, W).",Must be consistent with PARAM,,,,,,,
mxnet.gluon.nn.LeakyReLU,alpha,slope coefficient for the negative half axis. Must be >= 0.,Must be REXPR,,,,,,REXPR,
mxnet.ndarray.op.sample_multinomial,data,Distribution probabilities. Must sum to one on the last axis.,Must sum to one on the last axis,,,,,,,
mxnet.ndarray.op.max,axis,"The axis or axes along which to perform the reduction.  The default, axis=(), will compute over all elements into a scalar array with shape (1,). If axis is int, a reduction is performed on a particular axis. If axis is a tuple of ints, a reduction is performed on all the axes specified in the tuple. If exclude is true, reduction will be performed on the axes that are NOT in axis instead. Negative values means indexing from right to left.  ",Negative values means indexing from right to left,,,,,,,
mxnet.test_utils.numeric_grad,aux_states,"DD: None or list of numpy.ndarray or dict of str to numpy.ndarray, optional",None or D_STRUCTURE of numpy D_STRUCTURE of D_TYPE to numpy D_STRUCTURE optional,D_TYPE,,D_STRUCTURE,,,,
mxnet.ndarray.Deconvolution,cudnn_tune,"DD: {None, 'fastest', 'limited_workspace', 'off'},optional, default='None'",None QSTR optional default QSTR,,,,,,,QSTR
mxnet.io.CSVIter,dtype,"DD: {None, 'float16', 'float32', 'float64', 'int32', 'int64', 'int8', 'uint8'},optional, default='None'",None QSTR optional default QSTR,,,,,,,QSTR
mxnet.ndarray.LRN,nsize,normalization window width in elements.,normalization window width in elements,numeric,,,,,"[0,inf)",
mxnet.ndarray.op.split,squeeze_axis,"If true, Removes the axis with length 1 from the shapes of the output arrays. Note that setting squeeze_axis to `true` removes axis with length 1 only along the axis which it is split. Also squeeze_axis can be set to `true` only if `input.shape[axis] == num_outputs`.",Note that setting squeeze_axis to CONSTANT_BOOL removes PARAM with length CONSTANT_NUM only along the PARAM which it is split,,,,,,,
mxnet.ndarray.split,num_outputs,Number of splits. Note that this should evenly divide the length of the axis.,Note that this should evenly divide the length of the PARAM,,,,,,,
mxnet.image.imresize,interp,"Interpolation method (default=cv2.INTER_LINEAR). Possible values: 0: Nearest Neighbors Interpolation. 1: Bilinear interpolation. 2: Bicubic interpolation over 4x4 pixel neighborhood. 3: Area-based (resampling using pixel area relation). It may be a preferred method for image decimation, as it gives moire-free results. But when the image is zoomed, it is similar to the Nearest Neighbors method. (used by default). 4: Lanczos interpolation over 8x8 pixel neighborhood. 9: Cubic for enlarge, area for shrink, bilinear for others 10: Random select from interpolation method metioned above. Note: When shrinking an image, it will generally look best with AREA-based interpolation, whereas, when enlarging an image, it will generally look best with Bicubic (slow) or Bilinear (faster but still looks OK). More details can be found in the documentation of OpenCV, please refer to http://docs.opencv.org/master/da/d54/group__imgproc__transform.html.",Note When shrinking an image it will generally look best with AREA based interpolation whereas when enlarging an image it will generally look best with Bicubic BSTR,,,,,,,
mxnet.gluon.nn.GroupNorm,num_groups,Number of groups to separate the channel axis into.,Number of groups to separate the channel axis into,int,,,,0,"[0,inf)",
mxnet.ndarray.split,num_outputs,Number of splits. Note that this should evenly divide the length of the axis.,Number of splits,int,,,,0,"[0,inf)",
mxnet.contrib.ndarray.hawkesll,max_time,DD: NDArray,ONE_WORD D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.ndarray.op.where,condition,DD: NDArray,ONE_WORD D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.ndarray.linalg_trsm,B,DD: NDArray,ONE_WORD D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.ndarray.op.linalg_gemm2,A,DD: NDArray,ONE_WORD D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.ndarray.sparse.cosh,data,DD: NDArray,ONE_WORD D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.ndarray.pick,index,DD: NDArray,ONE_WORD D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.ndarray.rmsprop_update,weight,DD: NDArray,ONE_WORD D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.ndarray.contrib.quantized_conv,max_weight,DD: NDArray,ONE_WORD D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.ndarray.LayerNorm,beta,DD: NDArray,ONE_WORD D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.ndarray.op.CTCLoss,label_lengths,DD: NDArray,ONE_WORD D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.ndarray.BatchNorm,moving_mean,DD: NDArray,ONE_WORD D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.ndarray.mp_nag_mom_update,weight32,DD: NDArray,ONE_WORD D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.ndarray.random_pdf_dirichlet,sample,DD: NDArray,ONE_WORD D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.ndarray.contrib.group_adagrad_update,grad,DD: NDArray,ONE_WORD D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.ndarray.signum_update,grad,DD: NDArray,ONE_WORD D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.ndarray.contrib.backward_gradientmultiplier,data,DD: NDArray,ONE_WORD D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.ndarray.op.swapaxes,data,DD: NDArray,ONE_WORD D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.ndarray.stack,*data,DD: NDArray[],ONE_WORD D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.ndarray.FullyConnected,bias,DD: NDArray,ONE_WORD D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.contrib.ndarray.hawkesll,state,DD: NDArray,ONE_WORD D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.ndarray.image.random_lighting,data,DD: NDArray,ONE_WORD D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.ndarray.sparse.log,data,DD: NDArray,ONE_WORD D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.ndarray.op.transpose,data,DD: NDArray,ONE_WORD D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.ndarray.expm1,data,DD: NDArray,ONE_WORD D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.ndarray.linalg_trsm,A,DD: NDArray,ONE_WORD D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.contrib.ndarray.quantized_act,data,DD: NDArray,ONE_WORD D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.ndarray.op.elemwise_add,lhs,DD: NDArray,ONE_WORD D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.ndarray.op.all_finite,data,DD: NDArray,ONE_WORD D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.ndarray.op.log,data,DD: NDArray,ONE_WORD D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.ndarray.sparse.log2,data,DD: NDArray,ONE_WORD D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.ndarray.op.ftml_update,weight,DD: NDArray,ONE_WORD D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.ndarray.shuffle,data,DD: NDArray,ONE_WORD D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.contrib.ndarray.DeformableConvolution,weight,DD: NDArray,ONE_WORD D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.ndarray.contrib.CTCLoss,label_lengths,DD: NDArray,ONE_WORD D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.ndarray.contrib.CTCLoss,data_lengths,DD: NDArray,ONE_WORD D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.ndarray.mp_sgd_update,weight32,DD: NDArray,ONE_WORD D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.ndarray.lamb_update_phase2,g,DD: NDArray,ONE_WORD D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.ndarray.sqrt,data,DD: NDArray,ONE_WORD D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.ndarray.op.linalg_trmm,A,DD: NDArray,ONE_WORD D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.ndarray.sparse.elemwise_sub,rhs,DD: NDArray,ONE_WORD D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.ndarray.radians,data,DD: NDArray,ONE_WORD D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.ndarray.op.sample_multinomial,data,DD: NDArray,ONE_WORD D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.contrib.quantization.quantize_graph,aux_params,DD: dict,ONE_WORD D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.ndarray.scatter_nd,data,DD: NDArray,ONE_WORD D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.ndarray.ctc_loss,label,DD: NDArray,ONE_WORD D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.profiler.dumps,sort_by,DD: string,ONE_WORD D_TYPE,D_TYPE,,,,,,
mxnet.gluon.nn.LeakyReLU,alpha,DD: float,ONE_WORD D_TYPE,D_TYPE,,,,,,
mxnet.contrib.onnx.export_model,onnx_file_path,DD: str,ONE_WORD D_TYPE,D_TYPE,,,,,,
mxnet.callback.log_train_metric,period,DD: int,ONE_WORD D_TYPE,D_TYPE,,,,,,
mxnet.profiler.set_config,continuous_dump,"DD: boolean,",ONE_WORD D_TYPE,D_TYPE,,,,,,
mxnet.gluon.nn.Dense,activation,DD: str,ONE_WORD D_TYPE,D_TYPE,,,,,,
mxnet.recordio.pack_img,img_fmt,DD: str,ONE_WORD D_TYPE,D_TYPE,,,,,,
mxnet.contrib.quantization.quantize_model,calib_mode,DD: str,ONE_WORD D_TYPE,D_TYPE,,,,,,
mxnet.test_utils.chi_square_check,generator,DD: function,ONE_WORD function,,,,,,,
mxnet.gluon.contrib.rnn.VariationalDropoutCell,base_cell,DD: RecurrentCell,ONE_WORD RecurrentCell,,,,,,,
mxnet.ndarray.full,val,DD: scalar,ONE_WORD scalar,,,,,0,,
mxnet.test_utils.check_symbolic_forward,sym,DD: Symbol,ONE_WORD Symbol,,,,,,,
mxnet.ndarray.contrib.DeformablePSROIPooling,rois,DD: Symbol,ONE_WORD Symbol,,,,,,,
mxnet.ndarray.contrib.CTCLoss,data_lengths,Lengths of data for each of the samples. Only required when use_data_lengths is true.,Only required when PARAM is CONSTANT_BOOL,,,,,,,
mxnet.ndarray.contrib.CTCLoss,label_lengths,Lengths of labels for each of the samples. Only required when use_label_lengths is true.,Only required when PARAM is CONSTANT_BOOL,,,,,,,
mxnet.ndarray.op.CTCLoss,label_lengths,Lengths of labels for each of the samples. Only required when use_label_lengths is true.,Only required when PARAM is CONSTANT_BOOL,,,,,,,
mxnet.gluon.nn.Conv2D,layout,"Dimension ordering of data and weight. Only supports 'NCHW' and 'NHWC' layout for now. 'N', 'C', 'H', 'W' stands for batch, channel, height, and width dimensions respectively. Convolution is applied on the 'H' and 'W' dimensions.",Only supports QSTR layout for now,,,,,,,QSTR
mxnet.io.CSVIter,dtype,Output data type. `None` means no change.,Output data type,dtype,,,,,,
mxnet.ndarray.lamb_update_phase2,g,Output of lamb_update_phase 1,Output of lamb_update_phase CONSTANT_NUM,,,,,,,
mxnet.test_utils.check_symbolic_forward,sym,output symbol,output symbol,,,,,,,
mxnet.ndarray.contrib.quantized_batch_norm,output_mean_var,Output the mean and inverse std,Output the mean and inverse std,numeric,,,,,,
mxnet.ndarray.GroupNorm,output_mean_var,Output the mean and std calculated along the given axis.,Output the mean and std calculated along the given axis,numeric,,,,,,
mxnet.ndarray.random.generalized_negative_binomial,ctx,Device context of output. Default is current context. Overridden by mu.context when mu is an NDArray.,Overridden by PARAM context when PARAM is an D_STRUCTURE,,,,,,,
mxnet.ndarray.random.randint,ctx,Device context of output. Default is current context. Overridden by low.context when low is an NDArray.,Overridden by PARAM context when PARAM is an D_STRUCTURE,,,,,,,
mxnet.ndarray.op.ftrl_update,wd,Weight decay augments the objective function with a regularization term that penalizes large weights. The penalty scales with the square of the magnitude of each weight.,PARAM decay augments the objective function with a regularization term that penalizes large weights,,,,,,,
mxnet.gluon.nn.MaxPool2D,layout,"Dimension ordering of data and out ('NCHW' or 'NHWC'). 'N', 'C', 'H', 'W' stands for batch, channel, height, and width dimensions respectively. padding is applied on 'H' and 'W' dimension.",PARAM is applied on QSTR dimension,,,,,,,
mxnet.ndarray.contrib.BilinearResize2D,mode,"DD: {'like', 'odd_scale', 'size', 'to_even_down', 'to_even_up', 'to_odd_down', 'to_odd_up'},optional, default='size'",PARAM QSTR optional default QSTR,,,,,,,QSTR
mxnet.contrib.onnx.export_model,onnx_file_path,Path where to save the generated onnx file,Path where to save the generated onnx file,string,,,,0,,
mxnet.ndarray.ftrl_update,beta,Per-Coordinate Learning Rate beta.,Per Coordinate Learning Rate beta,numeric,,,,,"[0,1]",
mxnet.ndarray.op.Pooling,pooling_convention,Pooling convention to be applied.,Pooling convention to be applied,,,,,,,
mxnet.gluon.nn.MaxPool1D,layout,"Dimension ordering of data and out ('NCW' or 'NWC'). 'N', 'C', 'W' stands for batch, channel, and width (time) dimensions respectively. Pooling is applied on the W dimension.",Pooling is applied on the W dimension,,,,,,,
mxnet.image.imresize,interp,"Interpolation method (default=cv2.INTER_LINEAR). Possible values: 0: Nearest Neighbors Interpolation. 1: Bilinear interpolation. 2: Bicubic interpolation over 4x4 pixel neighborhood. 3: Area-based (resampling using pixel area relation). It may be a preferred method for image decimation, as it gives moire-free results. But when the image is zoomed, it is similar to the Nearest Neighbors method. (used by default). 4: Lanczos interpolation over 8x8 pixel neighborhood. 9: Cubic for enlarge, area for shrink, bilinear for others 10: Random select from interpolation method metioned above. Note: When shrinking an image, it will generally look best with AREA-based interpolation, whereas, when enlarging an image, it will generally look best with Bicubic (slow) or Bilinear (faster but still looks OK). More details can be found in the documentation of OpenCV, please refer to http://docs.opencv.org/master/da/d54/group__imgproc__transform.html.",Possible values CONSTANT_NUM Nearest Neighbors Interpolation,,,,,,,CONSTANT_NUM
mxnet.gluon.contrib.rnn.Conv1DGRUCell,prefix,Prefix for name of layers (and name of weight if params is None).,prefix for name of layers BSTR,string,,,,0,,
mxnet.test_utils.check_symbolic_backward,grad_req,"Gradient requirements. 'write', 'add' or 'null'.",ONE_WORD QSTR,,,,,,,QSTR
mxnet.gluon.nn.Dense,activation,"Activation function to use. See help on Activation layer. If you don't specify anything, no activation is applied (ie. ""linear"" activation: a(x) = x).",QSTR activation a BSTR x,,,,,,,
mxnet.ndarray.pick,mode,"Specify how out-of-bound indices behave. Default is ""clip"". ""clip"" means clip to the range. So, if all indices mentioned are too large, they are replaced by the index that addresses the last element along an axis.  ""wrap"" means to wrap around.",QSTR means clip to the range,,,,,,,QSTR
mxnet.io.CSVIter,dtype,Output data type. `None` means no change.,QSTR means no change,,,,,,,QSTR
mxnet.ndarray.pick,mode,"Specify how out-of-bound indices behave. Default is ""clip"". ""clip"" means clip to the range. So, if all indices mentioned are too large, they are replaced by the index that addresses the last element along an axis.  ""wrap"" means to wrap around.",QSTR means to wrap around,,,,,,,QSTR
mxnet.ndarray.random.generalized_negative_binomial,dtype,"DD: {'float16', 'float32', 'float64'}, optional",QSTR optional,,,,,,,QSTR
mxnet.ndarray.Dropout,mode,"DD: {'always', 'training'},optional, default='training'",QSTR optional default QSTR,,,,,,,QSTR
mxnet.io.ImageDetRecordIter,resize_mode,"DD: {'fit', 'force', 'shrink'},optional, default='force'",QSTR optional default QSTR,,,,,,,QSTR
mxnet.ndarray.op.Pooling,pooling_convention,"DD: {'full', 'same', 'valid'},optional, default='valid'",QSTR optional default QSTR,,,,,,,QSTR
mxnet.ndarray.ctc_loss,blank_label,"DD: {'first', 'last'},optional, default='first'",QSTR optional default QSTR,,,,,,,QSTR
mxnet.ndarray.pick,mode,"DD: {'clip', 'wrap'},optional, default='clip'",QSTR optional default QSTR,,,,,,,QSTR
mxnet.ndarray.contrib.BilinearResize2D,mode,"resizing mode. ""simple"" - output height equals parameter ""height"" if ""scale_height"" parameter is not defined or input height multiplied by ""scale_height"" otherwise. Same for width;""odd_scale"" - if original height or width is odd, then result height is calculated like result_h = (original_h - 1) * scale + 1; for scale > 1 the result shape would be like if we did deconvolution with kernel = (1, 1) and stride = (height_scale, width_scale); and for scale < 1 shape would be like we did convolution with kernel = (1, 1) and stride = (int(1 / height_scale), int( 1/ width_scale);""like"" - resize first input to the height and width of second input; ""to_even_down"" - resize input to nearest lower even height and width (if original height is odd then result height = original height - 1);""to_even_up"" - resize input to nearest bigger even height and width (if original height is odd then result height = original height + 1);""to_odd_down"" - resize input to nearest odd height and width (if original height is odd then result height = original height - 1);""to_odd_up"" - resize input to nearest odd height and width (if original height is odd then result height = original height + 1);",QSTR output PARAM equals parameter PARAM if PARAM parameter is not defined or input PARAM multiplied by PARAM otherwise,,,,,,,QSTR
mxnet.gluon.nn.MaxPool1D,layout,"Dimension ordering of data and out ('NCW' or 'NWC'). 'N', 'C', 'W' stands for batch, channel, and width (time) dimensions respectively. Pooling is applied on the W dimension.",QSTR stands for batch channel and width BSTR dimensions respectively,,,,,,,
mxnet.gluon.nn.Conv2D,layout,"Dimension ordering of data and weight. Only supports 'NCHW' and 'NHWC' layout for now. 'N', 'C', 'H', 'W' stands for batch, channel, height, and width dimensions respectively. Convolution is applied on the 'H' and 'W' dimensions.",QSTR stands for batch channel height and width dimensions respectively,,,,,,,
mxnet.gluon.nn.MaxPool2D,layout,"Dimension ordering of data and out ('NCHW' or 'NHWC'). 'N', 'C', 'H', 'W' stands for batch, channel, height, and width dimensions respectively. padding is applied on 'H' and 'W' dimension.",QSTR stands for batch channel height and width dimensions respectively,,,,,,,
mxnet.gluon.contrib.rnn.Conv1DGRUCell,h2h_dilate,Recurrent convolution dilate.,Recurrent convolution dilate,,,,,,,
mxnet.ndarray.ftml_update,rescale_grad,Rescale gradient to grad = rescale_grad*grad.,Rescale gradient to PARAM rescale_grad PARAM,,,,,,,
mxnet.ndarray.op.rmsprop_update,rescale_grad,Rescale gradient to grad = rescale_grad*grad.,Rescale gradient to PARAM rescale_grad PARAM,,,,,,,
mxnet.ndarray.op.signsgd_update,rescale_grad,Rescale gradient to grad = rescale_grad*grad.,Rescale gradient to PARAM rescale_grad PARAM,,,,,,,
mxnet.ndarray.signsgd_update,rescale_grad,Rescale gradient to grad = rescale_grad*grad.,Rescale gradient to PARAM rescale_grad PARAM,,,,,,,
mxnet.ndarray.sparse.adam_update,rescale_grad,Rescale gradient to grad = rescale_grad*grad.,Rescale gradient to PARAM rescale_grad PARAM,,,,,,,
mxnet.ndarray.contrib.BilinearResize2D,mode,"resizing mode. ""simple"" - output height equals parameter ""height"" if ""scale_height"" parameter is not defined or input height multiplied by ""scale_height"" otherwise. Same for width;""odd_scale"" - if original height or width is odd, then result height is calculated like result_h = (original_h - 1) * scale + 1; for scale > 1 the result shape would be like if we did deconvolution with kernel = (1, 1) and stride = (height_scale, width_scale); and for scale < 1 shape would be like we did convolution with kernel = (1, 1) and stride = (int(1 / height_scale), int( 1/ width_scale);""like"" - resize first input to the height and width of second input; ""to_even_down"" - resize input to nearest lower even height and width (if original height is odd then result height = original height - 1);""to_even_up"" - resize input to nearest bigger even height and width (if original height is odd then result height = original height + 1);""to_odd_down"" - resize input to nearest odd height and width (if original height is odd then result height = original height - 1);""to_odd_up"" - resize input to nearest odd height and width (if original height is odd then result height = original height + 1);",resizing mode,,,,,,,
mxnet.gluon.contrib.rnn.Conv3DGRUCell,params,"DD: RNNParams, default None",RNNParams default None,,,,,,,
mxnet.ndarray.BatchNorm,moving_mean,running mean of input,running mean of input,numeric,,,,,,
mxnet.ndarray.contrib.BilinearResize2D,mode,"resizing mode. ""simple"" - output height equals parameter ""height"" if ""scale_height"" parameter is not defined or input height multiplied by ""scale_height"" otherwise. Same for width;""odd_scale"" - if original height or width is odd, then result height is calculated like result_h = (original_h - 1) * scale + 1; for scale > 1 the result shape would be like if we did deconvolution with kernel = (1, 1) and stride = (height_scale, width_scale); and for scale < 1 shape would be like we did convolution with kernel = (1, 1) and stride = (int(1 / height_scale), int( 1/ width_scale);""like"" - resize first input to the height and width of second input; ""to_even_down"" - resize input to nearest lower even height and width (if original height is odd then result height = original height - 1);""to_even_up"" - resize input to nearest bigger even height and width (if original height is odd then result height = original height + 1);""to_odd_down"" - resize input to nearest odd height and width (if original height is odd then result height = original height - 1);""to_odd_up"" - resize input to nearest odd height and width (if original height is odd then result height = original height + 1);",Same for PARAM QSTR if original PARAM or PARAM is odd then result PARAM is calculated PARAM result_h BSTR scale CONSTANT_NUM for scale REXPR the result shape would be PARAM if we did deconvolution with kernel BSTR and stride BSTR and for scale REXPR shape would be PARAM we did convolution with kernel BSTR and stride BSTR PARAM resize first input to the PARAM and PARAM of second input QSTR resize input to nearest lower even PARAM and PARAM if original PARAM is odd then result PARAM original PARAM CONSTANT_NUM QSTR resize input to nearest bigger even PARAM and PARAM if original PARAM is odd then result PARAM original PARAM CONSTANT_NUM QSTR resize input to nearest odd PARAM and PARAM if original PARAM is odd then result PARAM original PARAM CONSTANT_NUM QSTR resize input to nearest odd PARAM and PARAM if original PARAM is odd then result PARAM original PARAM CONSTANT_NUM,,,,,,,QSTR
mxnet.ndarray.random_pdf_dirichlet,sample,Samples from the distributions.,Samples from the distributions,,,,,,,
mxnet.contrib.ndarray.BilinearResize2D,scale_width,"sampling scale of the width (optional, used in modes ""scale"" and ""odd_scale"")",sampling scale of the PARAM optional used in modes QSTR,,,,,,,
mxnet.ndarray.subtract,lhs,DD: scalar or mxnet.ndarray.array,scalar or mxnet D_STRUCTURE D_STRUCTURE,,,D_STRUCTURE,,0,,
mxnet.ndarray.minimum,rhs,DD: scalar or mxnet.ndarray.array,scalar or mxnet D_STRUCTURE D_STRUCTURE,,,D_STRUCTURE,,0,,
mxnet.ndarray.equal,rhs,DD: scalar or mxnet.ndarray.array,scalar or mxnet D_STRUCTURE D_STRUCTURE,,,D_STRUCTURE,,0,,
mxnet.ndarray.equal,rhs,"Second array to be compared. If `lhs.shape != rhs.shape`, they must be broadcastable to a common shape.",Second D_STRUCTURE to be compared,,,D_STRUCTURE,,,,
mxnet.ndarray.minimum,rhs,"Second array to be compared. If `lhs.shape != rhs.shape`, they must be broadcastable to a common shape.",Second D_STRUCTURE to be compared,,,D_STRUCTURE,,,,
mxnet.ndarray.sparse.elemwise_sub,rhs,second input,second input,,,,,,,
mxnet.gluon.nn.Dense,activation,"Activation function to use. See help on Activation layer. If you don't specify anything, no activation is applied (ie. ""linear"" activation: a(x) = x).",See help on activation layer,,,,,,,
mxnet.ndarray.ctc_loss,blank_label,"Set the label that is reserved for blank label.If ""first"", 0-th label is reserved, and label values for tokens in the vocabulary are between `1` and `alphabet_size-1`, and the padding mask is `-1`. If ""last"", last label value `alphabet_size-1` is reserved for blank label instead, and label values for tokens in the vocabulary are between `0` and `alphabet_size-2`, and the padding mask is `0`.",Set the PARAM that is reserved for blank PARAM If QSTR CONSTANT_NUM th PARAM is reserved and PARAM values for tokens in the vocabulary are between CONSTANT_NUM and QSTR and the padding mask is CONSTANT_NUM,,,,,,,QSTR
mxnet.ndarray.transpose,axes,"DD: Shape(tuple), optional, default=[]",Shape BSTR optional default,int,,tuple,,1,"[0,inf)",
mxnet.contrib.ndarray.hawkesll,state,"Shape (N, K) the Hawkes state for each process",Shape BSTR the Hawkes state for each process,,,,BSTR,,,
mxnet.image.CreateAugmenter,data_shape,Shape for output data,Shape for output data,int,,,,1,"[0,inf)",
mxnet.ndarray.op.max,axis,"DD: Shape or None, optional, default=None",Shape or None optional default None,int,,,,1,"[0,inf)",
mxnet.gluon.nn.LeakyReLU,alpha,slope coefficient for the negative half axis. Must be >= 0.,slope coefficient for the negative half axis,numeric,,,,,,
mxnet.ndarray.pick,mode,"Specify how out-of-bound indices behave. Default is ""clip"". ""clip"" means clip to the range. So, if all indices mentioned are too large, they are replaced by the index that addresses the last element along an axis.  ""wrap"" means to wrap around.",So if all indices mentioned are too large they are replaced by the PARAM that addresses the last element along an PARAM,,,,,,,
mxnet.ndarray.contrib.backward_gradientmultiplier,data,source input,source input,,,,,,,
mxnet.ndarray.op.transpose,data,Source input,Source input,,,,,,,
mxnet.ndarray.contrib.arange_like,step,Spacing between values.,Spacing between values,,,,,,,
mxnet.ndarray.pick,mode,"Specify how out-of-bound indices behave. Default is ""clip"". ""clip"" means clip to the range. So, if all indices mentioned are too large, they are replaced by the index that addresses the last element along an axis.  ""wrap"" means to wrap around.",Specify how PARAM of bound indices behave,,,,,,,
mxnet.ndarray.random.normal,out,Store output to an existing NDArray.,Store output to an existing D_STRUCTURE,,,,,,,
mxnet.ndarray.transpose,axes,Target axis order. By default the axes will be inverted.,Target axis order,int,,,,,"[0,inf)",
mxnet.ndarray.op.max,axis,"The axis or axes along which to perform the reduction.  The default, axis=(), will compute over all elements into a scalar array with shape (1,). If axis is int, a reduction is performed on a particular axis. If axis is a tuple of ints, a reduction is performed on all the axes specified in the tuple. If exclude is true, reduction will be performed on the axes that are NOT in axis instead. Negative values means indexing from right to left.  ",The axis or axes along which to perform the reduction,int,,,,,"[0,inf)",
mxnet.gluon.contrib.rnn.VariationalDropoutCell,base_cell,The cell on which to perform variational dropout.,The cell on which to perform variational dropout,,,,,,,
mxnet.gluon.model_zoo.vision.densenet121,ctx,The context in which to load the pretrained weights.,The context in which to load the PARAM weights,,,,,,,
mxnet.gluon.model_zoo.vision.densenet161,ctx,The context in which to load the pretrained weights.,The context in which to load the PARAM weights,,,,,,,
mxnet.gluon.model_zoo.vision.mobilenet_v2_1_0,ctx,The context in which to load the pretrained weights.,The context in which to load the PARAM weights,,,,,,,
mxnet.gluon.model_zoo.vision.vgg16_bn,ctx,The context in which to load the pretrained weights.,The context in which to load the PARAM weights,,,,,,,
mxnet.ndarray.multi_sgd_mom_update,momentum,The decay rate of momentum estimates at each epoch.,The decay rate of momentum estimates at each epoch,numeric,,,,0,"[0,1]",
mxnet.ndarray.op.multi_mp_sgd_mom_update,momentum,The decay rate of momentum estimates at each epoch.,The decay rate of momentum estimates at each epoch,numeric,,,,0,"[0,1]",
mxnet.ndarray.op.max,axis,"The axis or axes along which to perform the reduction.  The default, axis=(), will compute over all elements into a scalar array with shape (1,). If axis is int, a reduction is performed on a particular axis. If axis is a tuple of ints, a reduction is performed on all the axes specified in the tuple. If exclude is true, reduction will be performed on the axes that are NOT in axis instead. Negative values means indexing from right to left.  ",The default axis BSTR,,,,,,,
mxnet.ndarray.random.uniform,low,Lower boundary of the output interval. All values generated will be greater than or equal to low. The default value is 0.,The default value is CONSTANT_NUM,,,,,,,
mxnet.ndarray.pick,index,The index array,The index D_STRUCTURE,int,,D_STRUCTURE,,,,
mxnet.contrib.autograd.grad,argnum,The index of argument to calculate gradient for.,The index of argument to calculate gradient for,int,,,,0,,
mxnet.ndarray.image.random_lighting,data,The input.,The input,,,,,,,
mxnet.ndarray.expm1,data,The input array.,The input D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.ndarray.op.log,data,The input array.,The input D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.ndarray.radians,data,The input array.,The input D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.ndarray.sparse.cosh,data,The input array.,The input D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.ndarray.sparse.log,data,The input array.,The input D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.ndarray.sparse.log2,data,The input array.,The input D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.ndarray.sqrt,data,The input array.,The input D_STRUCTURE,,,D_STRUCTURE,,,,
mxnet.contrib.ndarray.hawkesll,max_time,the length of the interval where the processes were sampled,the length of the interval where the processes were sampled,int,,,,,"[0,inf)",
mxnet.io.ImageRecordIter,mean_g,The mean value to be subtracted on the G channel,The mean value to be subtracted on the G channel,numeric,,,,,,
mxnet.callback.log_train_metric,period,The number of batch to log the training evaluation metric.,The number of batch to log the training evaluation metric,int,,,,0,"[0,inf)",
mxnet.gluon.rnn.RNN,input_size,"The number of expected features in the input x. If not specified, it will be inferred from input.",The number of expected features in the input x,int,,,,0,"[0,inf)",
mxnet.ndarray.ones,out,The output NDArray (default is None).,The output D_STRUCTURE BSTR,,,D_STRUCTURE,,,,
mxnet.contrib.ndarray.AdaptiveAvgPooling2D,out,The output NDArray to hold the result.,The output D_STRUCTURE to hold the result,,,D_STRUCTURE,,,,
mxnet.contrib.ndarray.getnnz,out,The output NDArray to hold the result.,The output D_STRUCTURE to hold the result,,,D_STRUCTURE,,,,
mxnet.contrib.ndarray.MultiBoxDetection,out,The output NDArray to hold the result.,The output D_STRUCTURE to hold the result,,,D_STRUCTURE,,,,
mxnet.contrib.ndarray.SparseEmbedding,out,The output NDArray to hold the result.,The output D_STRUCTURE to hold the result,,,D_STRUCTURE,,,,
mxnet.ndarray.Activation,out,The output NDArray to hold the result.,The output D_STRUCTURE to hold the result,,,D_STRUCTURE,,,,
mxnet.ndarray.arctanh,out,The output NDArray to hold the result.,The output D_STRUCTURE to hold the result,,,D_STRUCTURE,,,,
mxnet.ndarray.broadcast_logical_and,out,The output NDArray to hold the result.,The output D_STRUCTURE to hold the result,,,D_STRUCTURE,,,,
mxnet.ndarray.contrib.backward_hawkesll,out,The output NDArray to hold the result.,The output D_STRUCTURE to hold the result,,,D_STRUCTURE,,,,
mxnet.ndarray.contrib.quantized_conv,out,The output NDArray to hold the result.,The output D_STRUCTURE to hold the result,,,D_STRUCTURE,,,,
mxnet.ndarray.contrib.quantized_fully_connected,out,The output NDArray to hold the result.,The output D_STRUCTURE to hold the result,,,D_STRUCTURE,,,,
mxnet.ndarray.Dropout,out,The output NDArray to hold the result.,The output D_STRUCTURE to hold the result,,,D_STRUCTURE,,,,
mxnet.ndarray.ElementWiseSum,out,The output NDArray to hold the result.,The output D_STRUCTURE to hold the result,,,D_STRUCTURE,,,,
mxnet.ndarray.LayerNorm,out,The output NDArray to hold the result.,The output D_STRUCTURE to hold the result,,,D_STRUCTURE,,,,
mxnet.ndarray.linalg_trsm,out,The output NDArray to hold the result.,The output D_STRUCTURE to hold the result,,,D_STRUCTURE,,,,
mxnet.ndarray.MakeLoss,out,The output NDArray to hold the result.,The output D_STRUCTURE to hold the result,,,D_STRUCTURE,,,,
mxnet.ndarray.multi_mp_sgd_mom_update,out,The output NDArray to hold the result.,The output D_STRUCTURE to hold the result,,,D_STRUCTURE,,,,
mxnet.ndarray.ones_like,out,The output NDArray to hold the result.,The output D_STRUCTURE to hold the result,,,D_STRUCTURE,,,,
mxnet.ndarray.op.arccosh,out,The output NDArray to hold the result.,The output D_STRUCTURE to hold the result,,,D_STRUCTURE,,,,
mxnet.ndarray.op.broadcast_greater_equal,out,The output NDArray to hold the result.,The output D_STRUCTURE to hold the result,,,D_STRUCTURE,,,,
mxnet.ndarray.op.ceil,out,The output NDArray to hold the result.,The output D_STRUCTURE to hold the result,,,D_STRUCTURE,,,,
mxnet.ndarray.op.diag,out,The output NDArray to hold the result.,The output D_STRUCTURE to hold the result,,,D_STRUCTURE,,,,
mxnet.ndarray.op.linalg_gelqf,out,The output NDArray to hold the result.,The output D_STRUCTURE to hold the result,,,D_STRUCTURE,,,,
mxnet.ndarray.op.pad,out,The output NDArray to hold the result.,The output D_STRUCTURE to hold the result,,,D_STRUCTURE,,,,
mxnet.ndarray.preloaded_multi_mp_sgd_update,out,The output NDArray to hold the result.,The output D_STRUCTURE to hold the result,,,D_STRUCTURE,,,,
mxnet.ndarray.sample_exponential,out,The output NDArray to hold the result.,The output D_STRUCTURE to hold the result,,,D_STRUCTURE,,,,
mxnet.ndarray.space_to_depth,out,The output NDArray to hold the result.,The output D_STRUCTURE to hold the result,,,D_STRUCTURE,,,,
mxnet.ndarray.sparse.cosh,out,The output NDArray to hold the result.,The output D_STRUCTURE to hold the result,,,D_STRUCTURE,,,,
mxnet.ndarray.sparse.log,out,The output NDArray to hold the result.,The output D_STRUCTURE to hold the result,,,D_STRUCTURE,,,,
mxnet.ndarray.take,out,The output NDArray to hold the result.,The output D_STRUCTURE to hold the result,,,D_STRUCTURE,,,,
mxnet.ndarray.op.ftrl_update,wd,Weight decay augments the objective function with a regularization term that penalizes large weights. The penalty scales with the square of the magnitude of each weight.,The penalty scales with the square of the magnitude of each PARAM,,,,,,,
mxnet.contrib.quantization.quantize_model,calib_mode,"If calib_mode='none', no calibration will be used and the thresholds for requantization after the corresponding layers will be calculated at runtime by calling min and max operators. The quantized models generated in this mode are normally 10-20% slower than those with calibrations during inference. If calib_mode='naive', the min and max values of the layer outputs from a calibration dataset will be directly taken as the thresholds for quantization. If calib_mode='entropy' (default mode), the thresholds for quantization will be derived such that the KL divergence between the distributions of FP32 layer outputs and quantized layer outputs is minimized based upon the calibration dataset.",The quantized models generated in this mode are normally CONSTANT_NUM slower than those with calibrations during inference,,,,,,,
mxnet.ndarray.op.diag,axis2,The second axis of the sub-arrays of interest. Ignored when the input is a 1-D array.,The second axis of the sub D_STRUCTURE of interest,int,,,,,"[0,inf)",
mxnet.ndarray.SwapAxis,dim2,the second axis to be swapped.,the second axis to be swapped,int,,,,,"[0,inf)",
mxnet.ndarray.op.SequenceMask,value,The value to be used as a mask.,The value to be used as a mask,,,,,,,
mxnet.ndarray.sample_multinomial,get_prob,"Whether to also return the log probability of sampled result. This is usually used for differentiating through stochastic variables, e.g. in reinforcement learning.",This is usually used for differentiating through stochastic variables e g,,,,,,,
mxnet.test_utils.numeric_grad,aux_states,Auxiliary states values used as location to compute gradient Maps the name of aux_states to the corresponding numpy.ndarray. Value of all the auxiliary arguments must be provided.,Value of all the auxiliary arguments must be provided,,,,,,,
mxnet.ndarray.contrib.box_decode,std2,value to be divided from the 3rd encoded values,value to be divided from the 3rd encoded values,numeric,,,,,,
mxnet.contrib.ndarray.SparseEmbedding,input_dim,Vocabulary size of the input indices.,Vocabulary size of the input indices,int,,,,,"[0,inf)",
mxnet.ndarray.op.ftml_update,weight,Weight,ONE_WORD weight,numeric,,,,,,
mxnet.ndarray.rmsprop_update,weight,Weight,ONE_WORD weight,numeric,,,,,,
mxnet.contrib.ndarray.DeformableConvolution,weight,Weight matrix.,weight matrix,numeric,,,,,,
mxnet.ndarray.mp_nag_mom_update,weight32,Weight32,ONE_WORD weight32,numeric,,,,,,
mxnet.ndarray.mp_sgd_update,weight32,Weight32,ONE_WORD weight32,numeric,,,,,,
mxnet.ndarray.sample_multinomial,get_prob,"Whether to also return the log probability of sampled result. This is usually used for differentiating through stochastic variables, e.g. in reinforcement learning.",Whether to also return the log probability of sampled result,bool,,,,0,,
mxnet.gluon.model_zoo.vision.alexnet,pretrained,Whether to load the pretrained weights for model.,Whether to load the pretrained weights for model,bool,,,,0,,
mxnet.ndarray.Dropout,mode,Whether to only turn on dropout during training or to also turn on for inference.,Whether to only turn on dropout during training or to also turn on for inference,bool,,,,0,,
mxnet.ndarray.op.nansum,exclude,Whether to perform reduction on axis that are NOT in axis instead.,Whether to perform reduction on PARAM that are NOT in PARAM instead,bool,,,,0,,
mxnet.ndarray.op.sum_axis,exclude,Whether to perform reduction on axis that are NOT in axis instead.,Whether to perform reduction on PARAM that are NOT in PARAM instead,bool,,,,0,,
mxnet.profiler.set_config,continuous_dump,whether to periodically dump profiling data to file,whether to periodically dump profiling data to file,bool,,,,0,,
mxnet.ndarray.Deconvolution,cudnn_tune,Whether to pick convolution algorithm by running performance test.,Whether to pick convolution algorithm by running performance test,bool,,,,0,,
