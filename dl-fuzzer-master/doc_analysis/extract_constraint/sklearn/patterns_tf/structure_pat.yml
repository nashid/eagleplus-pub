parse_sent: False
direct_map: False  # need to map group
check_dt: False
break: False   # keep going when pattern matched, don't break
append: True
findall: True
target: structure


split_word:  # for len (shape) use

    - ','
    - ' '
    - '`'
    - ''''
    - '"'
    - '\+'
    - '-'
    - '\*'
    - '\/'
    - '>'
    - '<'
    - '='
    - 'len:'
    - 'ndim:'
    - 'max_value:'
    - 'inf'
pat:

    # group1: list of <> that has length ..

    # list of `ints` that has length `>=5`
    '(list|tuple)\s+of\s+`*([\d\w.]+)`*\s+that\s+has\s+length\s+`*>=\s*([\d]+)`*':
        structure: \1
        ds_dtype:
            - \2
        ndim: 1
        len: \3
        len_prefix: '>='

    # list of `ints` that has length `1`, `N` or `N+2`
    '(list|tuple)\s+of\s+`*([\d\w.]+)`*\s+that\s+has\s+length\s(([,\s]*(or\s)*`(.*?)`)+)':
        structure: \1
        ds_dtype:
            - \2
        ndim: 1
        len: \3

    
    # group2: list of \d/single <>
    
    # list/tuple of \d <dtype>
    '(list|tuple|iterable|list\/tuple|tuple\/list)\s+of\s+(\d)\s+`*(\w+)`*':
        replace:
            '\/': ' '
        structure: \1
        ds_dtype: 
            - \3
        len: \2
        ndim: 1

    # list/tuple of a single <dtype>
    '(list|tuple|iterable|list\/tuple|tuple\/list)\s+of\s+a\s+single\s+`*(\w+)`*':
        replace:
            '\/': ' '
        structure: \1
        ds_dtype: 
            - \2
        len: 1
        ndim: 1


    # group3: list/tuple/(list or tuple)/.. of <> (or <>)

    # list or tuple of ...
    '(list\s+or\s+tuple|tuple\s+or\s+list|sequence|vector|array)\s+of\s+(`*[\w]+`*(\s+[\w.]+)?)':
        replace: 
            '\/': ' or '
        structure: \1
        ds_dtype:
            - \2
        ndim: 1



    # list/tuple/iterable of <> <>
    '`*(list|tuple|iterable|sequence|vector|array)`*\s+of\s*(`*[\w.]+`*\s+`*[\w]+`*)[\.,\s](?!or)':
        structure: \1
        
        ds_dtype: 
            - \2
        ndim: 1



    # list/tuple of string
    # list/tuple of integer or string
    # list/tuple of integer indices or string
    '`*(list|tuple|iterable|vector|array|sequence)`*\s+of\s+(`*([\w]+`*(\s+[\w.]+)?\s+or\s+)?`*[\w]+`*)':
        
        structure: \1
        ds_dtype: 
            - \2
        ndim: 1
    

    # group4: dict of (<> to <> )
    '(dict|dictionary)\s+of\s+`*([\d\w.]+)`*\s+to\s+`*([\d\w.]+)`*':
        structure: dict
        ds_dtype:
            - \2
            - \3

    '(dict|dictionary)\s+of\s+':
        structure: dict
        
        
    # group 5 list<>
    
    '(list|tuple|sequence|vector)<(.*?)>':
        structure: \1
        ds_dtype:
            - \2
        ndim: 1

    # group6 ^a/an/the list/tuple/dict...
    '^(\ba\b|an|the)?\s*(nested)?\s*`*(list|lists|tuple|iterable|sequence|vector)`*':
        structure: \3
        ndim: 1

    '^([\[\(]optional[\]\)]\s+)?(\ba\b|an|the|optional)?\s*`*(dict|dictonary)`*':
        structure: \3


    
