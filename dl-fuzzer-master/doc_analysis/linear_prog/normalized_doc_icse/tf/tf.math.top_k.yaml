aliases:
- tf.nn.top_k
- tf.compat.v1.math.top_k
- tf.compat.v1.nn.top_k
constraints:
  input:
    descp: 1-D or higher `Tensor` with last dimension at least `k`.
    normalized_descp:
    - CONSTANT_NUM D or higher D_STRUCTURE with last dimension at least QSTR
  k:
    default: '1'
    descp: 0-D `int32` `Tensor`.  Number of top elements to look for along the last
      dimension (along each row for matrices).
    normalized_default: DEFAULT CONSTANT_NUM
    normalized_descp:
    - CONSTANT_NUM D D_TYPE D_STRUCTURE
    - Number of top elements to look for along the last dimension BSTR
  name:
    default: None
    descp: Optional name for the operation.
    normalized_default: DEFAULT None
    normalized_descp:
    - Optional name for the operation
  sorted:
    default: 'True'
    descp: If true the resulting `k` elements will be sorted by the values in descending
      order.
    normalized_default: DEFAULT CONSTANT_BOOL
    normalized_descp:
    - If CONSTANT_BOOL the resulting QSTR elements will be sorted by the values in
      descending order
inputs:
  optional:
  - k
  - sorted
  - name
  required:
  - input
link: https://www.tensorflow.org/versions/r2.1/api_docs/python/tf/math/top_k
outputs:
- values: The `k` largest elements along each last dimensional slice.
- indices: The indices of `values` within the last dimension of `input`.
package: tensorflow
target: top_k
title: tf.math.top_k
version: 2.1.0
