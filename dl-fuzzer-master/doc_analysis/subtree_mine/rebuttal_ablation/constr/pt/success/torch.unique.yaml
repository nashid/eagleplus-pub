constraints:
  dim:
    default: None
    descp: 'the dimension to apply unique. If `None`, the unique of the flattened
      input is returned. default: `None`'
    doc_dtype: int
    dtype:
    - int
    - torch.bool
    enum:
    - None
    ndim:
    - '0'
    - '1'
    range:
    - '[0,inf)'
  input:
    descp: the input tensor
    doc_dtype: Tensor
    dtype:
    - int
    - numeric
    - torch.bool
    ndim:
    - '0'
    - '1'
    - '3'
    range:
    - '[0,1]'
    - '[0,inf)'
    shape:
    - '&input'
    - '[b,p,m]'
    tensor_t:
    - torch.tensor
  return_counts:
    default: 'False'
    descp: Whether to also return the counts for each unique element.
    doc_dtype: bool
    dtype:
    - torch.bool
    ndim:
    - '0'
  return_inverse:
    default: 'False'
    descp: Whether to also return the indices for where elements in the original input
      ended up in the returned unique list.
    doc_dtype: bool
    dtype:
    - int
    - numeric
    - torch.bool
    - torch.dtype
    ndim:
    - '0'
    - '1'
    range:
    - '[0,1]'
    - '[0,inf)'
    shape:
    - '&input'
    structure:
    - list
  sorted:
    default: 'True'
    descp: Whether to sort the unique elements in ascending order before returning
      as output.
    doc_dtype: bool
    dtype:
    - int
    - torch.bool
    ndim:
    - '0'
    range:
    - '[0,inf)'
inputs:
  optional:
  - sorted
  - return_inverse
  - return_counts
  - dim
  required:
  - input
link: https://pytorch.org/docs/stable/torch.html#torch.unique
package: torch
target: unique
title: torch.unique
version: 1.5.0
