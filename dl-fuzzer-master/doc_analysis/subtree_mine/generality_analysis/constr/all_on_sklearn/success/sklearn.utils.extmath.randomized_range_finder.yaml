constraints:
  A:
    descp: 2D array The input data matrix
    structure:
    - ndarray
  n_iter:
    descp: integer Number of power iterations used to stabilize the result
    dtype:
    - int
    ndim:
    - '0'
    range:
    - '[0,inf)'
  power_iteration_normalizer:
    default: auto
    descp: '''auto'' (default), ''QR'', ''LU'', ''none'' Whether the power iterations
      are normalized with step-by-step QR factorization (the slowest but most accurate),
      ''none'' (the fastest but numerically unstable when `n_iter` is large, e.g.
      typically 5 or larger), or ''LU'' factorization (numerically stable but can
      lose slightly in accuracy). The ''auto'' mode applies no normalization if `n_iter`
      <= 2 and switches to LU otherwise.'
    dtype:
    - string
    enum:
    - auto
    - none
    ndim:
    - '0'
  random_state:
    default: None
    descp: int, RandomState instance or None, optional (default=None) The seed of
      the pseudo random number generator to use when shuffling the data.  If int,
      random_state is the seed used by the random number generator; If RandomState
      instance, random_state is the random number generator; If None, the random number
      generator is the RandomState instance used by `np.random`.
    dtype:
    - boolean
    ndim:
    - '0'
  size:
    descp: integer Size of the return array
    dtype:
    - int
    range:
    - '[0,inf)'
    structure:
    - ndarray
inputs:
  optional:
  - power_iteration_normalizer
  - random_state
  required:
  - A
  - size
  - n_iter
link: ''
package: sklearn
target: randomized_range_finder
title: sklearn.utils.extmath.randomized_range_finder
version: 0.24.2
