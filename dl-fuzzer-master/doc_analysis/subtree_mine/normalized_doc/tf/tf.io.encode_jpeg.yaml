aliases:
- tf.image.encode_jpeg
- tf.compat.v1.image.encode_jpeg
- tf.compat.v1.io.encode_jpeg
constraints:
  chroma_downsampling:
    default: 'True'
    descp: An optional `bool`. Defaults to `True`. See http://en.wikipedia.org/wiki/Chroma_subsampling
    normalized_default: DEFAULT CONSTANT_BOOL
    normalized_descp:
    - An optional D_TYPE
    - Defaults to CONSTANT_BOOL
    - See http en wikipedia org wiki Chroma_subsampling
  density_unit:
    default: in
    descp: 'An optional `string` from: `"in", "cm"`. Defaults to `"in"`. Unit used
      to specify `x_density` and `y_density`: pixels per inch (`''in''`) or centimeter
      (`''cm''`).'
    normalized_default: DEFAULT DF_STR
    normalized_descp:
    - An optional D_TYPE from QSTR
    - Defaults to QSTR
    - Unit used to specify PARAM and PARAM pixels per inch QSTR or centimeter QSTR
  format:
    default: ''
    descp: 'An optional `string` from: `"", "grayscale", "rgb"`. Defaults to `""`.
      Per pixel image format.'
    normalized_default: ''
    normalized_descp:
    - An optional D_TYPE from , QSTR
    - Defaults to
    - Per pixel PARAM format
  image:
    descp: A `Tensor` of type `uint8`. 3-D with shape `[height, width, channels]`.
    normalized_descp:
    - A D_STRUCTURE of type D_TYPE
    - CONSTANT_NUM-D with shape BSTR
  name:
    default: None
    descp: A name for the operation (optional).
    normalized_default: DEFAULT None
    normalized_descp:
    - A name for the operation BSTR
  optimize_size:
    default: 'False'
    descp: An optional `bool`. Defaults to `False`. If True, spend CPU/RAM to reduce
      size with no quality change.
    normalized_default: DEFAULT CONSTANT_BOOL
    normalized_descp:
    - An optional D_TYPE
    - Defaults to CONSTANT_BOOL
    - If CONSTANT_BOOL, spend CPU RAM to reduce size with no PARAM change
  progressive:
    default: 'False'
    descp: An optional `bool`. Defaults to `False`. If True, create a JPEG that loads
      progressively (coarse to fine).
    normalized_default: DEFAULT CONSTANT_BOOL
    normalized_descp:
    - An optional D_TYPE
    - Defaults to CONSTANT_BOOL
    - If CONSTANT_BOOL, create a JPEG that loads progressively BSTR
  quality:
    default: '95'
    descp: An optional `int`. Defaults to `95`. Quality of the compression from 0
      to 100 (higher is better and slower).
    normalized_default: DEFAULT CONSTANT_NUM
    normalized_descp:
    - An optional D_TYPE
    - Defaults to CONSTANT_NUM
    - Quality of the compression from CONSTANT_NUM to CONSTANT_NUM BSTR
  x_density:
    default: '300'
    descp: An optional `int`. Defaults to `300`. Horizontal pixels per density unit.
    normalized_default: DEFAULT CONSTANT_NUM
    normalized_descp:
    - An optional D_TYPE
    - Defaults to CONSTANT_NUM
    - Horizontal pixels per density unit
  xmp_metadata:
    default: ''
    descp: An optional `string`. Defaults to `""`. If not empty, embed this XMP metadata
      in the image header.
    normalized_default: ''
    normalized_descp:
    - An optional D_TYPE
    - Defaults to
    - If not empty, embed this XMP metadata in the PARAM header
  y_density:
    default: '300'
    descp: An optional `int`. Defaults to `300`. Vertical pixels per density unit.
    normalized_default: DEFAULT CONSTANT_NUM
    normalized_descp:
    - An optional D_TYPE
    - Defaults to CONSTANT_NUM
    - Vertical pixels per density unit
inputs:
  optional:
  - format
  - quality
  - progressive
  - optimize_size
  - chroma_downsampling
  - density_unit
  - x_density
  - y_density
  - xmp_metadata
  - name
  required:
  - image
link: https://www.tensorflow.org/versions/r2.1/api_docs/python/tf/io/encode_jpeg
outputs: A `Tensor` of type `string`.
package: tensorflow
target: encode_jpeg
title: tf.io.encode_jpeg
version: 2.1.0
