aliases:
- tf.compat.v1.keras.layers.Cropping2D
constraints:
  '**kwargs':
    default: null
    descp: ''
    normalized_descp: []
  cropping:
    default: ((0, 0), (0, 0))
    descp: 'Int, or tuple of 2 ints, or tuple of 2 tuples of 2 ints. If int: the same
      symmetric cropping is applied to height and width.If tuple of 2 ints: interpreted
      as two different symmetric cropping values for height and width:`(symmetric_height_crop,
      symmetric_width_crop)`.If tuple of 2 tuples of 2 ints: interpreted as`((top_crop,
      bottom_crop), (left_crop, right_crop))` '
    normalized_default: DEFAULT BSTR
    normalized_descp:
    - D_TYPE, or D_STRUCTURE of CONSTANT_NUM D_TYPE, or D_STRUCTURE of CONSTANT_NUM
      tuples of CONSTANT_NUM D_TYPE
    - If D_TYPE the same symmetric cropping is applied to height and width If D_STRUCTURE
      of CONSTANT_NUM D_TYPE interpreted as two different symmetric cropping values
      for height and width BSTR If D_STRUCTURE of CONSTANT_NUM tuples of CONSTANT_NUM
      D_TYPE interpreted as BSTR
  data_format:
    default: None
    descp: A string, one of `channels_last` (default) or `channels_first`. The ordering
      of the dimensions in the inputs.`channels_last` corresponds to inputs with shape`(batch,
      height, width, channels)` while `channels_first`corresponds to inputs with shape`(batch,
      channels, height, width)`. It defaults to the `image_data_format` value found
      in your Keras config file at `~/.keras/keras.json`. If you never set it, then
      it will be "channels_last".
    normalized_default: DEFAULT None
    normalized_descp:
    - A D_TYPE, one of QSTR BSTR or QSTR
    - The ordering of the dimensions in the inputs QSTR corresponds to inputs with
      shape BSTR while QSTR corresponds to inputs with shape BSTR
    - It defaults to the QSTR value found in your Keras config file at keras keras
      json
    - If you never set it, then it will be QSTR
inputs:
  optional:
  - cropping
  - data_format
  - '**kwargs'
  required: []
link: https://www.tensorflow.org/versions/r2.1/api_docs/python/tf/keras/layers/Cropping2D
package: tensorflow
target: Cropping2D
title: tf.keras.layers.Cropping2D
version: 2.1.0
