aliases:
- tf.matmul
- tf.compat.v1.linalg.matmul
- tf.compat.v1.matmul
constraints:
  a:
    descp: tf.Tensor of type float16, float32, float64, int32, complex64, complex128
      and rank > 1.
    dtype:
    - tf.float16
    ndim:
    - '>1'
    tensor_t:
    - tf.tensor
  a_is_sparse:
    default: 'False'
    descp: If True, a is treated as a sparse matrix. Notice, this does not support
      tf.sparse.SparseTensor, it just makes optimizations that assume most values
      in a are zero. See tf.sparse.sparse_dense_matmul for some support for tf.SparseTensor
      multiplication.
    dtype:
    - tf.bool
    ndim:
    - '0'
  adjoint_a:
    default: 'False'
    descp: If True, a is conjugated and transposed before multiplication.
    dtype:
    - tf.bool
    ndim:
    - '0'
  adjoint_b:
    default: 'False'
    descp: If True, b is conjugated and transposed before multiplication.
    dtype:
    - tf.bool
    ndim:
    - '0'
  b:
    descp: tf.Tensor with same type and rank as a.
    dtype:
    - dtype:&a
    tensor_t:
    - tf.tensor
  b_is_sparse:
    default: 'False'
    descp: If True, b is treated as a sparse matrix. Notice, this does not support
      tf.sparse.SparseTensor, it just makes optimizations that assume most values
      in a are zero. See tf.sparse.sparse_dense_matmul for some support for tf.SparseTensor
      multiplication.
    dtype:
    - tf.bool
    ndim:
    - '0'
  name:
    default: None
    descp: Name for the operation (optional).
    dtype:
    - tf.string
    ndim:
    - '0'
  transpose_a:
    default: 'False'
    descp: If True, a is transposed before multiplication.
    dtype:
    - tf.bool
    ndim:
    - '0'
  transpose_b:
    default: 'False'
    descp: If True, b is transposed before multiplication.
    dtype:
    - tf.bool
    ndim:
    - '0'
exceptions:
- ValueError: If transpose_a and adjoint_a, or transpose_b and adjoint_b are both
    set to True.
inputs:
  optional:
  - transpose_a
  - transpose_b
  - adjoint_a
  - adjoint_b
  - a_is_sparse
  - b_is_sparse
  - name
  required:
  - a
  - b
link: https://www.tensorflow.org/versions/r2.2/api_docs/python/tf/linalg/matmul
outputs:
- 'A tf.Tensor of the same type as a and b where each inner-most matrix is the product
  of the corresponding matrices in a and b, e.g. if all transpose or adjoint attributes
  are False: output[..., i, j] = sum_k (a[..., i, k] * b[..., k, j]), for all indices
  i, j.'
- Note: This is matrix product, not element-wise product.
package: tensorflow
target: matmul
title: tf.linalg.matmul
version: 2.2.0
